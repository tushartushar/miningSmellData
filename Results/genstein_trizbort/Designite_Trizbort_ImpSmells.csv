Implementation smell,Namespace,Class,File,Method,Description
Long Method,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The method has 136 lines of code.
Long Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ThreadMain,The method has 135 lines of code.
Long Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The method has 132 lines of code.
Long Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessPromptCommand,The method has 109 lines of code.
Long Method,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The method has 224 lines of code.
Long Method,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The method has 221 lines of code.
Long Method,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The method has 227 lines of code.
Long Method,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The method has 163 lines of code.
Long Method,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The method has 140 lines of code.
Long Method,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The method has 105 lines of code.
Long Method,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The method has 721 lines of code.
Long Method,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The method has 317 lines of code.
Long Method,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The method has 953 lines of code.
Long Method,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The method has 108 lines of code.
Complex Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,Cyclomatic complexity of the method is 17
Complex Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,DeduceExitsFromDescription,Cyclomatic complexity of the method is 9
Complex Method,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessPromptCommand,Cyclomatic complexity of the method is 21
Complex Method,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,ShiftMap,Cyclomatic complexity of the method is 9
Complex Method,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawGrid,Cyclomatic complexity of the method is 10
Complex Method,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawElements,Cyclomatic complexity of the method is 10
Complex Method,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,EndDrag,Cyclomatic complexity of the method is 8
Complex Method,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,Cyclomatic complexity of the method is 8
Complex Method,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Save,Cyclomatic complexity of the method is 10
Complex Method,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,Intersect,Cyclomatic complexity of the method is 13
Complex Method,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,Cyclomatic complexity of the method is 12
Complex Method,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,ModifierKeysToString,Cyclomatic complexity of the method is 8
Complex Method,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,Cyclomatic complexity of the method is 9
Complex Method,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindThings,Cyclomatic complexity of the method is 10
Complex Method,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,Cyclomatic complexity of the method is 19
Long Parameter List,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The method has 5 parameters. Parameters: graphics' palette' lineSegment' text' alignment
Long Parameter List,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,Draw,The method has 6 parameters. Parameters: graphics' font' brush' pos' size' format
Long Parameter List,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The method has 5 parameters. Parameters: graphics' font' pos' size' baseFormat
Long Parameter List,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,DrawHandle,The method has 7 parameters. Parameters: canvas' graphics' palette' bounds' context' alwaysAlpha' round
Long Parameter List,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,DrawChevron,The method has 5 parameters. Parameters: graphics' pos' angle' size' fillBrush
Long Parameter List,Trizbort.Export,Exit,C:\repos\genstein_trizbort\Export\CodeExporter.cs,Exit,The method has 5 parameters. Parameters: source' target' visualCompassPoint' connectionText' connectionStyle
Long Parameter List,Trizbort.Export,Thing,C:\repos\genstein_trizbort\Export\CodeExporter.cs,Thing,The method has 5 parameters. Parameters: displayName' exportName' location' container' indent
Long Identifier,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,,The length of the parameter s_namesForExitsInRoomDescriptions is 33.
Long Identifier,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,,The length of the parameter m_roomsWithSameNameAreSameRoomCheckBox is 38.
Long Identifier,Trizbort,AutomapSettings,C:\repos\genstein_trizbort\AutomapSettings.cs,,The length of the parameter AssumeRoomsWithSameNameAreSameRoom is 34.
Long Identifier,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,RecreatePorts,The length of the parameter needMovablePortsOnSelectedElement is 33.
Long Identifier,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,,The length of the parameter m_dragResizeHandleLastPosition is 30.
Long Identifier,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,,The length of the parameter m_doNotUpdateScrollBarsNextPaint is 32.
Long Identifier,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,,The length of the parameter RecomputeNMillisecondsAfterChange is 33.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_toggleDirectionalLinesButton is 30.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_viewZoomFiftyPercentMenuItem is 30.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_viewZoomOneHundredPercentMenuItem is 35.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_viewZoomTwoHundredPercentMenuItem is 35.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_projectResetToDefaultSettingsMenuItem is 39.
Long Identifier,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,,The length of the parameter m_toggleDirectionalLinesMenuItem is 32.
Long Identifier,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,,The length of the parameter s_preferredDistanceBetweenRooms is 31.
Long Identifier,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,,The length of the parameter s_dragDistanceToInitiateNewConnection is 37.
Long Identifier,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,,The length of the parameter s_keypadNavigationCreationModifier is 34.
Long Identifier,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,,The length of the parameter s_keypadNavigationUnexploredModifier is 36.
Long Identifier,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,,The length of the parameter m_darknessStripeSizeNumericUpDown is 33.
Long Identifier,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,,The length of the parameter m_objectListOffsetFromRoomNumericUpDown is 39.
Long Identifier,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,,The length of the parameter m_preferredDistanceBetweenRoomsUpDown is 37.
Long Statement,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AboutDialog)); " is 131.
Long Statement,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 139.
Long Statement,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The length of the statement  "            this.label4.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 139.
Long Statement,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ThreadMain,The length of the statement  "                                    Trace("{0}: {1}{2}"' FormatTranscriptLineForDisplay(line)' m_lastMoveDirection != null ? "GO " : string.Empty' m_lastMoveDirection != null ? m_lastMoveDirection.Value.ToString().ToUpperInvariant() : string.Empty); " is 213.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The length of the statement  "                    SetFailureReason("the word \"{0}\" doesn't look like a room description word{1}{2}{3}"' word' HaveFailureReason() ? " (" : string.Empty' GetFailureReason()' HaveFailureReason() ? ")" : string.Empty); " is 199.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The length of the statement  "                    SetFailureReason("all words longer than {0} letters' such as \"{1}\"' must start with a capital or non letter"' 4' word); " is 121.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,DeduceExitsFromDescription,The length of the statement  "                            if (index + directionName.Length == description.Length || !char.IsLetterOrDigit(description[index + directionName.Length])) " is 123.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessTranscriptText,The length of the statement  "                            Trace("{0}: {1} is now {2} from {3}."' FormatTranscriptLineForDisplay(line)' roomName' m_lastMoveDirection.Value.ToString().ToLower()' m_lastKnownRoom.Name); " is 157.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessTranscriptText,The length of the statement  "                            Trace("{0}: {1} is now {2} from {3}."' FormatTranscriptLineForDisplay(line)' roomName' m_lastMoveDirection.Value.ToString().ToLower()' m_lastKnownRoom.Name); " is 157.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessTranscriptText,The length of the statement  "                    Trace("{0}: {1}{2}{3}"' FormatTranscriptLineForDisplay(line)' HaveFailureReason() ? "not a room name because " : string.Empty' GetFailureReason()' HaveFailureReason() ? "." : string.Empty); " is 189.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessPromptCommand,The length of the statement  "                if (!string.IsNullOrEmpty(m_settings.AddObjectCommand) && StringComparer.InvariantCultureIgnoreCase.Compare(words[0]'m_settings.AddObjectCommand) == 0) " is 151.
Long Statement,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ProcessPromptCommand,The length of the statement  "                            foreach (var line in m_lastKnownRoom.Objects.Replace("\r"' string.Empty).Split(new char[] { '\n' }' StringSplitOptions.RemoveEmptyEntries)) " is 139.
Long Statement,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The length of the statement  "            this.m_statusLabel.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 146.
Long Statement,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The length of the statement  "            this.m_stopButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 148.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(AutomapDialog)); " is 133.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_textBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_browseButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 150.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_startButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_singleStepCheckBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left))); " is 158.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_roomsWithSameNameAreSameRoomCheckBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 171.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_verboseTranscriptCheckBox.CheckedChanged += new System.EventHandler(this.VerboseTranscriptCheckBox_CheckedChanged); " is 122.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.m_guessExitsCheckBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 153.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.groupBox2.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CreateRoom,The length of the statement  "                    room.Position = Settings.Snap(new Vector(initialPosition.X - distance * (Settings.PreferredDistanceBetweenRooms + room.Width)' room.Position.Y)); " is 145.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CreateRoom,The length of the statement  "                    room.Position = Settings.Snap(new Vector(initialPosition.X + distance * (Settings.PreferredDistanceBetweenRooms + room.Width)' room.Position.Y)); " is 145.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,FindConnection,The length of the statement  "                    if (fromRoom == source && toRoom == target && (directionFromSource == null || ApproximateDirectionMatch(directionFromSource.Value' fromDirection))) " is 147.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,FindConnection,The length of the statement  "                    if (fromRoom == target && toRoom == source && (directionFromSource == null || ApproximateDirectionMatch(directionFromSource.Value' toDirection))) " is 145.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The length of the statement  "                ZoomFactor = Math.Min(canvasBounds.Width > 0 ? width / canvasBounds.Width : 1.0f' canvasBounds.Height > 0 ? height / canvasBounds.Height : 1.0f); " is 145.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The length of the statement  "                    graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight())); " is 220.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawGrid,The length of the statement  "                var topLeft = Settings.Snap(ClientToCanvas(new PointF(-Settings.GridSize * ZoomFactor' -Settings.GridSize * ZoomFactor))); " is 122.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawGrid,The length of the statement  "                var bottomRight = Settings.Snap(ClientToCanvas(new PointF(Width + Settings.GridSize * ZoomFactor' Height + Settings.GridSize * ZoomFactor))); " is 141.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawElements,The length of the statement  "            var clipToScreen = new RectangleF(Origin.X - Width / 2 / ZoomFactor' Origin.Y - Height / 2 / ZoomFactor' Width / ZoomFactor' Height / ZoomFactor); " is 146.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateDragHover,The length of the statement  "                    if (new Vector(m_lastMouseDownPosition).Distance(new Vector(mousePosition)) > Settings.DragDistanceToInitiateNewConnection) " is 123.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddOrConnectRoomRelativeToSelectedRoom,The length of the statement  "                rect.Inflate(Settings.PreferredDistanceBetweenRooms + room.Width / 2' Settings.PreferredDistanceBetweenRooms + room.Height / 2); " is 128.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DoDragMovePort,The length of the statement  "                if (m_dragMovePort.DockedAt != HoverPort && (!(HoverPort is MoveablePort) || ((MoveablePort)HoverPort).DockedAt != m_dragMovePort)) " is 131.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The length of the statement  "            if (!Settings.InfiniteScrollBounds && topLeft.Y <= clientBounds.Top && topLeft.Y + displaySize.Y >= clientBounds.Bottom) " is 120.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The length of the statement  "                m_vScrollBar.Maximum = (int)Math.Max(topLeft.Y + displaySize.Y' clientBounds.Bottom) - 1; // -1 since Maximum is actually maximum value + 1; see MSDN. " is 150.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The length of the statement  "            if (!Settings.InfiniteScrollBounds && topLeft.X <= clientBounds.Left && topLeft.X + displaySize.X >= clientBounds.Right) " is 120.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The length of the statement  "                m_hScrollBar.Maximum = (int)Math.Max(topLeft.X + displaySize.X' clientBounds.Right) - 1; // -1 since Maximum is actually maximum value + 1; see MSDN. " is 149.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,ScrollBar_Scroll,The length of the statement  "            if (Settings.InfiniteScrollBounds && e.Type == ScrollEventType.SmallIncrement || e.Type == ScrollEventType.SmallDecrement) " is 122.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The length of the statement  "            this.m_vScrollBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 147.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The length of the statement  "            this.m_hScrollBar.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The length of the statement  "            this.m_cornerPanel.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The length of the statement  "            this.m_minimap.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 145.
Long Statement,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CreateRoom,The length of the statement  "                try { m_control.Invoke((MethodInvoker)delegate() { room = m_canvas.CreateRoom(existing' directionFromExisting' name); }); } " is 123.
Long Statement,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Draw,The length of the statement  "                    Drawing.DrawChevron(graphics' lineSegment.Mid.ToPointF()' (float)(Math.Atan2(delta.Y' delta.X) / Math.PI * 180)' Settings.ConnectionArrowSize' brush); " is 150.
Long Statement,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ConnectionPropertiesDialog)); " is 146.
Long Statement,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_okButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,SetTranscriptContext,The length of the statement  "            m_transcriptContextTextBox.Text = string.Format("{0}\n{1}"' roomName' roomDescription).Replace("\r"' string.Empty).Replace("\n"' "\r\n"); " is 137.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(DisambiguateRoomsDialog)); " is 143.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 139.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_transcriptContextTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 159.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_roomNamesListBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 153.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_roomDescriptionTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 160.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_thisRoomButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 155.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_newRoomButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.m_dontCareAnyMoreButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 162.
Long Statement,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,Intersect,The length of the statement  "                    intersects.Add(new LineSegmentIntersect(type' a.Start + new Vector(ua * (a.End.X - a.Start.X)' ua * (a.End.Y - a.Start.Y)))); " is 125.
Long Statement,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,IntersectsWith,The length of the statement  "            if (Intersect(a' false' out intersects) || Intersect(b' false' out intersects) || Intersect(c' false' out intersects) || Intersect(d' false' out intersects)) " is 157.
Long Statement,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The length of the statement  "            // limit it to the rectangle in which the center of the viewport may be placed whilst rendering only the occupied portions of the canvas visible " is 144.
Long Statement,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The length of the statement  "            Canvas.Origin = restrictedBounds.Clamp(new Vector(canvasBounds.Left + canvasBounds.Width * x' canvasBounds.Top + canvasBounds.Height * y)); " is 139.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,CannotLaunchWebSite,The length of the statement  "            MessageBox.Show("Unable to launch the Trizbort website.\n\nVisit http://trizbort.genstein.net for help and support."' Application.ProductName' MessageBoxButtons.OK); " is 165.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,CheckForUpdates,The length of the statement  "                var request = (HttpWebRequest)WebRequest.Create(Uri.EscapeUriString(string.Format("http://trizbort.genstein.net/webservice.php?op=updatecheck&current={0}"' Application.ProductVersion))); " is 186.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,CheckForUpdates,The length of the statement  "                    form.BeginInvoke((MethodInvoker)delegate() { MessageBox.Show(form' string.Format("Your version of Trizbort is {0}"' currentVersion == latestVersion ? "up to date." : "more recent than the latest version!")' Application.ProductName' MessageBoxButtons.OK); }); " is 258.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,CheckForUpdates,The length of the statement  "                    MessageBox.Show(form' string.Format("An error occurred whilst checking for the latest version of Trizbort.\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 198.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(NewVersionDialog)); " is 136.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The length of the statement  "            this.label1.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 139.
Long Statement,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,Draw,The length of the statement  "            if (sizeChecker != m_sizeChecker || pos != m_pos || m_size != size || m_requestedFormat.Alignment != format.Alignment || m_requestedFormat.LineAlignment != format.LineAlignment || m_requestedFormat.FormatFlags != format.FormatFlags) " is 232.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,CheckLoseProject,The length of the statement  "                var result = MessageBox.Show(this' string.Format("Do you want to save changes to {0}?"' Project.Current.Name)' Text' MessageBoxButtons.YesNoCancel); " is 148.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,AboutMap,The length of the statement  "            if (!string.IsNullOrEmpty(project.Title) || !string.IsNullOrEmpty(project.Author) || !string.IsNullOrEmpty(project.Description)) " is 128.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportPDFMenuItem_Click,The length of the statement  "                        MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 179.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportImageMenuItem_Click,The length of the statement  "                        MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 179.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,ExportCode,The length of the statement  "                            MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 179.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,UpdateCommandUI,The length of the statement  "            m_plainLinesMenuItem.Checked = !m_toggleDirectionalLinesMenuItem.Checked && !m_toggleDottedLinesMenuItem.Checked && m_canvas.NewConnectionLabel == ConnectionLabel.None; " is 168.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,UpdateCommandUI,The length of the statement  "            m_editIsDarkMenuItem.Checked = m_canvas.HasSingleSelectedElement && (m_canvas.SelectedElement is Room) && ((Room)m_canvas.SelectedElement).IsDark; " is 146.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,UpdateToolStripImages,The length of the statement  "                button.BackgroundImage = button.Checked ? Properties.Resources.ToolStripBackground2 : Properties.Resources.ToolStripBackground; " is 127.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,ProjectResetToDefaultSettingsMenuItem_Click,The length of the statement  "            if (MessageBox.Show("Restore default settings?\n\nThis will revert any changes to settings in this project."' Application.ProductName' MessageBoxButtons.YesNo' MessageBoxIcon.Warning) == DialogResult.Yes) " is 204.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MainForm)); " is 128.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_fileNewMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.N))); " is 135.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_fileOpenMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.O))); " is 136.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_fileSaveMenuItem.ShortcutKeys = ((System.Windows.Forms.Keys)((System.Windows.Forms.Keys.Control | System.Windows.Forms.Keys.S))); " is 136.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_viewZoomOneHundredPercentMenuItem.Click += new System.EventHandler(this.ViewZoomOneHundredPercentMenuItem_Click); " is 120.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_viewZoomTwoHundredPercentMenuItem.Click += new System.EventHandler(this.ViewZoomTwoHundredPercentMenuItem_Click); " is 120.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_projectResetToDefaultSettingsMenuItem.Click += new System.EventHandler(this.ProjectResetToDefaultSettingsMenuItem_Click); " is 128.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_toggleDottedLinesButton.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("m_toggleDottedLinesButton.BackgroundImage"))); " is 140.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.m_toggleDirectionalLinesButton.BackgroundImage = ((System.Drawing.Image)(resources.GetObject("m_toggleDirectionalLinesButton.BackgroundImage"))); " is 150.
Long Statement,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,Project,C:\repos\genstein_trizbort\Project.cs,Load,The length of the statement  "                MessageBox.Show(Program.MainForm' string.Format("There was a problem loading the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 177.
Long Statement,Trizbort,Project,C:\repos\genstein_trizbort\Project.cs,Save,The length of the statement  "                MessageBox.Show(Program.MainForm' string.Format("There was a problem saving the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error); " is 176.
Long Statement,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The length of the statement  "                    graphics.DrawPolygon(brush' new PointF[] { topRight.ToPointF()' new PointF(topRight.X - Settings.DarknessStripeSize' topRight.Y)' new PointF(topRight.X' topRight.Y + Settings.DarknessStripeSize) }' XFillMode.Alternate); " is 219.
Long Statement,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The length of the statement  "                    var bounds = new Rect(InnerBounds.Left + Settings.ObjectListOffsetFromRoom' InnerBounds.Bottom - height' InnerBounds.Width - Settings.ObjectListOffsetFromRoom' height - Settings.ObjectListOffsetFromRoom); " is 204.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(RoomPropertiesDialog)); " is 140.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_okButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_nameTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 146.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_isDarkCheckBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_tabControl.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_objectsTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 152.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_objectsPositionGroupBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 161.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_cCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_nwCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 149.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_seCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 149.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_nCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_sCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_neCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 149.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_swCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 149.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_wCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_eCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2))); " is 148.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.m_descriptionTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) " is 156.
Long Statement,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,LoadApplicationSettings,The length of the statement  "                        s_automap.AssumeRoomsWithSameNameAreSameRoom = automap["assumeRoomsWithSameNameAreSameRoom"].ToBool(s_automap.AssumeRoomsWithSameNameAreSameRoom); " is 146.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "                    LargeFont = new Font(font.ToText(LargeFont.Name)' Numeric.Clamp(font.Attribute("size").ToFloat(LargeFont.Size)' MinFontSize' MaxFontSize)' style' GraphicsUnit.World); " is 166.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "                    SmallFont = new Font(font.ToText(SmallFont.Name)' Numeric.Clamp(font.Attribute("size").ToFloat(SmallFont.Size)' MinFontSize' MaxFontSize)' style' GraphicsUnit.World); " is 166.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "                    LineFont = new Font(font.ToText(SmallFont.Name)' Numeric.Clamp(font.Attribute("size").ToFloat(LineFont.Size)' MinFontSize' MaxFontSize)' style' GraphicsUnit.World); " is 164.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "            PreferredDistanceBetweenRooms = element["rooms"]["preferredDistanceBetweenRooms"].ToFloat(s_connectionStalkLength * 2); // introduced in v1.2' hence default based on existing setting " is 182.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "            KeypadNavigationCreationModifier = StringToModifierKeys(element["keypadNavigation"]["creationModifier"].Text' s_keypadNavigationCreationModifier); " is 146.
Long Statement,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The length of the statement  "            KeypadNavigationUnexploredModifier = StringToModifierKeys(element["keypadNavigation"]["unexploredModifier"].Text' s_keypadNavigationUnexploredModifier); " is 152.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The length of the statement  "                var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The length of the statement  "                var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height); " is 159.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The length of the statement  "                e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left); " is 132.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(SettingsDialog)); " is 134.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_okButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 149.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_lineWidthUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label5.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_linesGroupBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label8.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_textOffsetFromLineUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 162.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label1.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_connectionStalkLengthUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 165.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label4.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_arrowSizeUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 153.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_gridGroupBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label6.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_gridSizeUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 152.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.groupBox1.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label34.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 143.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_objectListOffsetFromRoomNumericUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 175.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label13.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 143.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_darknessStripeSizeNumericUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 169.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_historyTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 149.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_descriptionTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 153.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_authorTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_titleTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_colorsGroupBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 149.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_colorListBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 147.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_changeColorButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 155.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_fontsGroupBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 148.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_lineFontSizeTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 157.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_changeLineFontButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 158.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_lineFontNameTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 154.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_smallFontSizeTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 158.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_changeSmallFontButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 159.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_smallFontNameTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 155.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_largeFontSizeTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 158.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_changeLargeFontButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 159.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_largeFontNameTextBox.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left) " is 155.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label3.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_snapToElementDistanceUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 165.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label2.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 142.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_handleSizeUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 154.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.label18.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 143.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.m_preferredDistanceBetweenRoomsUpDown.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Right))); " is 173.
Long Statement,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The length of the statement  "            this.Font = new System.Drawing.Font("Tahoma"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 135.
Long Statement,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindExits,The length of the statement  "                        sourceLocation.AddExit(new Exit(sourceLocation' targetLocation' sourceCompassPoint' connection.StartText' connection.Style)); " is 125.
Long Statement,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindExits,The length of the statement  "                            targetLocation.AddExit(new Exit(targetLocation' sourceLocation' targetCompassPoint' connection.EndText' connection.Style)); " is 123.
Long Statement,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindThings,The length of the statement  "                var objectNames = objectsText.Replace("\r"' string.Empty).Split(new char[]{ '\n' }' StringSplitOptions.RemoveEmptyEntries); " is 123.
Long Statement,Trizbort.Export,Exit,C:\repos\genstein_trizbort\Export\CodeExporter.cs,IsReciprocated,The length of the statement  "                        Debug.Assert(reciprocal.PrimaryDirection == oppositeDirection || reciprocal.SecondaryDirection == oppositeDirection' "Alleged opposite direction appears to lead somewhere else. Something went wrong whilst building the set of exits from each room."); " is 249.
Long Statement,Trizbort.Export,Inform6Exporter,C:\repos\genstein_trizbort\Export\Inform6Exporter.cs,ExportHeader,The length of the statement  "            writer.WriteLine("Constant Headline {0};"' ToI6String(string.Format("^By {0}^{1}^^"' author' description)' DoubleQuote)); " is 121.
Long Statement,Trizbort.Export,Inform6Exporter,C:\repos\genstein_trizbort\Export\Inform6Exporter.cs,ExportThings,The length of the statement  "                writer.WriteLine("Object {0} {1} {2}"' Repeat("-> "' indent)' thing.ExportName' ToI6String(StripOddCharacters(thing.DisplayName' ' '' '-').Trim()' DoubleQuote)); " is 161.
Long Statement,Trizbort.Export,TadsExporter,C:\repos\genstein_trizbort\Export\TadsExporter.cs,ExportContent,The length of the statement  "                writer.WriteLine("{0}: {1} {2}"' location.ExportName' location.Room.IsDark ? "DarkRoom" : "Room"' ToTadsString(location.Room.Name' SingleQuote)); " is 145.
Long Statement,Trizbort.Export,TadsExporter,C:\repos\genstein_trizbort\Export\TadsExporter.cs,ExportThings,The length of the statement  "                writer.WriteLine("{0} {1}: {3} {2} {2}"' Repeat('+'' indent)' thing.ExportName' ToTadsString(StripOddCharacters(thing.DisplayName' ' '' '-').Trim()' SingleQuote)' thing.Contents.Count > 0 ? "Container" : "Thing"); " is 213.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportHeader,The length of the statement  "                writer.WriteLine("The story description is {0}{1}"' ToInform7PrintableString(description)' description.EndsWith(".") ? string.Empty : "."); " is 139.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The length of the statement  "                            writer.WriteLine("\tsay \"An export nymph appears on your keyboard. She says' 'You can't go that way' as that exit was marked as conditional' you know' a dotted line' in Trizbort. Obviously in your game you'll have a better rationale for this than' er' me.' She looks embarrassed. 'Bye!'\""); " is 292.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The length of the statement  "                        writer.WriteLine("Instead of going {0} from {1}' block conditional exits."' GetInform7Name(direction).ToLowerInvariant()' location.ExportName); " is 143.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The length of the statement  "                        writer.Write("{0}{1} {2} in {3}."' GetArticle(thing.ExportName)' thing.ExportName' IsAre(thing.ExportName)' thing.Location.ExportName); " is 135.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The length of the statement  "                        writer.Write("{0}{1} {2} in the {3}."' GetArticle(thing.ExportName)' thing.ExportName' IsAre(thing.ExportName)' thing.Container.ExportName); " is 140.
Long Statement,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,ExportContent,The length of the statement  "                        writer.Write(" It is privately-named. The printed name of it is {0}{1} Understand {2} as {3}."' ToInform7PrintableString(thing.DisplayName)' thing.DisplayName.EndsWith(".") ? string.Empty : "."' ToInform7UnderstandWords(thing.DisplayName)' thing.ExportName); " is 258.
Complex Conditional,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,FindConnection,The conditional expression  "fromRoom == source && toRoom == target && (directionFromSource == null || ApproximateDirectionMatch(directionFromSource.Value' fromDirection))"  is complex.
Complex Conditional,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,FindConnection,The conditional expression  "fromRoom == target && toRoom == source && (directionFromSource == null || ApproximateDirectionMatch(directionFromSource.Value' toDirection))"  is complex.
Complex Conditional,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,RemoveExitStub,The conditional expression  "source == room && target == room && sourceCompassPoint == compassPoint && targetCompassPoint == compassPoint"  is complex.
Complex Conditional,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnMouseWheel,The conditional expression  "e.X < 0 || e.X > Width || e.Y < 0 || e.Y > Width"  is complex.
Complex Conditional,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnPreviewKeyDown,The conditional expression  "e.KeyCode == Keys.Up || e.KeyCode == Keys.Down || e.KeyCode == Keys.Left || e.KeyCode == Keys.Right"  is complex.
Complex Conditional,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,Intersect,The conditional expression  "ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1"  is complex.
Complex Conditional,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,Intersect,The conditional expression  "intersect.Position.Distance(a.Start) <= small ||                          intersect.Position.Distance(b.Start) <= small ||                          intersect.Position.Distance(a.End) <= small ||                          intersect.Position.Distance(b.End) <= small"  is complex.
Complex Conditional,Trizbort,LineSegment,C:\repos\genstein_trizbort\LineSegment.cs,IntersectsWith,The conditional expression  "Intersect(a' false' out intersects) || Intersect(b' false' out intersects) || Intersect(c' false' out intersects) || Intersect(d' false' out intersects)"  is complex.
Complex Conditional,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,Draw,The conditional expression  "sizeChecker != m_sizeChecker || pos != m_pos || m_size != size || m_requestedFormat.Alignment != format.Alignment || m_requestedFormat.LineAlignment != format.LineAlignment || m_requestedFormat.FormatFlags != format.FormatFlags"  is complex.
Complex Conditional,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The conditional expression  "text.IndexOf('\n') == -1 && size.X > 0 && size.Y > 0 && graphics.MeasureString(text' font).Width > size.X"  is complex.
Complex Conditional,Trizbort.Export,Inform6Exporter,C:\repos\genstein_trizbort\Export\Inform6Exporter.cs,StripOddCharacters,The conditional expression  "(c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') || c == '_' || exclusions.Contains(c)"  is complex.
Complex Conditional,Trizbort.Export,TadsExporter,C:\repos\genstein_trizbort\Export\TadsExporter.cs,StripOddCharacters,The conditional expression  "(c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9') || c == '_' || exclusions.Contains(c)"  is complex.
Complex Conditional,Trizbort.Export,Inform7Exporter,C:\repos\genstein_trizbort\Export\Inform7Exporter.cs,StripOddCharacters,The conditional expression  "c == ' ' || c == '-' || char.IsLetterOrDigit(c) || exceptCharsList.Contains(c)"  is complex.
Empty Catch Block,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,AboutDialog,The method has an empty catch block.
Empty Catch Block,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawElements,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,FindRoom,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CreateRoom,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CreateRoom,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Connect,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddExitStub,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,RemoveExitStub,The method has an empty catch block.
Empty Catch Block,Trizbort,MultithreadedAutomapCanvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,SelectRoom,The method has an empty catch block.
Empty Catch Block,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,CheckForUpdatesAsync,The method has an empty catch block.
Empty Catch Block,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,MainForm_Load,The method has an empty catch block.
Empty Catch Block,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,LoadApplicationSettings,The method has an empty catch block.
Empty Catch Block,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,SaveApplicationSettings,The method has an empty catch block.
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(188' 9);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(188' 9);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(52' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(52' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(188' 34);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(188' 34);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(133' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(133' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_versionLabel.Location = new System.Drawing.Point(188' 60);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_versionLabel.Location = new System.Drawing.Point(188' 60);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_versionLabel.Size = new System.Drawing.Size(89' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_versionLabel.Size = new System.Drawing.Size(89' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_versionLabel.TabIndex = 3;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(188' 86);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(188' 86);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(74' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(74' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 4;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.LinkArea = new System.Windows.Forms.LinkArea(80' 16);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.LinkArea = new System.Windows.Forms.LinkArea(80' 16);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(191' 275);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Location = new System.Drawing.Point(191' 275);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(309' 30);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.Size = new System.Drawing.Size(309' 30);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel1.TabIndex = 6;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Location = new System.Drawing.Point(188' 112);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Location = new System.Drawing.Point(188' 112);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Size = new System.Drawing.Size(107' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.Size = new System.Drawing.Size(107' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel2.TabIndex = 8;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(165' 314);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(165' 314);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel4.Location = new System.Drawing.Point(188' 129);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel4.Location = new System.Drawing.Point(188' 129);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel4.Size = new System.Drawing.Size(144' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel4.Size = new System.Drawing.Size(144' 13);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.linkLabel4.TabIndex = 10;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(191' 161);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Location = new System.Drawing.Point(191' 161);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(309' 111);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.Size = new System.Drawing.Size(309' 111);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.textBox1.TabIndex = 11;
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(512' 314);
Magic Number,Trizbort,AboutDialog,C:\repos\genstein_trizbort\AboutDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(512' 314);
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,Dispose,The following statement contains a magic number: if (m_thread != null)              {                  m_quit = true;                  Trace("Automap: Set quit and wait.");                    // Thread.Join()' except without the deadlock (sigh).                  var startTime = DateTime.Now;                  do                  {                      Application.DoEvents();                      Thread.Sleep(0);                  } while (m_thread.IsAlive && DateTime.Now - startTime < TimeSpan.FromSeconds(10));                  if (m_thread.IsAlive)                  {                      Trace("Automap: Aborting thread.");                      m_thread.Abort();                      m_thread.Join();                      Status = "Automapping has been aborted.";                  }                    m_thread = null;              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,WaitForStep,The following statement contains a magic number: if (m_settings.SingleStep && !m_stepNow)              {                  Status = "Automapping is waiting for you to step through it.";                  while (!m_stepNow && !m_quit)                  {                      Thread.Sleep(50);                  }                  m_stepNow = false;              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ThreadMain,The following statement contains a magic number: while (!m_quit)              {                  if (sleep)                  {                      Trace("Automap: Zzz.");                      Thread.Sleep(1000);                      sleep = false;                        if (m_quit)                      {                          break;                      }                  }                    Stream stream;                  try                  {                      stream = File.Open(m_settings.FileName' FileMode.Open' FileAccess.Read' FileShare.ReadWrite);                  }                  catch (Exception)                  {                      // couldn't open the file; try again momentarily                      // TODO: alert the user as well in case they want to stop automapping                      Trace("Automap: Error opening file.");                      Status = "Automapping cannot open the transcript but will keep trying.";                      sleep = true;                      continue;                  }                    using (stream)                  {                      StreamReader reader;                      try                      {                          reader = new StreamReader(stream);                      }                      catch (Exception)                      {                          // couldn't read from the file; try again momentarily                          // TODO: alert the user as well in case they want to stop automapping                          Trace("Automap: Error reading from file.");                          Status = "Automapping cannot read the transcript but will keep trying.";                          sleep = true;                          continue;                      }                        using (reader)                      {                          // keep track of lines we read between here and the next prompt                          var linesBetweenPrompts = new List<string>();                          var nextLineIndex = 0;                            try                          {                              // skip by line to where we want to be next                              // (We could do this with file pointers' but they don't sit well with StreamReader;                              // We can't safely read by byte since we want to treat the file as properly encoded text.                              // There may be much better way of doing this. Whatever it is' we don't use it.)                              while (nextLineIndex < m_nextLineIndexToRead && !reader.EndOfStream)                              {                                  reader.ReadLine();                                  ++nextLineIndex;                              }                          }                          catch (Exception)                          {                              // couldn't read from the file; try again momentarily                              // TODO: alert the user as well in case they want to stop automapping                              Trace("Automap: Error skipping already ready lines in file.");                              Status = "Automapping could not skip already read lines' but will keep trying.";                              sleep = true;                              continue;                          }                            Status = "Automapping is processing the transcript.";                            var promptLine = string.Empty;                          // while we've got text left to read in the file...                          while (!reader.EndOfStream)                          {                              // ...read a line of text                              string line;                              try                              {                                  line = reader.ReadLine();                              }                              catch (Exception)                              {                                  // couldn't read from the file; try again momentarily                                  // TODO: alert the user as well in case they want to stop automapping                                  Trace("Automap: Error reading line in file.");                                  Status = "Automapping could read lines from the transcript' but will keep trying.";                                  sleep = true;                                  break;                              }                              ++nextLineIndex;                                //Trace("[" + line + "]");                              string command;                              if (IsPrompt(line' out command))                              {                                  // this is a prompt line                                    // let's process everything leading up to it since the last prompt' but not necessarily this new prompt itself                                  ProcessTranscriptText(linesBetweenPrompts);                                    // we've now dealt with all lines to this point                                  linesBetweenPrompts.Clear();                                    // if prompts are at the end of the stream' don't process them yet;                                  // they're probably not complete. wait until there's something after them.                                  if (!reader.EndOfStream)                                  {                                      // process this prompt since it's not at the end of the stream                                      ProcessPromptCommand(line);                                        Trace("{0}: {1}{2}"' FormatTranscriptLineForDisplay(line)' m_lastMoveDirection != null ? "GO " : string.Empty' m_lastMoveDirection != null ? m_lastMoveDirection.Value.ToString().ToUpperInvariant() : string.Empty);                                        // if we run out of file before hitting the next prompt' we start again after this processed prompt                                      m_nextLineIndexToRead = nextLineIndex;                                  }                                  else                                  {                                      // this prompt is at the end of the stream; don't process it yet;                                      // but we've just run out of file' so next time remember to start with this prompt                                      m_nextLineIndexToRead = nextLineIndex - 1;                                  }                                    // yield back to our top level loop' mainly in order that we can be shut down gracefully mid-transcript.                                  break;                              }                              else                              {                                  // this line isn't a prompt;                                  // hang onto it for now in case we meet a prompt shortly.                                  linesBetweenPrompts.Add(line);                              }                          }                            // if we hit the end of the stream' we'll sleep momentarily                          sleep = reader.EndOfStream;                          Status = "Automapping is waiting for more text.";                      }                  }              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The following statement contains a magic number: do              {                  strippedSuffix = false;                  foreach (var decorativeSuffixMarker in s_roomDecorativeSuffixMarkers)                  {                      var indexOfMarker = line.IndexOf(decorativeSuffixMarker);                      if (indexOfMarker >= 0)                      {                          var suffixLength = line.Length - indexOfMarker;                          if (suffixLength > 30)                          {                              // this looks more like punctuation in a sentence' not a suffix                              SetFailureReason("this line looks more like a sentence");                              return false;                          }                            line = line.Substring(0' indexOfMarker);                          strippedSuffix = true;                          break;                      }                  }              }              while (strippedSuffix);
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The following statement contains a magic number: foreach (var word in words)              {                  if (!IsRoomDescriptionWord(word))                  {                      // all words must look room description esque for this to be a room name                      SetFailureReason("the word \"{0}\" doesn't look like a room description word{1}{2}{3}"' word' HaveFailureReason() ? " (" : string.Empty' GetFailureReason()' HaveFailureReason() ? ")" : string.Empty);                      return false;                  }                  if (!StartsWithCapitalOrNonLetter(word) && word.Length >= 4)                  {                      // all longish words must start with a capital or non letter.                      SetFailureReason("all words longer than {0} letters' such as \"{1}\"' must start with a capital or non letter"' 4' word);                      return false;                  }                  maxWordLength = Math.Max(maxWordLength' word.Length);                  if (IsAllCaps(word))                  {                      ++wordCountWithAllCaps;                  }              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The following statement contains a magic number: foreach (var word in words)              {                  if (!IsRoomDescriptionWord(word))                  {                      // all words must look room description esque for this to be a room name                      SetFailureReason("the word \"{0}\" doesn't look like a room description word{1}{2}{3}"' word' HaveFailureReason() ? " (" : string.Empty' GetFailureReason()' HaveFailureReason() ? ")" : string.Empty);                      return false;                  }                  if (!StartsWithCapitalOrNonLetter(word) && word.Length >= 4)                  {                      // all longish words must start with a capital or non letter.                      SetFailureReason("all words longer than {0} letters' such as \"{1}\"' must start with a capital or non letter"' 4' word);                      return false;                  }                  maxWordLength = Math.Max(maxWordLength' word.Length);                  if (IsAllCaps(word))                  {                      ++wordCountWithAllCaps;                  }              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The following statement contains a magic number: if (words.Length > 1 && maxWordLength < 3)              {                  // we must have at least one word over n letters long                  SetFailureReason("there must be at least {0} word(s) over {1} letter(s) long"' 1' 3);                  return false;              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractRoomName,The following statement contains a magic number: if (words.Length > 1 && maxWordLength < 3)              {                  // we must have at least one word over n letters long                  SetFailureReason("there must be at least {0} word(s) over {1} letter(s) long"' 1' 3);                  return false;              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,ExtractParagraph,The following statement contains a magic number: while (lineIndex < lines.Count)              {                  var line = lines[lineIndex].Trim();                  if (line.Length == 0)                  {                      // we hit a blank line; give up                      break;                  }                    string unused;                  if (IsPrompt(line' out unused) || ExtractRoomName(line' lineIndex > 0 ? lines[lineIndex - 1] : null' out unused))                  {                      // we hit a prompt or a room name; give up                      break;                  }                    if (paragraph == null)                  {                      paragraph = line;                  }                  else                  {                      paragraph = string.Format("{0} {1}"' paragraph' line);                  }                    if (line.Length < 65)                  {                      // we hit a short line; assume the end of the paragraph                      break;                  }                    ++lineIndex;              }
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,FormatTranscriptLineForDisplay,The following statement contains a magic number: const int MaxDisplayLineLength = 60;
Magic Number,Trizbort,Automap,C:\repos\genstein_trizbort\Automap.cs,FormatTranscriptLineForDisplay,The following statement contains a magic number: if (displayLine.Length > MaxDisplayLineLength)              {                  displayLine = displayLine.Substring(0' MaxDisplayLineLength - 3) + "...";              }
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_statusLabel.Location = new System.Drawing.Point(3' 7);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_statusLabel.Location = new System.Drawing.Point(3' 7);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_statusLabel.Size = new System.Drawing.Size(233' 15);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_statusLabel.Size = new System.Drawing.Size(233' 15);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_stopButton.Location = new System.Drawing.Point(241' 2);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_stopButton.Location = new System.Drawing.Point(241' 2);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_stopButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.m_stopButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(4096' 29);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.MaximumSize = new System.Drawing.Size(4096' 29);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(2' 29);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(2' 29);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(320' 27);
Magic Number,Trizbort,AutomapBar,C:\repos\genstein_trizbort\AutomapBar.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(320' 27);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(372' 35);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(372' 35);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(13' 52);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(13' 52);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(74' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(74' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textBox.Location = new System.Drawing.Point(16' 69);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textBox.Location = new System.Drawing.Point(16' 69);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textBox.Size = new System.Drawing.Size(323' 21);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textBox.Size = new System.Drawing.Size(323' 21);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textBox.TabIndex = 2;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_browseButton.Location = new System.Drawing.Point(344' 67);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_browseButton.Location = new System.Drawing.Point(344' 67);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_browseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_browseButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_browseButton.TabIndex = 3;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startButton.Location = new System.Drawing.Point(227' 297);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startButton.Location = new System.Drawing.Point(227' 297);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startButton.Size = new System.Drawing.Size(116' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startButton.Size = new System.Drawing.Size(116' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startButton.TabIndex = 7;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(349' 297);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(349' 297);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.TabIndex = 8;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_singleStepCheckBox.Location = new System.Drawing.Point(12' 301);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_singleStepCheckBox.Location = new System.Drawing.Point(12' 301);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_singleStepCheckBox.Size = new System.Drawing.Size(134' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_singleStepCheckBox.Size = new System.Drawing.Size(134' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_singleStepCheckBox.TabIndex = 6;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomsWithSameNameAreSameRoomCheckBox.Location = new System.Drawing.Point(13' 45);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomsWithSameNameAreSameRoomCheckBox.Location = new System.Drawing.Point(13' 45);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomsWithSameNameAreSameRoomCheckBox.Size = new System.Drawing.Size(238' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomsWithSameNameAreSameRoomCheckBox.Size = new System.Drawing.Size(238' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_verboseTranscriptCheckBox.Location = new System.Drawing.Point(13' 22);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_verboseTranscriptCheckBox.Location = new System.Drawing.Point(13' 22);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_verboseTranscriptCheckBox.Size = new System.Drawing.Size(294' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_verboseTranscriptCheckBox.Size = new System.Drawing.Size(294' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_guessExitsCheckBox.Location = new System.Drawing.Point(13' 68);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_guessExitsCheckBox.Location = new System.Drawing.Point(13' 68);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_guessExitsCheckBox.Size = new System.Drawing.Size(337' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_guessExitsCheckBox.Size = new System.Drawing.Size(337' 17);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_guessExitsCheckBox.TabIndex = 2;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(16' 99);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(16' 99);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(408' 95);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(408' 95);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 4;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(16' 204);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(16' 204);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(408' 74);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(408' 74);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.TabIndex = 5;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(170' 47);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(170' 47);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(233' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(233' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 3;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(48' 47);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(48' 47);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(15' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(15' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_addObjectCommandTextBox.Location = new System.Drawing.Point(65' 44);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_addObjectCommandTextBox.Location = new System.Drawing.Point(65' 44);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_addObjectCommandTextBox.Size = new System.Drawing.Size(100' 21);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_addObjectCommandTextBox.Size = new System.Drawing.Size(100' 21);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_addObjectCommandTextBox.TabIndex = 2;
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(10' 24);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(10' 24);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(119' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(119' 13);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(436' 332);
Magic Number,Trizbort,AutomapDialog,C:\repos\genstein_trizbort\AutomapDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(436' 332);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,PositionRelativeTo,The following statement contains a magic number: room.Position = Settings.Snap(new Vector(newRoomCenter.X - room.Width / 2' newRoomCenter.Y - room.Height / 2));
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,PositionRelativeTo,The following statement contains a magic number: room.Position = Settings.Snap(new Vector(newRoomCenter.X - room.Width / 2' newRoomCenter.Y - room.Height / 2));
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,ComputeCanvasBounds,The following statement contains a magic number: if (includePadding)              {                  // HACK: fudge the canvas size to allow for overhanging line/object text                  bounds.Inflate(Math.Max(Settings.LineFont.GetHeight()' Settings.SmallFont.GetHeight()) * 24);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: if (finalRender)              {                  // zoom to fit (0'0)-(width'height)                  var canvasBounds = ComputeCanvasBounds(true);                  ZoomFactor = Math.Min(canvasBounds.Width > 0 ? width / canvasBounds.Width : 1.0f' canvasBounds.Height > 0 ? height / canvasBounds.Height : 1.0f);                  Origin = new Vector(canvasBounds.X + canvasBounds.Width / 2' canvasBounds.Y + canvasBounds.Height / 2);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: if (finalRender)              {                  // zoom to fit (0'0)-(width'height)                  var canvasBounds = ComputeCanvasBounds(true);                  ZoomFactor = Math.Min(canvasBounds.Width > 0 ? width / canvasBounds.Width : 1.0f' canvasBounds.Height > 0 ? height / canvasBounds.Height : 1.0f);                  Origin = new Vector(canvasBounds.X + canvasBounds.Width / 2' canvasBounds.Y + canvasBounds.Height / 2);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: using (var palette = new Palette())              {                  if (finalRender)                  {                      graphics.Clear(Settings.Color[Colors.Canvas]);                  }                    if (!finalRender)                  {                      DrawGrid(graphics' palette);                  }                    graphics.TranslateTransform(width / 2' height / 2);                  graphics.ScaleTransform(ZoomFactor' ZoomFactor);                  graphics.TranslateTransform(-Origin.X' -Origin.Y);                    if (Settings.DebugShowFPS && !finalRender)                  {                      var canvasBounds = ComputeCanvasBounds(true);                      graphics.DrawRectangle(XPens.Purple' canvasBounds.ToRectangleF());                  }                    if (Settings.ShowOrigin && !finalRender)                  {                      var pen = palette.Pen(Drawing.Mix(Settings.Color[Colors.Canvas]' Settings.Color[Colors.SmallText]' 3' 1));                      var n = Settings.GridSize;                      graphics.DrawLine(pen' -n' 0' n' 0);                      graphics.DrawLine(pen' 0' -n' 0' n);                  }                    graphics.SmoothingMode = XSmoothingMode.AntiAlias;                    DrawElements(graphics' palette' finalRender);                  if (!finalRender)                  {                      DrawHandles(graphics' palette);                      DrawPorts(graphics' palette);                      DrawMarquee(graphics' palette);                  }                    stopwatch.Stop();                  if (Settings.DebugShowFPS && !finalRender)                  {                      var fps = 1.0f / (float)(stopwatch.Elapsed.TotalSeconds);                      graphics.Graphics.Transform = new Matrix();                      graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight()));                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: using (var palette = new Palette())              {                  if (finalRender)                  {                      graphics.Clear(Settings.Color[Colors.Canvas]);                  }                    if (!finalRender)                  {                      DrawGrid(graphics' palette);                  }                    graphics.TranslateTransform(width / 2' height / 2);                  graphics.ScaleTransform(ZoomFactor' ZoomFactor);                  graphics.TranslateTransform(-Origin.X' -Origin.Y);                    if (Settings.DebugShowFPS && !finalRender)                  {                      var canvasBounds = ComputeCanvasBounds(true);                      graphics.DrawRectangle(XPens.Purple' canvasBounds.ToRectangleF());                  }                    if (Settings.ShowOrigin && !finalRender)                  {                      var pen = palette.Pen(Drawing.Mix(Settings.Color[Colors.Canvas]' Settings.Color[Colors.SmallText]' 3' 1));                      var n = Settings.GridSize;                      graphics.DrawLine(pen' -n' 0' n' 0);                      graphics.DrawLine(pen' 0' -n' 0' n);                  }                    graphics.SmoothingMode = XSmoothingMode.AntiAlias;                    DrawElements(graphics' palette' finalRender);                  if (!finalRender)                  {                      DrawHandles(graphics' palette);                      DrawPorts(graphics' palette);                      DrawMarquee(graphics' palette);                  }                    stopwatch.Stop();                  if (Settings.DebugShowFPS && !finalRender)                  {                      var fps = 1.0f / (float)(stopwatch.Elapsed.TotalSeconds);                      graphics.Graphics.Transform = new Matrix();                      graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight()));                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: using (var palette = new Palette())              {                  if (finalRender)                  {                      graphics.Clear(Settings.Color[Colors.Canvas]);                  }                    if (!finalRender)                  {                      DrawGrid(graphics' palette);                  }                    graphics.TranslateTransform(width / 2' height / 2);                  graphics.ScaleTransform(ZoomFactor' ZoomFactor);                  graphics.TranslateTransform(-Origin.X' -Origin.Y);                    if (Settings.DebugShowFPS && !finalRender)                  {                      var canvasBounds = ComputeCanvasBounds(true);                      graphics.DrawRectangle(XPens.Purple' canvasBounds.ToRectangleF());                  }                    if (Settings.ShowOrigin && !finalRender)                  {                      var pen = palette.Pen(Drawing.Mix(Settings.Color[Colors.Canvas]' Settings.Color[Colors.SmallText]' 3' 1));                      var n = Settings.GridSize;                      graphics.DrawLine(pen' -n' 0' n' 0);                      graphics.DrawLine(pen' 0' -n' 0' n);                  }                    graphics.SmoothingMode = XSmoothingMode.AntiAlias;                    DrawElements(graphics' palette' finalRender);                  if (!finalRender)                  {                      DrawHandles(graphics' palette);                      DrawPorts(graphics' palette);                      DrawMarquee(graphics' palette);                  }                    stopwatch.Stop();                  if (Settings.DebugShowFPS && !finalRender)                  {                      var fps = 1.0f / (float)(stopwatch.Elapsed.TotalSeconds);                      graphics.Graphics.Transform = new Matrix();                      graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight()));                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: using (var palette = new Palette())              {                  if (finalRender)                  {                      graphics.Clear(Settings.Color[Colors.Canvas]);                  }                    if (!finalRender)                  {                      DrawGrid(graphics' palette);                  }                    graphics.TranslateTransform(width / 2' height / 2);                  graphics.ScaleTransform(ZoomFactor' ZoomFactor);                  graphics.TranslateTransform(-Origin.X' -Origin.Y);                    if (Settings.DebugShowFPS && !finalRender)                  {                      var canvasBounds = ComputeCanvasBounds(true);                      graphics.DrawRectangle(XPens.Purple' canvasBounds.ToRectangleF());                  }                    if (Settings.ShowOrigin && !finalRender)                  {                      var pen = palette.Pen(Drawing.Mix(Settings.Color[Colors.Canvas]' Settings.Color[Colors.SmallText]' 3' 1));                      var n = Settings.GridSize;                      graphics.DrawLine(pen' -n' 0' n' 0);                      graphics.DrawLine(pen' 0' -n' 0' n);                  }                    graphics.SmoothingMode = XSmoothingMode.AntiAlias;                    DrawElements(graphics' palette' finalRender);                  if (!finalRender)                  {                      DrawHandles(graphics' palette);                      DrawPorts(graphics' palette);                      DrawMarquee(graphics' palette);                  }                    stopwatch.Stop();                  if (Settings.DebugShowFPS && !finalRender)                  {                      var fps = 1.0f / (float)(stopwatch.Elapsed.TotalSeconds);                      graphics.Graphics.Transform = new Matrix();                      graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight()));                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Draw,The following statement contains a magic number: using (var palette = new Palette())              {                  if (finalRender)                  {                      graphics.Clear(Settings.Color[Colors.Canvas]);                  }                    if (!finalRender)                  {                      DrawGrid(graphics' palette);                  }                    graphics.TranslateTransform(width / 2' height / 2);                  graphics.ScaleTransform(ZoomFactor' ZoomFactor);                  graphics.TranslateTransform(-Origin.X' -Origin.Y);                    if (Settings.DebugShowFPS && !finalRender)                  {                      var canvasBounds = ComputeCanvasBounds(true);                      graphics.DrawRectangle(XPens.Purple' canvasBounds.ToRectangleF());                  }                    if (Settings.ShowOrigin && !finalRender)                  {                      var pen = palette.Pen(Drawing.Mix(Settings.Color[Colors.Canvas]' Settings.Color[Colors.SmallText]' 3' 1));                      var n = Settings.GridSize;                      graphics.DrawLine(pen' -n' 0' n' 0);                      graphics.DrawLine(pen' 0' -n' 0' n);                  }                    graphics.SmoothingMode = XSmoothingMode.AntiAlias;                    DrawElements(graphics' palette' finalRender);                  if (!finalRender)                  {                      DrawHandles(graphics' palette);                      DrawPorts(graphics' palette);                      DrawMarquee(graphics' palette);                  }                    stopwatch.Stop();                  if (Settings.DebugShowFPS && !finalRender)                  {                      var fps = 1.0f / (float)(stopwatch.Elapsed.TotalSeconds);                      graphics.Graphics.Transform = new Matrix();                      graphics.DrawString(string.Format("{0} ms ({1} fps) {2} rebuilds"' stopwatch.Elapsed.TotalMilliseconds' fps' TextBlock.RebuildCount)' Settings.LargeFont' Brushes.Red' new PointF(10' 10 + Settings.LargeFont.GetHeight()));                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawGrid,The following statement contains a magic number: if (Settings.IsGridVisible && Settings.GridSize * ZoomFactor > 10)              {                  var topLeft = Settings.Snap(ClientToCanvas(new PointF(-Settings.GridSize * ZoomFactor' -Settings.GridSize * ZoomFactor)));                  var bottomRight = Settings.Snap(ClientToCanvas(new PointF(Width + Settings.GridSize * ZoomFactor' Height + Settings.GridSize * ZoomFactor)));                  var points = new List<PointF>();                  var even = true;                  for (float x = topLeft.X; x <= bottomRight.X; x += Settings.GridSize)                  {                      var start = CanvasToClient(new Vector(x' topLeft.Y));                      var end = CanvasToClient(new Vector(x' bottomRight.Y));                      if (even)                      {                          points.Add(start);                          points.Add(end);                      }                      else                      {                          points.Add(end);                          points.Add(start);                      }                      even = !even;                      if (Settings.DebugDisableGridPolyline)                      {                          graphics.DrawLine(palette.GridPen' start' end);                      }                  }                  if (!Settings.DebugDisableGridPolyline)                  {                      graphics.DrawLines(palette.GridPen' points.ToArray());                  }                  points = new List<PointF>();                  for (float y = topLeft.Y; y <= bottomRight.Y; y += Settings.GridSize)                  {                      var start = CanvasToClient(new Vector(topLeft.X' y));                      var end = CanvasToClient(new Vector(bottomRight.X' y));                      if (even)                      {                          points.Add(start);                          points.Add(end);                      }                      else                      {                          points.Add(end);                          points.Add(start);                      }                      even = !even;                      if (Settings.DebugDisableGridPolyline)                      {                          graphics.DrawLine(palette.GridPen' start' end);                      }                  }                  if (!Settings.DebugDisableGridPolyline)                  {                      graphics.DrawLines(palette.GridPen' points.ToArray());                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawElements,The following statement contains a magic number: var clipToScreen = new RectangleF(Origin.X - Width / 2 / ZoomFactor' Origin.Y - Height / 2 / ZoomFactor' Width / ZoomFactor' Height / ZoomFactor);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawElements,The following statement contains a magic number: var clipToScreen = new RectangleF(Origin.X - Width / 2 / ZoomFactor' Origin.Y - Height / 2 / ZoomFactor' Width / ZoomFactor' Height / ZoomFactor);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CanvasToClient,The following statement contains a magic number: v.X += Width / 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,CanvasToClient,The following statement contains a magic number: v.Y += Height / 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,ClientToCanvas,The following statement contains a magic number: p.X -= Width / 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,ClientToCanvas,The following statement contains a magic number: p.Y -= Height / 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.Enter)              {                  if (SelectedElement == null)                  {                      // select the room closest to the center of the viewport                      var viewportCenter = Viewport.Center;                      Room closestRoom = null;                      var closestDistance = float.MaxValue;                      foreach (var element in Project.Current.Elements)                      {                          if (element is Room)                          {                              var room = (Room)element;                              var roomCenter = room.InnerBounds.Center;                              var distance = roomCenter.Distance(viewportCenter);                              if (distance < closestDistance)                              {                                  closestRoom = room;                                  closestDistance = distance;                              }                          }                      }                      SelectedElement = closestRoom;                      EnsureVisible(SelectedElement);                  }                  else if (HasSingleSelectedElement && SelectedElement.HasDialog)                  {                      SelectedElement.ShowDialog();                  }              }              else if (e.KeyCode == Keys.Escape && SelectedElement != null)              {                  // clear selection                  SelectedElement = null;              }              else if (e.KeyCode == Keys.A && e.Control)              {                  // select all                  SelectAll();              }              else if (e.KeyCode == Keys.Add || e.KeyCode == Keys.Oemplus)              {                  ZoomIn();              }              else if (e.KeyCode == Keys.Subtract || e.KeyCode == Keys.OemMinus)              {                  ZoomOut();              }              else if (e.KeyCode == Keys.Home)              {                  if (e.Control)                  {                      ZoomToFit();                  }                  else                  {                      ResetZoomOrigin();                  }              }              else if (e.KeyCode == Keys.Up || e.KeyCode == Keys.Down)              {                  Origin += new Vector(0' (e.KeyCode == Keys.Down ? 1 : -1) * Viewport.Height / (e.Shift ? 5 : 10));              }              else if (e.KeyCode == Keys.Left || e.KeyCode == Keys.Right)              {                  Origin += new Vector((e.KeyCode == Keys.Right ? 1 : -1) * Viewport.Width / (e.Shift ? 5 : 10)' 0);              }              else if (e.KeyCode == Keys.R)              {                  AddRoom(true);              }              else if (e.KeyCode == Keys.T)              {                  if (NewConnectionStyle == ConnectionStyle.Solid)                  {                      NewConnectionStyle = ConnectionStyle.Dashed;                  }                  else                  {                      NewConnectionStyle = ConnectionStyle.Solid;                  }                  ApplyConnectionStyle(NewConnectionStyle);              }              else if (e.KeyCode == Keys.A)              {                  if (NewConnectionFlow == ConnectionFlow.TwoWay)                  {                      NewConnectionFlow = ConnectionFlow.OneWay;                  }                  else                  {                      NewConnectionFlow = ConnectionFlow.TwoWay;                  }                  ApplyConnectionFlow(NewConnectionFlow);              }              else if (e.KeyCode == Keys.P)              {                  ApplyNewPlainConnectionSettings();              }              else if (e.KeyCode == Keys.U)              {                  NewConnectionLabel = ConnectionLabel.Up;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.D)              {                  NewConnectionLabel = ConnectionLabel.Down;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.I)              {                  NewConnectionLabel = ConnectionLabel.In;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.O)              {                  NewConnectionLabel = ConnectionLabel.Out;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.V)              {                  ReverseLineDirection();              }              else if (e.KeyCode == Keys.K)              {                  foreach (var element in m_selectedElements)                  {                      if (element is Room)                      {                          var room = (Room)element;                          room.IsDark = !room.IsDark;                      }                  }              }              else if (e.KeyCode == Keys.F1 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugShowFPS = !Settings.DebugShowFPS;                  Invalidate();              }              else if (e.KeyCode == Keys.F2 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableElementRendering = !Settings.DebugDisableElementRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F3 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableLineRendering = !Settings.DebugDisableLineRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F4 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableTextRendering = !Settings.DebugDisableTextRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F5 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableGridPolyline = !Settings.DebugDisableGridPolyline;                  Invalidate();              }              else if (e.KeyCode == Keys.F5)              {                  // for diagnostic purposes' cancel single stepping                  if (IsAutomapping)                  {                      m_automap.RunToCompletion();                  }              }              else if (e.KeyCode == Keys.F11)              {                  // for diagnostic purposes' allow single stepping                  m_automap.Step();              }              else if (e.KeyCode >= Keys.NumPad0 && e.KeyCode <= Keys.NumPad9)              {                  // the numeric keypad keys allow rooms to be quickly selected or added.                  CompassPoint? compassPoint = null;                  switch (e.KeyCode)                  {                      case Keys.NumPad8:                          compassPoint = CompassPoint.North;                          break;                      case Keys.NumPad9:                          compassPoint = CompassPoint.NorthEast;                          break;                      case Keys.NumPad6:                          compassPoint = CompassPoint.East;                          break;                      case Keys.NumPad3:                          compassPoint = CompassPoint.SouthEast;                          break;                      case Keys.NumPad2:                          compassPoint = CompassPoint.South;                          break;                      case Keys.NumPad1:                          compassPoint = CompassPoint.SouthWest;                          break;                      case Keys.NumPad4:                          compassPoint = CompassPoint.West;                          break;                      case Keys.NumPad7:                          compassPoint = CompassPoint.NorthWest;                          break;                  }                  if (compassPoint.HasValue)                  {                      if (!SelectRoomRelativeToSelectedRoom(compassPoint.Value))                      {                          if (Control.ModifierKeys == Settings.KeypadNavigationCreationModifier)                          {                              AddOrConnectRoomRelativeToSelectedRoom(compassPoint.Value);                          }                          else if (Control.ModifierKeys == Settings.KeypadNavigationUnexploredModifier)                          {                              AddUnexploredConnectionToSelectedRoom(compassPoint.Value);                          }                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.Enter)              {                  if (SelectedElement == null)                  {                      // select the room closest to the center of the viewport                      var viewportCenter = Viewport.Center;                      Room closestRoom = null;                      var closestDistance = float.MaxValue;                      foreach (var element in Project.Current.Elements)                      {                          if (element is Room)                          {                              var room = (Room)element;                              var roomCenter = room.InnerBounds.Center;                              var distance = roomCenter.Distance(viewportCenter);                              if (distance < closestDistance)                              {                                  closestRoom = room;                                  closestDistance = distance;                              }                          }                      }                      SelectedElement = closestRoom;                      EnsureVisible(SelectedElement);                  }                  else if (HasSingleSelectedElement && SelectedElement.HasDialog)                  {                      SelectedElement.ShowDialog();                  }              }              else if (e.KeyCode == Keys.Escape && SelectedElement != null)              {                  // clear selection                  SelectedElement = null;              }              else if (e.KeyCode == Keys.A && e.Control)              {                  // select all                  SelectAll();              }              else if (e.KeyCode == Keys.Add || e.KeyCode == Keys.Oemplus)              {                  ZoomIn();              }              else if (e.KeyCode == Keys.Subtract || e.KeyCode == Keys.OemMinus)              {                  ZoomOut();              }              else if (e.KeyCode == Keys.Home)              {                  if (e.Control)                  {                      ZoomToFit();                  }                  else                  {                      ResetZoomOrigin();                  }              }              else if (e.KeyCode == Keys.Up || e.KeyCode == Keys.Down)              {                  Origin += new Vector(0' (e.KeyCode == Keys.Down ? 1 : -1) * Viewport.Height / (e.Shift ? 5 : 10));              }              else if (e.KeyCode == Keys.Left || e.KeyCode == Keys.Right)              {                  Origin += new Vector((e.KeyCode == Keys.Right ? 1 : -1) * Viewport.Width / (e.Shift ? 5 : 10)' 0);              }              else if (e.KeyCode == Keys.R)              {                  AddRoom(true);              }              else if (e.KeyCode == Keys.T)              {                  if (NewConnectionStyle == ConnectionStyle.Solid)                  {                      NewConnectionStyle = ConnectionStyle.Dashed;                  }                  else                  {                      NewConnectionStyle = ConnectionStyle.Solid;                  }                  ApplyConnectionStyle(NewConnectionStyle);              }              else if (e.KeyCode == Keys.A)              {                  if (NewConnectionFlow == ConnectionFlow.TwoWay)                  {                      NewConnectionFlow = ConnectionFlow.OneWay;                  }                  else                  {                      NewConnectionFlow = ConnectionFlow.TwoWay;                  }                  ApplyConnectionFlow(NewConnectionFlow);              }              else if (e.KeyCode == Keys.P)              {                  ApplyNewPlainConnectionSettings();              }              else if (e.KeyCode == Keys.U)              {                  NewConnectionLabel = ConnectionLabel.Up;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.D)              {                  NewConnectionLabel = ConnectionLabel.Down;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.I)              {                  NewConnectionLabel = ConnectionLabel.In;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.O)              {                  NewConnectionLabel = ConnectionLabel.Out;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.V)              {                  ReverseLineDirection();              }              else if (e.KeyCode == Keys.K)              {                  foreach (var element in m_selectedElements)                  {                      if (element is Room)                      {                          var room = (Room)element;                          room.IsDark = !room.IsDark;                      }                  }              }              else if (e.KeyCode == Keys.F1 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugShowFPS = !Settings.DebugShowFPS;                  Invalidate();              }              else if (e.KeyCode == Keys.F2 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableElementRendering = !Settings.DebugDisableElementRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F3 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableLineRendering = !Settings.DebugDisableLineRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F4 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableTextRendering = !Settings.DebugDisableTextRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F5 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableGridPolyline = !Settings.DebugDisableGridPolyline;                  Invalidate();              }              else if (e.KeyCode == Keys.F5)              {                  // for diagnostic purposes' cancel single stepping                  if (IsAutomapping)                  {                      m_automap.RunToCompletion();                  }              }              else if (e.KeyCode == Keys.F11)              {                  // for diagnostic purposes' allow single stepping                  m_automap.Step();              }              else if (e.KeyCode >= Keys.NumPad0 && e.KeyCode <= Keys.NumPad9)              {                  // the numeric keypad keys allow rooms to be quickly selected or added.                  CompassPoint? compassPoint = null;                  switch (e.KeyCode)                  {                      case Keys.NumPad8:                          compassPoint = CompassPoint.North;                          break;                      case Keys.NumPad9:                          compassPoint = CompassPoint.NorthEast;                          break;                      case Keys.NumPad6:                          compassPoint = CompassPoint.East;                          break;                      case Keys.NumPad3:                          compassPoint = CompassPoint.SouthEast;                          break;                      case Keys.NumPad2:                          compassPoint = CompassPoint.South;                          break;                      case Keys.NumPad1:                          compassPoint = CompassPoint.SouthWest;                          break;                      case Keys.NumPad4:                          compassPoint = CompassPoint.West;                          break;                      case Keys.NumPad7:                          compassPoint = CompassPoint.NorthWest;                          break;                  }                  if (compassPoint.HasValue)                  {                      if (!SelectRoomRelativeToSelectedRoom(compassPoint.Value))                      {                          if (Control.ModifierKeys == Settings.KeypadNavigationCreationModifier)                          {                              AddOrConnectRoomRelativeToSelectedRoom(compassPoint.Value);                          }                          else if (Control.ModifierKeys == Settings.KeypadNavigationUnexploredModifier)                          {                              AddUnexploredConnectionToSelectedRoom(compassPoint.Value);                          }                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.Enter)              {                  if (SelectedElement == null)                  {                      // select the room closest to the center of the viewport                      var viewportCenter = Viewport.Center;                      Room closestRoom = null;                      var closestDistance = float.MaxValue;                      foreach (var element in Project.Current.Elements)                      {                          if (element is Room)                          {                              var room = (Room)element;                              var roomCenter = room.InnerBounds.Center;                              var distance = roomCenter.Distance(viewportCenter);                              if (distance < closestDistance)                              {                                  closestRoom = room;                                  closestDistance = distance;                              }                          }                      }                      SelectedElement = closestRoom;                      EnsureVisible(SelectedElement);                  }                  else if (HasSingleSelectedElement && SelectedElement.HasDialog)                  {                      SelectedElement.ShowDialog();                  }              }              else if (e.KeyCode == Keys.Escape && SelectedElement != null)              {                  // clear selection                  SelectedElement = null;              }              else if (e.KeyCode == Keys.A && e.Control)              {                  // select all                  SelectAll();              }              else if (e.KeyCode == Keys.Add || e.KeyCode == Keys.Oemplus)              {                  ZoomIn();              }              else if (e.KeyCode == Keys.Subtract || e.KeyCode == Keys.OemMinus)              {                  ZoomOut();              }              else if (e.KeyCode == Keys.Home)              {                  if (e.Control)                  {                      ZoomToFit();                  }                  else                  {                      ResetZoomOrigin();                  }              }              else if (e.KeyCode == Keys.Up || e.KeyCode == Keys.Down)              {                  Origin += new Vector(0' (e.KeyCode == Keys.Down ? 1 : -1) * Viewport.Height / (e.Shift ? 5 : 10));              }              else if (e.KeyCode == Keys.Left || e.KeyCode == Keys.Right)              {                  Origin += new Vector((e.KeyCode == Keys.Right ? 1 : -1) * Viewport.Width / (e.Shift ? 5 : 10)' 0);              }              else if (e.KeyCode == Keys.R)              {                  AddRoom(true);              }              else if (e.KeyCode == Keys.T)              {                  if (NewConnectionStyle == ConnectionStyle.Solid)                  {                      NewConnectionStyle = ConnectionStyle.Dashed;                  }                  else                  {                      NewConnectionStyle = ConnectionStyle.Solid;                  }                  ApplyConnectionStyle(NewConnectionStyle);              }              else if (e.KeyCode == Keys.A)              {                  if (NewConnectionFlow == ConnectionFlow.TwoWay)                  {                      NewConnectionFlow = ConnectionFlow.OneWay;                  }                  else                  {                      NewConnectionFlow = ConnectionFlow.TwoWay;                  }                  ApplyConnectionFlow(NewConnectionFlow);              }              else if (e.KeyCode == Keys.P)              {                  ApplyNewPlainConnectionSettings();              }              else if (e.KeyCode == Keys.U)              {                  NewConnectionLabel = ConnectionLabel.Up;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.D)              {                  NewConnectionLabel = ConnectionLabel.Down;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.I)              {                  NewConnectionLabel = ConnectionLabel.In;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.O)              {                  NewConnectionLabel = ConnectionLabel.Out;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.V)              {                  ReverseLineDirection();              }              else if (e.KeyCode == Keys.K)              {                  foreach (var element in m_selectedElements)                  {                      if (element is Room)                      {                          var room = (Room)element;                          room.IsDark = !room.IsDark;                      }                  }              }              else if (e.KeyCode == Keys.F1 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugShowFPS = !Settings.DebugShowFPS;                  Invalidate();              }              else if (e.KeyCode == Keys.F2 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableElementRendering = !Settings.DebugDisableElementRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F3 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableLineRendering = !Settings.DebugDisableLineRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F4 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableTextRendering = !Settings.DebugDisableTextRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F5 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableGridPolyline = !Settings.DebugDisableGridPolyline;                  Invalidate();              }              else if (e.KeyCode == Keys.F5)              {                  // for diagnostic purposes' cancel single stepping                  if (IsAutomapping)                  {                      m_automap.RunToCompletion();                  }              }              else if (e.KeyCode == Keys.F11)              {                  // for diagnostic purposes' allow single stepping                  m_automap.Step();              }              else if (e.KeyCode >= Keys.NumPad0 && e.KeyCode <= Keys.NumPad9)              {                  // the numeric keypad keys allow rooms to be quickly selected or added.                  CompassPoint? compassPoint = null;                  switch (e.KeyCode)                  {                      case Keys.NumPad8:                          compassPoint = CompassPoint.North;                          break;                      case Keys.NumPad9:                          compassPoint = CompassPoint.NorthEast;                          break;                      case Keys.NumPad6:                          compassPoint = CompassPoint.East;                          break;                      case Keys.NumPad3:                          compassPoint = CompassPoint.SouthEast;                          break;                      case Keys.NumPad2:                          compassPoint = CompassPoint.South;                          break;                      case Keys.NumPad1:                          compassPoint = CompassPoint.SouthWest;                          break;                      case Keys.NumPad4:                          compassPoint = CompassPoint.West;                          break;                      case Keys.NumPad7:                          compassPoint = CompassPoint.NorthWest;                          break;                  }                  if (compassPoint.HasValue)                  {                      if (!SelectRoomRelativeToSelectedRoom(compassPoint.Value))                      {                          if (Control.ModifierKeys == Settings.KeypadNavigationCreationModifier)                          {                              AddOrConnectRoomRelativeToSelectedRoom(compassPoint.Value);                          }                          else if (Control.ModifierKeys == Settings.KeypadNavigationUnexploredModifier)                          {                              AddUnexploredConnectionToSelectedRoom(compassPoint.Value);                          }                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The following statement contains a magic number: if (e.KeyCode == Keys.Enter)              {                  if (SelectedElement == null)                  {                      // select the room closest to the center of the viewport                      var viewportCenter = Viewport.Center;                      Room closestRoom = null;                      var closestDistance = float.MaxValue;                      foreach (var element in Project.Current.Elements)                      {                          if (element is Room)                          {                              var room = (Room)element;                              var roomCenter = room.InnerBounds.Center;                              var distance = roomCenter.Distance(viewportCenter);                              if (distance < closestDistance)                              {                                  closestRoom = room;                                  closestDistance = distance;                              }                          }                      }                      SelectedElement = closestRoom;                      EnsureVisible(SelectedElement);                  }                  else if (HasSingleSelectedElement && SelectedElement.HasDialog)                  {                      SelectedElement.ShowDialog();                  }              }              else if (e.KeyCode == Keys.Escape && SelectedElement != null)              {                  // clear selection                  SelectedElement = null;              }              else if (e.KeyCode == Keys.A && e.Control)              {                  // select all                  SelectAll();              }              else if (e.KeyCode == Keys.Add || e.KeyCode == Keys.Oemplus)              {                  ZoomIn();              }              else if (e.KeyCode == Keys.Subtract || e.KeyCode == Keys.OemMinus)              {                  ZoomOut();              }              else if (e.KeyCode == Keys.Home)              {                  if (e.Control)                  {                      ZoomToFit();                  }                  else                  {                      ResetZoomOrigin();                  }              }              else if (e.KeyCode == Keys.Up || e.KeyCode == Keys.Down)              {                  Origin += new Vector(0' (e.KeyCode == Keys.Down ? 1 : -1) * Viewport.Height / (e.Shift ? 5 : 10));              }              else if (e.KeyCode == Keys.Left || e.KeyCode == Keys.Right)              {                  Origin += new Vector((e.KeyCode == Keys.Right ? 1 : -1) * Viewport.Width / (e.Shift ? 5 : 10)' 0);              }              else if (e.KeyCode == Keys.R)              {                  AddRoom(true);              }              else if (e.KeyCode == Keys.T)              {                  if (NewConnectionStyle == ConnectionStyle.Solid)                  {                      NewConnectionStyle = ConnectionStyle.Dashed;                  }                  else                  {                      NewConnectionStyle = ConnectionStyle.Solid;                  }                  ApplyConnectionStyle(NewConnectionStyle);              }              else if (e.KeyCode == Keys.A)              {                  if (NewConnectionFlow == ConnectionFlow.TwoWay)                  {                      NewConnectionFlow = ConnectionFlow.OneWay;                  }                  else                  {                      NewConnectionFlow = ConnectionFlow.TwoWay;                  }                  ApplyConnectionFlow(NewConnectionFlow);              }              else if (e.KeyCode == Keys.P)              {                  ApplyNewPlainConnectionSettings();              }              else if (e.KeyCode == Keys.U)              {                  NewConnectionLabel = ConnectionLabel.Up;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.D)              {                  NewConnectionLabel = ConnectionLabel.Down;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.I)              {                  NewConnectionLabel = ConnectionLabel.In;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.O)              {                  NewConnectionLabel = ConnectionLabel.Out;                  ApplyConnectionLabel(NewConnectionLabel);              }              else if (e.KeyCode == Keys.V)              {                  ReverseLineDirection();              }              else if (e.KeyCode == Keys.K)              {                  foreach (var element in m_selectedElements)                  {                      if (element is Room)                      {                          var room = (Room)element;                          room.IsDark = !room.IsDark;                      }                  }              }              else if (e.KeyCode == Keys.F1 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugShowFPS = !Settings.DebugShowFPS;                  Invalidate();              }              else if (e.KeyCode == Keys.F2 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableElementRendering = !Settings.DebugDisableElementRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F3 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableLineRendering = !Settings.DebugDisableLineRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F4 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableTextRendering = !Settings.DebugDisableTextRendering;                  Invalidate();              }              else if (e.KeyCode == Keys.F5 && Control.ModifierKeys == Keys.Control)              {                  Settings.DebugDisableGridPolyline = !Settings.DebugDisableGridPolyline;                  Invalidate();              }              else if (e.KeyCode == Keys.F5)              {                  // for diagnostic purposes' cancel single stepping                  if (IsAutomapping)                  {                      m_automap.RunToCompletion();                  }              }              else if (e.KeyCode == Keys.F11)              {                  // for diagnostic purposes' allow single stepping                  m_automap.Step();              }              else if (e.KeyCode >= Keys.NumPad0 && e.KeyCode <= Keys.NumPad9)              {                  // the numeric keypad keys allow rooms to be quickly selected or added.                  CompassPoint? compassPoint = null;                  switch (e.KeyCode)                  {                      case Keys.NumPad8:                          compassPoint = CompassPoint.North;                          break;                      case Keys.NumPad9:                          compassPoint = CompassPoint.NorthEast;                          break;                      case Keys.NumPad6:                          compassPoint = CompassPoint.East;                          break;                      case Keys.NumPad3:                          compassPoint = CompassPoint.SouthEast;                          break;                      case Keys.NumPad2:                          compassPoint = CompassPoint.South;                          break;                      case Keys.NumPad1:                          compassPoint = CompassPoint.SouthWest;                          break;                      case Keys.NumPad4:                          compassPoint = CompassPoint.West;                          break;                      case Keys.NumPad7:                          compassPoint = CompassPoint.NorthWest;                          break;                  }                  if (compassPoint.HasValue)                  {                      if (!SelectRoomRelativeToSelectedRoom(compassPoint.Value))                      {                          if (Control.ModifierKeys == Settings.KeypadNavigationCreationModifier)                          {                              AddOrConnectRoomRelativeToSelectedRoom(compassPoint.Value);                          }                          else if (Control.ModifierKeys == Settings.KeypadNavigationUnexploredModifier)                          {                              AddUnexploredConnectionToSelectedRoom(compassPoint.Value);                          }                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddOrConnectRoomRelativeToSelectedRoom,The following statement contains a magic number: if (SelectedElement is Room)              {                  var room = (Room)SelectedElement;                  var rect = room.InnerBounds;                  rect.Inflate(Settings.PreferredDistanceBetweenRooms + room.Width / 2' Settings.PreferredDistanceBetweenRooms + room.Height / 2);                  var centerOfNewRoom = rect.GetCorner(compassPoint);                    var existing = HitTestElement(centerOfNewRoom' false);                  if (existing is Room)                  {                      // just connect the rooms together                      AddConnection(room' compassPoint' (Room)existing' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = existing;                      EnsureVisible(SelectedElement);                  }                  else                  {                      // new room entirely                      var newRoom = new Room(Project.Current);                        newRoom.Position = new Vector(centerOfNewRoom.X - room.Width / 2' centerOfNewRoom.Y - room.Height / 2); ;                      newRoom.Size = room.Size;                        Project.Current.Elements.Add(newRoom);                      AddConnection(room' compassPoint' newRoom' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = newRoom;                      EnsureVisible(SelectedElement);                      Refresh();                      newRoom.ShowDialog();                  }                  return true;              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddOrConnectRoomRelativeToSelectedRoom,The following statement contains a magic number: if (SelectedElement is Room)              {                  var room = (Room)SelectedElement;                  var rect = room.InnerBounds;                  rect.Inflate(Settings.PreferredDistanceBetweenRooms + room.Width / 2' Settings.PreferredDistanceBetweenRooms + room.Height / 2);                  var centerOfNewRoom = rect.GetCorner(compassPoint);                    var existing = HitTestElement(centerOfNewRoom' false);                  if (existing is Room)                  {                      // just connect the rooms together                      AddConnection(room' compassPoint' (Room)existing' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = existing;                      EnsureVisible(SelectedElement);                  }                  else                  {                      // new room entirely                      var newRoom = new Room(Project.Current);                        newRoom.Position = new Vector(centerOfNewRoom.X - room.Width / 2' centerOfNewRoom.Y - room.Height / 2); ;                      newRoom.Size = room.Size;                        Project.Current.Elements.Add(newRoom);                      AddConnection(room' compassPoint' newRoom' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = newRoom;                      EnsureVisible(SelectedElement);                      Refresh();                      newRoom.ShowDialog();                  }                  return true;              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddOrConnectRoomRelativeToSelectedRoom,The following statement contains a magic number: if (SelectedElement is Room)              {                  var room = (Room)SelectedElement;                  var rect = room.InnerBounds;                  rect.Inflate(Settings.PreferredDistanceBetweenRooms + room.Width / 2' Settings.PreferredDistanceBetweenRooms + room.Height / 2);                  var centerOfNewRoom = rect.GetCorner(compassPoint);                    var existing = HitTestElement(centerOfNewRoom' false);                  if (existing is Room)                  {                      // just connect the rooms together                      AddConnection(room' compassPoint' (Room)existing' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = existing;                      EnsureVisible(SelectedElement);                  }                  else                  {                      // new room entirely                      var newRoom = new Room(Project.Current);                        newRoom.Position = new Vector(centerOfNewRoom.X - room.Width / 2' centerOfNewRoom.Y - room.Height / 2); ;                      newRoom.Size = room.Size;                        Project.Current.Elements.Add(newRoom);                      AddConnection(room' compassPoint' newRoom' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = newRoom;                      EnsureVisible(SelectedElement);                      Refresh();                      newRoom.ShowDialog();                  }                  return true;              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddOrConnectRoomRelativeToSelectedRoom,The following statement contains a magic number: if (SelectedElement is Room)              {                  var room = (Room)SelectedElement;                  var rect = room.InnerBounds;                  rect.Inflate(Settings.PreferredDistanceBetweenRooms + room.Width / 2' Settings.PreferredDistanceBetweenRooms + room.Height / 2);                  var centerOfNewRoom = rect.GetCorner(compassPoint);                    var existing = HitTestElement(centerOfNewRoom' false);                  if (existing is Room)                  {                      // just connect the rooms together                      AddConnection(room' compassPoint' (Room)existing' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = existing;                      EnsureVisible(SelectedElement);                  }                  else                  {                      // new room entirely                      var newRoom = new Room(Project.Current);                        newRoom.Position = new Vector(centerOfNewRoom.X - room.Width / 2' centerOfNewRoom.Y - room.Height / 2); ;                      newRoom.Size = room.Size;                        Project.Current.Elements.Add(newRoom);                      AddConnection(room' compassPoint' newRoom' CompassPointHelper.GetOpposite(compassPoint));                      SelectedElement = newRoom;                      EnsureVisible(SelectedElement);                      Refresh();                      newRoom.ShowDialog();                  }                  return true;              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddRoom,The following statement contains a magic number: if (atCursor && ClientRectangle.Contains(PointToClient(Control.MousePosition)))              {                  // center on the mouse cursor                  pos = ClientToCanvas(PointToClient(Control.MousePosition));              }              else              {                  // center on the origin                  pos = new Vector(Origin.X - room.Size.X / 2' Origin.Y - room.Size.Y / 2);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddRoom,The following statement contains a magic number: if (atCursor && ClientRectangle.Contains(PointToClient(Control.MousePosition)))              {                  // center on the mouse cursor                  pos = ClientToCanvas(PointToClient(Control.MousePosition));              }              else              {                  // center on the origin                  pos = new Vector(Origin.X - room.Size.X / 2' Origin.Y - room.Size.Y / 2);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddRoom,The following statement contains a magic number: pos -= room.Size / 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddRoom,The following statement contains a magic number: while (clash)              {                  clash = false;                  foreach (var element in Project.Current.Elements)                  {                      if (element is IMoveable && ((IMoveable)element).Position == pos)                      {                          pos.X += Math.Max(2' Settings.GridSize);                          pos.Y += Math.Max(2' Settings.GridSize);                          clash = true;                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddRoom,The following statement contains a magic number: while (clash)              {                  clash = false;                  foreach (var element in Project.Current.Elements)                  {                      if (element is IMoveable && ((IMoveable)element).Position == pos)                      {                          pos.X += Math.Max(2' Settings.GridSize);                          pos.Y += Math.Max(2' Settings.GridSize);                          clash = true;                      }                  }              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The following statement contains a magic number: if (!Settings.InfiniteScrollBounds && topLeft.Y <= clientBounds.Top && topLeft.Y + displaySize.Y >= clientBounds.Bottom)              {                  m_vScrollBar.Enabled = false;              }              else              {                  m_vScrollBar.Enabled = true;                  m_vScrollBar.Minimum = (int)Math.Min(topLeft.Y' clientBounds.Top);                  m_vScrollBar.Maximum = (int)Math.Max(topLeft.Y + displaySize.Y' clientBounds.Bottom) - 1; // -1 since Maximum is actually maximum value + 1; see MSDN.                  m_vScrollBar.Value = (int)Math.Max(m_vScrollBar.Minimum' Math.Min(m_vScrollBar.Maximum' topLeft.Y));                  m_vScrollBar.LargeChange = (int)displaySize.Y;                  m_vScrollBar.SmallChange = (int)(displaySize.Y / 10);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateScrollBars,The following statement contains a magic number: if (!Settings.InfiniteScrollBounds && topLeft.X <= clientBounds.Left && topLeft.X + displaySize.X >= clientBounds.Right)              {                  m_hScrollBar.Enabled = false;              }              else              {                  m_hScrollBar.Enabled = true;                  m_hScrollBar.Minimum = (int)Math.Min(topLeft.X' clientBounds.Left);                  m_hScrollBar.Maximum = (int)Math.Max(topLeft.X + displaySize.X' clientBounds.Right) - 1; // -1 since Maximum is actually maximum value + 1; see MSDN.                  m_hScrollBar.Value = (int)Math.Max(m_hScrollBar.Minimum' Math.Min(m_hScrollBar.Maximum' topLeft.X));                  m_hScrollBar.LargeChange = (int)displaySize.X;                  m_hScrollBar.SmallChange = (int)(displaySize.X / 10);              }
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Reset,The following statement contains a magic number: m_newRoomSize = new Vector(Settings.GridSize * 3' Settings.GridSize * 2);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Reset,The following statement contains a magic number: m_newRoomSize = new Vector(Settings.GridSize * 3' Settings.GridSize * 2);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_vScrollBar.Location = new System.Drawing.Point(403' 128);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_vScrollBar.Location = new System.Drawing.Point(403' 128);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_vScrollBar.Size = new System.Drawing.Size(16' 191);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_vScrollBar.Size = new System.Drawing.Size(16' 191);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_hScrollBar.Location = new System.Drawing.Point(0' 319);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_hScrollBar.Size = new System.Drawing.Size(403' 16);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_hScrollBar.Size = new System.Drawing.Size(403' 16);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_cornerPanel.Location = new System.Drawing.Point(403' 319);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_cornerPanel.Location = new System.Drawing.Point(403' 319);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_cornerPanel.Size = new System.Drawing.Size(16' 16);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_cornerPanel.Size = new System.Drawing.Size(16' 16);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_cornerPanel.TabIndex = 2;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_minimap.Location = new System.Drawing.Point(222' 0);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_minimap.Size = new System.Drawing.Size(197' 128);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_minimap.Size = new System.Drawing.Size(197' 128);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.m_minimap.TabIndex = 6;
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(419' 335);
Magic Number,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(419' 335);
Magic Number,Trizbort,CompassPointHelper,C:\repos\genstein_trizbort\CompassPoint.cs,GetOpposite,The following statement contains a magic number: for (int index = 0; index < (int)(CompassPoint.Max - CompassPoint.Min + 1) / 2; ++index)              {                  point = RotateClockwise(point);              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Split,The following statement contains a magic number: foreach (var previousSegment in context.LinesDrawn)              {                  float amount = Math.Max(1'Settings.LineWidth) * 3;                  List<LineSegmentIntersect> intersects;                  if (lineSegment.Intersect(previousSegment' true' out intersects))                  {                      foreach (var intersect in intersects)                      {                          switch (intersect.Type)                          {                              case LineSegmentIntersectType.MidPointA:                                  var one = new LineSegment(lineSegment.Start' intersect.Position);                                  if (one.Shorten(amount))                                  {                                      if (!Split(one' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(one);                                      }                                  }                                  var two = new LineSegment(intersect.Position' lineSegment.End);                                  if (two.Forshorten(amount))                                  {                                      if (!Split(two' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(two);                                      }                                  }                                  break;                                case LineSegmentIntersectType.StartA:                                  if (lineSegment.Forshorten(amount))                                  {                                      if (!Split(lineSegment' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(lineSegment);                                      }                                  }                                  break;                                case LineSegmentIntersectType.EndA:                                  if (lineSegment.Shorten(amount))                                  {                                      if (!Split(lineSegment' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(lineSegment);                                      }                                  }                                  break;                          }                            // don't check other intersects;                          // we've already split this line' and tested the parts for further intersects.                          return newSegments != null;                      }                  }                }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Draw,The following statement contains a magic number: foreach (var lineSegment in lineSegments)              {                  var pen = palette.GetLinePen(context.Selected' context.Hover' Style == ConnectionStyle.Dashed);                  if (!Settings.DebugDisableLineRendering)                  {                      graphics.DrawLine(pen' lineSegment.Start.ToPointF()' lineSegment.End.ToPointF());                  }                  var delta = lineSegment.Delta;                  if (Flow == ConnectionFlow.OneWay && delta.Length > Settings.ConnectionArrowSize)                  {                      var brush = palette.GetLineBrush(context.Selected' context.Hover);                      Drawing.DrawChevron(graphics' lineSegment.Mid.ToPointF()' (float)(Math.Atan2(delta.Y' delta.X) / Math.PI * 180)' Settings.ConnectionArrowSize' brush);                  }                  context.LinesDrawn.Add(lineSegment);              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (!string.IsNullOrEmpty(MidText))              {                  float totalLength = 0;                  foreach (var lineSegment in lineSegments)                  {                      totalLength += lineSegment.Length;                  }                  float middle = totalLength / 2;                  foreach (var lineSegment in lineSegments)                  {                      var length = lineSegment.Length;                      if (middle > length)                      {                          middle -= length;                      }                      else                      {                          middle /= length;                          var pos = lineSegment.Start + lineSegment.Delta * middle;                          var fakeSegment = new LineSegment(pos - lineSegment.Delta * Numeric.Small' pos + lineSegment.Delta * Numeric.Small);                          Annotate(graphics' palette' fakeSegment' m_midText' StringAlignment.Center);                          break;                      }                  }              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: var angle = (float)-(Math.Atan2(delta.Y' delta.X) / Math.PI * 180.0);
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (Numeric.InRange(angle' 0' 45))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' 45' 90))              {                  compassPoint = CompassPoint.SouthEast;              }              else if (Numeric.InRange(angle' 90' 135))              {                  compassPoint = CompassPoint.SouthWest;              }              else if (Numeric.InRange(angle' 135' 180))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' 0' -45))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -45' -90))              {                  compassPoint = CompassPoint.NorthEast;              }              else if (Numeric.InRange(angle' -90' -135))              {                  compassPoint = CompassPoint.NorthWest;              }              else if (Numeric.InRange(angle' -135' -180))              {                  compassPoint = CompassPoint.SouthEast;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (alignment == StringAlignment.Center && Numeric.InRange(angle' -10' 10))              {                  // HACK: if the line segment is pretty horizontal and we're drawing mid-line text'                  // move text below the line to get it out of the way of any labels at the ends'                  // and center the text so it fits onto a line between two proximal rooms.                  pos = bounds.GetCorner(CompassPoint.South);                  format.Alignment = XStringAlignment.Center;                  format.LineAlignment = XLineAlignment.Near;              }
Magic Number,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Annotate,The following statement contains a magic number: if (alignment == StringAlignment.Center && Numeric.InRange(angle' -10' 10))              {                  // HACK: if the line segment is pretty horizontal and we're drawing mid-line text'                  // move text below the line to get it out of the way of any labels at the ends'                  // and center the text so it fits onto a line between two proximal rooms.                  pos = bounds.GetCorner(CompassPoint.South);                  format.Alignment = XStringAlignment.Center;                  format.LineAlignment = XLineAlignment.Near;              }
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(348' 208);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(348' 208);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.TabIndex = 3;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(267' 208);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(267' 208);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.TabIndex = 2;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oneWayCheckBox.Location = new System.Drawing.Point(9' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oneWayCheckBox.Location = new System.Drawing.Point(9' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oneWayCheckBox.Size = new System.Drawing.Size(103' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oneWayCheckBox.Size = new System.Drawing.Size(103' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dottedCheckBox.Location = new System.Drawing.Point(10' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dottedCheckBox.Location = new System.Drawing.Point(10' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dottedCheckBox.Size = new System.Drawing.Size(59' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dottedCheckBox.Size = new System.Drawing.Size(59' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 90);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(12' 90);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(411' 106);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(411' 106);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endLabel.Location = new System.Drawing.Point(213' 72);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endLabel.Location = new System.Drawing.Point(213' 72);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endLabel.Size = new System.Drawing.Size(25' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endLabel.Size = new System.Drawing.Size(25' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endLabel.TabIndex = 9;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endTextBox.Location = new System.Drawing.Point(245' 69);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endTextBox.Location = new System.Drawing.Point(245' 69);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_endTextBox.TabIndex = 10;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(201' 46);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(201' 46);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(37' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(37' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 7;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(210' 20);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(210' 20);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(31' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(31' 13);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 5;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_middleTextBox.Location = new System.Drawing.Point(245' 43);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_middleTextBox.Location = new System.Drawing.Point(245' 43);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_middleTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_middleTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_middleTextBox.TabIndex = 8;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startTextBox.Location = new System.Drawing.Point(245' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startTextBox.Location = new System.Drawing.Point(245' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startTextBox.Size = new System.Drawing.Size(156' 21);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_startTextBox.TabIndex = 6;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_customRadioButton.Location = new System.Drawing.Point(9' 70);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_customRadioButton.Location = new System.Drawing.Point(9' 70);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_customRadioButton.Size = new System.Drawing.Size(61' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_customRadioButton.Size = new System.Drawing.Size(61' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_customRadioButton.TabIndex = 4;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oiRadioButton.Location = new System.Drawing.Point(95' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oiRadioButton.Location = new System.Drawing.Point(95' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oiRadioButton.Size = new System.Drawing.Size(57' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oiRadioButton.Size = new System.Drawing.Size(57' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_oiRadioButton.TabIndex = 3;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_ioRadioButton.Location = new System.Drawing.Point(95' 18);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_ioRadioButton.Location = new System.Drawing.Point(95' 18);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_ioRadioButton.Size = new System.Drawing.Size(57' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_ioRadioButton.Size = new System.Drawing.Size(57' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_ioRadioButton.TabIndex = 2;
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_duRadioButton.Location = new System.Drawing.Point(9' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_duRadioButton.Location = new System.Drawing.Point(9' 44);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_duRadioButton.Size = new System.Drawing.Size(69' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_duRadioButton.Size = new System.Drawing.Size(69' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_udRadioButton.Location = new System.Drawing.Point(9' 18);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_udRadioButton.Location = new System.Drawing.Point(9' 18);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_udRadioButton.Size = new System.Drawing.Size(69' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_udRadioButton.Size = new System.Drawing.Size(69' 17);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(12' 10);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(12' 10);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(411' 72);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(411' 72);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(435' 243);
Magic Number,Trizbort,ConnectionPropertiesDialog,C:\repos\genstein_trizbort\ConnectionPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(435' 243);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(13' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(481' 57);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(481' 57);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(16' 92);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(16' 92);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(132' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(132' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_transcriptContextTextBox.Location = new System.Drawing.Point(43' 108);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_transcriptContextTextBox.Location = new System.Drawing.Point(43' 108);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_transcriptContextTextBox.Size = new System.Drawing.Size(451' 88);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_transcriptContextTextBox.Size = new System.Drawing.Size(451' 88);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_transcriptContextTextBox.TabIndex = 2;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(16' 208);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(16' 208);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(132' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(132' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomNamesListBox.Location = new System.Drawing.Point(43' 248);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomNamesListBox.Location = new System.Drawing.Point(43' 248);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomNamesListBox.Size = new System.Drawing.Size(161' 95);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomNamesListBox.Size = new System.Drawing.Size(161' 95);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomNamesListBox.TabIndex = 5;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(43' 229);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(43' 229);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 4;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(207' 229);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(207' 229);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(60' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(60' 13);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 6;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomDescriptionTextBox.Location = new System.Drawing.Point(210' 248);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomDescriptionTextBox.Location = new System.Drawing.Point(210' 248);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomDescriptionTextBox.Size = new System.Drawing.Size(284' 95);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomDescriptionTextBox.Size = new System.Drawing.Size(284' 95);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_roomDescriptionTextBox.TabIndex = 7;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_thisRoomButton.Location = new System.Drawing.Point(65' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_thisRoomButton.Location = new System.Drawing.Point(65' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_thisRoomButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_thisRoomButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_thisRoomButton.TabIndex = 8;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_newRoomButton.Location = new System.Drawing.Point(210' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_newRoomButton.Location = new System.Drawing.Point(210' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_newRoomButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_newRoomButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_newRoomButton.TabIndex = 9;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareAnyMoreButton.Location = new System.Drawing.Point(355' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareAnyMoreButton.Location = new System.Drawing.Point(355' 362);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareAnyMoreButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareAnyMoreButton.Size = new System.Drawing.Size(139' 24);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareAnyMoreButton.TabIndex = 10;
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(506' 398);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(506' 398);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(514' 425);
Magic Number,Trizbort,DisambiguateRoomsDialog,C:\repos\genstein_trizbort\DisambiguateRoomsDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(514' 425);
Magic Number,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The following statement contains a magic number: if (restrictedBounds.Width > viewport.Width)              {                  restrictedBounds.Inflate(-viewport.Width / 2' 0);              }              else              {                  restrictedBounds.X += restrictedBounds.Width / 2;                  restrictedBounds.Width = 0;              }
Magic Number,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The following statement contains a magic number: if (restrictedBounds.Width > viewport.Width)              {                  restrictedBounds.Inflate(-viewport.Width / 2' 0);              }              else              {                  restrictedBounds.X += restrictedBounds.Width / 2;                  restrictedBounds.Width = 0;              }
Magic Number,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The following statement contains a magic number: if (restrictedBounds.Height > viewport.Height)              {                  restrictedBounds.Inflate(0' -viewport.Height / 2);              }              else              {                  restrictedBounds.Y += restrictedBounds.Height / 2;                  restrictedBounds.Height = 0;              }
Magic Number,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,SetCanvasOrigin,The following statement contains a magic number: if (restrictedBounds.Height > viewport.Height)              {                  restrictedBounds.Inflate(0' -viewport.Height / 2);              }              else              {                  restrictedBounds.Y += restrictedBounds.Height / 2;                  restrictedBounds.Height = 0;              }
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(187' 45);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(187' 45);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(217' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(217' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(187' 78);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(187' 78);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(175' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(175' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(209' 278);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(209' 278);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(135' 23);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(135' 23);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.TabIndex = 7;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareCheckBox.Location = new System.Drawing.Point(189' 204);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareCheckBox.Location = new System.Drawing.Point(189' 204);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareCheckBox.Size = new System.Drawing.Size(215' 17);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareCheckBox.Size = new System.Drawing.Size(215' 17);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_dontCareCheckBox.TabIndex = 6;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(350' 278);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(350' 278);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(101' 23);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(101' 23);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.TabIndex = 8;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(164' 313);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.Size = new System.Drawing.Size(164' 313);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.pictureBox1.TabIndex = 5;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(190' 130);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(190' 130);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(71' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(71' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(190' 154);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(190' 154);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(79' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(79' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 4;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_yourVersionLabel.Location = new System.Drawing.Point(282' 130);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_yourVersionLabel.Location = new System.Drawing.Point(282' 130);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_yourVersionLabel.Size = new System.Drawing.Size(43' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_yourVersionLabel.Size = new System.Drawing.Size(43' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_yourVersionLabel.TabIndex = 3;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_latestVersionLabel.Location = new System.Drawing.Point(282' 154);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_latestVersionLabel.Location = new System.Drawing.Point(282' 154);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_latestVersionLabel.Size = new System.Drawing.Size(43' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_latestVersionLabel.Size = new System.Drawing.Size(43' 13);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_latestVersionLabel.TabIndex = 5;
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(463' 313);
Magic Number,Trizbort,NewVersionDialog,C:\repos\genstein_trizbort\NewVersionDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(463' 313);
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,GetCorner,The following statement contains a magic number: switch (point)              {                  case CompassPoint.North:                      return new Vector(X + Width / 2' Y);                  case CompassPoint.NorthNorthEast:                      return new Vector(X + Width * 3 / 4' Y);                  case CompassPoint.NorthEast:                      return new Vector(X + Width' Y);                  case CompassPoint.EastNorthEast:                      return new Vector(X + Width' Y + Height / 4);                  case CompassPoint.East:                      return new Vector(X + Width' Y + Height / 2);                  case CompassPoint.EastSouthEast:                      return new Vector(X + Width' Y + Height * 3 / 4);                  case CompassPoint.SouthEast:                      return new Vector(X + Width' Y + Height);                  case CompassPoint.SouthSouthEast:                      return new Vector(X + Width * 3 / 4' Y + Height);                  case CompassPoint.South:                      return new Vector(X + Width / 2' Y + Height);                  case CompassPoint.SouthSouthWest:                      return new Vector(X + Width / 4' Y + Height);                  case CompassPoint.SouthWest:                      return new Vector(X' Y + Height);                  case CompassPoint.WestSouthWest:                      return new Vector(X' Y + Height * 3 / 4);                  case CompassPoint.West:                      return new Vector(X' Y + Height / 2);                  case CompassPoint.WestNorthWest:                      return new Vector(X' Y + Height / 4);                  case CompassPoint.NorthWest:                      return new Vector(X' Y);                  case CompassPoint.NorthNorthWest:                      return new Vector(X + Width / 4' Y);                  default:                      throw new InvalidOperationException();              }
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,Inflate,The following statement contains a magic number: Width += dx * 2;
Magic Number,Trizbort,Rect,C:\repos\genstein_trizbort\Rect.cs,Inflate,The following statement contains a magic number: Height += dy * 2;
Magic Number,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following statement contains a magic number: if (text.IndexOf('\n') == -1 && size.X > 0 && size.Y > 0 && graphics.MeasureString(text' font).Width > size.X)              {                  // wrap single-line text to fit in rectangle                    // measure a space' countering the APIs unwillingness to measure spaces                  var spaceLength = (float)(graphics.MeasureString("M M"' font).Width - graphics.MeasureString("M"' font).Width * 2);                    var words = new List<Word>();                  foreach (var word in text.Split(' '))                  {                      if (words.Count != 0)                      {                          words.Add(new Word(" "' spaceLength));                      }                      words.Add(new Word(word' (float)graphics.MeasureString(word' font).Width));                  }                    var lineLength = 0.0f;                  var total = string.Empty;                  var line = string.Empty;                    foreach (var word in words)                  {                      if (word.Text != " " && word.Length > Math.Max(0' size.X - lineLength) && lineLength > 0)                      {                          if (line.Length > 0)                          {                              if (total.Length > 0)                              {                                  total += "\n";                              }                              total += line;                              lineLength = word.Length + spaceLength;                              line = word.Text;                          }                      }                      else                      {                          line += word.Text;                          lineLength += word.Length + spaceLength;                      }                  }                    if (line.Length > 0)                  {                      if (total.Length > 0)                      {                          total += "\n";                      }                      total += line;                  }                    text = total;              }
Magic Number,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following statement contains a magic number: switch (m_actualFormat.LineAlignment)              {                  case XLineAlignment.Near:                  default:                      m_origin = pos;                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Far:                      m_origin = new Vector(pos.X' pos.Y + size.Y - m_lineHeight);                      if (size.Y > 0)                      {                          var count = m_lines.Count;                          while (m_origin.Y - m_lineHeight >= pos.Y && --count > 0)                          {                              m_origin.Y -= m_lineHeight;                          }                      }                      else                      {                          m_origin.Y -= (m_lines.Count - 1) * m_lineHeight;                      }                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Center:                      m_origin = new Vector(pos.X' pos.Y + size.Y / 2 - (m_lines.Count - 1) * m_lineHeight / 2 - m_lineHeight / 2);                      m_delta = new Vector(0' m_lineHeight);                      break;              }
Magic Number,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following statement contains a magic number: switch (m_actualFormat.LineAlignment)              {                  case XLineAlignment.Near:                  default:                      m_origin = pos;                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Far:                      m_origin = new Vector(pos.X' pos.Y + size.Y - m_lineHeight);                      if (size.Y > 0)                      {                          var count = m_lines.Count;                          while (m_origin.Y - m_lineHeight >= pos.Y && --count > 0)                          {                              m_origin.Y -= m_lineHeight;                          }                      }                      else                      {                          m_origin.Y -= (m_lines.Count - 1) * m_lineHeight;                      }                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Center:                      m_origin = new Vector(pos.X' pos.Y + size.Y / 2 - (m_lines.Count - 1) * m_lineHeight / 2 - m_lineHeight / 2);                      m_delta = new Vector(0' m_lineHeight);                      break;              }
Magic Number,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following statement contains a magic number: switch (m_actualFormat.LineAlignment)              {                  case XLineAlignment.Near:                  default:                      m_origin = pos;                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Far:                      m_origin = new Vector(pos.X' pos.Y + size.Y - m_lineHeight);                      if (size.Y > 0)                      {                          var count = m_lines.Count;                          while (m_origin.Y - m_lineHeight >= pos.Y && --count > 0)                          {                              m_origin.Y -= m_lineHeight;                          }                      }                      else                      {                          m_origin.Y -= (m_lines.Count - 1) * m_lineHeight;                      }                      m_delta = new Vector(0' m_lineHeight);                      break;                  case XLineAlignment.Center:                      m_origin = new Vector(pos.X' pos.Y + size.Y / 2 - (m_lines.Count - 1) * m_lineHeight / 2 - m_lineHeight / 2);                      m_delta = new Vector(0' m_lineHeight);                      break;              }
Magic Number,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following statement contains a magic number: switch (m_actualFormat.Alignment)              {                  case XStringAlignment.Far:                      m_origin.X = pos.X + size.X;                      break;                  case XStringAlignment.Center:                      m_origin.X = pos.X + size.X / 2;                      break;              }
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportImageMenuItem_Click,The following statement contains a magic number: using (var dialog = new SaveFileDialog())              {                  dialog.Filter = "PNG Images|*.png|JPEG Images|*.jpg|BMP Images|*.bmp|Enhanced Metafiles (EMF)|*.emf|All Files|*.*||";                  dialog.Title = "Export Image";                  dialog.InitialDirectory = PathHelper.SafeGetDirectoryName(Settings.LastExportImageFileName);                  if (dialog.ShowDialog() == DialogResult.OK)                  {                      Settings.LastExportImageFileName = dialog.InitialDirectory;                        var format = ImageFormat.Png;                      var ext = Path.GetExtension(dialog.FileName);                      if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpg") == 0                          || StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpeg") == 0)                      {                          format = ImageFormat.Jpeg;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".bmp") == 0)                      {                          format = ImageFormat.Bmp;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".emf") == 0)                      {                          format = ImageFormat.Emf;                      }                        var size = m_canvas.ComputeCanvasBounds(true).Size * m_canvas.ZoomFactor;                      size.X = Numeric.Clamp(size.X' 16' 8192);                      size.Y = Numeric.Clamp(size.Y' 16' 8192);                                            try                      {                          if (format == ImageFormat.Emf)                          {                              // export as a metafile                              using (var nativeGraphics = Graphics.FromHwnd(m_canvas.Handle))                              {                                  using (var stream = new MemoryStream())                                  {                                      try                                      {                                          var dc = nativeGraphics.GetHdc();                                          using (var metafile = new Metafile(stream' dc))                                          {                                              using (var imageGraphics = Graphics.FromImage(metafile))                                              {                                                  using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                                  {                                                      m_canvas.Draw(graphics' true' size.X' size.Y);                                                  }                                              }                                              var handle = metafile.GetHenhmetafile();                                              var copy = CopyEnhMetaFile(handle' dialog.FileName);                                              DeleteEnhMetaFile(copy);                                          }                                      }                                      finally                                      {                                          nativeGraphics.ReleaseHdc();                                      }                                  }                              }                          }                          else                          {                              // export as an image                              using (var bitmap = new Bitmap((int)Math.Ceiling(size.X)' (int)Math.Ceiling(size.Y)))                              {                                  using (var imageGraphics = Graphics.FromImage(bitmap))                                  {                                      using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                      {                                          m_canvas.Draw(graphics' true' size.X' size.Y);                                      }                                  }                                  bitmap.Save(dialog.FileName' format);                              }                          }                      }                      catch (Exception ex)                      {                          MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error);                      }                  }              }
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportImageMenuItem_Click,The following statement contains a magic number: using (var dialog = new SaveFileDialog())              {                  dialog.Filter = "PNG Images|*.png|JPEG Images|*.jpg|BMP Images|*.bmp|Enhanced Metafiles (EMF)|*.emf|All Files|*.*||";                  dialog.Title = "Export Image";                  dialog.InitialDirectory = PathHelper.SafeGetDirectoryName(Settings.LastExportImageFileName);                  if (dialog.ShowDialog() == DialogResult.OK)                  {                      Settings.LastExportImageFileName = dialog.InitialDirectory;                        var format = ImageFormat.Png;                      var ext = Path.GetExtension(dialog.FileName);                      if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpg") == 0                          || StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpeg") == 0)                      {                          format = ImageFormat.Jpeg;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".bmp") == 0)                      {                          format = ImageFormat.Bmp;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".emf") == 0)                      {                          format = ImageFormat.Emf;                      }                        var size = m_canvas.ComputeCanvasBounds(true).Size * m_canvas.ZoomFactor;                      size.X = Numeric.Clamp(size.X' 16' 8192);                      size.Y = Numeric.Clamp(size.Y' 16' 8192);                                            try                      {                          if (format == ImageFormat.Emf)                          {                              // export as a metafile                              using (var nativeGraphics = Graphics.FromHwnd(m_canvas.Handle))                              {                                  using (var stream = new MemoryStream())                                  {                                      try                                      {                                          var dc = nativeGraphics.GetHdc();                                          using (var metafile = new Metafile(stream' dc))                                          {                                              using (var imageGraphics = Graphics.FromImage(metafile))                                              {                                                  using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                                  {                                                      m_canvas.Draw(graphics' true' size.X' size.Y);                                                  }                                              }                                              var handle = metafile.GetHenhmetafile();                                              var copy = CopyEnhMetaFile(handle' dialog.FileName);                                              DeleteEnhMetaFile(copy);                                          }                                      }                                      finally                                      {                                          nativeGraphics.ReleaseHdc();                                      }                                  }                              }                          }                          else                          {                              // export as an image                              using (var bitmap = new Bitmap((int)Math.Ceiling(size.X)' (int)Math.Ceiling(size.Y)))                              {                                  using (var imageGraphics = Graphics.FromImage(bitmap))                                  {                                      using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                      {                                          m_canvas.Draw(graphics' true' size.X' size.Y);                                      }                                  }                                  bitmap.Save(dialog.FileName' format);                              }                          }                      }                      catch (Exception ex)                      {                          MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error);                      }                  }              }
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportImageMenuItem_Click,The following statement contains a magic number: using (var dialog = new SaveFileDialog())              {                  dialog.Filter = "PNG Images|*.png|JPEG Images|*.jpg|BMP Images|*.bmp|Enhanced Metafiles (EMF)|*.emf|All Files|*.*||";                  dialog.Title = "Export Image";                  dialog.InitialDirectory = PathHelper.SafeGetDirectoryName(Settings.LastExportImageFileName);                  if (dialog.ShowDialog() == DialogResult.OK)                  {                      Settings.LastExportImageFileName = dialog.InitialDirectory;                        var format = ImageFormat.Png;                      var ext = Path.GetExtension(dialog.FileName);                      if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpg") == 0                          || StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpeg") == 0)                      {                          format = ImageFormat.Jpeg;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".bmp") == 0)                      {                          format = ImageFormat.Bmp;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".emf") == 0)                      {                          format = ImageFormat.Emf;                      }                        var size = m_canvas.ComputeCanvasBounds(true).Size * m_canvas.ZoomFactor;                      size.X = Numeric.Clamp(size.X' 16' 8192);                      size.Y = Numeric.Clamp(size.Y' 16' 8192);                                            try                      {                          if (format == ImageFormat.Emf)                          {                              // export as a metafile                              using (var nativeGraphics = Graphics.FromHwnd(m_canvas.Handle))                              {                                  using (var stream = new MemoryStream())                                  {                                      try                                      {                                          var dc = nativeGraphics.GetHdc();                                          using (var metafile = new Metafile(stream' dc))                                          {                                              using (var imageGraphics = Graphics.FromImage(metafile))                                              {                                                  using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                                  {                                                      m_canvas.Draw(graphics' true' size.X' size.Y);                                                  }                                              }                                              var handle = metafile.GetHenhmetafile();                                              var copy = CopyEnhMetaFile(handle' dialog.FileName);                                              DeleteEnhMetaFile(copy);                                          }                                      }                                      finally                                      {                                          nativeGraphics.ReleaseHdc();                                      }                                  }                              }                          }                          else                          {                              // export as an image                              using (var bitmap = new Bitmap((int)Math.Ceiling(size.X)' (int)Math.Ceiling(size.Y)))                              {                                  using (var imageGraphics = Graphics.FromImage(bitmap))                                  {                                      using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                      {                                          m_canvas.Draw(graphics' true' size.X' size.Y);                                      }                                  }                                  bitmap.Save(dialog.FileName' format);                              }                          }                      }                      catch (Exception ex)                      {                          MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error);                      }                  }              }
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,FileExportImageMenuItem_Click,The following statement contains a magic number: using (var dialog = new SaveFileDialog())              {                  dialog.Filter = "PNG Images|*.png|JPEG Images|*.jpg|BMP Images|*.bmp|Enhanced Metafiles (EMF)|*.emf|All Files|*.*||";                  dialog.Title = "Export Image";                  dialog.InitialDirectory = PathHelper.SafeGetDirectoryName(Settings.LastExportImageFileName);                  if (dialog.ShowDialog() == DialogResult.OK)                  {                      Settings.LastExportImageFileName = dialog.InitialDirectory;                        var format = ImageFormat.Png;                      var ext = Path.GetExtension(dialog.FileName);                      if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpg") == 0                          || StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".jpeg") == 0)                      {                          format = ImageFormat.Jpeg;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".bmp") == 0)                      {                          format = ImageFormat.Bmp;                      }                      else if (StringComparer.InvariantCultureIgnoreCase.Compare(ext' ".emf") == 0)                      {                          format = ImageFormat.Emf;                      }                        var size = m_canvas.ComputeCanvasBounds(true).Size * m_canvas.ZoomFactor;                      size.X = Numeric.Clamp(size.X' 16' 8192);                      size.Y = Numeric.Clamp(size.Y' 16' 8192);                                            try                      {                          if (format == ImageFormat.Emf)                          {                              // export as a metafile                              using (var nativeGraphics = Graphics.FromHwnd(m_canvas.Handle))                              {                                  using (var stream = new MemoryStream())                                  {                                      try                                      {                                          var dc = nativeGraphics.GetHdc();                                          using (var metafile = new Metafile(stream' dc))                                          {                                              using (var imageGraphics = Graphics.FromImage(metafile))                                              {                                                  using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                                  {                                                      m_canvas.Draw(graphics' true' size.X' size.Y);                                                  }                                              }                                              var handle = metafile.GetHenhmetafile();                                              var copy = CopyEnhMetaFile(handle' dialog.FileName);                                              DeleteEnhMetaFile(copy);                                          }                                      }                                      finally                                      {                                          nativeGraphics.ReleaseHdc();                                      }                                  }                              }                          }                          else                          {                              // export as an image                              using (var bitmap = new Bitmap((int)Math.Ceiling(size.X)' (int)Math.Ceiling(size.Y)))                              {                                  using (var imageGraphics = Graphics.FromImage(bitmap))                                  {                                      using (var graphics = XGraphics.FromGraphics(imageGraphics' new XSize(size.X' size.Y)))                                      {                                          m_canvas.Draw(graphics' true' size.X' size.Y);                                      }                                  }                                  bitmap.Save(dialog.FileName' format);                              }                          }                      }                      catch (Exception ex)                      {                          MessageBox.Show(Program.MainForm' string.Format("There was a problem exporting the map:\n\n{0}"' ex.Message)' Application.ProductName' MessageBoxButtons.OK' MessageBoxIcon.Error);                      }                  }              }
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_menuStrip.Size = new System.Drawing.Size(624' 24);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_menuStrip.Size = new System.Drawing.Size(624' 24);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileMenu.Size = new System.Drawing.Size(37' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileMenu.Size = new System.Drawing.Size(37' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileNewMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileNewMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileOpenMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileOpenMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator9.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator9.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileSaveMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileSaveMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileSaveAsMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileSaveAsMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator10.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator10.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportMenu.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportMenu.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportPDFMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportPDFMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportImageMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportImageMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem9.Size = new System.Drawing.Size(149' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem9.Size = new System.Drawing.Size(149' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportInform7MenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExportInform7MenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.tADSToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.tADSToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator12.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator12.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileRecentMapsMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileRecentMapsMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem7.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem7.Size = new System.Drawing.Size(179' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExitMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_fileExitMenuItem.Size = new System.Drawing.Size(182' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editMenu.Size = new System.Drawing.Size(39' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editMenu.Size = new System.Drawing.Size(39' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editAddRoomMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editAddRoomMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator6.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator6.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editRenameMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editRenameMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editIsDarkMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editIsDarkMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_lineStylesMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_lineStylesMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_plainLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_plainLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem3.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDottedLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDottedLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDirectionalLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDirectionalLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem1.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_upLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_upLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_downLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_downLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem2.Size = new System.Drawing.Size(169' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_inLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_inLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_outLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_outLinesMenuItem.Size = new System.Drawing.Size(172' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_reverseLineMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_reverseLineMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator8.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editSelectAllMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editSelectAllMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editSelectNoneMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editSelectNoneMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem8.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem8.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editDeleteMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editDeleteMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator3.Size = new System.Drawing.Size(177' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editPropertiesMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_editPropertiesMenuItem.Size = new System.Drawing.Size(180' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewMenu.Size = new System.Drawing.Size(44' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewMenu.Size = new System.Drawing.Size(44' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomMenu.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomMenu.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomInMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomInMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomOutMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomOutMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(186' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator7.Size = new System.Drawing.Size(186' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomFiftyPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomFiftyPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomOneHundredPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomOneHundredPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomTwoHundredPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewZoomTwoHundredPercentMenuItem.Size = new System.Drawing.Size(189' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewEntireMapMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewEntireMapMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewResetMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewResetMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem6.Size = new System.Drawing.Size(201' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem6.Size = new System.Drawing.Size(201' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewMinimapMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_viewMinimapMenuItem.Size = new System.Drawing.Size(204' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.automappingToolStripMenuItem.Size = new System.Drawing.Size(69' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.automappingToolStripMenuItem.Size = new System.Drawing.Size(69' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapStartMenuItem.Size = new System.Drawing.Size(107' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapStartMenuItem.Size = new System.Drawing.Size(107' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapStopMenuItem.Size = new System.Drawing.Size(107' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapStopMenuItem.Size = new System.Drawing.Size(107' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectMenu.Size = new System.Drawing.Size(48' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectMenu.Size = new System.Drawing.Size(48' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectSettingsMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectSettingsMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator11.Size = new System.Drawing.Size(196' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator11.Size = new System.Drawing.Size(196' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectResetToDefaultSettingsMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_projectResetToDefaultSettingsMenuItem.Size = new System.Drawing.Size(199' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_helpMenu.Size = new System.Drawing.Size(44' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_helpMenu.Size = new System.Drawing.Size(44' 20);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_onlineHelpMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_onlineHelpMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_checkForUpdatesMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_checkForUpdatesMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem4.Size = new System.Drawing.Size(168' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem4.Size = new System.Drawing.Size(168' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_helpAboutMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_helpAboutMenuItem.Size = new System.Drawing.Size(171' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toolStrip.Location = new System.Drawing.Point(0' 24);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toolStrip.Size = new System.Drawing.Size(38' 420);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toolStrip.Size = new System.Drawing.Size(38' 420);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toolStrip.TabIndex = 2;
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDottedLinesButton.Size = new System.Drawing.Size(32' 32);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDottedLinesButton.Size = new System.Drawing.Size(32' 32);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDirectionalLinesButton.Size = new System.Drawing.Size(32' 32);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_toggleDirectionalLinesButton.Size = new System.Drawing.Size(32' 32);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(6' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator4.Size = new System.Drawing.Size(6' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.Location = new System.Drawing.Point(38' 415);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.Location = new System.Drawing.Point(38' 415);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.MaximumSize = new System.Drawing.Size(4096' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.MaximumSize = new System.Drawing.Size(4096' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.MinimumSize = new System.Drawing.Size(2' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.MinimumSize = new System.Drawing.Size(2' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.Size = new System.Drawing.Size(586' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.Size = new System.Drawing.Size(586' 29);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_automapBar.TabIndex = 4;
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_canvas.Location = new System.Drawing.Point(38' 24);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_canvas.Location = new System.Drawing.Point(38' 24);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_canvas.Size = new System.Drawing.Size(586' 420);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_canvas.Size = new System.Drawing.Size(586' 420);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.m_canvas.TabIndex = 3;
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.inform6ToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.inform6ToolStripMenuItem.Size = new System.Drawing.Size(152' 22);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem10.Size = new System.Drawing.Size(149' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripMenuItem10.Size = new System.Drawing.Size(149' 6);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(624' 444);
Magic Number,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(624' 444);
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,AddLine,The following statement contains a magic number: if (Settings.HandDrawn)              {                  float dx = segment.End.X - segment.Start.X;                  float dy = segment.End.Y - segment.Start.Y;                  float distance = (float)Math.Sqrt(dx * dx + dy * dy);                  int points = random.Next(Math.Max(3' (int)(distance / 15))' Math.Max(6' (int)(distance / 8)));                  int lines = points - 1;                  Vector last = segment.Start;                  for (int line = 0; line < lines; ++line)                  {                      Vector next;                      if (line == 0)                      {                          next = last;                      }                      else if (line == lines - 1)                      {                          next = segment.End;                      }                      else                      {                          float fraction = (float)line / (float)(lines - 1);                          float x = segment.Start.X + (segment.End.X - segment.Start.X) * fraction;                          float y = segment.Start.Y + (segment.End.Y - segment.Start.Y) * fraction;                            x += random.Next(-1' 2);                          y += random.Next(-1' 2);                          next = new Vector(x' y);                      }                        path.AddLine(last.ToPointF()' next.ToPointF());                      last = next;                  }              }              else              {                  path.AddLine(segment.Start.ToPointF()' segment.End.ToPointF());              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,DrawHandle,The following statement contains a magic number: using (var quality = new Smoothing(graphics' XSmoothingMode.Default))              {                  XBrush brush;                  Pen pen;                  var alpha = 180;                    if (context.Selected)                  {                      if (!alwaysAlpha)                      {                          alpha = 255;                      }                      brush = palette.Gradient(bounds' Color.FromArgb(alpha' Color.LemonChiffon)' Color.FromArgb(alpha' Color.DarkOrange));                      pen = palette.Pen(Color.FromArgb(alpha' Color.Chocolate)' 0);                  }                  else                  {                      brush = palette.Gradient(bounds' Color.FromArgb(alpha' Color.LightCyan)' Color.FromArgb(alpha' Color.SteelBlue));                      pen = palette.Pen(Color.FromArgb(alpha' Color.Navy)' 0);                  }                    if (round)                  {                      graphics.DrawEllipse(brush' bounds.ToRectangleF());                      graphics.DrawEllipse(pen' bounds.ToRectangleF());                  }                  else                  {                      graphics.DrawRectangle(brush' bounds.ToRectangleF());                      graphics.DrawRectangle(pen' bounds.ToRectangleF());                  }              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,DrawHandle,The following statement contains a magic number: using (var quality = new Smoothing(graphics' XSmoothingMode.Default))              {                  XBrush brush;                  Pen pen;                  var alpha = 180;                    if (context.Selected)                  {                      if (!alwaysAlpha)                      {                          alpha = 255;                      }                      brush = palette.Gradient(bounds' Color.FromArgb(alpha' Color.LemonChiffon)' Color.FromArgb(alpha' Color.DarkOrange));                      pen = palette.Pen(Color.FromArgb(alpha' Color.Chocolate)' 0);                  }                  else                  {                      brush = palette.Gradient(bounds' Color.FromArgb(alpha' Color.LightCyan)' Color.FromArgb(alpha' Color.SteelBlue));                      pen = palette.Pen(Color.FromArgb(alpha' Color.Navy)' 0);                  }                    if (round)                  {                      graphics.DrawEllipse(brush' bounds.ToRectangleF());                      graphics.DrawEllipse(pen' bounds.ToRectangleF());                  }                  else                  {                      graphics.DrawRectangle(brush' bounds.ToRectangleF());                      graphics.DrawRectangle(pen' bounds.ToRectangleF());                  }              }
Magic Number,Trizbort,Drawing,C:\repos\genstein_trizbort\Drawing.cs,IsDark,The following statement contains a magic number: return Math.Max(color.R' Math.Max(color.G' color.B)) < 128;
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Room,The following statement contains a magic number: Size = new Vector(3 * Settings.GridSize' 2 * Settings.GridSize);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Room,The following statement contains a magic number: Size = new Vector(3 * Settings.GridSize' 2 * Settings.GridSize);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Room,The following statement contains a magic number: Position = new Vector(-Size.X / 2' -Size.Y / 2);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Room,The following statement contains a magic number: Position = new Vector(-Size.X / 2' -Size.Y / 2);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The following statement contains a magic number: textBounds.Inflate(-5' -5);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The following statement contains a magic number: textBounds.Inflate(-5' -5);
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The following statement contains a magic number: if (!string.IsNullOrEmpty(Objects))              {                  XStringFormat format = new XStringFormat();                  Vector pos = expandedBounds.GetCorner(m_objectsPosition);                  if (!Drawing.SetAlignmentFromCardinalOrOrdinalDirection(format' m_objectsPosition))                  {                      // object list appears inside the room below its name                      format.LineAlignment = XLineAlignment.Far;                      format.Alignment = XStringAlignment.Near;                      //format.Trimming = StringTrimming.EllipsisCharacter;                      //format.FormatFlags = StringFormatFlags.LineLimit;                      var height = InnerBounds.Height / 2 - font.Height / 2;                      var bounds = new Rect(InnerBounds.Left + Settings.ObjectListOffsetFromRoom' InnerBounds.Bottom - height' InnerBounds.Width - Settings.ObjectListOffsetFromRoom' height - Settings.ObjectListOffsetFromRoom);                      brush = context.Selected ? palette.FillBrush : brush;                      if (bounds.Width > 0 && bounds.Height > 0)                      {                          m_objects.Draw(graphics' font' brush' bounds.Position' bounds.Size' format);                      }                      drawnObjectList = true;                  }                  else if (m_objectsPosition == CompassPoint.North || m_objectsPosition == CompassPoint.South)                  {                      pos.X += Settings.ObjectListOffsetFromRoom;                  }                    if (!drawnObjectList)                  {                      m_objects.Draw(graphics' font' brush' pos' Vector.Zero' format);                  }              }
Magic Number,Trizbort,Room,C:\repos\genstein_trizbort\Room.cs,Draw,The following statement contains a magic number: if (!string.IsNullOrEmpty(Objects))              {                  XStringFormat format = new XStringFormat();                  Vector pos = expandedBounds.GetCorner(m_objectsPosition);                  if (!Drawing.SetAlignmentFromCardinalOrOrdinalDirection(format' m_objectsPosition))                  {                      // object list appears inside the room below its name                      format.LineAlignment = XLineAlignment.Far;                      format.Alignment = XStringAlignment.Near;                      //format.Trimming = StringTrimming.EllipsisCharacter;                      //format.FormatFlags = StringFormatFlags.LineLimit;                      var height = InnerBounds.Height / 2 - font.Height / 2;                      var bounds = new Rect(InnerBounds.Left + Settings.ObjectListOffsetFromRoom' InnerBounds.Bottom - height' InnerBounds.Width - Settings.ObjectListOffsetFromRoom' height - Settings.ObjectListOffsetFromRoom);                      brush = context.Selected ? palette.FillBrush : brush;                      if (bounds.Width > 0 && bounds.Height > 0)                      {                          m_objects.Draw(graphics' font' brush' bounds.Position' bounds.Size' format);                      }                      drawnObjectList = true;                  }                  else if (m_objectsPosition == CompassPoint.North || m_objectsPosition == CompassPoint.South)                  {                      pos.X += Settings.ObjectListOffsetFromRoom;                  }                    if (!drawnObjectList)                  {                      m_objects.Draw(graphics' font' brush' pos' Vector.Zero' format);                  }              }
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(267' 282);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(267' 282);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.TabIndex = 4;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(348' 282);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(348' 282);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.TabIndex = 5;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nameTextBox.Location = new System.Drawing.Point(15' 34);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nameTextBox.Location = new System.Drawing.Point(15' 34);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nameTextBox.Size = new System.Drawing.Size(408' 21);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nameTextBox.Size = new System.Drawing.Size(408' 21);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 18);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 18);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_isDarkCheckBox.Location = new System.Drawing.Point(375' 60);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_isDarkCheckBox.Location = new System.Drawing.Point(375' 60);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_isDarkCheckBox.Size = new System.Drawing.Size(48' 17);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_isDarkCheckBox.Size = new System.Drawing.Size(48' 17);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_isDarkCheckBox.TabIndex = 2;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tabControl.Location = new System.Drawing.Point(15' 81);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tabControl.Location = new System.Drawing.Point(15' 81);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tabControl.Size = new System.Drawing.Size(408' 195);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tabControl.Size = new System.Drawing.Size(408' 195);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_tabControl.TabIndex = 3;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Padding = new System.Windows.Forms.Padding(3);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(400' 169);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(400' 169);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsTextBox.Location = new System.Drawing.Point(2' 6);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsTextBox.Location = new System.Drawing.Point(2' 6);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsTextBox.Size = new System.Drawing.Size(288' 160);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsTextBox.Size = new System.Drawing.Size(288' 160);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsPositionGroupBox.Location = new System.Drawing.Point(296' 0);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsPositionGroupBox.Size = new System.Drawing.Size(102' 114);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectsPositionGroupBox.Size = new System.Drawing.Size(102' 114);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.Location = new System.Drawing.Point(38' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.Location = new System.Drawing.Point(38' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cCheckBox.TabIndex = 4;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nwCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nwCheckBox.Location = new System.Drawing.Point(6' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nwCheckBox.Location = new System.Drawing.Point(6' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nwCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nwCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.Location = new System.Drawing.Point(70' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.Location = new System.Drawing.Point(70' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_seCheckBox.TabIndex = 8;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nCheckBox.Location = new System.Drawing.Point(38' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nCheckBox.Location = new System.Drawing.Point(38' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_nCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.Location = new System.Drawing.Point(38' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.Location = new System.Drawing.Point(38' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_sCheckBox.TabIndex = 7;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.Location = new System.Drawing.Point(70' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.Location = new System.Drawing.Point(70' 16);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_neCheckBox.TabIndex = 2;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.Location = new System.Drawing.Point(6' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.Location = new System.Drawing.Point(6' 80);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_swCheckBox.TabIndex = 6;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.Location = new System.Drawing.Point(6' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.Location = new System.Drawing.Point(6' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_wCheckBox.TabIndex = 3;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.Font = new System.Drawing.Font("Wingdings"' 12F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(2)));
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.Location = new System.Drawing.Point(70' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.Location = new System.Drawing.Point(70' 48);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.Size = new System.Drawing.Size(26' 26);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_eCheckBox.TabIndex = 5;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Padding = new System.Windows.Forms.Padding(3);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(400' 169);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(400' 169);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Location = new System.Drawing.Point(2' 6);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Location = new System.Drawing.Point(2' 6);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Size = new System.Drawing.Size(395' 160);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Size = new System.Drawing.Size(395' 160);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.TabIndex = 3;
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(435' 317);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(435' 317);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(265' 295);
Magic Number,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(265' 295);
Magic Number,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Snap,The following statement contains a magic number: if (SnapToGrid && mod != 0)              {                  if (mod < GridSize / 2)                  {                      value -= mod;                  }                  else                  {                      value = value + GridSize - mod;                  }              }
Magic Number,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Reset,The following statement contains a magic number: Color[Colors.Grid] = Drawing.Mix(System.Drawing.Color.White' System.Drawing.Color.Black' 25' 1);
Magic Number,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Reset,The following statement contains a magic number: PreferredDistanceBetweenRooms = ConnectionStalkLength * 2;
Magic Number,Trizbort,Settings,C:\repos\genstein_trizbort\Settings.cs,Load,The following statement contains a magic number: PreferredDistanceBetweenRooms = element["rooms"]["preferredDistanceBetweenRooms"].ToFloat(s_connectionStalkLength * 2);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The following statement contains a magic number: using (var palette = new Palette())              {                  e.DrawBackground();                    var horizontalMargin = 2;                  var verticalMargin = 2;                  var width = 24;                  var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2);                  var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height);                  e.Graphics.FillRectangle(palette.Brush(m_color[e.Index])' colorBounds);                  e.Graphics.DrawRectangle(palette.Pen(e.ForeColor' 0)' colorBounds);                  e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left);              }
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The following statement contains a magic number: using (var palette = new Palette())              {                  e.DrawBackground();                    var horizontalMargin = 2;                  var verticalMargin = 2;                  var width = 24;                  var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2);                  var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height);                  e.Graphics.FillRectangle(palette.Brush(m_color[e.Index])' colorBounds);                  e.Graphics.DrawRectangle(palette.Pen(e.ForeColor' 0)' colorBounds);                  e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left);              }
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The following statement contains a magic number: using (var palette = new Palette())              {                  e.DrawBackground();                    var horizontalMargin = 2;                  var verticalMargin = 2;                  var width = 24;                  var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2);                  var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height);                  e.Graphics.FillRectangle(palette.Brush(m_color[e.Index])' colorBounds);                  e.Graphics.DrawRectangle(palette.Pen(e.ForeColor' 0)' colorBounds);                  e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left);              }
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The following statement contains a magic number: using (var palette = new Palette())              {                  e.DrawBackground();                    var horizontalMargin = 2;                  var verticalMargin = 2;                  var width = 24;                  var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2);                  var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height);                  e.Graphics.FillRectangle(palette.Brush(m_color[e.Index])' colorBounds);                  e.Graphics.DrawRectangle(palette.Pen(e.ForeColor' 0)' colorBounds);                  e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left);              }
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,ColorListBox_DrawItem,The following statement contains a magic number: using (var palette = new Palette())              {                  e.DrawBackground();                    var horizontalMargin = 2;                  var verticalMargin = 2;                  var width = 24;                  var colorBounds = new Rectangle(e.Bounds.Left + horizontalMargin' e.Bounds.Top + verticalMargin' width' e.Bounds.Height - verticalMargin * 2);                  var textBounds = new Rectangle(colorBounds.Right + horizontalMargin' e.Bounds.Top' e.Bounds.Width - colorBounds.Width - horizontalMargin * 2' e.Bounds.Height);                  e.Graphics.FillRectangle(palette.Brush(m_color[e.Index])' colorBounds);                  e.Graphics.DrawRectangle(palette.Pen(e.ForeColor' 0)' colorBounds);                  e.Graphics.DrawString(m_colorListBox.Items[e.Index].ToString()' e.Font' palette.Brush(e.ForeColor)' textBounds' StringFormats.Left);              }
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(207' 12);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Location = new System.Drawing.Point(207' 12);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(288' 12);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Location = new System.Drawing.Point(288' 12);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_cancelButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handDrawnCheckBox.Location = new System.Drawing.Point(48' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handDrawnCheckBox.Location = new System.Drawing.Point(48' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handDrawnCheckBox.Size = new System.Drawing.Size(93' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handDrawnCheckBox.Size = new System.Drawing.Size(93' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Increment = new decimal(new int[] {              5'              0'              0'              65536});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Increment = new decimal(new int[] {              5'              0'              0'              65536});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Location = new System.Drawing.Point(242' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Location = new System.Drawing.Point(242' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineWidthUpDown.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(201' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point(201' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(35' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size(35' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_linesGroupBox.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_linesGroupBox.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_linesGroupBox.Size = new System.Drawing.Size(343' 163);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_linesGroupBox.Size = new System.Drawing.Size(343' 163);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(127' 127);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(127' 127);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(112' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(112' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 9;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.Location = new System.Drawing.Point(242' 125);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.Location = new System.Drawing.Point(242' 125);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_textOffsetFromLineUpDown.TabIndex = 10;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(111' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(111' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(128' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(128' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 5;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.Location = new System.Drawing.Point(242' 71);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.Location = new System.Drawing.Point(242' 71);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_connectionStalkLengthUpDown.TabIndex = 6;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(179' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(179' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(58' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(58' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.Location = new System.Drawing.Point(242' 45);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.Location = new System.Drawing.Point(242' 45);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_arrowSizeUpDown.TabIndex = 4;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridGroupBox.Location = new System.Drawing.Point(5' 175);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridGroupBox.Location = new System.Drawing.Point(5' 175);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridGroupBox.Size = new System.Drawing.Size(343' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridGroupBox.Size = new System.Drawing.Size(343' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showOriginCheckBox.Location = new System.Drawing.Point(114' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showOriginCheckBox.Location = new System.Drawing.Point(114' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showOriginCheckBox.Size = new System.Drawing.Size(83' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showOriginCheckBox.Size = new System.Drawing.Size(83' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showOriginCheckBox.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showGridCheckBox.Location = new System.Drawing.Point(45' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showGridCheckBox.Location = new System.Drawing.Point(45' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showGridCheckBox.Size = new System.Drawing.Size(56' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_showGridCheckBox.Size = new System.Drawing.Size(56' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToGridCheckBox.Location = new System.Drawing.Point(45' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToGridCheckBox.Location = new System.Drawing.Point(45' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToGridCheckBox.Size = new System.Drawing.Size(67' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToGridCheckBox.Size = new System.Drawing.Size(67' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(212' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point(212' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(26' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size(26' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Location = new System.Drawing.Point(242' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Location = new System.Drawing.Point(242' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Minimum = new decimal(new int[] {              2'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.TabIndex = 4;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_gridSizeUpDown.Value = new decimal(new int[] {              2'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(343' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(343' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label34.Location = new System.Drawing.Point(148' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label34.Location = new System.Drawing.Point(148' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label34.Size = new System.Drawing.Size(92' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label34.Size = new System.Drawing.Size(92' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label34.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.Location = new System.Drawing.Point(242' 41);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.Location = new System.Drawing.Point(242' 41);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_objectListOffsetFromRoomNumericUpDown.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(133' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label13.Location = new System.Drawing.Point(133' 17);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(104' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label13.Size = new System.Drawing.Size(104' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_darknessStripeSizeNumericUpDown.Location = new System.Drawing.Point(242' 15);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_darknessStripeSizeNumericUpDown.Location = new System.Drawing.Point(242' 15);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_darknessStripeSizeNumericUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_darknessStripeSizeNumericUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_darknessStripeSizeNumericUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(10' 327);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Location = new System.Drawing.Point(10' 327);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(363' 35);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.panel1.Size = new System.Drawing.Size(363' 35);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(10' 10);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Location = new System.Drawing.Point(10' 10);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(363' 317);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size(363' 317);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(343' 274);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox3.Size = new System.Drawing.Size(343' 274);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(24' 186);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label17.Location = new System.Drawing.Point(24' 186);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(41' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label17.Size = new System.Drawing.Size(41' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label17.TabIndex = 7;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label16.Location = new System.Drawing.Point(6' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(306' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label16.Size = new System.Drawing.Size(306' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_historyTextBox.Location = new System.Drawing.Point(69' 183);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_historyTextBox.Location = new System.Drawing.Point(69' 183);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_historyTextBox.Size = new System.Drawing.Size(265' 82);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_historyTextBox.Size = new System.Drawing.Size(265' 82);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_historyTextBox.TabIndex = 8;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(3' 98);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label15.Location = new System.Drawing.Point(3' 98);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(60' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label15.Size = new System.Drawing.Size(60' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label15.TabIndex = 5;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(25' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label14.Location = new System.Drawing.Point(25' 72);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(40' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label14.Size = new System.Drawing.Size(40' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label14.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Location = new System.Drawing.Point(69' 95);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Location = new System.Drawing.Point(69' 95);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Size = new System.Drawing.Size(265' 82);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.Size = new System.Drawing.Size(265' 82);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_descriptionTextBox.TabIndex = 6;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(36' 46);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label10.Location = new System.Drawing.Point(36' 46);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(27' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label10.Size = new System.Drawing.Size(27' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_authorTextBox.Location = new System.Drawing.Point(69' 69);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_authorTextBox.Location = new System.Drawing.Point(69' 69);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_authorTextBox.Size = new System.Drawing.Size(265' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_authorTextBox.Size = new System.Drawing.Size(265' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_authorTextBox.TabIndex = 4;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_titleTextBox.Location = new System.Drawing.Point(69' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_titleTextBox.Location = new System.Drawing.Point(69' 43);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_titleTextBox.Size = new System.Drawing.Size(265' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_titleTextBox.Size = new System.Drawing.Size(265' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_titleTextBox.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Padding = new System.Windows.Forms.Padding(3);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorsGroupBox.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorsGroupBox.Location = new System.Drawing.Point(5' 6);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorsGroupBox.Size = new System.Drawing.Size(343' 162);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorsGroupBox.Size = new System.Drawing.Size(343' 162);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorListBox.Location = new System.Drawing.Point(82' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorListBox.Location = new System.Drawing.Point(82' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorListBox.Size = new System.Drawing.Size(174' 134);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_colorListBox.Size = new System.Drawing.Size(174' 134);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeColorButton.Location = new System.Drawing.Point(262' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeColorButton.Location = new System.Drawing.Point(262' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeColorButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeColorButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_fontsGroupBox.Location = new System.Drawing.Point(5' 174);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_fontsGroupBox.Location = new System.Drawing.Point(5' 174);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_fontsGroupBox.Size = new System.Drawing.Size(343' 99);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_fontsGroupBox.Size = new System.Drawing.Size(343' 99);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(39' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label9.Location = new System.Drawing.Point(39' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(26' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label9.Size = new System.Drawing.Size(26' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label9.TabIndex = 8;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontSizeTextBox.Location = new System.Drawing.Point(225' 70);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontSizeTextBox.Location = new System.Drawing.Point(225' 70);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontSizeTextBox.TabIndex = 10;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLineFontButton.Location = new System.Drawing.Point(262' 68);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLineFontButton.Location = new System.Drawing.Point(262' 68);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLineFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLineFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLineFontButton.TabIndex = 11;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontNameTextBox.Location = new System.Drawing.Point(82' 70);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontNameTextBox.Location = new System.Drawing.Point(82' 70);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_lineFontNameTextBox.TabIndex = 9;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(39' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label12.Location = new System.Drawing.Point(39' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(39' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label12.Size = new System.Drawing.Size(39' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label12.TabIndex = 4;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontSizeTextBox.Location = new System.Drawing.Point(225' 44);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontSizeTextBox.Location = new System.Drawing.Point(225' 44);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontSizeTextBox.TabIndex = 6;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeSmallFontButton.Location = new System.Drawing.Point(262' 42);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeSmallFontButton.Location = new System.Drawing.Point(262' 42);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeSmallFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeSmallFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeSmallFontButton.TabIndex = 7;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontNameTextBox.Location = new System.Drawing.Point(82' 44);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontNameTextBox.Location = new System.Drawing.Point(82' 44);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_smallFontNameTextBox.TabIndex = 5;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(41' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label11.Location = new System.Drawing.Point(41' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label11.Size = new System.Drawing.Size(34' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontSizeTextBox.Location = new System.Drawing.Point(225' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontSizeTextBox.Location = new System.Drawing.Point(225' 19);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontSizeTextBox.Size = new System.Drawing.Size(31' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontSizeTextBox.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLargeFontButton.Location = new System.Drawing.Point(262' 16);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLargeFontButton.Location = new System.Drawing.Point(262' 16);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLargeFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLargeFontButton.Size = new System.Drawing.Size(75' 23);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_changeLargeFontButton.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontNameTextBox.Location = new System.Drawing.Point(82' 18);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontNameTextBox.Location = new System.Drawing.Point(82' 18);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_largeFontNameTextBox.Size = new System.Drawing.Size(137' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Padding = new System.Windows.Forms.Padding(3);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Location = new System.Drawing.Point(4' 22);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Size = new System.Drawing.Size(355' 291);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(5' 84);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Location = new System.Drawing.Point(5' 84);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(343' 101);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.groupBox2.Size = new System.Drawing.Size(343' 101);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(7' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label7.Location = new System.Drawing.Point(7' 20);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(320' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label7.Size = new System.Drawing.Size(320' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(106' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(106' 73);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(129' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(129' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.Location = new System.Drawing.Point(242' 71);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.Location = new System.Drawing.Point(242' 71);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_snapToElementDistanceUpDown.TabIndex = 4;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(112' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(112' 47);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(123' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(123' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.Location = new System.Drawing.Point(242' 45);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.Location = new System.Drawing.Point(242' 45);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_handleSizeUpDown.TabIndex = 2;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(62' 100);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label18.Location = new System.Drawing.Point(62' 100);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(177' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label18.Size = new System.Drawing.Size(177' 13);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.label18.TabIndex = 7;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.Location = new System.Drawing.Point(242' 98);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.Location = new System.Drawing.Point(242' 98);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.Maximum = new decimal(new int[] {              4096'              0'              0'              0});
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.Size = new System.Drawing.Size(95' 21);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.m_preferredDistanceBetweenRoomsUpDown.TabIndex = 8;
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(383' 374);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(383' 374);
Magic Number,Trizbort,SettingsDialog,C:\repos\genstein_trizbort\SettingsDialog.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(10);
Magic Number,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,Create,The following statement contains a magic number: return new StreamWriter(fileName' false' Encoding' 2^16);
Magic Number,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,Create,The following statement contains a magic number: return new StreamWriter(fileName' false' Encoding' 2^16);
Magic Number,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindRooms,The following statement contains a magic number: foreach (var element in Project.Current.Elements)              {                  if (element is Room)                  {                      var room = (Room)element;                        // assign each room a unique export name.                      var exportName = GetExportName(room' null);                      var index = 2;                      while (mapExportNameToRoom.ContainsKey(exportName))                      {                          exportName = GetExportName(room' index++);                      }                        mapExportNameToRoom[exportName] = room;                      var location = new Location(room' exportName);                      LocationsInExportOrder.Add(location);                      m_mapRoomToLocation[room] = location;                  }              }
Magic Number,Trizbort.Export,CodeExporter,C:\repos\genstein_trizbort\Export\CodeExporter.cs,FindThings,The following statement contains a magic number: foreach (var location in LocationsInExportOrder)              {                  var objectsText = location.Room.Objects;                  if (string.IsNullOrEmpty(objectsText))                  {                      continue;                  }                    var objectNames = objectsText.Replace("\r"' string.Empty).Split(new char[]{ '\n' }' StringSplitOptions.RemoveEmptyEntries);                  foreach (var objectName in objectNames)                  {                      // the display name is simply the object name without indentation                      var displayName = objectName.Trim();                        if (string.IsNullOrEmpty(displayName))                      {                          continue;                      }                        // assign each thing a unique export name.                      var exportName = GetExportNameForObject(displayName' null);                      var index = 2;                      while (mapExportNameToThing.ContainsKey(exportName))                      {                          exportName = GetExportNameForObject(displayName' index++);                      }                        // on each line' indentation denotes containment;                      // work out how much indentation there is                      var indent = 0;                      while (indent < objectName.Length && objectName[indent] == ' ')                      {                          ++indent;                      }                        // compare indentations to deduce containment                      Thing container = null;                      for (var thingIndex = location.Things.Count - 1; thingIndex >= 0; --thingIndex)                      {                          var priorThing = location.Things[thingIndex];                          if (indent > priorThing.Indent)                          {                              container = priorThing;                              break;                          }                      }                        var thing = new Thing(displayName' exportName' location' container' indent);                      mapExportNameToThing.Add(exportName' thing);                      location.Things.Add(thing);                  }              }
Magic Number,Trizbort.Export,Exit,C:\repos\genstein_trizbort\Export\CodeExporter.cs,AssignPrimaryPriority,The following statement contains a magic number: switch (VisualCompassPoint)                  {                      case CompassPoint.North:                      case CompassPoint.South:                      case CompassPoint.East:                      case CompassPoint.West:                      case CompassPoint.NorthEast:                      case CompassPoint.SouthEast:                      case CompassPoint.SouthWest:                      case CompassPoint.NorthWest:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 4;                          }                          else                          {                              m_primaryPriority += 2;                          }                          break;                      default:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 3;                          }                          else                          {                              m_primaryPriority += 1;                          }                          break;                  }
Magic Number,Trizbort.Export,Exit,C:\repos\genstein_trizbort\Export\CodeExporter.cs,AssignPrimaryPriority,The following statement contains a magic number: switch (VisualCompassPoint)                  {                      case CompassPoint.North:                      case CompassPoint.South:                      case CompassPoint.East:                      case CompassPoint.West:                      case CompassPoint.NorthEast:                      case CompassPoint.SouthEast:                      case CompassPoint.SouthWest:                      case CompassPoint.NorthWest:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 4;                          }                          else                          {                              m_primaryPriority += 2;                          }                          break;                      default:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 3;                          }                          else                          {                              m_primaryPriority += 1;                          }                          break;                  }
Magic Number,Trizbort.Export,Exit,C:\repos\genstein_trizbort\Export\CodeExporter.cs,AssignPrimaryPriority,The following statement contains a magic number: switch (VisualCompassPoint)                  {                      case CompassPoint.North:                      case CompassPoint.South:                      case CompassPoint.East:                      case CompassPoint.West:                      case CompassPoint.NorthEast:                      case CompassPoint.SouthEast:                      case CompassPoint.SouthWest:                      case CompassPoint.NorthWest:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 4;                          }                          else                          {                              m_primaryPriority += 2;                          }                          break;                      default:                          if (SecondaryDirection == null)                          {                              m_primaryPriority += 3;                          }                          else                          {                              m_primaryPriority += 1;                          }                          break;                  }
Duplicate Code,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,DrawGrid,The method contains a code clone-set at the following line numbers (starting from the method definition): ((12' 31)' (37' 56))
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,AddExitStub,The following switch statement is missing a default case: switch (direction)              {                  case AutomapDirection.Up:                      connection.StartText = Connection.Up;                      break;                  case AutomapDirection.Down:                      connection.StartText = Connection.Down;                      break;              }
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Connect,The following switch statement is missing a default case: switch (directionFromSource)              {                  case AutomapDirection.Up:                  case AutomapDirection.Down:                  case AutomapDirection.In:                  case AutomapDirection.Out:                      if (string.IsNullOrEmpty(connection.StartText) && string.IsNullOrEmpty(connection.EndText))                      {                          switch (directionFromSource)                          {                              case AutomapDirection.Up:                                  connection.SetText(wrongWay ? ConnectionLabel.Down : ConnectionLabel.Up);                                  break;                              case AutomapDirection.Down:                                  connection.SetText(wrongWay ? ConnectionLabel.Up : ConnectionLabel.Down);                                  break;                              case AutomapDirection.In:                                  connection.SetText(wrongWay ? ConnectionLabel.Out : ConnectionLabel.In);                                  break;                              case AutomapDirection.Out:                                  connection.SetText(wrongWay ? ConnectionLabel.In : ConnectionLabel.Out);                                  break;                          }                      }                      break;              }
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,Connect,The following switch statement is missing a default case: switch (directionFromSource)                          {                              case AutomapDirection.Up:                                  connection.SetText(wrongWay ? ConnectionLabel.Down : ConnectionLabel.Up);                                  break;                              case AutomapDirection.Down:                                  connection.SetText(wrongWay ? ConnectionLabel.Up : ConnectionLabel.Down);                                  break;                              case AutomapDirection.In:                                  connection.SetText(wrongWay ? ConnectionLabel.Out : ConnectionLabel.In);                                  break;                              case AutomapDirection.Out:                                  connection.SetText(wrongWay ? ConnectionLabel.In : ConnectionLabel.Out);                                  break;                          }
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg)              {                  case 0x0007: // WM_SETFOCUS                      // do not pass focus to our child controls                      m.Result = IntPtr.Zero;                      return;              }
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,UpdateDragHover,The following switch statement is missing a default case: switch (DragMode)              {                  case DragModes.Pan:                      DoDragPan(clientPos' canvasPos);                      break;                  case DragModes.MoveElement:                      DoDragMoveElement(clientPos' canvasPos);                      break;                  case DragModes.MoveResizeHandle:                      DoDragMoveResizeHandle(clientPos' canvasPos);                      break;                  case DragModes.MovePort:                      HoverElement = HitTestElement(canvasPos' true);                      HoverPort = HitTestPort(canvasPos);                      DoDragMovePort(clientPos' canvasPos);                      break;                  case DragModes.None:                      HoverHandle = HitTestHandle(canvasPos); // set first; it will RecreatePorts() if the value changes                      HoverPort = HitTestPort(canvasPos);                      HoverElement = HitTestElement(canvasPos' false);                      break;                  case DragModes.DrawLine:                      if (new Vector(m_lastMouseDownPosition).Distance(new Vector(mousePosition)) > Settings.DragDistanceToInitiateNewConnection)                      {                          var startPos = new PointF(m_lastMouseDownPosition.X' m_lastMouseDownPosition.Y);                          BeginDrawConnection(startPos' ClientToCanvas(startPos));                      }                      break;                  case DragModes.Marquee:                      if (m_dragMarqueeLastPosition != canvasPos)                      {                          m_dragMarqueeLastPosition = canvasPos;                          Invalidate();                      }                      break;              }
Missing Default,Trizbort,Canvas,C:\repos\genstein_trizbort\Canvas.Automap.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyCode)                  {                      case Keys.NumPad8:                          compassPoint = CompassPoint.North;                          break;                      case Keys.NumPad9:                          compassPoint = CompassPoint.NorthEast;                          break;                      case Keys.NumPad6:                          compassPoint = CompassPoint.East;                          break;                      case Keys.NumPad3:                          compassPoint = CompassPoint.SouthEast;                          break;                      case Keys.NumPad2:                          compassPoint = CompassPoint.South;                          break;                      case Keys.NumPad1:                          compassPoint = CompassPoint.SouthWest;                          break;                      case Keys.NumPad4:                          compassPoint = CompassPoint.West;                          break;                      case Keys.NumPad7:                          compassPoint = CompassPoint.NorthWest;                          break;                  }
Missing Default,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,GetText,The following switch statement is missing a default case: switch (label)              {                  case ConnectionLabel.None:                      start = string.Empty;                      end = string.Empty;                      break;                  case ConnectionLabel.Up:                      start = Up;                      end = Down;                      break;                  case ConnectionLabel.Down:                      start = Down;                      end = Up;                      break;                  case ConnectionLabel.In:                      start = In;                      end = Out;                      break;                  case ConnectionLabel.Out:                      start = Out;                      end = In;                      break;              }
Missing Default,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Split,The following switch statement is missing a default case: switch (intersect.Type)                          {                              case LineSegmentIntersectType.MidPointA:                                  var one = new LineSegment(lineSegment.Start' intersect.Position);                                  if (one.Shorten(amount))                                  {                                      if (!Split(one' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(one);                                      }                                  }                                  var two = new LineSegment(intersect.Position' lineSegment.End);                                  if (two.Forshorten(amount))                                  {                                      if (!Split(two' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(two);                                      }                                  }                                  break;                                case LineSegmentIntersectType.StartA:                                  if (lineSegment.Forshorten(amount))                                  {                                      if (!Split(lineSegment' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(lineSegment);                                      }                                  }                                  break;                                case LineSegmentIntersectType.EndA:                                  if (lineSegment.Shorten(amount))                                  {                                      if (!Split(lineSegment' context' ref newSegments))                                      {                                          if (newSegments == null)                                          {                                              newSegments = new List<LineSegment>();                                          }                                          newSegments.Add(lineSegment);                                      }                                  }                                  break;                          }
Missing Default,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Save,The following switch statement is missing a default case: switch (Style)                  {                      case ConnectionStyle.Solid:                          scribe.Attribute("style"' "solid");                          break;                      case ConnectionStyle.Dashed:                          scribe.Attribute("style"' "dashed");                          break;                  }
Missing Default,Trizbort,Connection,C:\repos\genstein_trizbort\Connection.cs,Save,The following switch statement is missing a default case: switch (Flow)                  {                      case ConnectionFlow.OneWay:                          scribe.Attribute("flow"' "oneWay");                          break;                      case ConnectionFlow.TwoWay:                          scribe.Attribute("flow"' "twoWay");                          break;                  }
Missing Default,Trizbort,Minimap,C:\repos\genstein_trizbort\Minimap.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg)              {                  case 0x0007: // WM_SETFOCUS                      // return focus to the canvas                      Canvas.Focus();                      m.Result = IntPtr.Zero;                      return;              }
Missing Default,Trizbort,TextBlock,C:\repos\genstein_trizbort\TextBlock.cs,RebuildCachedLayout,The following switch statement is missing a default case: switch (m_actualFormat.Alignment)              {                  case XStringAlignment.Far:                      m_origin.X = pos.X + size.X;                      break;                  case XStringAlignment.Center:                      m_origin.X = pos.X + size.X / 2;                      break;              }
Missing Default,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,ToggleDottedLines_Click,The following switch statement is missing a default case: switch (m_canvas.NewConnectionStyle)              {                  case ConnectionStyle.Solid:                      m_canvas.NewConnectionStyle = ConnectionStyle.Dashed;                      break;                  case ConnectionStyle.Dashed:                      m_canvas.NewConnectionStyle = ConnectionStyle.Solid;                      break;              }
Missing Default,Trizbort,MainForm,C:\repos\genstein_trizbort\MainForm.cs,ToggleDirectionalLines_Click,The following switch statement is missing a default case: switch (m_canvas.NewConnectionFlow)              {                  case ConnectionFlow.TwoWay:                      m_canvas.NewConnectionFlow = ConnectionFlow.OneWay;                      break;                  case ConnectionFlow.OneWay:                      m_canvas.NewConnectionFlow = ConnectionFlow.TwoWay;                      break;              }
Missing Default,Trizbort,ResizeHandle,C:\repos\genstein_trizbort\ResizeHandle.cs,SetY,The following switch statement is missing a default case: switch (m_compassPoint)              {                  case CompassPoint.East:                  case CompassPoint.West:                      break;                  case CompassPoint.NorthWest:                  case CompassPoint.NorthNorthWest:                  case CompassPoint.North:                  case CompassPoint.NorthNorthEast:                  case CompassPoint.NorthEast:                      if (m_owner.Height - (value - m_owner.Y) >= 1)                      {                          old = m_owner.Y;                          m_owner.Position = new Vector(m_owner.Position.X' value);                          m_owner.Size = new Vector(m_owner.Size.X' m_owner.Size.Y - (m_owner.Y - old));                      }                      break;                  case CompassPoint.SouthWest:                  case CompassPoint.SouthSouthWest:                  case CompassPoint.South:                  case CompassPoint.SouthSouthEast:                  case CompassPoint.SouthEast:                      if (value - m_owner.Y >= 1)                      {                          m_owner.Size = new Vector(m_owner.Size.X' value - m_owner.Y);                      }                      break;              }
Missing Default,Trizbort,RoomPropertiesDialog,C:\repos\genstein_trizbort\RoomPropertiesDialog.cs,RoomPropertiesDialog,The following switch statement is missing a default case: switch (m_lastViewedTab)              {                  case Tab.Objects:                      m_tabControl.SelectedIndex = 0;                      break;                  case Tab.Description:                      m_tabControl.SelectedIndex = 1;                      break;              }
