Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ColorGraph,Color,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Color.cs,Mix,Cyclomatic complexity of the method is 8
Complex Method,ColorGraph,Graph,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Graph.cs,MarkAsResult,Cyclomatic complexity of the method is 8
Complex Method,ColorGraph,CompareNode,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNodes.cs,Work,Cyclomatic complexity of the method is 18
Long Parameter List,ColorGraph,Graph,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Graph.cs,Traverse,The method has 5 parameters.
Long Statement,ColorGraph,StringColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Colors.cs,CompareTo,The length of the statement  "	return other is StringColor ? String.Compare (Value' (other as StringColor).Value' StringComparison.Ordinal) : base.CompareTo (other); " is 134.
Long Statement,ColorGraph,Graph,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Graph.cs,OnNotifyNodeFinished,The length of the statement  "	System.Diagnostics.Debug.WriteLine (String.Format ("Finished {0} ({1}' color={2})"' result' GetType ()' sender.GetCurrentColor () == null ? "null" : sender.GetCurrentColor ().ToStringDemuxed ())); " is 196.
Long Statement,ColorGraph,GraphNode,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNode.cs,GetNotNullInput,The length of the statement  "	return Input.Where (inPoint => (inPoint != null) && (inPoint.GetCurrentColor () != null) && (!InvisiblePoints.Contains (inPoint))); " is 131.
Long Statement,ColorGraph,GraphNodeWithInput,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNodes.cs,DoWork,The length of the statement  "	List<Color> badColors = currentColors.Where (flow => (flow != null) && !(flow is TInput) && !(flow is IBlack)).ToList (); " is 121.
Long Statement,ColorGraph,Stringer,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNodes.cs,Work,The length of the statement  "	Result = Color.Mix (goodColors.Select (intColor => new StringColor (intColor.Value.ToString (CultureInfo.InvariantCulture)) as Color)); " is 135.
Long Statement,ColorGraph,ColorableClassWithSignalAndColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,Flow,The length of the statement  "	System.Diagnostics.Debug.WriteLine (String.Format ("\tFlowing {0} ({1})"' color == null ? "null" : color.ToStringDemuxed ()' ToString ())); " is 139.
Long Statement,ColorGraph,ColorableClassWithSignalAndColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,NotifyBack,The length of the statement  "	System.Diagnostics.Debug.WriteLine (String.Format ("\tSerial Signalling {0} ({1}' color={2})"' signal' ToString ()' CurrentColor == null ? "null" : CurrentColor.ToStringDemuxed ())); " is 182.
Long Statement,ColorGraph,ColorableClassWithSignalAndColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,NotifyBack,The length of the statement  "		System.Diagnostics.Debug.WriteLine (String.Format ("\tBroadcast repeated {0} ({1}' color={2})"' signal' ToString ()' CurrentColor == null ? "null" : CurrentColor.ToStringDemuxed ())); " is 183.
Long Statement,ColorGraph,ColorableClassWithSignalAndColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,NotifyBack,The length of the statement  "		System.Diagnostics.Debug.WriteLine (String.Format ("\tBroadcast {0} ({1}' color={2})"' signal' ToString ()' CurrentColor == null ? "null" : CurrentColor.ToStringDemuxed ())); " is 174.
Long Statement,ColorGraph,ColorableClassWithSignalAndColor,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,BuildExceptionChain,The length of the statement  "	Exception[] previousErrors = output.Select (conn => conn.GetSignal ()).Where (signal => signal is ErrorSignal).Select (signal => ((ErrorSignal)signal).Error).ToArray (); " is 169.
Long Statement,ColorGraph,Vertex,C:\repos\Zelenov_ColorGraph\ColorGraph\src\IColorable.cs,GetLengthBeetween,The length of the statement  "	var edge = GetNextPaths ().FirstOrDefault (path => path == to || (path is IEdge && path.GetNextPaths ().Contains (to))); " is 120.
Magic Number,ColorGraph.Lists,ZSortedList,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Lists\ZSortedList.cs,GetHashIndex,The following statement contains a magic number: while (l < r) {  	m = l + (r - l) / 2;  	var cmp = Math.Sign (_hashes [m].CompareTo (hash));  	switch (cmp) {  	case 0: {  		found = true;  		return m;  	}  	case 1: {  		r = m;  		break;  	}  	case -1: {  		l = m + 1;  		break;  	}  	}  }  
Magic Number,ColorGraph.Lists,ZSortedList,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Lists\ZSortedList.cs,GetHashIndex,The following statement contains a magic number: m = l + (r - l) / 2;  
Magic Number,ColorGraph.Lists,ZSortedList,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Lists\ZSortedList.cs,GetHashIndex,The following statement contains a magic number: return l + (r - l) / 2;  
Missing Default,ColorGraph,Color,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Color.cs,Mix,The following switch statement is missing a default case: switch (cmpResult) {  case -1://father is less than son   {  	//add son  	i = i._nextColor;  	break;  }  case 1://father is greater than son   {  	//add father  	i._prevColor.AddAfter (j);  	j = j._nextColor;  	break;  }  case 0://equal   {  	//add anybody  	j = j._nextColor;  	i = i._nextColor;  	break;  }  }  
Missing Default,ColorGraph,Color,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Color.cs,Contains,The following switch statement is missing a default case: switch (cmpResult) {  case -1://father is less than son   {  	//add son  	i = i._nextColor;  	break;  }  case 1://father is greater than son   {  	return false;  }  case 0://equal   {  	//add anybody  	j = j._nextColor;  	i = i._nextColor;  	break;  }  }  
Missing Default,ColorGraph,CompareNode,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNodes.cs,Work,The following switch statement is missing a default case: switch (compareType.Value) {  case (CompareType.Less): {  	res = value < compareWith.Value;  	break;  }  case (CompareType.LessOrEqual): {  	res = value <= compareWith.Value;  	break;  }  case (CompareType.Equal): {  	res = value == compareWith.Value;  	break;  }  case (CompareType.MoreOrEqual): {  	res = value >= compareWith.Value;  	break;  }  case (CompareType.More): {  	res = value > compareWith.Value;  	break;  }  case (CompareType.NotEqual): {  	res = value != compareWith.Value;  	break;  }  }  
Missing Default,ColorGraph,CompareNode,C:\repos\Zelenov_ColorGraph\ColorGraph\src\GraphNodes.cs,Work,The following switch statement is missing a default case: switch (res) {  case (true): {  	Result = Color.Mix (goodColors.Cast<Color> ());  	FlowResult ();  	break;  }  case (false): {  	GoBack (new ErrorSignal (new Exception ("Comparison failed")));  	break;  }  }  
Missing Default,ColorGraph.Lists,ZSortedList,C:\repos\Zelenov_ColorGraph\ColorGraph\src\Lists\ZSortedList.cs,GetHashIndex,The following switch statement is missing a default case: switch (cmp) {  case 0: {  	found = true;  	return m;  }  case 1: {  	r = m;  	break;  }  case -1: {  	l = m + 1;  	break;  }  }  
