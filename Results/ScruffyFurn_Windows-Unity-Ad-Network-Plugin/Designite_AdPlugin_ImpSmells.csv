Implementation smell,Namespace,Class,File,Method,Description
Empty Catch Block,Template,App,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\App.xaml.cs,RemoveSplashScreen,The method has an empty catch block.
Empty Catch Block,Template,MainPage,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\MainPage.xaml.cs,GetSplashBackgroundColor,The method has an empty catch block.
Magic Number,Template,MainPage,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\MainPage.xaml.cs,GetSplashBackgroundColor,The following statement contains a magic number: try              {                  StorageFile file = await StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///AppxManifest.xml"));                  string manifest = await FileIO.ReadTextAsync(file);                  int idx = manifest.IndexOf("SplashScreen");                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("BackgroundColor");                  if (idx < 0)  // background is optional                      return;                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(idx + 2); // also remove quote and # char after it                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(0' idx);                  int value = Convert.ToInt32(manifest' 16) & 0x00FFFFFF;                  byte r = (byte)(value >> 16);                  byte g = (byte)((value & 0x0000FF00) >> 8);                  byte b = (byte)(value & 0x000000FF);                    CoreWindow.GetForCurrentThread().Dispatcher.RunAsync(CoreDispatcherPriority.High' delegate()                  {                      ExtendedSplashGrid.Background = new SolidColorBrush(Color.FromArgb(0xFF' r' g' b));                  });              }              catch (Exception)              { }
Magic Number,Template,MainPage,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\MainPage.xaml.cs,GetSplashBackgroundColor,The following statement contains a magic number: try              {                  StorageFile file = await StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///AppxManifest.xml"));                  string manifest = await FileIO.ReadTextAsync(file);                  int idx = manifest.IndexOf("SplashScreen");                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("BackgroundColor");                  if (idx < 0)  // background is optional                      return;                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(idx + 2); // also remove quote and # char after it                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(0' idx);                  int value = Convert.ToInt32(manifest' 16) & 0x00FFFFFF;                  byte r = (byte)(value >> 16);                  byte g = (byte)((value & 0x0000FF00) >> 8);                  byte b = (byte)(value & 0x000000FF);                    CoreWindow.GetForCurrentThread().Dispatcher.RunAsync(CoreDispatcherPriority.High' delegate()                  {                      ExtendedSplashGrid.Background = new SolidColorBrush(Color.FromArgb(0xFF' r' g' b));                  });              }              catch (Exception)              { }
Magic Number,Template,MainPage,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\MainPage.xaml.cs,GetSplashBackgroundColor,The following statement contains a magic number: try              {                  StorageFile file = await StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///AppxManifest.xml"));                  string manifest = await FileIO.ReadTextAsync(file);                  int idx = manifest.IndexOf("SplashScreen");                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("BackgroundColor");                  if (idx < 0)  // background is optional                      return;                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(idx + 2); // also remove quote and # char after it                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(0' idx);                  int value = Convert.ToInt32(manifest' 16) & 0x00FFFFFF;                  byte r = (byte)(value >> 16);                  byte g = (byte)((value & 0x0000FF00) >> 8);                  byte b = (byte)(value & 0x000000FF);                    CoreWindow.GetForCurrentThread().Dispatcher.RunAsync(CoreDispatcherPriority.High' delegate()                  {                      ExtendedSplashGrid.Background = new SolidColorBrush(Color.FromArgb(0xFF' r' g' b));                  });              }              catch (Exception)              { }
Magic Number,Template,MainPage,C:\repos\ScruffyFurn_Windows-Unity-Ad-Network-Plugin\Older Versions\Version 1.0\Windows Store Build\AdPlugin\MainPage.xaml.cs,GetSplashBackgroundColor,The following statement contains a magic number: try              {                  StorageFile file = await StorageFile.GetFileFromApplicationUriAsync(new Uri("ms-appx:///AppxManifest.xml"));                  string manifest = await FileIO.ReadTextAsync(file);                  int idx = manifest.IndexOf("SplashScreen");                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("BackgroundColor");                  if (idx < 0)  // background is optional                      return;                  manifest = manifest.Substring(idx);                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(idx + 2); // also remove quote and # char after it                  idx = manifest.IndexOf("\"");                  manifest = manifest.Substring(0' idx);                  int value = Convert.ToInt32(manifest' 16) & 0x00FFFFFF;                  byte r = (byte)(value >> 16);                  byte g = (byte)((value & 0x0000FF00) >> 8);                  byte b = (byte)(value & 0x000000FF);                    CoreWindow.GetForCurrentThread().Dispatcher.RunAsync(CoreDispatcherPriority.High' delegate()                  {                      ExtendedSplashGrid.Background = new SolidColorBrush(Color.FromArgb(0xFF' r' g' b));                  });              }              catch (Exception)              { }
