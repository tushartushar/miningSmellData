Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsBytesToIntegersImpl,Cyclomatic complexity of the method is 13
Complex Method,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsIntegersToBytesImpl,Cyclomatic complexity of the method is 13
Complex Method,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,Cyclomatic complexity of the method is 15
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt16_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt64_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt16_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt64_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt16_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt64_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt16_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt64_NoChecks,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments16,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments32,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments64,The method has 5 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsBytesToIntegersImpl,The method has 6 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsIntegersToBytesImpl,The method has 6 parameters.
Long Parameter List,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The method has 10 parameters.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsBytesToIntegersImpl,The length of the statement  "		throw new ArgumentOutOfRangeException ("count"' "count < 0' and/or (count * sizeof(T)) > dst.Length and/or count > src.Length"); " is 128.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArgumentsIntegersToBytesImpl,The length of the statement  "		throw new ArgumentOutOfRangeException ("count"' "count < 0' and/or (count * sizeof(T)) > dst.Length and/or count > src.Length"); " is 128.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "		throw new ArgumentException (String.Format ("{0}.Length < 0 : {1} < 0"' srcName ?? "src"' srcLength)' srcName ?? "src"); " is 120.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "		throw new ArgumentException (String.Format ("{0}.Length < 0 : {1} < 0"' dstName ?? "dst"' dstLength)' dstName ?? "dst"); " is 120.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "			throw new ArgumentOutOfRangeException (lengthName ?? "length"' String.Format ("{0} < 0 : {1} < 0"' lengthName ?? "length"' length)); " is 132.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "				throw new ArgumentException (String.Format ("{0} >= {1}.Length : {2} >= {3}"' srcOffName ?? "srcOff"' srcName ?? "src"' srcOff' srcLength)); " is 140.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "				throw new ArgumentOutOfRangeException (lengthName ?? "length"' String.Format ("{0} > {1}.Length : {2} > {3}"' lengthName ?? "length"' srcName ?? "src"' length' srcLength)); " is 172.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "			throw new ArgumentException (String.Format ("{0} + {1} > {2}.Length : {3} + {4} > {5}"' srcOffName ?? "srcOff"' lengthName ?? "length"' srcName ?? "src"' srcOff' length' srcLength)); " is 182.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "			throw new ArgumentOutOfRangeException (srcOffName ?? "srcOff"' String.Format ("{0} < 0 : {1} < 0"' srcOffName ?? "srcOff"' srcOff)); " is 132.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "				throw new ArgumentException (String.Format ("{0} >= {1} : {2} >= {3}"' dstOffName ?? "dstOff"' dstName ?? "dst"' dstOff' dstLength)); " is 133.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "				throw new ArgumentOutOfRangeException (lengthName ?? "length"' String.Format ("{0} > {1}.Length : {2} > {3}"' lengthName ?? "length"' dstName ?? "dst"' length' dstLength)); " is 172.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "			throw new ArgumentException (String.Format ("{0} + {1} > {2}.Length : {3} + {4} > {5}"' dstOffName ?? "dstOff"' lengthName ?? "length"' dstName ?? "dst"' dstOff' length' dstLength)); " is 182.
Long Statement,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "			throw new ArgumentOutOfRangeException (dstOffName ?? "dstOff"' String.Format ("{0} < 0 : {1} < 0"' dstOffName ?? "dstOff"' dstOff)); " is 132.
Long Statement,BitManipulator,RotationExtensions,C:\repos\zenith-nz_BitManipulator\RotationExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "	Debug.Assert (typeSizeBits >= 1 && typeSizeBits <= sizeof(UInt64)' "typeSizeBits is less than a byte' or more than a UInt64 (bit-size)."); " is 138.
Long Statement,BitManipulator,RotationExtensions,C:\repos\zenith-nz_BitManipulator\RotationExtensions.cs,ThrowOnInvalidArgument,The length of the statement  "		throw new ArgumentOutOfRangeException ("distance"' String.Format ("distance > sizeOfTBits : {0} > {1}"' distance' typeSizeBits)); " is 129.
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [0] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 0] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [0] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 0] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] << 24 | ba [1] << 16 | ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] << 24 | ba [1] << 16 | ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] << 24 | ba [1] << 16 | ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] << 24 | ba [1] << 16 | ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] << 24 | ba [1] << 16 | ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] << 24 | ba [baOff + 1] << 16 | ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] << 24 | ba [baOff + 1] << 16 | ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] << 24 | ba [baOff + 1] << 16 | ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] << 24 | ba [baOff + 1] << 16 | ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] << 24 | ba [baOff + 1] << 16 | ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToBigEndian_NoChecks (ba' 0);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((Int32)(n)).ToBigEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToBigEndian_NoChecks (ba' baOff);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((Int32)(n)).ToBigEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt64_NoChecks,The following statement contains a magic number: return ((Int64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToInt64_NoChecks,The following statement contains a magic number: return ((Int64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [0] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [0] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 0] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [0] << 24 | (UInt32)ba [1] << 16 | (UInt32)ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [0] << 24 | (UInt32)ba [1] << 16 | (UInt32)ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [0] << 24 | (UInt32)ba [1] << 16 | (UInt32)ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [0] << 24 | (UInt32)ba [1] << 16 | (UInt32)ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [0] << 24 | (UInt32)ba [1] << 16 | (UInt32)ba [2] << 8 | ba [3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [baOff] << 24 | (UInt32)ba [baOff + 1] << 16 | (UInt32)ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [baOff] << 24 | (UInt32)ba [baOff + 1] << 16 | (UInt32)ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [baOff] << 24 | (UInt32)ba [baOff + 1] << 16 | (UInt32)ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [baOff] << 24 | (UInt32)ba [baOff + 1] << 16 | (UInt32)ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt32_NoChecks,The following statement contains a magic number: return (UInt32)ba [baOff] << 24 | (UInt32)ba [baOff + 1] << 16 | (UInt32)ba [baOff + 2] << 8 | ba [baOff + 3];  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToBigEndian_NoChecks (ba' 0);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n)).ToBigEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToBigEndian_NoChecks (ba' baOff);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToBigEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n)).ToBigEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt64_NoChecks,The following statement contains a magic number: return ((UInt64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,BigEndianToUInt64_NoChecks,The following statement contains a magic number: return ((UInt64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt16_NoChecks,The following statement contains a magic number: return (Int16)(ba [0] | (ba [1] << 8));  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt16_NoChecks,The following statement contains a magic number: return (Int16)(ba [baOff] | (ba [baOff + 1] << 8));  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] | ba [1] << 8 | ba [2] << 16 | ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] | ba [1] << 8 | ba [2] << 16 | ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] | ba [1] << 8 | ba [2] << 16 | ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] | ba [1] << 8 | ba [2] << 16 | ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [0] | ba [1] << 8 | ba [2] << 16 | ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | ba [baOff + 1] << 8 | ba [baOff + 2] << 16 | ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | ba [baOff + 1] << 8 | ba [baOff + 2] << 16 | ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | ba [baOff + 1] << 8 | ba [baOff + 2] << 16 | ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | ba [baOff + 1] << 8 | ba [baOff + 2] << 16 | ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | ba [baOff + 1] << 8 | ba [baOff + 2] << 16 | ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToLittleEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToLittleEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToLittleEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((Int32)(n >> 32)).ToLittleEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt64_NoChecks,The following statement contains a magic number: return ((Int64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToInt64_NoChecks,The following statement contains a magic number: return ((Int64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 1] = (byte)(n >> 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 2] = (byte)(n >> 16);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ba [baOff + 3] = (byte)(n >> 24);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [0] | (UInt32)ba [1] << 8 | (UInt32)ba [2] << 16 | (UInt32)ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [0] | (UInt32)ba [1] << 8 | (UInt32)ba [2] << 16 | (UInt32)ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [0] | (UInt32)ba [1] << 8 | (UInt32)ba [2] << 16 | (UInt32)ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [0] | (UInt32)ba [1] << 8 | (UInt32)ba [2] << 16 | (UInt32)ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [0] | (UInt32)ba [1] << 8 | (UInt32)ba [2] << 16 | (UInt32)ba [3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | (UInt32)ba [baOff + 1] << 8 | (UInt32)ba [baOff + 2] << 16 | (UInt32)ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | (UInt32)ba [baOff + 1] << 8 | (UInt32)ba [baOff + 2] << 16 | (UInt32)ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | (UInt32)ba [baOff + 1] << 8 | (UInt32)ba [baOff + 2] << 16 | (UInt32)ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | (UInt32)ba [baOff + 1] << 8 | (UInt32)ba [baOff + 2] << 16 | (UInt32)ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt32_NoChecks,The following statement contains a magic number: return ba [baOff] | (UInt32)ba [baOff + 1] << 8 | (UInt32)ba [baOff + 2] << 16 | (UInt32)ba [baOff + 3] << 24;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToLittleEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToLittleEndian_NoChecks (ba' 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToLittleEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ToLittleEndian_NoChecks,The following statement contains a magic number: ((UInt32)(n >> 32)).ToLittleEndian_NoChecks (ba' baOff + 4);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt64_NoChecks,The following statement contains a magic number: return ((UInt64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,LittleEndianToUInt64_NoChecks,The following statement contains a magic number: return ((UInt64)hi << 32) | lo;  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments16,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<ushort> (ba' baOff' 16 / 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments16,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<ushort> (ba' baOff' 16 / 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments32,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<uint> (ba' baOff' 32 / 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments32,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<uint> (ba' baOff' 32 / 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments64,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<ulong> (ba' baOff' 64 / 8);  
Magic Number,BitManipulator,EndiannessExtensions,C:\repos\zenith-nz_BitManipulator\EndiannessExtensions.cs,ValidateArguments64,The following statement contains a magic number: ValidateArgumentsBytesToIntegersImpl<ulong> (ba' baOff' 64 / 8);  
Magic Number,BitManipulator,RotationExtensions,C:\repos\zenith-nz_BitManipulator\RotationExtensions.cs,RotateLeft,The following statement contains a magic number: ThrowOnInvalidArgument (distance' 8);  
Magic Number,BitManipulator,RotationExtensions,C:\repos\zenith-nz_BitManipulator\RotationExtensions.cs,RotateRight,The following statement contains a magic number: ThrowOnInvalidArgument (distance' 8);  
