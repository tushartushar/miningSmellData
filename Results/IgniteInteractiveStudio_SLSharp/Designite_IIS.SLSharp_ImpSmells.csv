Implementation smell,Namespace,Class,File,Method,Description
Long Method,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,GlslVisitor,The method has 3100 lines of code.
Long Method,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,The method has 135 lines of code.
Long Method,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,HlslVisitor,The method has 957 lines of code.
Complex Method,IIS.SLSharp.Runtime,ResourceManager,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Runtime\ResourceManager.cs,GetResource,Cyclomatic complexity of the method is 9
Complex Method,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,CompileShader,Cyclomatic complexity of the method is 12
Complex Method,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,GetConstructor,Cyclomatic complexity of the method is 9
Complex Method,IIS.SLSharp.Translation.GLSL,GlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslSourceBuilder.cs,ToGlsl,Cyclomatic complexity of the method is 10
Complex Method,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitAssignmentExpression,Cyclomatic complexity of the method is 35
Complex Method,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitPrimitiveExpression,Cyclomatic complexity of the method is 8
Complex Method,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitBinaryOperatorExpression,Cyclomatic complexity of the method is 51
Complex Method,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitUnaryOperatorExpression,Cyclomatic complexity of the method is 8
Complex Method,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,Cyclomatic complexity of the method is 65
Complex Method,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,GenerateVaryingStruct,Cyclomatic complexity of the method is 12
Complex Method,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitAssignmentExpression,Cyclomatic complexity of the method is 35
Complex Method,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitPrimitiveExpression,Cyclomatic complexity of the method is 8
Complex Method,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitBinaryOperatorExpression,Cyclomatic complexity of the method is 53
Complex Method,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitUnaryOperatorExpression,Cyclomatic complexity of the method is 8
Long Parameter List,IIS.SLSharp.Descriptions,SourceDescription,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Descriptions\SourceDescription.cs,SourceDescription,The method has 7 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Parameter List,IIS.SLSharp.Shaders,ShaderDefinition,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\ShaderDefinition.BooleanVector.cs,TextureProjGradOffset,The method has 5 parameters.
Long Statement,IIS.SLSharp.Reflection,ReflectionMarkerAttribute,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Reflection\ReflectionMarkerAttribute.cs,FindProperty,The length of the statement  "	return (from p in t.GetProperties (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static) " is 126.
Long Statement,IIS.SLSharp.Reflection,ReflectionMarkerAttribute,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Reflection\ReflectionMarkerAttribute.cs,FindMethod,The length of the statement  "	return (from m in t.GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Static) " is 123.
Long Statement,IIS.SLSharp.Runtime,ResourceManager,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Runtime\ResourceManager.cs,GetResource,The length of the statement  "	var typeBuilder = module.DefineType (type.Name + "SharedSingletonWrapper"' TypeAttributes.Public | TypeAttributes.Class' type); " is 127.
Long Statement,IIS.SLSharp.Runtime,ResourceManager,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Runtime\ResourceManager.cs,GetResource,The length of the statement  "	var disposeFun = typeBuilder.DefineMethod ("Dispose"' MethodAttributes.Virtual | MethodAttributes.Public' typeof(void)' Type.EmptyTypes); " is 137.
Long Statement,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,CompileShader,The length of the statement  "	var desc = new SourceDescription (unit.Functions' _context.Uniforms' _context.Attribs' _context.Varyings' _context.Ins' _context.Outs' unit.ForwardDeclarations); " is 161.
Long Statement,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,GetConstructor,The length of the statement  "	var beginFun = typeBuilder.DefineMethod (baseBegin.Name' MethodAttributes.Virtual | MethodAttributes.Public' typeof(void)' Type.EmptyTypes); " is 140.
Long Statement,IIS.SLSharp.Translation,VisitorBase,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\VisitorBase.Abstract.cs,CheckWarnings,The length of the statement  "	var warn = def.CustomAttributes.FirstOrDefault (a => a.AttributeType.Resolve ().MetadataToken.ToInt32 () == typeof(WarningAttribute).MetadataToken); " is 148.
Long Statement,IIS.SLSharp.Translation,VisitorBase,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\VisitorBase.Abstract.cs,VisitShaderDefCall,The length of the statement  "	return Handlers.TryGetValue (etok' out handler) ? handler (m' invocationExpression) : PassThrough (m' invocationExpression); " is 124.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslSourceBuilder.cs,ToGlsl,The length of the statement  "	desc.Uniforms.ForEach (v => s.AppendFormat ("uniform {0} {1};{2}"' v.Type.ToGlsl ()' v.Name' v.Comment).Append (Environment.NewLine)); " is 134.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslSourceBuilder.cs,ToGlsl,The length of the statement  "	desc.Varyings.ForEach (v => s.AppendFormat ("{0} {1} {2};{3}"' varyingDirection' v.Type.ToGlsl ()' v.Name' v.Comment).Append (Environment.NewLine)); " is 148.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslSourceBuilder.cs,ToGlsl,The length of the statement  "		desc.VertexIns.ForEach (v => s.AppendFormat ("in {0} {1};{2}"' v.Type.ToGlsl ()' v.Name' v.Comment).Append (Environment.NewLine)); " is 130.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslSourceBuilder.cs,ToGlsl,The length of the statement  "		desc.FragmentOuts.ForEach (v => s.AppendFormat ("out {0} {1};{2}"' v.Type.ToGlsl ()' v.Name' v.Comment).Append (Environment.NewLine)); " is 134.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,GetParameterString,The length of the statement  "		sig = parameters.Take (parameters.Count - 1).Aggregate (sig' (current' v) => current + ToGlslParamType (v) + " " + v.Name + "' "); " is 130.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,RegisterMethod,The length of the statement  "	var attr = m.CustomAttributes.FirstOrDefault (a => a.AttributeType.Resolve ().MetadataToken == neededType.MetadataToken); " is 121.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitObjectCreateExpression,The length of the statement  "	return objectCreateExpression.Type.AcceptVisitor (this' data).Append ("(").Append (ArgsToString (objectCreateExpression.Arguments)).Append (")"); " is 145.
Long Statement,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitSwitchStatement,The length of the statement  "	var result = new StringBuilder ("switch (").Append (switchStatement.Expression.AcceptVisitor (this' data)).Append (")"); " is 120.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,The length of the statement  "			s.AppendFormat ("uniform extern {0} {1} : register(s{3});{2}"' typ' v.Name' v.Comment' v.DefaultRegister.Value).Append (Environment.NewLine); " is 141.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,The length of the statement  "		desc.VertexIns.ForEach (v => s.AppendFormat ("    {0} {1}: {2};"' v.Type.ToHlsl ()' v.Name' v.Semantic.ToHlsl ()).AppendLine ()); " is 129.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,The length of the statement  "		desc.FragmentOuts.ForEach (v => s.AppendFormat ("    {0} {1}: {2};"' v.Type.ToHlsl ()' v.Name' v.Semantic.ToHlsl ()).AppendLine ()); " is 132.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,GetParameterString,The length of the statement  "		sig = parameters.Take (parameters.Count - 1).Aggregate (sig' (current' v) => current + ToHlslParamType (v) + " " + v.Name + "' "); " is 130.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,RegisterMethod,The length of the statement  "	var attr = m.CustomAttributes.FirstOrDefault (a => a.AttributeType.Resolve ().MetadataToken == neededType.MetadataToken); " is 121.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitObjectCreateExpression,The length of the statement  "				// TODO: rather use a float3 widen(float f) { return float3{f'f'f}; } util func or temporary var than expanding to float3(ast'ast'ast) " is 134.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitObjectCreateExpression,The length of the statement  "	return objectCreateExpression.Type.AcceptVisitor (this' data).Append ("(").Append (ArgsToString (objectCreateExpression.Arguments)).Append (")"); " is 145.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitBinaryOperatorExpression,The length of the statement  "		if ((lhs.Type.Name.StartsWith ("mat")/*&& rhs.Type.Name.StartsWith("vec")*/) || (rhs.Type.Name.StartsWith ("mat")/*&& lhs.Type.Name.StartsWith("vec")*/)) { " is 155.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitBinaryOperatorExpression,The length of the statement  "			result.AppendFormat ("mul({0}' {1})"' binaryOperatorExpression.Left.AcceptVisitor (this' data)' binaryOperatorExpression.Right.AcceptVisitor (this' data)); " is 155.
Long Statement,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitSwitchStatement,The length of the statement  "	var result = new StringBuilder ("switch (").Append (switchStatement.Expression.AcceptVisitor (this' data)).Append (")"); " is 120.
Magic Number,IIS.SLSharp.Shaders,AttributeHelper,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\AttributeHelper.cs,IsFragmentOut,The following statement contains a magic number: return t.Resolve ().MetadataToken.ToInt32 () == _attribToken [2];  
Magic Number,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,GetConstructor,The following statement contains a magic number: foreach (var prop in type.GetProperties (BindingFlagsAny)) {  	var attr = prop.GetCustomAttributes (typeof(UniformAttribute)' false);  	if (attr.Length == 0)  		continue;  	var info = TypeMap [prop.PropertyType.MetadataToken];  	var uniformCall = Binding.Resolve (info.Token);  	var f = typeBuilder.DefineField ("m_" + prop.Name' typeof(int)' FieldAttributes.Private);  	//var visibility = prop.PropertyType.IsPublic ? MethodAttributes.Public : MethodAttributes.Family;  	const MethodAttributes visibility = MethodAttributes.Public;  	var getter = prop.GetSetMethod () != null ? prop.GetGetMethod ().Name : "get_" + prop.Name;  	var setter = prop.GetSetMethod () != null ? prop.GetSetMethod ().Name : "set_" + prop.Name;  	var m = typeBuilder.DefineMethod (setter' MethodAttributes.Virtual | visibility' typeof(void)' new[] {  		prop.PropertyType  	});  	var ilg = m.GetILGenerator ();  	ilg.Emit (OpCodes.Ldarg' 0);  	ilg.Emit (OpCodes.Ldfld' f);  	if (uniformCall.GetParameters ().Length == 2)  		ilg.Emit (OpCodes.Ldarg' 1);  	ilg.Emit (OpCodes.Call' uniformCall);  	ilg.Emit (OpCodes.Ret);  	m = typeBuilder.DefineMethod (getter' MethodAttributes.Virtual | visibility' prop.PropertyType' Type.EmptyTypes);  	ilg = m.GetILGenerator ();  	ilg.Emit (OpCodes.Newobj' typeof(NotImplementedException));  	ilg.Emit (OpCodes.Throw);  }  
Magic Number,IIS.SLSharp.Shaders,Shader,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Shaders\Shader.Context.cs,GetConstructor,The following statement contains a magic number: if (uniformCall.GetParameters ().Length == 2)  	ilg.Emit (OpCodes.Ldarg' 1);  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,TextureLod,The following statement contains a magic number: Debug.Assert (i.Arguments.Count == 3);  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,Refract,The following statement contains a magic number: Debug.Assert (i.Arguments.Count == 3);  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,Refract,The following statement contains a magic number: args [1] = args [2];  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,Refract,The following statement contains a magic number: args [2] = a1;  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitObjectCreateExpression,The following statement contains a magic number: if ("1234".Contains (typ.Last ())) {  	// either vector or matrix type  	var numRows = int.Parse (typ.Last ().ToString ());  	if (typ [typ.Length - 2] == 'x') {  		// its a matrix type  	} else {  		// its a vector type  		if ((objectCreateExpression.Arguments.Count == 1) && (numRows > 1)) {  			// scalar intialize all elements to a const  			// TODO: rather use a float3 widen(float f) { return float3{f'f'f}; } util func or temporary var than expanding to float3(ast'ast'ast)  			var args = new List<Expression> ();  			for (var i = 0; i < numRows; i++)  				args.Add (objectCreateExpression.Arguments.First ());  			return objectCreateExpression.Type.AcceptVisitor (this' data).Append ("(").Append (ArgsToString (args).Append (")"));  		}  	}  }  
Magic Number,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitObjectCreateExpression,The following statement contains a magic number: if (typ [typ.Length - 2] == 'x') {  	// its a matrix type  } else {  	// its a vector type  	if ((objectCreateExpression.Arguments.Count == 1) && (numRows > 1)) {  		// scalar intialize all elements to a const  		// TODO: rather use a float3 widen(float f) { return float3{f'f'f}; } util func or temporary var than expanding to float3(ast'ast'ast)  		var args = new List<Expression> ();  		for (var i = 0; i < numRows; i++)  			args.Add (objectCreateExpression.Arguments.First ());  		return objectCreateExpression.Type.AcceptVisitor (this' data).Append ("(").Append (ArgsToString (args).Append (")"));  	}  }  
Missing Default,IIS.SLSharp.Translation.GLSL,GlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\GLSL\GlslVisitor.cs,VisitUnaryOperatorExpression,The following switch statement is missing a default case: switch (unaryOperatorExpression.Operator) {  case UnaryOperatorType.Decrement:  	return result.Append ("--").Append (exp);  case UnaryOperatorType.Increment:  	return result.Append ("++").Append (exp);  case UnaryOperatorType.Minus:  	return result.Append ("-").Append (exp);  case UnaryOperatorType.Plus:  	return result.Append ("+").Append (exp);  case UnaryOperatorType.BitNot:  	return result.Append ("~").Append (exp);  case UnaryOperatorType.Not:  	return result.Append ("!").Append (exp);  case UnaryOperatorType.PostDecrement:  	return result.Append (exp).Append ("--");  case UnaryOperatorType.PostIncrement:  	return result.Append (exp).Append ("++");  }  
Missing Default,IIS.SLSharp.Translation.HLSL,HlslSourceBuilder,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslSourceBuilder.cs,ToHlsl,The following switch statement is missing a default case: switch (semantic) {  case UsageSemantic.Position0:  	return "POSITION0";  case UsageSemantic.Position1:  	return "POSITION1";  case UsageSemantic.Position2:  	return "POSITION2";  case UsageSemantic.Position3:  	return "POSITION3";  case UsageSemantic.Position4:  	return "POSITION4";  case UsageSemantic.Position5:  	return "POSITION5";  case UsageSemantic.Position6:  	return "POSITION6";  case UsageSemantic.Position7:  	return "POSITION7";  case UsageSemantic.Position8:  	return "POSITION8";  case UsageSemantic.Position9:  	return "POSITION9";  case UsageSemantic.Position10:  	return "POSITION10";  case UsageSemantic.Position11:  	return "POSITION11";  case UsageSemantic.Position12:  	return "POSITION12";  case UsageSemantic.Position13:  	return "POSITION13";  case UsageSemantic.Position14:  	return "POSITION14";  case UsageSemantic.Position15:  	return "POSITION15";  case UsageSemantic.Color0:  	return "COLOR0";  case UsageSemantic.Color1:  	return "COLOR1";  case UsageSemantic.Color2:  	return "COLOR2";  case UsageSemantic.Color3:  	return "COLOR3";  case UsageSemantic.Color4:  	return "COLOR4";  case UsageSemantic.Color5:  	return "COLOR5";  case UsageSemantic.Color6:  	return "COLOR6";  case UsageSemantic.Color7:  	return "COLOR7";  case UsageSemantic.Color8:  	return "COLOR8";  case UsageSemantic.Color9:  	return "COLOR9";  case UsageSemantic.Color10:  	return "COLOR10";  case UsageSemantic.Color11:  	return "COLOR11";  case UsageSemantic.Color12:  	return "COLOR12";  case UsageSemantic.Color13:  	return "COLOR13";  case UsageSemantic.Color14:  	return "COLOR14";  case UsageSemantic.Color15:  	return "COLOR15";  case UsageSemantic.Texcoord0:  	return "TEXCOORD0";  case UsageSemantic.Texcoord1:  	return "TEXCOORD1";  case UsageSemantic.Texcoord2:  	return "TEXCOORD2";  case UsageSemantic.Texcoord3:  	return "TEXCOORD3";  case UsageSemantic.Texcoord4:  	return "TEXCOORD4";  case UsageSemantic.Texcoord5:  	return "TEXCOORD5";  case UsageSemantic.Texcoord6:  	return "TEXCOORD6";  case UsageSemantic.Texcoord7:  	return "TEXCOORD7";  case UsageSemantic.Texcoord8:  	return "TEXCOORD8";  case UsageSemantic.Texcoord9:  	return "TEXCOORD9";  case UsageSemantic.Texcoord10:  	return "TEXCOORD10";  case UsageSemantic.Texcoord11:  	return "TEXCOORD11";  case UsageSemantic.Texcoord12:  	return "TEXCOORD12";  case UsageSemantic.Texcoord13:  	return "TEXCOORD13";  case UsageSemantic.Texcoord14:  	return "TEXCOORD14";  case UsageSemantic.Texcoord15:  	return "TEXCOORD15";  case UsageSemantic.Normal0:  	return "NORMAL0";  case UsageSemantic.Normal1:  	return "NORMAL1";  case UsageSemantic.Normal2:  	return "NORMAL2";  case UsageSemantic.Normal3:  	return "NORMAL3";  case UsageSemantic.Normal4:  	return "NORMAL4";  case UsageSemantic.Normal5:  	return "NORMAL5";  case UsageSemantic.Normal6:  	return "NORMAL6";  case UsageSemantic.Normal7:  	return "NORMAL7";  case UsageSemantic.Normal8:  	return "NORMAL8";  case UsageSemantic.Normal9:  	return "NORMAL9";  case UsageSemantic.Normal10:  	return "NORMAL10";  case UsageSemantic.Normal11:  	return "NORMAL11";  case UsageSemantic.Normal12:  	return "NORMAL12";  case UsageSemantic.Normal13:  	return "NORMAL13";  case UsageSemantic.Normal14:  	return "NORMAL14";  case UsageSemantic.Normal15:  	return "NORMAL15";  case UsageSemantic.Depth:  	return "DEPTH";  }  
Missing Default,IIS.SLSharp.Translation.HLSL,HlslVisitor,F:\newReposMay17\IgniteInteractiveStudio_SLSharp\IIS.SLSharp\Translation\HLSL\HlslVisitor.Unimplemented.cs,VisitUnaryOperatorExpression,The following switch statement is missing a default case: switch (unaryOperatorExpression.Operator) {  case UnaryOperatorType.Decrement:  	return result.Append ("--").Append (exp);  case UnaryOperatorType.Increment:  	return result.Append ("++").Append (exp);  case UnaryOperatorType.Minus:  	return result.Append ("-").Append (exp);  case UnaryOperatorType.Plus:  	return result.Append ("+").Append (exp);  case UnaryOperatorType.BitNot:  	return result.Append ("~").Append (exp);  case UnaryOperatorType.Not:  	return result.Append ("!").Append (exp);  case UnaryOperatorType.PostDecrement:  	return result.Append (exp).Append ("--");  case UnaryOperatorType.PostIncrement:  	return result.Append (exp).Append ("++");  }  
