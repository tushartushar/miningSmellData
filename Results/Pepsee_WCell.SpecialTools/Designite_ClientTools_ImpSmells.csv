Implementation smell,Namespace,Class,File,Method,Description
Long Method,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The method has 149 lines of code.
Complex Method,ClientTools.UpdateFields,UpdateFieldComparer,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,Compare,Cyclomatic complexity of the method is 15
Complex Method,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillStartAndEndValues,Cyclomatic complexity of the method is 19
Complex Method,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,Cyclomatic complexity of the method is 10
Complex Method,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,Cyclomatic complexity of the method is 17
Long Parameter List,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,WriteFieldFromArray,The method has 5 parameters.
Long Parameter List,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,DumpEnum,The method has 6 parameters.
Long Identifier,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The length of the parameter dynamicObjectLookupTableOffset is 30.
Long Statement,ClientTools.Extractors,UpdateFieldWriter,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\UpdateFieldWriter.cs,Write,The length of the statement  "	using (var writer = new CodeFileWriter (fileName' "WCell.Constants.Updates"' "UpdateFields"' CodeFileWriter.StaticTag + " " + CodeFileWriter.Class' ""' "System")) { " is 164.
Long Statement,ClientTools.Extractors,GameObject,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\GameObjectTypeExtractor.cs,ReadSounds,The length of the statement  "		wowFile.BaseStream.Position = GameObjectTypeExtractor.Sounds [Sounds [i].Id].NameOffset - GameObjectTypeExtractor.s_VirtualOffset; " is 130.
Long Statement,ClientTools.Extractors,SpellFailureExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\SpellFailureExtractor.cs,DumpToFile,The length of the statement  "	using (var writer = new CodeFileWriter (outputFileName' "WCell.Constants.Spells"' "SpellFailedReason : byte"' "enum"' "")) { " is 124.
Long Statement,ClientTools,ClientTools,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\ClientTools.cs,Main,The length of the statement  "		throw new Exception ("Cannot start ClientTools - Please make sure the path is correct (By default: Inside of a folder that is on the same level as the WCell/ folder)"); " is 168.
Long Statement,ClientTools,RalekProgram,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\RalekProgram.cs,RalekMain,The length of the statement  "	//new DBCTools.Compare.DBCDirComparer(@"C:\WoW\Clients\World of Warcraft\Data\enUS\3.0.2.9056\DBFilesClient"' @"C:\Dev\WCell\Run\RealmServer\Content\dbc").Compare(writer); " is 171.
Long Statement,WCell.Tools.Ralek.UpdateFields,ExtendedUpdateField,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\ExtendedUpdateField.cs,Equals,The length of the statement  "		return FullName.Equals (field.FullName) && Size.Equals (field.Size) && Group == field.Group && Type == field.Type && Flags == field.Flags; " is 138.
Long Statement,ClientTools.UpdateFields,ChangedField,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,ToString,The length of the statement  "		movedStr = string.Format ("moved from {0} to {1} ({2}{3})"' Original.Offset' Changed.Offset' diff > 0 ? "+" : ""' diff); " is 120.
Long Statement,ClientTools.UpdateFields,ChangedField,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,ToString,The length of the statement  "	return string.Format ((Original.Offset != Changed.Offset ? "MOVED" : "CHANGED") + ": {0} {1} {2}"' Original.Name' movedStr' str.ToString ("' ")); " is 145.
Long Statement,ClientTools.UpdateFields,UpdateFieldComparer,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,Dump,The length of the statement  "	using (var writer = new StreamWriter (ToolConfig.OutputDir + "UpdateField Changes from " + oldFile.Version + " to " + newFile.Version + ".txt")) { " is 146.
Long Statement,ClientTools.UpdateFields,UpdateFieldComparer,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,Compare,The length of the statement  "				if (change is ChangedField && ((ChangedField)change).Changed != null && ((ChangedField)change).Changed.Offset >= newField.Offset) { " is 131.
Long Statement,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,GetGroupOffset,The length of the statement  "	if (group == ObjectTypeId.Unit || group == ObjectTypeId.GameObject || group == ObjectTypeId.DynamicObject || group == ObjectTypeId.Corpse || group == ObjectTypeId.Item) { " is 170.
Long Statement,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,WriteToFile,The length of the statement  "		DumpEnum (m_dynamicObjectStart' m_dynamicObjectEnd' objectDelta' "DynamicObjectFields"' m_dynamicObjectExtraFields' writer); " is 124.
Long Statement,ClientTools.Versions,UpdateCommand,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Versions\UpdateCommand.cs,MayTrigger,The length of the statement  "					trigger.Reply ("Invalid Client directory. Please use the Client-command to change it: {0}"' ToolConfig.Instance.GetWoWDir ()); " is 126.
Long Statement,ClientTools.Versions,VersionUpdater,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Versions\VersionUpdater.cs,WriteWCellInfo,The length of the statement  "	using (var writer = new CodeFileWriter (Path.Combine (ToolConfig.WCellConstantsRoot' "WCellInfo.cs")' "WCell.Constants"' "WCellInfo"' "static class"' ""' "WCell.Constants.Misc")) { " is 180.
Long Statement,ClientTools.Versions,VersionUpdater,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Versions\VersionUpdater.cs,WriteWCellInfo,The length of the statement  "		writer.WriteLine ("public static readonly ClientVersion RequiredVersion = new ClientVersion({0}' {1}' {2}' {3});"' WoWFile.Version.Major' WoWFile.Version.Minor' WoWFile.Version.Revision' WoWFile.Version.Build); " is 210.
Complex Conditional,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,GetGroupOffset,The conditional expression  "group == ObjectTypeId.Unit || group == ObjectTypeId.GameObject || group == ObjectTypeId.DynamicObject || group == ObjectTypeId.Corpse || group == ObjectTypeId.Item"  is complex.
Magic Number,ClientTools.Extractors,UpdateFieldWriter,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\UpdateFieldWriter.cs,Write,The following statement contains a magic number: using (var writer = new CodeFileWriter (fileName' "WCell.Constants.Updates"' "UpdateFields"' CodeFileWriter.StaticTag + " " + CodeFileWriter.Class' ""' "System")) {  	writer.ExecuteSafely (() =>  {  		writer.WriteIndent ("public static readonly ");  		writer.Array (UpdateFieldTypeName' "AllFields"' 2' ";"' () =>  {  			for (var i = 0; i < m_fields.Length; i++) {  				var fieldArr = m_fields [i];  				writer.WriteRegion (((ObjectTypeId)i).ToString ());  				writer.NewArray ("UpdateField"' "'"' () =>  {  					foreach (var field in fieldArr) {  						if (field != null) {  							writer.WriteCommentLine (field.FullName);  							var flags = Utility.GetSetIndicesEnum (field.Flags);  							var args = new[] {  								new KeyValuePair<string' object> ("Flags"' flags.TransformList (flag => "UpdateFieldFlags." + flag).ToString (" | "))'  								new KeyValuePair<string' object> ("Group"' "ObjectTypeId." + field.Group)'  								new KeyValuePair<string' object> ("Name"' "\"" + field.Name + "\"")'  								new KeyValuePair<string' object> ("Offset"' field.Offset)'  								new KeyValuePair<string' object> ("Size"' field.Size)'  								new KeyValuePair<string' object> ("Type"' "UpdateFieldType." + field.Type)  							};  							writer.NewInit (UpdateFieldTypeName' args' "'");  						}  						else {  							writer.WriteLine ("null'");  						}  					}  				});  				writer.WriteEndRegion ();  				writer.WriteLine ();  			}  		});  		writer.WriteLine ();  		//writer.WriteStaticMethod("Init"' () => {  		//});  		//writer.WriteStaticCTor(() => {  		//    writer.Call("Init");  		//});  	});  }  
Magic Number,ClientTools.Extractors,UpdateFieldWriter,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\UpdateFieldWriter.cs,Write,The following statement contains a magic number: writer.ExecuteSafely (() =>  {  	writer.WriteIndent ("public static readonly ");  	writer.Array (UpdateFieldTypeName' "AllFields"' 2' ";"' () =>  {  		for (var i = 0; i < m_fields.Length; i++) {  			var fieldArr = m_fields [i];  			writer.WriteRegion (((ObjectTypeId)i).ToString ());  			writer.NewArray ("UpdateField"' "'"' () =>  {  				foreach (var field in fieldArr) {  					if (field != null) {  						writer.WriteCommentLine (field.FullName);  						var flags = Utility.GetSetIndicesEnum (field.Flags);  						var args = new[] {  							new KeyValuePair<string' object> ("Flags"' flags.TransformList (flag => "UpdateFieldFlags." + flag).ToString (" | "))'  							new KeyValuePair<string' object> ("Group"' "ObjectTypeId." + field.Group)'  							new KeyValuePair<string' object> ("Name"' "\"" + field.Name + "\"")'  							new KeyValuePair<string' object> ("Offset"' field.Offset)'  							new KeyValuePair<string' object> ("Size"' field.Size)'  							new KeyValuePair<string' object> ("Type"' "UpdateFieldType." + field.Type)  						};  						writer.NewInit (UpdateFieldTypeName' args' "'");  					}  					else {  						writer.WriteLine ("null'");  					}  				}  			});  			writer.WriteEndRegion ();  			writer.WriteLine ();  		}  	});  	writer.WriteLine ();  	//writer.WriteStaticMethod("Init"' () => {  	//});  	//writer.WriteStaticCTor(() => {  	//    writer.Call("Init");  	//});  });  
Magic Number,ClientTools.Extractors,UpdateFieldWriter,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\Extractors\UpdateFieldWriter.cs,Write,The following statement contains a magic number: writer.Array (UpdateFieldTypeName' "AllFields"' 2' ";"' () =>  {  	for (var i = 0; i < m_fields.Length; i++) {  		var fieldArr = m_fields [i];  		writer.WriteRegion (((ObjectTypeId)i).ToString ());  		writer.NewArray ("UpdateField"' "'"' () =>  {  			foreach (var field in fieldArr) {  				if (field != null) {  					writer.WriteCommentLine (field.FullName);  					var flags = Utility.GetSetIndicesEnum (field.Flags);  					var args = new[] {  						new KeyValuePair<string' object> ("Flags"' flags.TransformList (flag => "UpdateFieldFlags." + flag).ToString (" | "))'  						new KeyValuePair<string' object> ("Group"' "ObjectTypeId." + field.Group)'  						new KeyValuePair<string' object> ("Name"' "\"" + field.Name + "\"")'  						new KeyValuePair<string' object> ("Offset"' field.Offset)'  						new KeyValuePair<string' object> ("Size"' field.Size)'  						new KeyValuePair<string' object> ("Type"' "UpdateFieldType." + field.Type)  					};  					writer.NewInit (UpdateFieldTypeName' args' "'");  				}  				else {  					writer.WriteLine ("null'");  				}  			}  		});  		writer.WriteEndRegion ();  		writer.WriteLine ();  	}  });  
Magic Number,ClientTools,RalekProgram,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\RalekProgram.cs,WritePackedGUID,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	byte temp = (byte)(guid >> (i * 8));  	if (temp != 0) {  		mask |= (byte)(1 << i);  		bytes.Add (temp);  	}  }  
Magic Number,ClientTools,RalekProgram,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\RalekProgram.cs,WritePackedGUID,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	byte temp = (byte)(guid >> (i * 8));  	if (temp != 0) {  		mask |= (byte)(1 << i);  		bytes.Add (temp);  	}  }  
Magic Number,ClientTools,WoWFile,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\WoWFile.cs,FindVersionInfo2,The following statement contains a magic number: if (startOffset > 0) {  	BaseStream.Position = startOffset;  	do {  		BaseStream.Position--;  	}  	while (PeekChar () == 0);  	while (PeekChar () != 0) {  		BaseStream.Position--;  	}  	BaseStream.Position++;  	var version = this.ReadCString ();  	BaseStream.Position -= 2;  	while (PeekChar () != 0) {  		BaseStream.Position--;  	}  	do {  		BaseStream.Position--;  	}  	while (PeekChar () == 0);  	while (PeekChar () != 0) {  		BaseStream.Position--;  	}  	BaseStream.Position++;  	var build = this.ReadCString ();  	m_version = new ClientVersion (version + "." + build);  	/* 				 * Aug 17 2009.10314....3.2.0..RELEASE_BUILD 				 * *///BaseStream.Position = startOffset - 16;  	//var build = this.ReadCString();  	//BaseStream.Position += 3;  	//m_version = new ClientVersion(this.ReadCString() + "." + build);  }  else {  	throw new InvalidDataException ("Could not locate version information");  }  
Magic Number,ClientTools,WoWFile,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\WoWFile.cs,FindVersionInfo2,The following statement contains a magic number: BaseStream.Position -= 2;  
Magic Number,WCell.Tools.Ralek.UpdateFields,ExtendedUpdateField,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\ExtendedUpdateField.cs,GetHashCode,The following statement contains a magic number: return (int)Group | ((int)Offset << 3);  
Magic Number,ClientTools.UpdateFields,UpdateFieldComparer,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldComparer.cs,Compare,The following statement contains a magic number: for (var group = (ObjectTypeId)0; group < (ObjectTypeId)UpdateField.ObjectTypeCount; group++) {  	var oldGroup = origFields [(int)group];  	var newGroup = newVersionFields [(int)group];  	var groupChange = Changes [(int)group] = new List<FieldVariation> (20);  	var count = Math.Max (oldGroup.Length' newGroup.Length);  	uint indexDiff = 0;  	for (uint i = 0; i < count; i++) {  		var origField = oldGroup.Get (i);  		var newField = newGroup.Get (i + indexDiff);  		if (origField == null && newField == null) {  			continue;  		}  		else if (origField == null || newField == null || origField.Name != newField.Name) {  			// Field moved or got removed  			ExtendedUpdateField movedTo = null;  			if (origField != null) {  				if (!newFields.TryGetValue (origField.Name' out movedTo)) {  					movedTo = Find (newGroup' origField.Name' i + 1);  				}  				else {  					// Field moved to a previous index  					newFields.Remove (origField.Name);  				}  			}  			if (movedTo == null) {  				indexDiff = 0;  				if (origField != null) {  					// Original Field got deprecated  					groupChange.Add (new DeprecatedField (origField));  				}  			}  			else {  				// Field got moved  				indexDiff = movedTo.Offset - origField.Offset;  				groupChange.Add (new ChangedField (origField' movedTo));  			}  			if (newField != null) {  				// Field of the new version might be a new addition  				newFields [newField.Name] = newField;  			}  		}  		else if (!origField.Equals (newField)) {  			groupChange.Add (new ChangedField (origField' newField));  		}  	}  	foreach (var newField in newFields.Values) {  		bool found = false;  		for (int i = 0; i < groupChange.Count; i++) {  			var change = groupChange [i];  			if (change is ChangedField && ((ChangedField)change).Changed != null && ((ChangedField)change).Changed.Offset >= newField.Offset) {  				groupChange.Insert (i' new NewField (newField));  				found = true;  				break;  			}  		}  		if (!found) {  			groupChange.Add (new NewField (newField));  		}  	}  	newFields.Clear ();  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FindDataOffset,The following statement contains a magic number: if (index > 0) {  	m_dataStartOffset = index - 4;  }  else {  	Console.WriteLine ("Data Offset Not Found!");  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FindDataOffset,The following statement contains a magic number: m_dataStartOffset = index - 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: for (int i = 0; i < fields.Length; i++) {  	fields [i] = new List<ExtendedUpdateField> (500);  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: fields [i] = new List<ExtendedUpdateField> (500);  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: foreach (var fieldArr in fields) {  	foreach (var field in fieldArr) {  		field.Offset += GetGroupOffset (field.Group);  		if (!field.Name.StartsWith ("PLAYER_FIELD_BYTES")) {  			var str = field.Group.ToString ().ToUpper () + "_";  			if (field.Name.StartsWith (str)) {  				field.Name = field.Name.Substring (str.Length);  			}  			str = "FIELD_";  			if (field.Name.StartsWith (str)) {  				field.Name = field.Name.Substring (str.Length);  			}  		}  		if (m_updateFieldsByGroup.Get ((uint)field.Group) == null) {  			m_updateFieldsByGroup [(uint)field.Group] = new ExtendedUpdateField[500];  		}  		ArrayUtil.Set (ref m_updateFieldsByGroup [(uint)field.Group]' field.Offset' field);  		var size = field.Offset + field.Size;  		if (sizes [(int)field.Group] < size) {  			sizes [(int)field.Group] = size;  		}  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: foreach (var field in fieldArr) {  	field.Offset += GetGroupOffset (field.Group);  	if (!field.Name.StartsWith ("PLAYER_FIELD_BYTES")) {  		var str = field.Group.ToString ().ToUpper () + "_";  		if (field.Name.StartsWith (str)) {  			field.Name = field.Name.Substring (str.Length);  		}  		str = "FIELD_";  		if (field.Name.StartsWith (str)) {  			field.Name = field.Name.Substring (str.Length);  		}  	}  	if (m_updateFieldsByGroup.Get ((uint)field.Group) == null) {  		m_updateFieldsByGroup [(uint)field.Group] = new ExtendedUpdateField[500];  	}  	ArrayUtil.Set (ref m_updateFieldsByGroup [(uint)field.Group]' field.Offset' field);  	var size = field.Offset + field.Size;  	if (sizes [(int)field.Group] < size) {  		sizes [(int)field.Group] = size;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: if (m_updateFieldsByGroup.Get ((uint)field.Group) == null) {  	m_updateFieldsByGroup [(uint)field.Group] = new ExtendedUpdateField[500];  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,SetupGroups,The following statement contains a magic number: m_updateFieldsByGroup [(uint)field.Group] = new ExtendedUpdateField[500];  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalObjectSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_objectExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_objectExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalItemSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_itemExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_itemExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalContainerSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_containerExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_containerExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalUnitSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_unitExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_unitExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalPlayerSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_playerExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_playerExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalGameObjectSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_gameObjectExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_gameObjectExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalDynamicObjectSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_dynamicObjectExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_dynamicObjectExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: for (int i = 0; i < m_totalCorpseSize; i++) {  	long pos = binReader.BaseStream.Position;  	long nameOffset = (long)binReader.ReadUInt32 ();  	if (nameOffset > 0) {  		binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  		currentField = binReader.ReadCString ();  		m_corpseExtraFields.Add (currentField);  		binReader.BaseStream.Position = pos + 4;  	}  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: if (nameOffset > 0) {  	binReader.BaseStream.Position = nameOffset - m_stringOffsetDelta;  	currentField = binReader.ReadCString ();  	m_corpseExtraFields.Add (currentField);  	binReader.BaseStream.Position = pos + 4;  }  
Magic Number,ClientTools.UpdateFields,UpdateFieldExtractor,C:\repos\Pepsee_WCell.SpecialTools\ClientTools\UpdateFields\UpdateFieldExtractor.cs,FillExtraFieldList,The following statement contains a magic number: binReader.BaseStream.Position = pos + 4;  
