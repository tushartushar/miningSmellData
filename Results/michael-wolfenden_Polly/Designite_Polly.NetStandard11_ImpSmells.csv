Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,Cyclomatic complexity of the method is 9
Complex Method,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,Cyclomatic complexity of the method is 9
Complex Method,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,Cyclomatic complexity of the method is 9
Complex Method,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,Cyclomatic complexity of the method is 9
Complex Method,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,Cyclomatic complexity of the method is 9
Complex Method,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,Cyclomatic complexity of the method is 9
Complex Method,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,Cyclomatic complexity of the method is 9
Complex Method,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,Cyclomatic complexity of the method is 9
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The method has 8 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak
Long Parameter List,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak
Long Parameter List,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 7 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The method has 8 parameters. Parameters: policyBuilder' failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The method has 6 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The method has 6 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The method has 6 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The method has 6 parameters. Parameters: policyBuilder' exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The method has 5 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The method has 6 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The method has 6 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The method has 5 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset
Long Parameter List,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The method has 6 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The method has 6 parameters. Parameters: policyBuilder' handledEventsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly,PolicyResult<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyResult.cs,PolicyResult,The method has 5 parameters. Parameters: result' outcome' finalException' exceptionType' context
Long Parameter List,Polly,PolicyResult<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyResult.cs,PolicyResult,The method has 7 parameters. Parameters: result' outcome' finalException' exceptionType' finalHandledResult' faultType' context
Long Parameter List,Polly.Bulkhead,BulkheadEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadEngine.cs,Implementation,The method has 6 parameters. Parameters: action' context' onBulkheadRejected' maxParallelizationSemaphore' maxQueuedActionsSemaphore' cancellationToken
Long Parameter List,Polly.Bulkhead,BulkheadEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadEngine.cs,ImplementationAsync,The method has 7 parameters. Parameters: action' context' onBulkheadRejectedAsync' maxParallelizationSemaphore' maxQueuedActionsSemaphore' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Bulkhead,BulkheadPolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadPolicy.cs,BulkheadPolicy,The method has 5 parameters. Parameters: exceptionPolicy' maxParallelization' maxQueueingActions' maxParallelizationSemaphore' maxQueuedActionsSemaphore
Long Parameter List,Polly.Bulkhead,BulkheadPolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadPolicy.cs,BulkheadPolicy,The method has 5 parameters. Parameters: asyncExceptionPolicy' maxParallelization' maxQueueingActions' maxParallelizationSemaphore' maxQueuedActionsSemaphore
Long Parameter List,Polly.Bulkhead,BulkheadPolicy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadPolicy.cs,BulkheadPolicy,The method has 5 parameters. Parameters: executionPolicy' maxParallelization' maxQueueingActions' maxParallelizationSemaphore' maxQueuedActionsSemaphore
Long Parameter List,Polly.Bulkhead,BulkheadPolicy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadPolicy.cs,BulkheadPolicy,The method has 5 parameters. Parameters: asyncExecutionPolicy' maxParallelization' maxQueueingActions' maxParallelizationSemaphore' maxQueuedActionsSemaphore
Long Parameter List,Polly.Caching,CacheEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CacheEngine.cs,Implementation,The method has 11 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' action' context' cancellationToken' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,CacheEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CacheEngine.cs,ImplementationAsync,The method has 12 parameters. Parameters: cacheProvider' ttlStrategy' cacheKeyStrategy' action' context' cancellationToken' continueOnCapturedContext' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,CachePolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CachePolicy.cs,CachePolicy,The method has 8 parameters. Parameters: syncCacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,CachePolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CachePolicy.cs,CachePolicy,The method has 8 parameters. Parameters: asyncCacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,CachePolicy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CachePolicy.cs,CachePolicy,The method has 8 parameters. Parameters: syncCacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,CachePolicy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CachePolicy.cs,CachePolicy,The method has 8 parameters. Parameters: asyncCacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError
Long Parameter List,Polly.Caching,IAsyncCacheProvider,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\IAsyncCacheProvider.cs,PutAsync,The method has 5 parameters. Parameters: key' value' ttl' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Caching,IAsyncCacheProvider,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\IAsyncCacheProvider.cs,PutAsync,The method has 5 parameters. Parameters: key' value' ttl' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Caching,SerializingCacheProviderAsync<TSerialized>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\SerializingCacheProviderAsync.cs,PutAsync,The method has 5 parameters. Parameters: key' value' ttl' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Caching,SerializingCacheProviderAsync<TResult;TSerialized>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\SerializingCacheProviderAsync.cs,PutAsync,The method has 5 parameters. Parameters: key' value' ttl' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Caching,GenericCacheProviderAsync<TCacheFormat>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\GenericCacheProviderAsync.cs,PutAsync,The method has 5 parameters. Parameters: key' value' ttl' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.CircuitBreaker,CircuitBreakerEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerEngine.cs,Implementation,The method has 6 parameters. Parameters: action' context' cancellationToken' shouldHandleExceptionPredicates' shouldHandleResultPredicates' breakerController
Long Parameter List,Polly.CircuitBreaker,CircuitBreakerEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerEngine.cs,ImplementationAsync,The method has 7 parameters. Parameters: action' context' shouldHandleExceptionPredicates' shouldHandleResultPredicates' breakerController' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.CircuitBreaker,ConsecutiveCountCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\ConsecutiveCountCircuitController.cs,ConsecutiveCountCircuitController,The method has 5 parameters. Parameters: exceptionsAllowedBeforeBreaking' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly.CircuitBreaker,AdvancedCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitController.cs,AdvancedCircuitController,The method has 7 parameters. Parameters: failureThreshold' samplingDuration' minimumThroughput' durationOfBreak' onBreak' onReset' onHalfOpen
Long Parameter List,Polly.Fallback,FallbackEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackEngine.cs,Implementation,The method has 7 parameters. Parameters: action' context' cancellationToken' shouldHandleExceptionPredicates' shouldHandleResultPredicates' onFallback' fallbackAction
Long Parameter List,Polly.Fallback,FallbackEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackEngine.cs,ImplementationAsync,The method has 8 parameters. Parameters: action' context' shouldHandleExceptionPredicates' shouldHandleResultPredicates' onFallbackAsync' fallbackAction' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Retry,RetryEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryEngine.cs,Implementation,The method has 6 parameters. Parameters: action' context' cancellationToken' shouldRetryExceptionPredicates' shouldRetryResultPredicates' policyStateFactory
Long Parameter List,Polly.Retry,RetryEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryEngine.cs,ImplementationAsync,The method has 7 parameters. Parameters: action' context' cancellationToken' shouldRetryExceptionPredicates' shouldRetryResultPredicates' policyStateFactory' continueOnCapturedContext
Long Parameter List,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The method has 6 parameters. Parameters: action' context' cancellationToken' timeoutProvider' timeoutStrategy' onTimeout
Long Parameter List,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,ImplementationAsync,The method has 7 parameters. Parameters: action' context' timeoutProvider' timeoutStrategy' onTimeoutAsync' cancellationToken' continueOnCapturedContext
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The method has 5 parameters. Parameters: func' context' cancellationToken' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The method has 5 parameters. Parameters: func' context' cancellationToken' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The method has 5 parameters. Parameters: func' context' cancellationToken' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The method has 5 parameters. Parameters: func' context' cancellationToken' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The method has 5 parameters. Parameters: action' context' cancellationToken' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,ImplementationAsync,The method has 6 parameters. Parameters: func' context' cancellationToken' continueOnCapturedContext' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,ImplementationAsync,The method has 6 parameters. Parameters: func' context' cancellationToken' continueOnCapturedContext' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,ImplementationAsync,The method has 6 parameters. Parameters: func' context' cancellationToken' continueOnCapturedContext' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,ImplementationAsync,The method has 6 parameters. Parameters: func' context' cancellationToken' continueOnCapturedContext' outerPolicy' innerPolicy
Long Parameter List,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,ImplementationAsync,The method has 6 parameters. Parameters: action' context' cancellationToken' continueOnCapturedContext' outerPolicy' innerPolicy
Long Identifier,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,GetExceptionType,The length of the parameter isExceptionTypeHandledByThisPolicy is 34.
Long Identifier,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the parameter handledEventsAllowedBeforeBreaking is 34.
Long Identifier,Polly.CircuitBreaker,CircuitBreakerEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerEngine.cs,Implementation,The length of the parameter shouldHandleExceptionPredicates is 31.
Long Identifier,Polly.CircuitBreaker,CircuitBreakerEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerEngine.cs,ImplementationAsync,The length of the parameter shouldHandleExceptionPredicates is 31.
Long Identifier,Polly.CircuitBreaker,ConsecutiveCountCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\ConsecutiveCountCircuitController.cs,ConsecutiveCountCircuitController,The length of the parameter exceptionsAllowedBeforeBreaking is 31.
Long Identifier,Polly.CircuitBreaker,ConsecutiveCountCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\ConsecutiveCountCircuitController.cs,,The length of the parameter _exceptionsAllowedBeforeBreaking is 32.
Long Identifier,Polly.CircuitBreaker,CircuitStateController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitStateController.cs,BreakFor_NeedsLock,The length of the parameter willDurationTakeUsPastDateTimeMaxValue is 38.
Long Identifier,Polly.Fallback,FallbackEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackEngine.cs,Implementation,The length of the parameter shouldHandleExceptionPredicates is 31.
Long Identifier,Polly.Fallback,FallbackEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackEngine.cs,ImplementationAsync,The length of the parameter shouldHandleExceptionPredicates is 31.
Long Identifier,Polly.Retry,RetryEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryEngine.cs,Implementation,The length of the parameter shouldRetryExceptionPredicates is 30.
Long Identifier,Polly.Retry,RetryEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryEngine.cs,ImplementationAsync,The length of the parameter shouldRetryExceptionPredicates is 30.
Long Identifier,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the parameter timeoutCancellationTokenSource is 30.
Long Identifier,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,ImplementationAsync,The length of the parameter timeoutCancellationTokenSource is 30.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Bulkhead,The length of the statement  "            if (maxParallelization <= 0) throw new ArgumentOutOfRangeException(nameof(maxParallelization)' "Value must be greater than zero."); " is 131.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Bulkhead,The length of the statement  "            if (maxQueuingActions < 0) throw new ArgumentOutOfRangeException(nameof(maxQueuingActions)' "Value must be greater than or equal to zero."); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,BulkheadAsync,The length of the statement  "            if (maxParallelization <= 0) throw new ArgumentOutOfRangeException(nameof(maxParallelization)' "Value must be greater than zero."); " is 131.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,BulkheadAsync,The length of the statement  "            if (maxQueuingActions < 0) throw new ArgumentOutOfRangeException(nameof(maxQueuingActions)' "Value must be greater than or equal to zero."); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Bulkhead,The length of the statement  "            if (maxParallelization <= 0) throw new ArgumentOutOfRangeException(nameof(maxParallelization)' "Value must be greater than zero."); " is 131.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Bulkhead,The length of the statement  "            if (maxQueuingActions < 0) throw new ArgumentOutOfRangeException(nameof(maxQueuingActions)' "Value must be greater than or equal to zero."); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,BulkheadAsync,The length of the statement  "            if (maxParallelization <= 0) throw new ArgumentOutOfRangeException(nameof(maxParallelization)' "Value must be greater than zero."); " is 131.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,BulkheadAsync,The length of the statement  "            if (maxQueuingActions < 0) throw new ArgumentOutOfRangeException(nameof(maxQueuingActions)' "Value must be greater than or equal to zero."); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return Cache(cacheProvider' ttlStrategy' cacheKeyStrategy' emptyDelegate' emptyDelegate' emptyDelegate' onCacheError' onCacheError); " is 132.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "           return Cache(cacheProvider' ttlStrategy' cacheKeyStrategy.GetCacheKey' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 142.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return new CachePolicy(cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return new CachePolicy(cacheProvider' ttlStrategy' cacheKeyStrategy' emptyDelegate' emptyDelegate' emptyDelegate' onCacheError' onCacheError); " is 142.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return CacheAsync(cacheProvider' ttlStrategy' cacheKeyStrategy.GetCacheKey' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 147.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return new CachePolicy(cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 140.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return Cache<TResult>(cacheProvider.For<TResult>()' new RelativeTtl(ttl)' DefaultCacheKeyStrategy.Instance.GetCacheKey' onCacheError); " is 134.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return Cache<TResult>(cacheProvider.For<TResult>()' ttlStrategy' DefaultCacheKeyStrategy.Instance.GetCacheKey' onCacheError); " is 125.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return new CachePolicy<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy' emptyDelegate' emptyDelegate' emptyDelegate' onCacheError' onCacheError); " is 151.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return Cache<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy.GetCacheKey' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 151.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Cache,The length of the statement  "            return new CachePolicy<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 149.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return CacheAsync<TResult>(cacheProvider.AsyncFor<TResult>()' new RelativeTtl(ttl)' DefaultCacheKeyStrategy.Instance.GetCacheKey' onCacheError); " is 144.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return CacheAsync<TResult>(cacheProvider.AsyncFor<TResult>()' ttlStrategy' DefaultCacheKeyStrategy.Instance.GetCacheKey' onCacheError); " is 135.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return CacheAsync<TResult>(cacheProvider' new RelativeTtl(ttl)' DefaultCacheKeyStrategy.Instance.GetCacheKey' onCacheError); " is 124.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return new CachePolicy<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy' emptyDelegate' emptyDelegate' emptyDelegate' onCacheError' onCacheError); " is 151.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return CacheAsync<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy.GetCacheKey' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 156.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,CacheAsync,The length of the statement  "            return new CachePolicy<TResult>(cacheProvider' ttlStrategy' cacheKeyStrategy' onCacheGet' onCacheMiss' onCachePut' onCacheGetError' onCachePutError); " is 149.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Execute,The length of the statement  "            if (_exceptionPolicy == null) throw new InvalidOperationException("Please use the synchronous-defined policies when calling the synchronous Execute (and similar) methods."); " is 173.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Handle,The length of the statement  "            return new PolicyBuilder(exception => exception is TException texception && exceptionPredicate(texception) ? exception : null); " is 127.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,HandleInner,The length of the statement  "            return new PolicyBuilder(PolicyBuilder.HandleInner(ex => ex is TException texception && exceptionPredicate(texception))); " is 121.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 120.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 123.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAsync,The length of the statement  "            await _asyncExceptionPolicy(action' context' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 133.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 120.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 123.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 130.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 133.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ct)' new Context(contextData)' cancellationToken' continueOnCapturedContext); " is 127.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "                await ExecuteAsync(action' context' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 124.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 130.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 133.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ct)' new Context(contextData)' cancellationToken' continueOnCapturedContext); " is 127.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "                    await ExecuteAsync(action' context' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext)' context); " is 134.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The length of the statement  "                (action' context' cancellationtoken) => PolicyWrapEngine.Implementation(action' context' cancellationtoken' this' innerPolicy)' " is 127.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The length of the statement  "                (func' context' cancellationtoken) => PolicyWrapEngine.Implementation<TResult>(func' context' cancellationtoken' this' innerPolicy)' " is 132.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The length of the statement  "                    throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies)); " is 129.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The length of the statement  "                    throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies)); " is 129.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The length of the statement  "                (action' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync(action' context' cancellationtoken' continueOnCapturedContext' this' innerPolicy)' " is 186.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The length of the statement  "                (func' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync<TResult>(func' context' cancellationtoken' continueOnCapturedContext' this' innerPolicy)' " is 191.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The length of the statement  "                    throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies)); " is 129.
Long Statement,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The length of the statement  "                    throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies)); " is 129.
Long Statement,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (failureThreshold <= 0) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be greater than zero."); " is 121.
Long Statement,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (failureThreshold > 1) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be less than or equal to one."); " is 128.
Long Statement,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (samplingDuration < resolutionOfCircuit) throw new ArgumentOutOfRangeException("samplingDuration"' String.Format("Value must be equal to or greater than {0} milliseconds. This is the minimum resolution of the CircuitBreaker timer."' resolutionOfCircuit.TotalMilliseconds)); " is 276.
Long Statement,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (minimumThroughput <= 1) throw new ArgumentOutOfRangeException("minimumThroughput"' "Value must be greater than one."); " is 122.
Long Statement,Polly,AdvancedCircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (failureThreshold <= 0) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be greater than zero."); " is 121.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (failureThreshold > 1) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be less than or equal to one."); " is 128.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (samplingDuration < resolutionOfCircuit) throw new ArgumentOutOfRangeException("samplingDuration"' String.Format("Value must be equal to or greater than {0} milliseconds. This is the minimum resolution of the CircuitBreaker timer."' resolutionOfCircuit.TotalMilliseconds)); " is 276.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (minimumThroughput <= 1) throw new ArgumentOutOfRangeException("minimumThroughput"' "Value must be greater than one."); " is 122.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,AdvancedCircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "                (action' context' cancellationToken' continueOnCapturedContext) => CircuitBreakerEngine.ImplementationAsync<EmptyStruct>( " is 121.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (failureThreshold <= 0) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be greater than zero."); " is 121.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (failureThreshold > 1) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be less than or equal to one."); " is 128.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (samplingDuration < resolutionOfCircuit) throw new ArgumentOutOfRangeException("samplingDuration"' String.Format("Value must be equal to or greater than {0} milliseconds. This is the minimum resolution of the CircuitBreaker timer."' resolutionOfCircuit.TotalMilliseconds)); " is 276.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (minimumThroughput <= 1) throw new ArgumentOutOfRangeException("minimumThroughput"' "Value must be greater than one."); " is 122.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntax.cs,AdvancedCircuitBreaker,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (failureThreshold <= 0) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be greater than zero."); " is 121.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (failureThreshold > 1) throw new ArgumentOutOfRangeException("failureThreshold"' "Value must be less than or equal to one."); " is 128.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (samplingDuration < resolutionOfCircuit) throw new ArgumentOutOfRangeException("samplingDuration"' String.Format("Value must be equal to or greater than {0} milliseconds. This is the minimum resolution of the CircuitBreaker timer."' resolutionOfCircuit.TotalMilliseconds)); " is 276.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (minimumThroughput <= 1) throw new ArgumentOutOfRangeException("minimumThroughput"' "Value must be greater than one."); " is 122.
Long Statement,Polly,AdvancedCircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitBreakerTResultSyntaxAsync.cs,AdvancedCircuitBreakerAsync,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the statement  "            if (exceptionsAllowedBeforeBreaking <= 0) throw new ArgumentOutOfRangeException("exceptionsAllowedBeforeBreaking"' "Value must be greater than zero."); " is 151.
Long Statement,Polly,CircuitBreakerSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntax.cs,CircuitBreaker,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the statement  "            if (exceptionsAllowedBeforeBreaking <= 0) throw new ArgumentOutOfRangeException("exceptionsAllowedBeforeBreaking"' "Value must be greater than zero."); " is 151.
Long Statement,Polly,CircuitBreakerSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerSyntaxAsync.cs,CircuitBreakerAsync,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the statement  "            if (handledEventsAllowedBeforeBreaking <= 0) throw new ArgumentOutOfRangeException("handledEventsAllowedBeforeBreaking"' "Value must be greater than zero."); " is 157.
Long Statement,Polly,CircuitBreakerTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntax.cs,CircuitBreaker,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the statement  "            if (handledEventsAllowedBeforeBreaking <= 0) throw new ArgumentOutOfRangeException("handledEventsAllowedBeforeBreaking"' "Value must be greater than zero."); " is 157.
Long Statement,Polly,CircuitBreakerTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitBreakerTResultSyntaxAsync.cs,CircuitBreakerAsync,The length of the statement  "            if (durationOfBreak < TimeSpan.Zero) throw new ArgumentOutOfRangeException("durationOfBreak"' "Value must be greater than zero."); " is 130.
Long Statement,Polly,FallbackSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackSyntaxAsync.cs,FallbackAsync,The length of the statement  "                    async (outcome' ctx' ct) => { await fallbackAction(outcome.Exception' ctx' ct).ConfigureAwait(continueOnCapturedContext); return EmptyStruct.Instance; }' " is 153.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,Handle,The length of the statement  "            return new PolicyBuilder<TResult>(exception => exception is TException texception && exceptionPredicate(texception) ? exception : null); " is 136.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,HandleInner,The length of the statement  "            return new PolicyBuilder<TResult>(PolicyBuilder.HandleInner(ex => ex is TException texception && exceptionPredicate(texception))); " is 130.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 120.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAsync,The length of the statement  "            return ExecuteAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 123.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action()' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 130.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ctx)' new Context(contextData)' CancellationToken.None' continueOnCapturedContext); " is 133.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "            return ExecuteAndCaptureAsync((ctx' ct) => action(ct)' new Context(contextData)' cancellationToken' continueOnCapturedContext); " is 127.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,ExecuteAndCaptureAsync,The length of the statement  "                TResult result = await ExecuteAsync(action' context' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 141.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,Wrap,The length of the statement  "                (func' context' cancellationtoken) => PolicyWrapEngine.Implementation<TResult>(func' context' cancellationtoken' this' innerPolicy)' " is 132.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,Wrap,The length of the statement  "                (func' context' cancellationtoken) => PolicyWrapEngine.Implementation<TResult>(func' context' cancellationtoken' this' innerPolicy)' " is 132.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,WrapAsync,The length of the statement  "                (func' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync<TResult>(func' context' cancellationtoken' continueOnCapturedContext' this' innerPolicy)' " is 191.
Long Statement,Polly,Policy<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Policy.HandleSyntax.cs,WrapAsync,The length of the statement  "                (func' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync<TResult>(func' context' cancellationtoken' continueOnCapturedContext' this' innerPolicy)' " is 191.
Long Statement,Polly,PolicyBuilder,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyBuilder.cs,Or,The length of the statement  "            ExceptionPredicates.Add(exception => exception is TException texception && exceptionPredicate(texception) ? exception : null); " is 126.
Long Statement,Polly,PolicyBuilder,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyBuilder.cs,OrInner,The length of the statement  "            ExceptionPredicates.Add(HandleInner(exception => exception is TException texception && exceptionPredicate(texception))); " is 120.
Long Statement,Polly,PolicyBuilder<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyBuilder.cs,Or,The length of the statement  "            ExceptionPredicates.Add(exception => exception is TException texception &&                                                  exceptionPredicate(texception) ? exception : null); " is 175.
Long Statement,Polly,PolicyBuilder<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyBuilder.cs,OrInner,The length of the statement  "            ExceptionPredicates.Add(PolicyBuilder.HandleInner(ex => ex is TException texception && exceptionPredicate(texception))); " is 120.
Long Statement,Polly,PolicyResult<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\PolicyResult.cs,Failure,The length of the statement  "            return new PolicyResult<TResult>(default(TResult)' OutcomeType.Failure' null' null' handledResult' Polly.FaultType.ResultHandledByThisPolicy' context); " is 151.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,Retry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,Retry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,Retry,The length of the statement  "                () => new RetryStateRetryWithCount<EmptyStruct>(retryCount' (outcome' i' ctx) => onRetry(outcome.Exception' i' ctx)' context) " is 125.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,WaitAndRetry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,WaitAndRetry,The length of the statement  "                () => new RetryStateWaitAndRetry<EmptyStruct>(sleepDurations' (outcome' timespan' i' ctx) => onRetry(outcome.Exception' timespan' i' ctx)' context) " is 147.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,WaitAndRetry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntax.cs,WaitAndRetry,The length of the statement  "                () => new RetryStateWaitAndRetry<EmptyStruct>(sleepDurations' (outcome' timespan' i' ctx) => onRetry(outcome.Exception' timespan' i' ctx)' context) " is 147.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,RetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,RetryAsync,The length of the statement  "                () => new RetryStateRetryWithCount<EmptyStruct>(retryCount' (outcome' i' ctx) => onRetryAsync(outcome.Exception' i' ctx)' context)' " is 131.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "                    () => new RetryStateWaitAndRetry<EmptyStruct>(sleepDurations' (outcome' timespan' i' ctx) => onRetryAsync(outcome.Exception' timespan' i' ctx)' context)' " is 153.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetrySyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetrySyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "                    () => new RetryStateWaitAndRetry<EmptyStruct>(sleepDurations' (outcome' timespan' i' ctx) => onRetryAsync(outcome.Exception' timespan' i' ctx)' context)' " is 153.
Long Statement,Polly,RetryTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntax.cs,Retry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntax.cs,Retry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntax.cs,WaitAndRetry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntax,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntax.cs,WaitAndRetry,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntaxAsync.cs,RetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly,RetryTResultSyntaxAsync,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Retry\RetryTResultSyntaxAsync.cs,WaitAndRetryAsync,The length of the statement  "            if (retryCount < 0) throw new ArgumentOutOfRangeException(nameof(retryCount)' "Value must be greater than or equal to zero."); " is 126.
Long Statement,Polly.Bulkhead,BulkheadEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadEngine.cs,ImplementationAsync,The length of the statement  "            if (!await maxQueuedActionsSemaphore.WaitAsync(TimeSpan.Zero' cancellationToken).ConfigureAwait(continueOnCapturedContext)) " is 123.
Long Statement,Polly.Caching,CacheEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CacheEngine.cs,ImplementationAsync,The length of the statement  "                valueFromCache = await cacheProvider.GetAsync(cacheKey' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 144.
Long Statement,Polly.Caching,CacheEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\CacheEngine.cs,ImplementationAsync,The length of the statement  "                    await cacheProvider.PutAsync(cacheKey' result' ttl' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 140.
Long Statement,Polly.Caching,SerializingCacheProviderAsync<TSerialized>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\SerializingCacheProviderAsync.cs,GetAsync,The length of the statement  "                await _wrappedCacheProvider.GetAsync(key' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext)); " is 131.
Long Statement,Polly.Caching,SerializingCacheProviderAsync<TResult;TSerialized>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\SerializingCacheProviderAsync.cs,GetAsync,The length of the statement  "                await _wrappedCacheProvider.GetAsync(key' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext)); " is 131.
Long Statement,Polly.Caching,GenericCacheProviderAsync<TCacheFormat>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Caching\GenericCacheProviderAsync.cs,GetAsync,The length of the statement  "            return (TCacheFormat) await _wrappedCacheProvider.GetAsync(key' cancellationToken' continueOnCapturedContext).ConfigureAwait(continueOnCapturedContext); " is 152.
Long Statement,Polly.CircuitBreaker,ConsecutiveCountCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\ConsecutiveCountCircuitController.cs,OnActionSuccess,The length of the statement  "                        break; // A successful call result may arrive when the circuit is open' if it was placed before the circuit broke.  We take no action; only time passing governs transitioning from Open to HalfOpen state. " is 203.
Long Statement,Polly.CircuitBreaker,ConsecutiveCountCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\ConsecutiveCountCircuitController.cs,OnActionFailure,The length of the statement  "                        break; // A failure call result may arrive when the circuit is open' if it was placed before the circuit broke.  We take no action; we do not want to duplicate-signal onBreak; we do not want to extend time for which the circuit is broken.  We do not want to mask the fact that the call executed (as replacing its result with a Broken/IsolatedCircuitException would do). " is 369.
Long Statement,Polly.CircuitBreaker,CircuitStateController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitStateController.cs,Isolate,The length of the statement  "                _lastOutcome = new DelegateResult<TResult>(new IsolatedCircuitException("The circuit is manually held open and is not allowing calls.")); " is 137.
Long Statement,Polly.CircuitBreaker,CircuitStateController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitStateController.cs,PermitHalfOpenCircuitTest,The length of the statement  "                // ... but to prevent race conditions/multiple calls' we have to ensure only _one_ thread wins the race to own this next call. " is 126.
Long Statement,Polly.CircuitBreaker,CircuitStateController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\CircuitStateController.cs,PermitHalfOpenCircuitTest,The length of the statement  "                return Interlocked.CompareExchange(ref _blockedTill' SystemClock.UtcNow().Ticks + _durationOfBreak.Ticks' currentlyBlockedUntil) == currentlyBlockedUntil; " is 154.
Long Statement,Polly.CircuitBreaker,AdvancedCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitController.cs,OnActionSuccess,The length of the statement  "                        break; // A successful call result may arrive when the circuit is open' if it was placed before the circuit broke.  We take no special action; only time passing governs transitioning from Open to HalfOpen state. " is 211.
Long Statement,Polly.CircuitBreaker,AdvancedCircuitController<TResult>,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\CircuitBreaker\AdvancedCircuitController.cs,OnActionFailure,The length of the statement  "                        break; // A failure call result may arrive when the circuit is open' if it was placed before the circuit broke.  We take no action beyond tracking the metric; we do not want to duplicate-signal onBreak; we do not want to extend time for which the circuit is broken.  We do not want to mask the fact that the call executed (as replacing its result with a Broken/IsolatedCircuitException would do). " is 396.
Long Statement,Polly.Fallback,FallbackPolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackPolicy.cs,ExecuteInternal,The length of the statement  "          throw new InvalidOperationException($"You have executed the generic .Execute<{nameof(TResult)}> method on a non-generic {nameof(FallbackPolicy)}.  A non-generic {nameof(FallbackPolicy)} only defines a fallback action which returns void; it can never return a substitute {nameof(TResult)} value.  To use {nameof(FallbackPolicy)} to provide fallback {nameof(TResult)} values you must define a generic fallback policy {nameof(FallbackPolicy)}<{nameof(TResult)}>.  For example' define the policy as Policy<{nameof(TResult)}>.Handle<Whatever>.Fallback<{nameof(TResult)}>(/* some {nameof(TResult)} value or Func<...' {nameof(TResult)}> */);"); " is 637.
Long Statement,Polly.Fallback,FallbackPolicy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Fallback\FallbackPolicy.cs,ExecuteAsyncInternal,The length of the statement  "            throw new InvalidOperationException($"You have executed the generic .Execute<{nameof(TResult)}> method on a non-generic {nameof(FallbackPolicy)}.  A non-generic {nameof(FallbackPolicy)} only defines a fallback action which returns void; it can never return a substitute {nameof(TResult)} value.  To use {nameof(FallbackPolicy)} to provide fallback {nameof(TResult)} values you must define a generic fallback policy {nameof(FallbackPolicy)}<{nameof(TResult)}>.  For example' define the policy as Policy<{nameof(TResult)}>.Handle<Whatever>.Fallback<{nameof(TResult)}>(/* some {nameof(TResult)} value or Func<...' {nameof(TResult)}> */);"); " is 637.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                using (CancellationTokenSource combinedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken' timeoutCancellationTokenSource.Token)) " is 158.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                            action(context' combinedToken)       // cancellation token here allows the user delegate to react to cancellation: possibly clear up; then throw an OperationCanceledException. " is 175.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                            ' combinedToken);           // cancellation token here only allows Task.Run() to not begin the passed delegate at all' if cancellation occurs prior to invoking the delegate.   " is 173.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                            actionTask.Wait(timeoutCancellationTokenSource.Token); // cancellation token here cancels the Wait() and causes it to throw' but does not cancel actionTask.  We use only timeoutCancellationTokenSource.Token here' not combinedToken.  If we allowed the user's cancellation token to cancel the Wait()' in this pessimistic scenario where the user delegate may not observe that cancellation' that would create a no-longer-observed task.  That task could in turn later fault before completing' risking an UnobservedTaskException. " is 523.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                        catch (AggregateException ex) when (ex.InnerExceptions.Count == 1) // Issue #270.  Unwrap extra AggregateException caused by the way pessimistic timeout policy for synchronous executions is necessarily constructed. " is 214.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,Implementation,The length of the statement  "                            throw new TimeoutRejectedException("The delegate executed through TimeoutPolicy did not complete within the timeout."' ex); " is 123.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,ImplementationAsync,The length of the statement  "                using (CancellationTokenSource combinedTokenSource = CancellationTokenSource.CreateLinkedTokenSource(cancellationToken' timeoutCancellationTokenSource.Token)) " is 158.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,ImplementationAsync,The length of the statement  "                            throw new TimeoutRejectedException("The delegate executed asynchronously through TimeoutPolicy did not complete within the timeout."' e); " is 137.
Long Statement,Polly.Timeout,TimeoutEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Timeout\TimeoutEngine.cs,AsTask,The length of the statement  "            // A generalised version of this method would include a hotpath returning a canceled task (rather than setting up a registration) if (cancellationToken.IsCancellationRequested) on entry.  This is omitted' since we only start the timeout countdown in the token _after calling this method. " is 287.
Long Statement,Polly.Wrap,PolicyWrapEngine,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Wrap\PolicyWrapEngine.cs,Implementation,The length of the statement  "            return outerPolicy.Execute<TResult>((ctx' ct) => innerPolicy.Execute<TResult>(func' ctx' ct)' context' cancellationToken); " is 122.
Magic Number,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The following statement contains a magic number: switch (policies.Length)              {                  case 0:                  case 1:                      throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies));                  case 2:                      return new PolicyWrap(                          (func' context' cancellationtoken) => PolicyWrapEngine.Implementation(                              func'                               context'                               cancellationtoken'                               policies[0]'                               policies[1])'                           (Policy)policies[0]' policies[1]);                    default:                      return Wrap(policies[0]' Wrap(policies.Skip(1).ToArray()));              }
Magic Number,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,Wrap,The following statement contains a magic number: switch (policies.Length)              {                  case 0:                  case 1:                      throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies));                  case 2:                      return new PolicyWrap<TResult>(                          (func' context' cancellationtoken) => PolicyWrapEngine.Implementation(                              func'                              context'                              cancellationtoken'                              policies[0]'                              policies[1])'                          (Policy<TResult>)policies[0]' policies[1]);                    default:                      return Wrap(policies[0]' Wrap(policies.Skip(1).ToArray()));              }
Magic Number,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The following statement contains a magic number: switch (policies.Length)              {                  case 0:                  case 1:                      throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies));                  case 2:                      return new PolicyWrap(                          (func' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync(                              func'                              context'                              cancellationtoken'                              continueOnCapturedContext'                              policies[0]'                              policies[1])'                          (Policy)policies[0]' policies[1]);                    default:                      return WrapAsync(policies[0]' WrapAsync(policies.Skip(1).ToArray()));              }
Magic Number,Polly,Policy,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Bulkhead\BulkheadSyntax.cs,WrapAsync,The following statement contains a magic number: switch (policies.Length)              {                  case 0:                  case 1:                      throw new ArgumentException("The enumerable of policies to form the wrap must contain at least two policies."' nameof(policies));                  case 2:                      return new PolicyWrap<TResult>(                          (func' context' cancellationtoken' continueOnCapturedContext) => PolicyWrapEngine.ImplementationAsync<TResult>(                              func'                              context'                              cancellationtoken'                              continueOnCapturedContext'                              policies[0]'                              policies[1])'                          (Policy<TResult>)policies[0]' policies[1]);                    default:                      return WrapAsync(policies[0]' WrapAsync(policies.Skip(1).ToArray()));              }
Magic Number,Polly.Utilities,KeyHelper,C:\repos\michael-wolfenden_Polly\src\Polly.Shared\Utilities\KeyHelper.cs,GuidPart,The following statement contains a magic number: return Guid.NewGuid().ToString().Substring(0' 8);
