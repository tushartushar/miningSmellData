Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Server.Content,Tick,C:\repos\lacti_mmo\new_server\Server\Content\Tick.cs,OnTick,Cyclomatic complexity of the method is 10
Long Parameter List,Server.Content,Interaction,C:\repos\lacti_mmo\new_server\Server\Content\Interaction.cs,OnInteract,The method has 5 parameters.
Long Parameter List,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,AffectToTargetAttribute,The method has 7 parameters.
Long Statement,Server.Actor.Controller,BaseController,C:\repos\lacti_mmo\new_server\Server\Actor\Controller\BaseController.cs,Write,The length of the statement  "	var thisMap = GetType ().GetProperties ().Where (e => e.CanRead && e.CanWrite && e.GetCustomAttributes (typeof(VolatileAttribute)' false).Length == 0).ToDictionary (property => property.Name' property => property.GetValue (this' null)); " is 236.
Long Statement,Server.Actor.Controller,BaseController,C:\repos\lacti_mmo\new_server\Server\Actor\Controller\BaseController.cs,Load,The length of the statement  "	foreach (var property in thisType.GetProperties ().Where (e => e.CanRead && e.CanWrite && e.GetCustomAttributes (typeof(VolatileAttribute)' false).Length == 0 && thisMap.ContainsKey (e.Name))) { " is 194.
Long Statement,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,AffectToOwnerAttribute,The length of the statement  "	entity.ChangeAttributeValue (effect.Attribute' effect.Field' effect.Value' (operand' oldValue) => CalculateAffectedValue (effect.Function' operand' oldValue)); " is 159.
Long Statement,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,AffectToTargetAttribute,The length of the statement  "		result.PostEach (attributeType' target => target.ChangeAttributeValue (effect.Attribute' effect.Field' effectValue' (operand' oldValue) => CalculateAffectedValue (effect.Function' operand' oldValue))); " is 201.
Long Statement,Server,Program,C:\repos\lacti_mmo\new_server\Server\Program.cs,Main,The length of the statement  "		EntityBinder.Instance.AddBinder (new MongoBind (Configuration.MongoDatabaseHost' Configuration.MongoDatabasePort' Configuration.MongoDatabaseName' Configuration.MongoDatabaseCollectionName)); " is 191.
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: if (!(5 <= factoryCount && factoryCount < 1000))  	return false;  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: if (!(5 <= factoryCount && factoryCount < 1000))  	return false;  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: foreach (var groupId in Enumerable.Range (0' factoryCount)) {  	var factory = EntityManager.Instance.Create (EntityTemplate.Ids.Factory);  	factory.Get<Nameplate> ().Name = groupId.ToString ();  	factory.Get<Pos> ().Assign (new Pos {  		X = rand.Next (-50' 50)'  		Y = rand.Next (-50' 50)  	});  	factory.Get<Displayable> ().ResourceId = 6;  	PositionSystem.Global.Appear (factory);  	EntityBinder.Instance.Add (factory);  }  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: foreach (var groupId in Enumerable.Range (0' factoryCount)) {  	var factory = EntityManager.Instance.Create (EntityTemplate.Ids.Factory);  	factory.Get<Nameplate> ().Name = groupId.ToString ();  	factory.Get<Pos> ().Assign (new Pos {  		X = rand.Next (-50' 50)'  		Y = rand.Next (-50' 50)  	});  	factory.Get<Displayable> ().ResourceId = 6;  	PositionSystem.Global.Appear (factory);  	EntityBinder.Instance.Add (factory);  }  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: foreach (var groupId in Enumerable.Range (0' factoryCount)) {  	var factory = EntityManager.Instance.Create (EntityTemplate.Ids.Factory);  	factory.Get<Nameplate> ().Name = groupId.ToString ();  	factory.Get<Pos> ().Assign (new Pos {  		X = rand.Next (-50' 50)'  		Y = rand.Next (-50' 50)  	});  	factory.Get<Displayable> ().ResourceId = 6;  	PositionSystem.Global.Appear (factory);  	EntityBinder.Instance.Add (factory);  }  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: foreach (var groupId in Enumerable.Range (0' factoryCount)) {  	var factory = EntityManager.Instance.Create (EntityTemplate.Ids.Factory);  	factory.Get<Nameplate> ().Name = groupId.ToString ();  	factory.Get<Pos> ().Assign (new Pos {  		X = rand.Next (-50' 50)'  		Y = rand.Next (-50' 50)  	});  	factory.Get<Displayable> ().ResourceId = 6;  	PositionSystem.Global.Appear (factory);  	EntityBinder.Instance.Add (factory);  }  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: foreach (var groupId in Enumerable.Range (0' factoryCount)) {  	var factory = EntityManager.Instance.Create (EntityTemplate.Ids.Factory);  	factory.Get<Nameplate> ().Name = groupId.ToString ();  	factory.Get<Pos> ().Assign (new Pos {  		X = rand.Next (-50' 50)'  		Y = rand.Next (-50' 50)  	});  	factory.Get<Displayable> ().ResourceId = 6;  	PositionSystem.Global.Appear (factory);  	EntityBinder.Instance.Add (factory);  }  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: factory.Get<Pos> ().Assign (new Pos {  	X = rand.Next (-50' 50)'  	Y = rand.Next (-50' 50)  });  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: factory.Get<Pos> ().Assign (new Pos {  	X = rand.Next (-50' 50)'  	Y = rand.Next (-50' 50)  });  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: factory.Get<Pos> ().Assign (new Pos {  	X = rand.Next (-50' 50)'  	Y = rand.Next (-50' 50)  });  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: factory.Get<Pos> ().Assign (new Pos {  	X = rand.Next (-50' 50)'  	Y = rand.Next (-50' 50)  });  
Magic Number,Server.Content,EnterLeave,C:\repos\lacti_mmo\new_server\Server\Content\EnterLeave.cs,SimulateLachesis,The following statement contains a magic number: factory.Get<Displayable> ().ResourceId = 6;  
Missing Default,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,Affect,The following switch statement is missing a default case: switch (effect.Direction) {  case InteractTemplate.Effect.Directions.Owner:  	AffectToOwner (entity' effect);  	break;  case InteractTemplate.Effect.Directions.Target:  	AffectToTarget (entity' targets' effect);  	break;  }  
Missing Default,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,AffectToOwner,The following switch statement is missing a default case: switch (effect.Type) {  case InteractTemplate.Effect.Types.Attribute:  	AffectToOwnerAttribute (entity' effect);  	break;  }  
Missing Default,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,AffectToTarget,The following switch statement is missing a default case: switch (effect.Type) {  case InteractTemplate.Effect.Types.Attribute:  	AffectToTargetAttribute (entity' targets' effect);  	break;  }  
Missing Default,Server.Subsystem,EffectSystem,C:\repos\lacti_mmo\new_server\Server\Subsystem\EffectSystem.cs,CalculateAffectedValue,The following switch statement is missing a default case: switch (function) {  case InteractTemplate.Effect.Functions.Plus:  	return value + operand;  case InteractTemplate.Effect.Functions.Minus:  	return value - operand;  }  
