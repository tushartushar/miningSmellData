Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,DispatchCommand,Cyclomatic complexity of the method is 10
Long Statement,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,CheckAndDisconnect,The length of the statement  "	var removalSessions = locker.DoWrite (() => sessionMap.Keys.Where (e => (DateTime.Now - e.LastReceiveTime).TotalMilliseconds >= tolerantInterval).ToArray ()); " is 158.
Long Statement,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,Message,The length of the statement  "	var messages = _interChatMessageLock.DoRead (() => _lastMessages.Reverse ().Take (LastWebMessageCount).Where (e => e.Ticks > baseTick).Select (e => new { " is 153.
Empty Catch Block,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,CheckAndDisconnect,The method has an empty catch block.
Magic Number,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,SendPingPacket,The following statement contains a magic number: while (true) {  	const int delayMillisecs = 1 * 60 * 1000;  	await Task.Delay (delayMillisecs);  	// 1분에 한 번씩 ping 패킷을 보낸다.  	SendPingPacket (_serverMapLock' _serverMap);  	SendPingPacket (_interChatLock' _interChatUserMap);  }  
Magic Number,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,SendPingPacket,The following statement contains a magic number: while (true) {  	const int delayMillisecs = 1 * 60 * 1000;  	await Task.Delay (delayMillisecs);  	// 1분에 한 번씩 ping 패킷을 보낸다.  	SendPingPacket (_serverMapLock' _serverMap);  	SendPingPacket (_interChatLock' _interChatUserMap);  }  
Magic Number,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,CheckInvalidConnection,The following statement contains a magic number: while (true) {  	const int delayMillisecs = 5 * 60 * 1000;  	await Task.Delay (delayMillisecs);  	// 일정 시간동안 패킷 교환이 없는 서버는 목록에서 제거한다.  	CheckAndDisconnect (_serverMapLock' _serverMap);  	CheckAndDisconnect (_interChatLock' _interChatUserMap);  }  
Magic Number,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,CheckInvalidConnection,The following statement contains a magic number: while (true) {  	const int delayMillisecs = 5 * 60 * 1000;  	await Task.Delay (delayMillisecs);  	// 일정 시간동안 패킷 교환이 없는 서버는 목록에서 제거한다.  	CheckAndDisconnect (_serverMapLock' _serverMap);  	CheckAndDisconnect (_interChatLock' _interChatUserMap);  }  
Magic Number,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,CheckInvalidConnection,The following statement contains a magic number: while (true) {  	const int delayMillisecs = 5 * 60 * 1000;  	await Task.Delay (delayMillisecs);  	// 일정 시간동안 패킷 교환이 없는 서버는 목록에서 제거한다.  	CheckAndDisconnect (_serverMapLock' _serverMap);  	CheckAndDisconnect (_interChatLock' _interChatUserMap);  }  
Missing Default,Server.Pylon,Program,C:\repos\lacti_mmo\new_server\Server.Pylon\Program.cs,DispatchCommand,The following switch statement is missing a default case: switch ((InterChatCommandType)msg.TypeCode) {  case InterChatCommandType.CheckUserName:  	// 중복된 유저 이름이 있는지 검사해서 알려준다.  	session.Send (new InterChatCommandMsg {  		TypeCode = (int)InterChatCommandType.CheckUserName'  		Content = user.ToString ()  	});  	break;  case InterChatCommandType.ChangeColor:  	// 자신의 텍스트 색상을 변경한다.  	user.TextColor = Color.FromArgb (int.Parse (msg.Content));  	BroadcastCommandMsgWithLock (InterChatCommandType.ChangeColor' user.ToString ());  	break;  case InterChatCommandType.Speech:  	// Speech를 수행한다.  	Task.Factory.StartNew (() => DoSpeech (user.Name' msg.Content));  	break;  }  
