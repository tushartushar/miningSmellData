Implementation smell,Namespace,Class,File,Method,Description
Long Method,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The method has 138 lines of code.
Complex Method,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateHeaders,Cyclomatic complexity of the method is 8
Complex Method,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,Cyclomatic complexity of the method is 27
Complex Method,MmoTools.Generator.Data,DataClass,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataClass.cs,GenerateParseCode,Cyclomatic complexity of the method is 12
Complex Method,MmoTools.Generator.Data,DataCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataCodeGenerator.cs,GenerateParserFile,Cyclomatic complexity of the method is 16
Complex Method,MmoTools.Generator.Data,SimpleDataField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\SimpleDataField.cs,InferenceValueType,Cyclomatic complexity of the method is 9
Complex Method,MmoTools.Generator.Data,SimpleDataField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\SimpleDataField.cs,GenerateParseCode,Cyclomatic complexity of the method is 31
Complex Method,MmoTools.Generator.Message,MessageCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageCodeGenerator.cs,ParseEachField,Cyclomatic complexity of the method is 10
Complex Method,MmoTools.Util,NameUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\NameUtil.cs,ToFunctionName,Cyclomatic complexity of the method is 10
Complex Method,MmoTools.Util,SourceCode,C:\repos\lacti_mmo\tools\mmo_tools\Util\SourceCode.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,ToDefaultValue,Cyclomatic complexity of the method is 13
Complex Method,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,IsPrimitiveType,Cyclomatic complexity of the method is 10
Long Parameter List,MmoTools.Generator.Message,MessageGroup,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageGroup.cs,GenerateEntityBindCode,The method has 7 parameters.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateHeaders,The length of the statement  "		code.Append ("{2}{0} {1};"' TypeUtil.ToDeclareTypeName (attributeField.Type)' attributeField.Name' attributeField.Volatile ? "volatile " : ""); " is 143.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateHeaders,The length of the statement  "	var constructorArgs = attributeClass.Fields.Select (e => string.Format ("{0}({1})"' e.Name' e.Default ?? TypeUtil.ToDefaultValueInInitializer (e.Type))).ToList (); " is 163.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "		_cppCode.Append ("sys<attribute_factory>().factory_map.insert(std::make_pair(\"{0}\"' [=] () {{ return attribute_ref(new {1}); }}));"' attributeClass.Name' attributeClass.StructName); " is 183.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "					_cppCode.Append ("if (stricmp(\"{0}\"' field_name) == 0) {0} = boost::lexical_cast<{1}>(field_value);"' attributeField.Name' TypeUtil.ToDeclareTypeName (attributeField.Type)); " is 175.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "				_cppCode.Append ("bson_append_string(obj' \"{0}\"' boost::lexical_cast<std::string>({0}).c_str());"' attributeField.Name); " is 122.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "						_cppCode.Append ("if (attr_value != nullptr) {0} = boost::lexical_cast<{1}>(attr_value);"' attributeField.Name' TypeUtil.ToDeclareTypeName (attributeField.Type)); " is 162.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "					_cppCode.BracketStart ("for (TiXmlElement* each_node = node->FirstChildElement(); each_node != nullptr; each_node = each_node->NextSiblingElement())"); " is 151.
Long Statement,MmoTools.Generator.Attribute,AttributeCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Attribute\AttributeCodeGenerator.cs,GenerateCpp,The length of the statement  "						_cppCode.Append (attributeField.Type == TypeEnum.STRING ? "{0} = std::string(each_node->GetText() != nullptr? each_node->GetText(): \"\");" : "xml_custom_convert(each_node' &{0});"' attributeField.Name); " is 203.
Long Statement,MmoTools.Generator.Data,DataClass,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataClass.cs,GenerateParseCode,The length of the statement  "		code.BracketStart ("for (TiXmlElement* each_node = root_node->FirstChildElement(); each_node != nullptr; each_node = each_node->NextSiblingElement())"); " is 152.
Long Statement,MmoTools.Generator.Data,DataClass,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataClass.cs,GenerateParseCode,The length of the statement  "				code.Append ("ptr->{0} = std::string(each_node->GetText() != nullptr? each_node->GetText(): \"\");"' IsNameContent ? "name" : "content"); " is 137.
Long Statement,MmoTools.Generator.Data,DataClass,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataClass.cs,GenerateParseCode,The length of the statement  "				code.Append (HasId ? "parent->{0}.insert(std::make_pair(ptr->id' ptr));" : "parent->{0}.push_back(ptr);"' CollectionName); " is 122.
Long Statement,MmoTools.Generator.Data,DataClassField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataClassField.cs,GenerateModelCode,The length of the statement  "		code.Append (Class.HasId ? "typedef std::map<data::id_t' {0}*> {1};" : "typedef std::vector<{0}*> {1};"' Class.TypeName' Class.CollectionTypeName); " is 147.
Long Statement,MmoTools.Generator.Data,DataCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataCodeGenerator.cs,GenerateParserFile,The length of the statement  "		parser.Append ("template <> typename data_center<{0}>::storage_t* data_center<{0}>::storage = nullptr;"' clazz.TypeName); " is 121.
Long Statement,MmoTools.Generator.Data,SimpleDataField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\SimpleDataField.cs,GenerateParseCode,The length of the statement  "			code.Append ("if (stricmp(_temp' \"{2}\") == 0) ptr->{0} = {1}::{2};"' CanonicalName' OwnedClass.QualifiedTypeName' value.Substring (1).ToEnumName ()); " is 151.
Long Statement,MmoTools.Generator.Data,SimpleDataField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\SimpleDataField.cs,GenerateParseRefCode,The length of the statement  "	code.Append ("{0}_data::linker.add<{1}>(&ptr->{2}' {3});"' OwnedClass.Ancestor.SimpleName' ReferenceTypeName' CanonicalName' varName); " is 134.
Long Statement,MmoTools.Generator.Message,CodeGenerateHelper,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\CodeGenerateHelper.cs,GenerateDefaultConstructor,The length of the statement  "	var primitiveArgs = fields.OfType<SimpleField> ().Select (e => string.Format ("{0}({1})"' e.Name' TypeUtil.ToDefaultValueInInitializer (e.Type))).ToArray (); " is 157.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,HasDirection,The length of the statement  "		return From.Equals ("both"' StringComparison.OrdinalIgnoreCase) || From.Equals (name' StringComparison.OrdinalIgnoreCase); " is 122.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,HasDirection,The length of the statement  "		return From.Equals ("both"' StringComparison.OrdinalIgnoreCase) || To.Equals ("both"' StringComparison.OrdinalIgnoreCase); " is 122.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,GenerateEntityBindDeclCode,The length of the statement  "	return String.Format ("void operator {1} (const {0}& msg' entity_ref entity);"' CanonicalName' dir == Direction.From ? "<<" : ">>"); " is 132.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,GenerateEntityBindBodyCode,The length of the statement  "	code.Append ("inline void operator {2} ({0}{1}& msg' entity_ref entity)"' dir == Direction.To ? "const " : ""' CanonicalName' operatorDir); " is 139.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,GenerateEntityBindBodyCode,The length of the statement  "		var entityVar = String.Format ("entity->get<{0}_t>()->{1}"' field.BindAttribute.AttributeName' field.BindAttribute.FieldName); " is 126.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,GenerateEntityBindBodyCode,The length of the statement  "		var format = String.Format ("if (entity->has<{0}_t>()) "' field.BindAttribute.AttributeName) + (dir == Direction.From ? "{0} = {1};" : "{1} = {0};"); " is 149.
Long Statement,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,GenerateEntityBindBodyCode,The length of the statement  "	var bindedRefMessageFields = Fields.OfType<RefField> ().Where (e => e.Target != null && e.Target.HasAttributeBindedField && !(e is RefListField)); " is 146.
Long Statement,MmoTools.Generator.Message,MessageGroup,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageGroup.cs,GenerateEntityBindCode,The length of the statement  "		attributes.AddRange (msg.Fields.OfType<SimpleField> ().Where (e => e.BindAttribute != null).Select (e => e.BindAttribute.AttributeName).Distinct ()); " is 149.
Long Statement,MmoTools.Util,CodeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\CodeUtil.cs,ForEachCode,The length of the statement  "	return string.Format ("for ({0}::{3} {2} = {1}begin(); {2} != {1}end(); ++{2}) {{"' typeName' varAccessor' iteratorName' isConst ? "const_iterator" : "iterator"); " is 162.
Empty Catch Block,MmoTools.Util,EnumerableExtension,C:\repos\lacti_mmo\tools\mmo_tools\Util\EnumerableExtension.cs,IsCastable,The method has an empty catch block.
Magic Number,MmoTools.Generator.Data,DataCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\DataCodeGenerator.cs,GenerateParserFile,The following statement contains a magic number: SourceCode.StaticInitializerSerial = 99;  
Magic Number,MmoTools.Generator.Message,MessageGroup,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageGroup.cs,GenerateMsgType,The following statement contains a magic number: foreach (var msg in Messages) {  	code.Append ("const msg_type_t {0} = {1};"' msg.Name' _id * 1000 + msgSerial);  	++msgSerial;  }  
Magic Number,MmoTools.Generator.Message,MessageGroup,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageGroup.cs,GenerateMsgType,The following statement contains a magic number: code.Append ("const msg_type_t {0} = {1};"' msg.Name' _id * 1000 + msgSerial);  
Missing Default,MmoTools.Generator.Data,SimpleDataField,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Data\SimpleDataField.cs,GenerateParseCode,The following switch statement is missing a default case: switch (ValueType) {  case TypeEnum.BOOL:  	code.BracketStart ();  	code.Append ("const char* _temp = each_node->Attribute(\"{0}\");"' CanonicalName);  	code.Append ("ptr->{0} = _temp == nullptr? false: boost::lexical_cast<bool>(_temp);"' CanonicalName);  	code.BracketEnd ();  	break;  case TypeEnum.DATA_ENUM:  	code.BracketStart ();  	code.Append ("const char* _temp = each_node->Attribute(\"{0}\");"' CanonicalName);  	foreach (var value in Values.Distinct ())  		code.Append ("if (stricmp(_temp' \"{2}\") == 0) ptr->{0} = {1}::{2};"' CanonicalName' OwnedClass.QualifiedTypeName' value.Substring (1).ToEnumName ());  	// remove leading _ char  	code.BracketEnd ();  	break;  case TypeEnum.DATA_ID:  case TypeEnum.INT:  case TypeEnum.DOUBLE:  	code.Append ("each_node->Attribute(\"{0}\"' &ptr->{0});"' CanonicalName);  	break;  case TypeEnum.DATA_POS:  	code.Append ("parse_data_xyz(each_node->Attribute(\"{0}\")' &ptr->{0});"' CanonicalName);  	break;  case TypeEnum.STRING:  	code.Append ("ptr->{0} = std::string(each_node->Attribute(\"{0}\"));"' CanonicalName);  	break;  case TypeEnum.DATA_REFERENCE:  	code.Append ("ptr->{0} = nullptr;"' CanonicalName);  	break;  case TypeEnum.DATA_EXPRESSION:  	code.Append ("ptr->{0} = expression_parser_t(each_node->Attribute(\"{0}\")).result();"' CanonicalName);  	break;  }  
Missing Default,MmoTools.Generator.Message,Message,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\Message.cs,HasDirection,The following switch statement is missing a default case: switch (direction) {  case Direction.From:  	return From.Equals ("both"' StringComparison.OrdinalIgnoreCase) || From.Equals (name' StringComparison.OrdinalIgnoreCase);  case Direction.To:  	return To.Equals ("both"' StringComparison.OrdinalIgnoreCase) || To.Equals (name' StringComparison.OrdinalIgnoreCase);  case Direction.Both:  	return From.Equals ("both"' StringComparison.OrdinalIgnoreCase) || To.Equals ("both"' StringComparison.OrdinalIgnoreCase);  }  
Missing Default,MmoTools.Generator.Message,MessageCodeGenerator,C:\repos\lacti_mmo\tools\mmo_tools\Generator\Message\MessageCodeGenerator.cs,ParseEachField,The following switch statement is missing a default case: switch (fieldType) {  case "field":  	fields.Add (ParseSimpleFieldNode (fieldNode));  	break;  case "list":  	fields.Add (ParseListFieldNode (fieldNode));  	break;  case "ref":  	fields.Add (ParseRefFieldNode (fieldNode));  	break;  }  
Missing Default,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,Parse,The following switch statement is missing a default case: switch (name.ToLower ()) {  case "__int64":  	return TypeEnum.INT64;  case "std::string":  	return TypeEnum.STRING;  case "msg::bin_t":  	return TypeEnum.BIN;  case "entity_id_t":  	return TypeEnum.ENTITY_ID;  case "data::id_t":  	return TypeEnum.DATA_ID;  case "data::xyz_t":  	return TypeEnum.DATA_POS;  }  
Missing Default,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,ToDeclareTypeName,The following switch statement is missing a default case: switch (type) {  case TypeEnum.INT64:  	return "__int64";  case TypeEnum.STRING:  	return "std::string";  case TypeEnum.BIN:  	return "msg::bin_t";  case TypeEnum.ENTITY_ID:  	return "entity_id_t";  case TypeEnum.DATA_ID:  	return "data::id_t";  case TypeEnum.DATA_POS:  	return "data::xyz_t";  case TypeEnum.DATA_EXPRESSION:  	return "double";  }  
Missing Default,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,ToDefaultValue,The following switch statement is missing a default case: switch (type) {  case TypeEnum.BOOL:  	return "false";  case TypeEnum.CHAR:  case TypeEnum.SHORT:  case TypeEnum.INT:  case TypeEnum.LONG:  case TypeEnum.INT64:  case TypeEnum.FLOAT:  case TypeEnum.DOUBLE:  	return "0";  case TypeEnum.STRING:  	return "\"\"";  case TypeEnum.BIN:  	return "";  case TypeEnum.ENTITY_ID:  	return "INVALID_ENTITY_ID";  case TypeEnum.DATA_ID:  	return "0";  case TypeEnum.DATA_POS:  	return "";  }  
Missing Default,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,ToDefaultValueInInitializer,The following switch statement is missing a default case: switch (type) {  case TypeEnum.STRING:  	return "";  }  
Missing Default,MmoTools.Util,TypeUtil,C:\repos\lacti_mmo\tools\mmo_tools\Util\TypeUtil.cs,IsPrimitiveType,The following switch statement is missing a default case: switch (type) {  case TypeEnum.BOOL:  case TypeEnum.CHAR:  case TypeEnum.SHORT:  case TypeEnum.INT:  case TypeEnum.LONG:  case TypeEnum.INT64:  case TypeEnum.FLOAT:  case TypeEnum.DOUBLE:  case TypeEnum.ENTITY_ID:  case TypeEnum.DATA_ID:  	return true;  }  
