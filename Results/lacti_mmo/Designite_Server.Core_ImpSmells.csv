Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Server.Core.Command,CommandMap,C:\repos\lacti_mmo\new_server\Server.Core\Command\CommandMap.cs,InvokeHandler,Cyclomatic complexity of the method is 8
Complex Method,Server.Core.Component.Messaging,EntityMessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\Messaging\EntityMessageExtension.cs,InvokeTrigger,Cyclomatic complexity of the method is 9
Complex Method,Server.Core.Messaging,MessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Messaging\MessageExtension.cs,WriteTo,Cyclomatic complexity of the method is 10
Complex Method,Server.Core.Messaging,MessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Messaging\MessageExtension.cs,Read,Cyclomatic complexity of the method is 10
Complex Method,Server.Core.Messaging,MessageSession,C:\repos\lacti_mmo\new_server\Server.Core\Messaging\MessageSession.cs,Dispatch,Cyclomatic complexity of the method is 9
Complex Method,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,ReadPostData,Cyclomatic complexity of the method is 9
Complex Method,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,Cyclomatic complexity of the method is 15
Complex Method,Server.Core.Util,BinaryIoExtension,C:\repos\lacti_mmo\new_server\Server.Core\Util\BinaryIoExtension.cs,Write,Cyclomatic complexity of the method is 9
Complex Method,Server.Core.Util,SocketHelper,C:\repos\lacti_mmo\new_server\Server.Core\Util\SocketHelper.cs,IsDisconnected,Cyclomatic complexity of the method is 8
Complex Method,Server.Core.Util,SourceCode,C:\repos\lacti_mmo\new_server\Server.Core\Util\SourceCode.cs,Parse,Cyclomatic complexity of the method is 9
Complex Method,Server.Core.Data,DataCenter,C:\repos\lacti_mmo\new_server\Server.Core\Data\DataCenter.cs,ReadObjectFromXml,Cyclomatic complexity of the method is 13
Long Parameter List,Server.Core.Command,CommandMap,C:\repos\lacti_mmo\new_server\Server.Core\Command\CommandMap.cs,Dispatch,The method has 5 parameters.
Long Parameter List,Server.Core.Component,EntityBinder,C:\repos\lacti_mmo\new_server\Server.Core\Component\EntityBinder.cs,Sync,The method has 7 parameters.
Long Parameter List,Server.Core.Component.Messaging,EntityMessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\Messaging\EntityMessageExtension.cs,ChangeAttributeValue,The method has 5 parameters.
Long Parameter List,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,ExecuteHandler,The method has 5 parameters.
Long Parameter List,Server.Core.Util,AsyncSocketExtension,C:\repos\lacti_mmo\new_server\Server.Core\Util\AsyncSocketExtension.cs,ReceiveAsync,The method has 6 parameters.
Long Parameter List,Server.Core.Util,AsyncSocketExtension,C:\repos\lacti_mmo\new_server\Server.Core\Util\AsyncSocketExtension.cs,SendAsync,The method has 6 parameters.
Long Statement,Server.Core.Command,CommandMap,C:\repos\lacti_mmo\new_server\Server.Core\Command\CommandMap.cs,Dispatch,The length of the statement  "	success = _commandMap [command].Aggregate (false' (result' handler) => InvokeHandler (entity' args' handler.Object' handler.Info) || result); " is 141.
Long Statement,Server.Core.Component,ConstraintsHelper,C:\repos\lacti_mmo\new_server\Server.Core\Component\ConstraintsHelper.cs,ApplyConstraints,The length of the statement  "	foreach (var constraints in propertyInfo.GetCustomAttributes (typeof(ConstraintsAttribute)' false).OfType<ConstraintsAttribute> ()) { " is 133.
Long Statement,Server.Core.Component,AttributeExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\AttributeExtension.cs,SetValue,The length of the statement  "		property.SetValue (attribute' property.PropertyType == value.GetType () ? value : Convert.ChangeType (value' property.PropertyType)); " is 133.
Long Statement,Server.Core.Component.Messaging,EntityMessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\Messaging\EntityMessageExtension.cs,InvokeTrigger,The length of the statement  "	InvokeTrigger (entity' triggerType' attributeType.GetCustomAttributes (typeof(TriggerAttribute)' false).OfType<TriggerAttribute> ()); " is 133.
Long Statement,Server.Core.Component.Messaging,EntityMessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\Messaging\EntityMessageExtension.cs,InvokeTrigger,The length of the statement  "	InvokeTrigger (entity' triggerType' propertyInfo.GetCustomAttributes (typeof(TriggerAttribute)' false).OfType<TriggerAttribute> ()); " is 132.
Long Statement,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,ReadPostData,The length of the statement  "	var boundary = contentType.Contains (boundaryPrefix) ? contentType.Substring (contentType.IndexOf (boundaryPrefix) + boundaryPrefix.Length) : ""; " is 145.
Long Statement,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,The length of the statement  "		var methodName = url.Contains ('?') ? url.Substring (url.LastIndexOf ('/') + 1' url.IndexOf ('?') - url.LastIndexOf ('/') - 1).ToLower () : url.Substring (url.LastIndexOf ('/') + 1).ToLower (); " is 193.
Long Statement,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,The length of the statement  "		foreach (var removalCookie in context.Response.Cookies.OfType<Cookie> ().Where (e => httpObject.CookiesToRemove.Contains (e.Name))) " is 131.
Long Statement,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,The length of the statement  "				var sessionCookie = context.Response.Cookies.OfType<Cookie> ().FirstOrDefault (e => e.Name == DataSessionKeyCookieName); " is 120.
Long Statement,Server.Core.Util,Logger,C:\repos\lacti_mmo\new_server\Server.Core\Util\Logger.cs,WriteInternal,The length of the statement  "	var logFile = Path.Combine (Configuration.LogDirectory' string.Format ("mmo-server-{0}.log"' DateTime.Now.ToString ("yyMMdd"))); " is 128.
Long Statement,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The length of the statement  "	var response = await client.GetAsync ("http://text-to-speech.imtranslator.net/sockets/tts.asp?speed=0&url=F_TR&dir=ko&B=1&ID=735231370&chr=MiaHead&vc=VW%20Yumi"); " is 162.
Empty Catch Block,Server.Core.Data,DataTemplateHelper,C:\repos\lacti_mmo\new_server\Server.Core\Data\DataTemplateHelper.cs,IsCastable,The method has an empty catch block.
Magic Number,Server.Core.Messaging,MessageListener,C:\repos\lacti_mmo\new_server\Server.Core\Messaging\MessageListener.cs,Start,The following statement contains a magic number: try {  	listener.Bind (localEndPoint);  	listener.Listen (100);  	while (true) {  		var clientSocket = await listener.AcceptAsync ();  		var session = SessionManager.CreateSession (clientSocket);  		session.StartReceive ();  	}  }  catch (Exception e) {  	Logger.Write (e);  }  
Magic Number,Server.Core.Messaging,MessageListener,C:\repos\lacti_mmo\new_server\Server.Core\Messaging\MessageListener.cs,Start,The following statement contains a magic number: listener.Listen (100);  
Magic Number,Server.Core.Util,CommandOptions,C:\repos\lacti_mmo\new_server\Server.Core\Util\CommandOptions.cs,CommandOptions,The following statement contains a magic number: for (int index = 0; index < args.Length; index += 2)  	_optionMap.Add (args [index]' args [index + 1]);  
Magic Number,Server.Core.Util,CommandOptions,C:\repos\lacti_mmo\new_server\Server.Core\Util\CommandOptions.cs,CommandOptions,The following statement contains a magic number: index += 2
Magic Number,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,The following statement contains a magic number: if (url.StartsWith (ApiResourceName' StringComparison.OrdinalIgnoreCase)) {  	var methodName = url.Contains ('?') ? url.Substring (url.LastIndexOf ('/') + 1' url.IndexOf ('?') - url.LastIndexOf ('/') - 1).ToLower () : url.Substring (url.LastIndexOf ('/') + 1).ToLower ();  	// 등록된 파일이 없다면 Handler가 있는지 찾아보고 실행한 결과를 반환해준다.  	var httpObject = TryExecuteHandler (context' methodName);  	FireLogMessage (httpObject.ContentType);  	// Cookie 추가 및 삭제  	foreach (var newCookie in httpObject.CookiesToAdd)  		context.Response.AppendCookie (newCookie);  	foreach (var removalCookie in context.Response.Cookies.OfType<Cookie> ().Where (e => httpObject.CookiesToRemove.Contains (e.Name)))  		removalCookie.Expires = DateTime.Now.Subtract (TimeSpan.FromDays (1));  	if (httpObject.Session != null) {  		// Session이 추가되었다면 Session을 설정해준다.  		if (!httpObject.NeedToDeleteSession) {  			UpdateSessionMap (httpObject.Session);  			context.Response.AppendCookie (new Cookie (DataSessionKeyCookieName' httpObject.Session.SessionKey));  		}  		else {  			// 필요에 따라 Session을 파괴한다.  			RemoveSessionMap (httpObject.Session);  			var sessionCookie = context.Response.Cookies.OfType<Cookie> ().FirstOrDefault (e => e.Name == DataSessionKeyCookieName);  			if (sessionCookie != null)  				sessionCookie.Expires = DateTime.Now.Subtract (TimeSpan.FromDays (1));  		}  	}  	if (!string.IsNullOrWhiteSpace (httpObject.RedirectUrl)) {  		context.Response.Redirect (httpObject.RedirectUrl);  	}  	else {  		context.Response.AddHeader ("Content-Type"' httpObject.ContentType);  		if (!string.IsNullOrWhiteSpace (httpObject.ContentDisposition))  			context.Response.AddHeader ("Content-Disposition"' httpObject.ContentDisposition);  		context.Response.OutputStream.Write (httpObject.ReturnBytes' 0' httpObject.ReturnBytes.Length);  	}  }  else {  	// QueryString을 제거하고 맨 앞의 / 문자를 제거한다.  	var resourceUrl = url.Contains ('?') ? url.Substring (0' url.IndexOf ('?')) : url;  	resourceUrl = resourceUrl.Substring (1);  	// 주소를 입력하지 않았다면 기본 파일을 보여준다.  	if (resourceUrl.Length == 0)  		resourceUrl = DefaultIndexFile;  	var resourcePath = Path.Combine (BaseDirectoryPath' resourceUrl.Replace ('/'' Path.DirectorySeparatorChar));  	if (!File.Exists (resourcePath))  		return;  	var outputStream = context.Response.OutputStream;  	using (var reader = new FileStream (resourcePath' FileMode.Open' FileAccess.Read' FileShare.Read)) {  		var buffer = new byte[4096];  		int read;  		while ((read = reader.Read (buffer' 0' buffer.Length)) > 0) {  			outputStream.Write (buffer' 0' read);  		}  	}  }  
Magic Number,Server.Core.Util,DataHttpServer,C:\repos\lacti_mmo\new_server\Server.Core\Util\DataHttpServer.cs,HandleContext,The following statement contains a magic number: using (var reader = new FileStream (resourcePath' FileMode.Open' FileAccess.Read' FileShare.Read)) {  	var buffer = new byte[4096];  	int read;  	while ((read = reader.Read (buffer' 0' buffer.Length)) > 0) {  		outputStream.Write (buffer' 0' read);  	}  }  
Magic Number,Server.Core.Util,HttpResponseObject,C:\repos\lacti_mmo\new_server\Server.Core\Util\HttpReturnObject.cs,CreateSession,The following statement contains a magic number: for (var index = 0; index < parameters.Length; index += 2) {  	newSession [parameters [index].ToString ()] = parameters [index + 1];  }  
Magic Number,Server.Core.Util,HttpResponseObject,C:\repos\lacti_mmo\new_server\Server.Core\Util\HttpReturnObject.cs,CreateSession,The following statement contains a magic number: index += 2
Magic Number,Server.Core.Util,Timer,C:\repos\lacti_mmo\new_server\Server.Core\Util\Timer.cs,TimerLoop,The following statement contains a magic number: while (true) {  	_buckets [_currentBucketIndex].ExecuteAndClear ();  	_currentBucketIndex = (_currentBucketIndex + 1) % BucketCount;  	var waitingMilliSec = _processWatch.IsRunning ? (int)_processWatch.ElapsedMilliseconds : 0;  	var nextMilliSec = (Resolution * 2) - waitingMilliSec - _delayCorrection;  	_processWatch.Restart ();  	if (nextMilliSec > 0) {  		_delayWatch.Start ();  		Thread.Sleep (nextMilliSec);  		_delayCorrection = Math.Min (0' (int)_delayWatch.ElapsedMilliseconds - nextMilliSec);  	}  }  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: using (var outStream = new MemoryStream ()) {  	foreach (var tag in swf.Tags) {  		var blockTag = tag as SoundStreamBlockTag;  		if (blockTag == null)  			continue;  		var soundTag = blockTag;  		var data = soundTag.SoundData;  		outStream.Write (data' 4' data.Length - 4);  	}  	return outStream.ToArray ();  }  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: using (var outStream = new MemoryStream ()) {  	foreach (var tag in swf.Tags) {  		var blockTag = tag as SoundStreamBlockTag;  		if (blockTag == null)  			continue;  		var soundTag = blockTag;  		var data = soundTag.SoundData;  		outStream.Write (data' 4' data.Length - 4);  	}  	return outStream.ToArray ();  }  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: foreach (var tag in swf.Tags) {  	var blockTag = tag as SoundStreamBlockTag;  	if (blockTag == null)  		continue;  	var soundTag = blockTag;  	var data = soundTag.SoundData;  	outStream.Write (data' 4' data.Length - 4);  }  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: foreach (var tag in swf.Tags) {  	var blockTag = tag as SoundStreamBlockTag;  	if (blockTag == null)  		continue;  	var soundTag = blockTag;  	var data = soundTag.SoundData;  	outStream.Write (data' 4' data.Length - 4);  }  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: outStream.Write (data' 4' data.Length - 4);  
Magic Number,Server.Core.Util,VoiceReader,C:\repos\lacti_mmo\new_server\Server.Core\Util\VoiceReader.cs,ReadOldApi,The following statement contains a magic number: outStream.Write (data' 4' data.Length - 4);  
Missing Default,Server.Core.Component,ConstraintsHelper,C:\repos\lacti_mmo\new_server\Server.Core\Component\ConstraintsHelper.cs,ApplyConstraints,The following switch statement is missing a default case: switch (constraints.Type) {  case ConstraintsType.Min:  	newValue = ApplyMinConstraints (constraints' newValue' attribute' propertyInfo);  	break;  case ConstraintsType.Max:  	newValue = ApplyMaxConstraints (constraints' newValue' attribute' propertyInfo);  	break;  }  
Missing Default,Server.Core.Component,ConstraintsHelper,C:\repos\lacti_mmo\new_server\Server.Core\Component\ConstraintsHelper.cs,ApplyMaxConstraints,The following switch statement is missing a default case: switch (constraints.ValueType) {  case ConstraintsValueType.IntValue:  	return Math.Min (newValue.As<int> ()' constraints.IntValue);  case ConstraintsValueType.FloatValue:  	return Math.Min (newValue.As<float> ()' constraints.FloatValue);  case ConstraintsValueType.Reference: {  	var attributeType = attribute.GetType ();  	var referenceProperty = attributeType.GetProperty (constraints.FieldName.ToCamelCase ());  	return Math.Min (newValue.As<float> ()' referenceProperty.GetValue (attribute).As<float> ());  }  }  
Missing Default,Server.Core.Component,ConstraintsHelper,C:\repos\lacti_mmo\new_server\Server.Core\Component\ConstraintsHelper.cs,ApplyMinConstraints,The following switch statement is missing a default case: switch (constraints.ValueType) {  case ConstraintsValueType.IntValue:  	return Math.Max (newValue.As<int> ()' constraints.IntValue);  case ConstraintsValueType.FloatValue:  	return Math.Max (newValue.As<float> ()' constraints.FloatValue);  case ConstraintsValueType.Reference:  	return Math.Max (newValue.As<float> ()' propertyInfo.GetValue (attribute).As<float> ());  }  
Missing Default,Server.Core.Component.Messaging,EntityMessageExtension,C:\repos\lacti_mmo\new_server\Server.Core\Component\Messaging\EntityMessageExtension.cs,InvokeTrigger,The following switch statement is missing a default case: switch (trigger.Action) {  case TriggerAction.Send:  	EntityMessageQueue.Global.SendTo (entity' message);  	break;  case TriggerAction.Broadcast:  	EntityMessageQueue.Global.BroadcastTo (entity' message);  	break;  }  
Missing Default,Server.Core.Util,SocketHelper,C:\repos\lacti_mmo\new_server\Server.Core\Util\SocketHelper.cs,IsDisconnected,The following switch statement is missing a default case: switch ((SocketError)exception.ErrorCode) {  case SocketError.ConnectionAborted:  case SocketError.ConnectionReset:  case SocketError.Fault:  case SocketError.NetworkReset:  case SocketError.OperationAborted:  case SocketError.Shutdown:  case SocketError.SocketError:  case SocketError.TimedOut:  	return true;  }  
