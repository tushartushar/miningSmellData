Implementation smell,Namespace,Class,File,Method,Description
Complex Method,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,DispatchCommand,Cyclomatic complexity of the method is 22
Complex Method,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,HookCommand,Cyclomatic complexity of the method is 17
Long Statement,launcher,ClientLauncher,C:\repos\lacti_mmo\tools\launcher\ClientLauncher.cs,Execute,The length of the statement  "	var server = _serversLock.DoRead (() => serverIndex >= 0 && serverIndex < _serverMsgs.Count ? _serverMsgs [serverIndex] : null); " is 128.
Long Statement,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,AppendLog,The length of the statement  "	textLog.AppendText ("("' Color.Black).AppendText (time' Color.DarkBlue).AppendText (") "' Color.Black).AppendText ("<"' Color.Black).AppendText (sender' Color.Blue).AppendText ("> "' Color.Black).AppendText (message + "\r\n"' textColor); " is 237.
Long Statement,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,PatchBinary,The length of the statement  "			var destPath = Path.Combine (localPath' filePath.Replace ("/"' Path.DirectorySeparatorChar.ToString (CultureInfo.InvariantCulture))); " is 133.
Empty Catch Block,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,SaveAccountNameToRegistry,The method has an empty catch block.
Empty Catch Block,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,timerRefresh_Tick,The method has an empty catch block.
Magic Number,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,Reconnect,The following statement contains a magic number: try {  	_session = MessageSessionManager.Instance.CreateSession ();  	#if DEBUG  	_session.Connect ("127.0.0.1"' Configuration.PylonPort);  	#else  	                _session.Connect(Configuration.PylonHost' Configuration.PylonPort); #endif  	_session.StartReceive ();  	_session.Send (new InterChatLoginMsg {  		Name = _userName  	});  	return;  }  catch {  	Task.Delay (5000).ContinueWith (_ => Reconnect ());  }  
Magic Number,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,Reconnect,The following statement contains a magic number: Task.Delay (5000).ContinueWith (_ => Reconnect ());  
Magic Number,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,DoFlashWindow,The following statement contains a magic number: if (!ApplicationIsActivated ()) {  	FlashWindow.Flash (this' 3);  }  
Magic Number,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,DoFlashWindow,The following statement contains a magic number: FlashWindow.Flash (this' 3);  
Magic Number,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,PatchBinary,The following statement contains a magic number: using (var webClient = new WebClient ()) {  	var files = webClient.DownloadString (baseUrl + "files");  	var downloadMap = new Dictionary<string' string> ();  	foreach (var each in files.Split ('\r'' '\n').Where (e => !string.IsNullOrWhiteSpace (e))) {  		var triple = each.Split (''');  		var filePath = triple [0];  		var length = long.Parse (triple [1]);  		var hash = triple [2];  		var destPath = Path.Combine (localPath' filePath.Replace ("/"' Path.DirectorySeparatorChar.ToString (CultureInfo.InvariantCulture)));  		var destFileInfo = new FileInfo (destPath);  		if (destFileInfo.Exists && destFileInfo.Length == length && hash == Hash (destPath))  			continue;  		var fileUrl = baseUrl + filePath;  		downloadMap.Add (fileUrl' destPath);  	}  	UpdateUi (() =>  {  		progressBar.Maximum = downloadMap.Count;  		progressBar.Value = 0;  	});  	foreach (var pair in downloadMap) {  		var parentPath = Path.GetDirectoryName (pair.Value);  		if (parentPath != null)  			CreateDirectory (new DirectoryInfo (parentPath));  		webClient.DownloadFile (pair.Key' pair.Value);  		UpdateUi (() => ++progressBar.Value);  	}  }  
Magic Number,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,PatchBinary,The following statement contains a magic number: foreach (var each in files.Split ('\r'' '\n').Where (e => !string.IsNullOrWhiteSpace (e))) {  	var triple = each.Split (''');  	var filePath = triple [0];  	var length = long.Parse (triple [1]);  	var hash = triple [2];  	var destPath = Path.Combine (localPath' filePath.Replace ("/"' Path.DirectorySeparatorChar.ToString (CultureInfo.InvariantCulture)));  	var destFileInfo = new FileInfo (destPath);  	if (destFileInfo.Exists && destFileInfo.Length == length && hash == Hash (destPath))  		continue;  	var fileUrl = baseUrl + filePath;  	downloadMap.Add (fileUrl' destPath);  }  
Missing Default,launcher,FormInterChat,C:\repos\lacti_mmo\tools\launcher\FormInterChat.cs,DispatchCommand,The following switch statement is missing a default case: switch ((InterChatCommandType)msg.TypeCode) {  case InterChatCommandType.InformLoggedUsers:  	_userMap.Clear ();  	if (!string.IsNullOrWhiteSpace (msg.Content)) {  		foreach (var each in msg.Content.Split ('|')) {  			KeyValuePair<string' Color> userInfo;  			if (ParseUser (each' out userInfo))  				_userMap.Add (userInfo.Key' userInfo.Value);  		}  	}  	break;  case InterChatCommandType.InformLoggedUser:  	{  		KeyValuePair<string' Color> userInfo;  		if (ParseUser (msg.Content' out userInfo))  			_userMap.Add (userInfo.Key' userInfo.Value);  	}  	break;  case InterChatCommandType.InformLogoutUser:  	_userMap.Remove (msg.Content);  	break;  case InterChatCommandType.ChangeColor:  	{  		KeyValuePair<string' Color> userInfo;  		if (ParseUser (msg.Content' out userInfo) && _userMap.ContainsKey (userInfo.Key))  			_userMap [userInfo.Key] = userInfo.Value;  	}  	break;  case InterChatCommandType.Speech:  	{  		var mp3Bytes = Convert.FromBase64String (msg.Content);  		var tempFile = Path.GetTempFileName () + ".mp3";  		File.WriteAllBytes (tempFile' mp3Bytes);  		var player = new WMPLib.WindowsMediaPlayer {  			URL = tempFile  		};  		player.controls.play ();  	}  	break;  }  
Missing Default,launcher,FormLauncher,C:\repos\lacti_mmo\tools\launcher\FormLauncher.cs,ProcessInterChatCommandMsg,The following switch statement is missing a default case: switch ((InterChatCommandType)msg.TypeCode) {  case InterChatCommandType.CheckUserName:  	if (msg.Content.As<bool> ()) {  		StartInterChat ();  	}  	else {  		ShowError ("Duplicated name: " + textAccountName.Text);  		UpdateUi (() =>  {  			textAccountName.SelectAll ();  			textAccountName.Focus ();  		});  	}  	break;  }  
