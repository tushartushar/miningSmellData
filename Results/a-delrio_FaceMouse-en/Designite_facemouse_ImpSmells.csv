Implementation smell,Namespace,Class,File,Method,Description
Complex Method,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,Cyclomatic complexity of the method is 10
Complex Method,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,Cyclomatic complexity of the method is 12
Long Parameter List,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,mouse_event,The method has 5 parameters.
Long Parameter List,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,ToAscii,The method has 5 parameters.
Long Statement,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,FirstTimeRun_Load,The length of the statement  "	label1.Text = "Welcome to =] FaceMouse' this is the quick-start guide to learn using this program. Click anywhere to start the tutorial."; " is 138.
Long Statement,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The length of the statement  "			label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue."; " is 147.
Long Statement,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The length of the statement  "			label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue."; " is 122.
Long Statement,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The length of the statement  "			label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue."; " is 192.
Long Statement,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The length of the statement  "			label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse."; " is 127.
Long Statement,FaceMouse,Main,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,Form1_Load,The length of the statement  "	////The following code causes random errors when used along with the actHook' how do we solve this!? Tried several approaches... " is 128.
Long Statement,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnNewFrame,The length of the statement  "	landmarkStatus = faceLandmark.QueryLandmarkData (faceId' PXCMFaceAnalysis.Landmark.Label.LABEL_7POINTS' faceLandmarkData); " is 122.
Long Statement,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,The length of the statement  "			drawer.DrawRectangle (new Pen (new SolidBrush (Color.Red)' 1)' new Rectangle (new Point ((int)faceLocationData.rectangle.x' (int)faceLocationData.rectangle.y)' new Size ((int)faceLocationData.rectangle.w' (int)faceLocationData.rectangle.h))); " is 242.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,Start,The length of the statement  "			//Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,Start,The length of the statement  "			//Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,Stop,The length of the statement  "			//Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,Stop,The length of the statement  "			//Returns the error code returned by the last unmanaged function called using platform invoke that has the DllImportAttribute.SetLastError flag set.  " is 148.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The length of the statement  "		KeyboardHookStruct MyKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure (lParam' typeof(KeyboardHookStruct)); " is 122.
Long Statement,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The length of the statement  "			if (ToAscii (MyKeyboardHookStruct.vkCode' MyKeyboardHookStruct.scanCode' keyState' inBuffer' MyKeyboardHookStruct.flags) == 1) { " is 128.
Complex Conditional,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The conditional expression  "(iXAvg < oPlace.Width - 1) && (iXAvg > 0) && (iYAvg < oPlace.Height - 1) && (iYAvg > 0)"  is complex.
Complex Conditional,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The conditional expression  "(iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)"  is complex.
Complex Conditional,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The conditional expression  "(nCode >= 0) && (KeyDown != null || KeyUp != null || KeyPress != null)"  is complex.
Empty Catch Block,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnNewFrame,The method has an empty catch block.
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (e.Button.ToString ().CompareTo ("Left") == 0) {  	if (step == 0) {  		tableLayoutPanel1.SetColumnSpan (label1' 1);  		label1.Text = "";  		label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  	}  	else if (step == 1) {  		label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  	}  	else if (step == 2) {  		label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  	}  	else if (step == 3) {  		pictureBox1.Image = null;  		tableLayoutPanel1.SetColumnSpan (label1' 3);  		label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  		label2.Text = "";  	}  	else {  		this.Close ();  	}  	step++;  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (e.Button.ToString ().CompareTo ("Left") == 0) {  	if (step == 0) {  		tableLayoutPanel1.SetColumnSpan (label1' 1);  		label1.Text = "";  		label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  	}  	else if (step == 1) {  		label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  	}  	else if (step == 2) {  		label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  	}  	else if (step == 3) {  		pictureBox1.Image = null;  		tableLayoutPanel1.SetColumnSpan (label1' 3);  		label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  		label2.Text = "";  	}  	else {  		this.Close ();  	}  	step++;  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (e.Button.ToString ().CompareTo ("Left") == 0) {  	if (step == 0) {  		tableLayoutPanel1.SetColumnSpan (label1' 1);  		label1.Text = "";  		label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  	}  	else if (step == 1) {  		label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  	}  	else if (step == 2) {  		label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  		pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  	}  	else if (step == 3) {  		pictureBox1.Image = null;  		tableLayoutPanel1.SetColumnSpan (label1' 3);  		label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  		label2.Text = "";  	}  	else {  		this.Close ();  	}  	step++;  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 0) {  	tableLayoutPanel1.SetColumnSpan (label1' 1);  	label1.Text = "";  	label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  }  else if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 0) {  	tableLayoutPanel1.SetColumnSpan (label1' 1);  	label1.Text = "";  	label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  }  else if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 0) {  	tableLayoutPanel1.SetColumnSpan (label1' 1);  	label1.Text = "";  	label2.Text = "Be sure to have your webcam connected' if your webcam is not connected you will se a window like this. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse1;  }  else if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 1) {  	label2.Text = "You will have a better experience with =] FaceMouse if your room is well lit. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse2;  }  else if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 2) {  	label2.Text = "If your camera is correctly connected' then as soon as this tutorial ends you should see your face like in the lower-right part of the image shown. Click anywhere to continue.";  	pictureBox1.Image = FaceMouse.Properties.Resources.facemouse3;  }  else if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: if (step == 3) {  	pictureBox1.Image = null;  	tableLayoutPanel1.SetColumnSpan (label1' 3);  	label1.Text = "To start (or stop) moving the mouse press F12. Click anywhere to finish tutorial and start using =] FaceMouse.";  	label2.Text = "";  }  else {  	this.Close ();  }  
Magic Number,FaceMouse,FirstTimeRun,C:\repos\a-delrio_FaceMouse-en\facereco_test\FirstTimeRun.cs,MouseActivity,The following statement contains a magic number: tableLayoutPanel1.SetColumnSpan (label1' 3);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,MyPipeline,The following statement contains a magic number: faceLandmarkData = new PXCMFaceAnalysis.Landmark.LandmarkData[7];  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,MyPipeline,The following statement contains a magic number: lastProcessedBitmap = new Bitmap (640' 480);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,MyPipeline,The following statement contains a magic number: lastProcessedBitmap = new Bitmap (640' 480);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnNewFrame,The following statement contains a magic number: attributeProfile.threshold = 50;  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,The following statement contains a magic number: AddFacePositionToSmooth (new Point ((int)faceLandmarkData [6].position.x' (int)faceLandmarkData [6].position.y));  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,The following statement contains a magic number: AddFacePositionToSmooth (new Point ((int)faceLandmarkData [6].position.x' (int)faceLandmarkData [6].position.y));  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,The following statement contains a magic number: currentCursorSmooth = 10;  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,OnImage,The following statement contains a magic number: DrawCircle (lastProcessedBitmap' facePosition' 2' Color.Red);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: if ((iXAvg < oPlace.Width - 1) && (iXAvg > 0) && (iYAvg < oPlace.Height - 1) && (iYAvg > 0)) {  	//Draw circle  	for (int iA = 0; iA < 628; iA++) {  		iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  		iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  		if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  			oPlace.SetPixel (iX' iY' oClr);  		}  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: if ((iXAvg < oPlace.Width - 1) && (iXAvg > 0) && (iYAvg < oPlace.Height - 1) && (iYAvg > 0)) {  	//Draw circle  	for (int iA = 0; iA < 628; iA++) {  		iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  		iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  		if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  			oPlace.SetPixel (iX' iY' oClr);  		}  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: if ((iXAvg < oPlace.Width - 1) && (iXAvg > 0) && (iYAvg < oPlace.Height - 1) && (iYAvg > 0)) {  	//Draw circle  	for (int iA = 0; iA < 628; iA++) {  		iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  		iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  		if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  			oPlace.SetPixel (iX' iY' oClr);  		}  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: for (int iA = 0; iA < 628; iA++) {  	iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  	iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  	if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  		oPlace.SetPixel (iX' iY' oClr);  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: for (int iA = 0; iA < 628; iA++) {  	iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  	iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  	if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  		oPlace.SetPixel (iX' iY' oClr);  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: for (int iA = 0; iA < 628; iA++) {  	iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  	iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  	if ((iX > 0) && (iY > 0) && (iX < oPlace.Width) && (iY < oPlace.Height)) {  		oPlace.SetPixel (iX' iY' oClr);  	}  }  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: iX = (int)(iXAvg + Math.Cos (iA / (double)100) * iRadius);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,DrawCircle,The following statement contains a magic number: iY = (int)(iYAvg + Math.Sin (iA / (double)100) * iRadius);  
Magic Number,FaceMouse,MyPipeline,C:\repos\a-delrio_FaceMouse-en\facereco_test\Main.cs,ShowAttributesOnForm,The following statement contains a magic number: if (blink [0] == 100) {  	if (canClick && parent.isRunning) {  		canClick = false;  		mouse_event ((int)(MouseEventFlags.LEFTDOWN | MouseEventFlags.LEFTUP)' Cursor.Position.X' Cursor.Position.Y' 0' 0);  		parent.player.Play ();  	}  }  else {  	parent.clickAllow.Enabled = true;  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: if ((nCode >= 0) && (OnMouseActivity != null)) {  	//Marshall the data from callback.  	MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure (lParam' typeof(MouseLLHookStruct));  	//detect button clicked  	MouseButtons button = MouseButtons.None;  	short mouseDelta = 0;  	switch (wParam) {  	case WM_LBUTTONDOWN:  		//case WM_LBUTTONUP:   		//case WM_LBUTTONDBLCLK:   		button = MouseButtons.Left;  		break;  	case WM_RBUTTONDOWN:  		//case WM_RBUTTONUP:   		//case WM_RBUTTONDBLCLK:   		button = MouseButtons.Right;  		break;  	case WM_MOUSEWHEEL:  		//If the message is WM_MOUSEWHEEL' the high-order word of mouseData member is the wheel delta.   		//One wheel click is defined as WHEEL_DELTA' which is 120.   		//(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value  		mouseDelta = (short)((mouseHookStruct.mouseData >> 16) & 0xffff);  		//TODO: X BUTTONS (I havent them so was unable to test)  		//If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'   		//or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'   		//and the low-order word is reserved. This value can be one or more of the following values.   		//Otherwise' mouseData is not used.   		break;  	}  	//double clicks  	int clickCount = 0;  	if (button != MouseButtons.None)  		if (wParam == WM_LBUTTONDBLCLK || wParam == WM_RBUTTONDBLCLK)  			clickCount = 2;  		else  			clickCount = 1;  	//generate event   	MouseEventArgs e = new MouseEventArgs (button' clickCount' mouseHookStruct.pt.x' mouseHookStruct.pt.y' mouseDelta);  	//raise it  	OnMouseActivity (this' e);  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: if ((nCode >= 0) && (OnMouseActivity != null)) {  	//Marshall the data from callback.  	MouseLLHookStruct mouseHookStruct = (MouseLLHookStruct)Marshal.PtrToStructure (lParam' typeof(MouseLLHookStruct));  	//detect button clicked  	MouseButtons button = MouseButtons.None;  	short mouseDelta = 0;  	switch (wParam) {  	case WM_LBUTTONDOWN:  		//case WM_LBUTTONUP:   		//case WM_LBUTTONDBLCLK:   		button = MouseButtons.Left;  		break;  	case WM_RBUTTONDOWN:  		//case WM_RBUTTONUP:   		//case WM_RBUTTONDBLCLK:   		button = MouseButtons.Right;  		break;  	case WM_MOUSEWHEEL:  		//If the message is WM_MOUSEWHEEL' the high-order word of mouseData member is the wheel delta.   		//One wheel click is defined as WHEEL_DELTA' which is 120.   		//(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value  		mouseDelta = (short)((mouseHookStruct.mouseData >> 16) & 0xffff);  		//TODO: X BUTTONS (I havent them so was unable to test)  		//If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'   		//or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'   		//and the low-order word is reserved. This value can be one or more of the following values.   		//Otherwise' mouseData is not used.   		break;  	}  	//double clicks  	int clickCount = 0;  	if (button != MouseButtons.None)  		if (wParam == WM_LBUTTONDBLCLK || wParam == WM_RBUTTONDBLCLK)  			clickCount = 2;  		else  			clickCount = 1;  	//generate event   	MouseEventArgs e = new MouseEventArgs (button' clickCount' mouseHookStruct.pt.x' mouseHookStruct.pt.y' mouseDelta);  	//raise it  	OnMouseActivity (this' e);  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: switch (wParam) {  case WM_LBUTTONDOWN:  	//case WM_LBUTTONUP:   	//case WM_LBUTTONDBLCLK:   	button = MouseButtons.Left;  	break;  case WM_RBUTTONDOWN:  	//case WM_RBUTTONUP:   	//case WM_RBUTTONDBLCLK:   	button = MouseButtons.Right;  	break;  case WM_MOUSEWHEEL:  	//If the message is WM_MOUSEWHEEL' the high-order word of mouseData member is the wheel delta.   	//One wheel click is defined as WHEEL_DELTA' which is 120.   	//(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value  	mouseDelta = (short)((mouseHookStruct.mouseData >> 16) & 0xffff);  	//TODO: X BUTTONS (I havent them so was unable to test)  	//If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'   	//or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'   	//and the low-order word is reserved. This value can be one or more of the following values.   	//Otherwise' mouseData is not used.   	break;  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: mouseDelta = (short)((mouseHookStruct.mouseData >> 16) & 0xffff);  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: if (button != MouseButtons.None)  	if (wParam == WM_LBUTTONDBLCLK || wParam == WM_RBUTTONDBLCLK)  		clickCount = 2;  	else  		clickCount = 1;  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: if (wParam == WM_LBUTTONDBLCLK || wParam == WM_RBUTTONDBLCLK)  	clickCount = 2;  else  	clickCount = 1;  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following statement contains a magic number: clickCount = 2;  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The following statement contains a magic number: if ((nCode >= 0) && (KeyDown != null || KeyUp != null || KeyPress != null)) {  	//read structure KeyboardHookStruct at lParam  	KeyboardHookStruct MyKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure (lParam' typeof(KeyboardHookStruct));  	//raise KeyDown  	if (KeyDown != null && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN)) {  		Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;  		KeyEventArgs e = new KeyEventArgs (keyData);  		KeyDown (this' e);  		handled = handled || e.Handled;  	}  	// raise KeyPress  	if (KeyPress != null && wParam == WM_KEYDOWN) {  		bool isDownShift = ((GetKeyState (VK_SHIFT) & 0x80) == 0x80 ? true : false);  		bool isDownCapslock = (GetKeyState (VK_CAPITAL) != 0 ? true : false);  		byte[] keyState = new byte[256];  		GetKeyboardState (keyState);  		byte[] inBuffer = new byte[2];  		if (ToAscii (MyKeyboardHookStruct.vkCode' MyKeyboardHookStruct.scanCode' keyState' inBuffer' MyKeyboardHookStruct.flags) == 1) {  			char key = (char)inBuffer [0];  			if ((isDownCapslock ^ isDownShift) && Char.IsLetter (key))  				key = Char.ToUpper (key);  			KeyPressEventArgs e = new KeyPressEventArgs (key);  			KeyPress (this' e);  			handled = handled || e.Handled;  		}  	}  	// raise KeyUp  	if (KeyUp != null && (wParam == WM_KEYUP || wParam == WM_SYSKEYUP)) {  		Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;  		KeyEventArgs e = new KeyEventArgs (keyData);  		KeyUp (this' e);  		handled = handled || e.Handled;  	}  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The following statement contains a magic number: if ((nCode >= 0) && (KeyDown != null || KeyUp != null || KeyPress != null)) {  	//read structure KeyboardHookStruct at lParam  	KeyboardHookStruct MyKeyboardHookStruct = (KeyboardHookStruct)Marshal.PtrToStructure (lParam' typeof(KeyboardHookStruct));  	//raise KeyDown  	if (KeyDown != null && (wParam == WM_KEYDOWN || wParam == WM_SYSKEYDOWN)) {  		Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;  		KeyEventArgs e = new KeyEventArgs (keyData);  		KeyDown (this' e);  		handled = handled || e.Handled;  	}  	// raise KeyPress  	if (KeyPress != null && wParam == WM_KEYDOWN) {  		bool isDownShift = ((GetKeyState (VK_SHIFT) & 0x80) == 0x80 ? true : false);  		bool isDownCapslock = (GetKeyState (VK_CAPITAL) != 0 ? true : false);  		byte[] keyState = new byte[256];  		GetKeyboardState (keyState);  		byte[] inBuffer = new byte[2];  		if (ToAscii (MyKeyboardHookStruct.vkCode' MyKeyboardHookStruct.scanCode' keyState' inBuffer' MyKeyboardHookStruct.flags) == 1) {  			char key = (char)inBuffer [0];  			if ((isDownCapslock ^ isDownShift) && Char.IsLetter (key))  				key = Char.ToUpper (key);  			KeyPressEventArgs e = new KeyPressEventArgs (key);  			KeyPress (this' e);  			handled = handled || e.Handled;  		}  	}  	// raise KeyUp  	if (KeyUp != null && (wParam == WM_KEYUP || wParam == WM_SYSKEYUP)) {  		Keys keyData = (Keys)MyKeyboardHookStruct.vkCode;  		KeyEventArgs e = new KeyEventArgs (keyData);  		KeyUp (this' e);  		handled = handled || e.Handled;  	}  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The following statement contains a magic number: if (KeyPress != null && wParam == WM_KEYDOWN) {  	bool isDownShift = ((GetKeyState (VK_SHIFT) & 0x80) == 0x80 ? true : false);  	bool isDownCapslock = (GetKeyState (VK_CAPITAL) != 0 ? true : false);  	byte[] keyState = new byte[256];  	GetKeyboardState (keyState);  	byte[] inBuffer = new byte[2];  	if (ToAscii (MyKeyboardHookStruct.vkCode' MyKeyboardHookStruct.scanCode' keyState' inBuffer' MyKeyboardHookStruct.flags) == 1) {  		char key = (char)inBuffer [0];  		if ((isDownCapslock ^ isDownShift) && Char.IsLetter (key))  			key = Char.ToUpper (key);  		KeyPressEventArgs e = new KeyPressEventArgs (key);  		KeyPress (this' e);  		handled = handled || e.Handled;  	}  }  
Magic Number,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,KeyboardHookProc,The following statement contains a magic number: if (KeyPress != null && wParam == WM_KEYDOWN) {  	bool isDownShift = ((GetKeyState (VK_SHIFT) & 0x80) == 0x80 ? true : false);  	bool isDownCapslock = (GetKeyState (VK_CAPITAL) != 0 ? true : false);  	byte[] keyState = new byte[256];  	GetKeyboardState (keyState);  	byte[] inBuffer = new byte[2];  	if (ToAscii (MyKeyboardHookStruct.vkCode' MyKeyboardHookStruct.scanCode' keyState' inBuffer' MyKeyboardHookStruct.flags) == 1) {  		char key = (char)inBuffer [0];  		if ((isDownCapslock ^ isDownShift) && Char.IsLetter (key))  			key = Char.ToUpper (key);  		KeyPressEventArgs e = new KeyPressEventArgs (key);  		KeyPress (this' e);  		handled = handled || e.Handled;  	}  }  
Missing Default,gma.System.Windows,UserActivityHook,C:\repos\a-delrio_FaceMouse-en\facereco_test\UserActivityHook.cs,MouseHookProc,The following switch statement is missing a default case: switch (wParam) {  case WM_LBUTTONDOWN:  	//case WM_LBUTTONUP:   	//case WM_LBUTTONDBLCLK:   	button = MouseButtons.Left;  	break;  case WM_RBUTTONDOWN:  	//case WM_RBUTTONUP:   	//case WM_RBUTTONDBLCLK:   	button = MouseButtons.Right;  	break;  case WM_MOUSEWHEEL:  	//If the message is WM_MOUSEWHEEL' the high-order word of mouseData member is the wheel delta.   	//One wheel click is defined as WHEEL_DELTA' which is 120.   	//(value >> 16) & 0xffff; retrieves the high-order word from the given 32-bit value  	mouseDelta = (short)((mouseHookStruct.mouseData >> 16) & 0xffff);  	//TODO: X BUTTONS (I havent them so was unable to test)  	//If the message is WM_XBUTTONDOWN' WM_XBUTTONUP' WM_XBUTTONDBLCLK' WM_NCXBUTTONDOWN' WM_NCXBUTTONUP'   	//or WM_NCXBUTTONDBLCLK' the high-order word specifies which X button was pressed or released'   	//and the low-order word is reserved. This value can be one or more of the following values.   	//Otherwise' mouseData is not used.   	break;  }  
