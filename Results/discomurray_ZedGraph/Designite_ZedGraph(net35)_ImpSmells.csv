Implementation smell,Namespace,Class,File,Method,Description
Long Method,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetRange,The method has 116 lines of code.
Long Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcDateStepSize,The method has 226 lines of code.
Long Method,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,The method has 106 lines of code.
Long Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,Draw,The method has 105 lines of code.
Long Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestObject,The method has 118 lines of code.
Long Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The method has 165 lines of code.
Long Method,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The method has 199 lines of code.
Long Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,The method has 172 lines of code.
Long Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurveOriginal,The method has 154 lines of code.
Long Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,InterpolatePoint,The method has 111 lines of code.
Long Method,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Draw,The method has 100 lines of code.
Long Method,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The method has 200 lines of code.
Complex Method,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcSpace,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,BarSettings,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarSettings.cs,CalcClusterScaleWidth,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,BarSettings,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarSettings.cs,GetMinStepSize,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,CurveItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,GetRange,Cyclomatic complexity of the method is 16
Complex Method,ZedGraph,Comparer,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,Compare,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetRange,Cyclomatic complexity of the method is 25
Complex Method,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetStackRange,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,DateAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateAsOrdinalScale.cs,SetDateFormat,Cyclomatic complexity of the method is 17
Complex Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcBaseTic,Cyclomatic complexity of the method is 15
Complex Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,PickScale,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcDateStepSize,Cyclomatic complexity of the method is 61
Complex Method,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcEvenStepDate,Cyclomatic complexity of the method is 13
Complex Method,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,Cyclomatic complexity of the method is 19
Complex Method,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,MakeBrush,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,Cyclomatic complexity of the method is 15
Complex Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,PickScale,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,Draw,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestObject,Cyclomatic complexity of the method is 16
Complex Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,Cyclomatic complexity of the method is 28
Complex Method,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindLinkableObject,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,FindPoint,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,Cyclomatic complexity of the method is 32
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSticks,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,Cyclomatic complexity of the method is 23
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurveOriginal,Cyclomatic complexity of the method is 20
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,InterpolatePoint,Cyclomatic complexity of the method is 15
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildLowPointsArray,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,LinearScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearScale.cs,PickScale,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,DoLayout,Cyclomatic complexity of the method is 17
Complex Method,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,DoLayout,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,NoDupePointList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\NoDupePointList.cs,FilterData,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,OrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OrdinalScale.cs,PickScale,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,TransformCoord,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,PointPairComparer,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPair.cs,Compare,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,Add,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,Cyclomatic complexity of the method is 10
Complex Method,ZedGraph,RollingPointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\RollingPointPairList.cs,Add,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,RollingPointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\RollingPointPairList.cs,Add,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,MakeNewScale,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,Cyclomatic complexity of the method is 9
Complex Method,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabel,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,Cyclomatic complexity of the method is 12
Complex Method,ZedGraph,Selection,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Selection.cs,UpdateSelection,Cyclomatic complexity of the method is 8
Complex Method,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,MakePath,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Draw,Cyclomatic complexity of the method is 11
Complex Method,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,Cyclomatic complexity of the method is 14
Complex Method,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,Cyclomatic complexity of the method is 33
Complex Method,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,Cyclomatic complexity of the method is 13
Long Parameter List,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,ArrowObj,The method has 6 parameters. Parameters: color' size' x1' y1' x2' y2
Long Parameter List,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,FixZeroLine,The method has 5 parameters. Parameters: g' pane' scaleFactor' left' right
Long Parameter List,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawMinorTics,The method has 6 parameters. Parameters: g' pane' baseVal' shift' scaleFactor' topPix
Long Parameter List,ZedGraph,AxisLabel,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\AxisLabel.cs,AxisLabel,The method has 7 parameters. Parameters: text' fontFamily' fontSize' color' isBold' isItalic' isUnderline
Long Parameter List,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The method has 10 parameters. Parameters: g' pane' left' right' top' bottom' scaleFactor' fullFrame' isSelected' dataValue
Long Parameter List,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The method has 7 parameters. Parameters: g' pane' rect' scaleFactor' fullFrame' isSelected' dataValue
Long Parameter List,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawBars,The method has 8 parameters. Parameters: g' pane' curve' baseAxis' valueAxis' barWidth' pos' scaleFactor
Long Parameter List,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawSingleBar,The method has 9 parameters. Parameters: g' pane' curve' baseAxis' valueAxis' pos' index' barWidth' scaleFactor
Long Parameter List,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawSingleBar,The method has 9 parameters. Parameters: g' pane' curve' index' pos' baseAxis' valueAxis' barWidth' scaleFactor
Long Parameter List,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,CreateBarLabels,The method has 9 parameters. Parameters: pane' isBarCenter' valueFormat' fontFamily' fontSize' fontColor' isBold' isItalic' isUnderline
Long Parameter List,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,BoxObj,The method has 6 parameters. Parameters: x' y' width' height' borderColor' fillColor
Long Parameter List,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,BoxObj,The method has 7 parameters. Parameters: x' y' width' height' borderColor' fillColor1' fillColor2
Long Parameter List,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,GetCoords,The method has 5 parameters. Parameters: pane' g' scaleFactor' shape' coords
Long Parameter List,ZedGraph,CurveItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,GetRange,The method has 7 parameters. Parameters: xMin' xMax' yMin' yMax' ignoreInitial' isBoundedRanges' pane
Long Parameter List,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetStackRange,The method has 6 parameters. Parameters: pane' curve' tXMinVal' tYMinVal' tXMaxVal' tYMaxVal
Long Parameter List,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,EllipseObj,The method has 6 parameters. Parameters: x' y' width' height' borderColor' fillColor
Long Parameter List,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,EllipseObj,The method has 7 parameters. Parameters: x' y' width' height' borderColor' fillColor1' fillColor2
Long Parameter List,ZedGraph,ErrorBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBar.cs,Draw,The method has 10 parameters. Parameters: g' pane' isXBase' pixBase' pixValue' pixLowValue' scaleFactor' pen' isSelected' dataValue
Long Parameter List,ZedGraph,ErrorBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBar.cs,Draw,The method has 6 parameters. Parameters: g' pane' curve' baseAxis' valueAxis' scaleFactor
Long Parameter List,ZedGraph,ErrorBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBarItem.cs,ErrorBarItem,The method has 5 parameters. Parameters: label' x' y' lowValue' color
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,FontSpec,The method has 6 parameters. Parameters: family' size' color' isBold' isItalic' isUnderline
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,FontSpec,The method has 9 parameters. Parameters: family' size' color' isBold' isItalic' isUnderline' fillColor' fillBrush' fillType
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Init,The method has 9 parameters. Parameters: family' size' color' isBold' isItalic' isUnderline' fillColor' fillBrush' fillType
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Draw,The method has 8 parameters. Parameters: g' pane' text' x' y' alignH' alignV' scaleFactor
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Draw,The method has 9 parameters. Parameters: g' pane' text' x' y' alignH' alignV' scaleFactor' layoutArea
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,DrawTenPower,The method has 8 parameters. Parameters: g' pane' text' x' y' alignH' alignV' scaleFactor
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,PointInBox,The method has 8 parameters. Parameters: pt' g' text' x' y' alignH' alignV' scaleFactor
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,PointInBox,The method has 9 parameters. Parameters: pt' g' text' x' y' alignH' alignV' scaleFactor' layoutArea
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,SetupMatrix,The method has 7 parameters. Parameters: matrix' x' y' sizeF' alignH' alignV' angle
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetMatrix,The method has 6 parameters. Parameters: x' y' sizeF' alignH' alignV' angle
Long Parameter List,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetBox,The method has 8 parameters. Parameters: g' text' x' y' alignH' alignV' scaleFactor' layoutArea
Long Parameter List,ZedGraph,GapLabel,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GapLabel.cs,GapLabel,The method has 7 parameters. Parameters: text' fontFamily' fontSize' color' isBold' isItalic' isUnderline
Long Parameter List,ZedGraph,GraphObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphObj.cs,GraphObj,The method has 5 parameters. Parameters: x' y' coordType' alignH' alignV
Long Parameter List,ZedGraph,GraphObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphObj.cs,GraphObj,The method has 7 parameters. Parameters: x' y' x2' y2' coordType' alignH' alignV
Long Parameter List,ZedGraph,GraphObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphObj.cs,GetCoords,The method has 5 parameters. Parameters: pane' g' scaleFactor' shape' coords
Long Parameter List,ZedGraph,GraphObjList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphObjList.cs,FindPoint,The method has 5 parameters. Parameters: mousePt' pane' g' scaleFactor' index
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,AddCurve,The method has 5 parameters. Parameters: label' x' y' color' symbolType
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,AddErrorBar,The method has 5 parameters. Parameters: label' x' y' baseValue' color
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,AddHiLowBar,The method has 5 parameters. Parameters: label' x' y' baseVal' color
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,AddPieSlice,The method has 6 parameters. Parameters: value' color1' color2' fillAngle' displacement' label
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,ReverseTransform,The method has 5 parameters. Parameters: ptF' x' x2' y' y2
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,ReverseTransform,The method has 6 parameters. Parameters: ptF' isX2Axis' isY2Axis' yAxisIndex' x' y
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,ReverseTransform,The method has 5 parameters. Parameters: ptF' x' x2' y' y2
Long Parameter List,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindLinkableObject,The method has 6 parameters. Parameters: mousePt' g' scaleFactor' source' link' index
Long Parameter List,ZedGraph,HiLowBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HiLowBarItem.cs,HiLowBarItem,The method has 5 parameters. Parameters: label' x' y' baseVal' color
Long Parameter List,ZedGraph,ImageObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ImageObj.cs,ImageObj,The method has 5 parameters. Parameters: image' rect' coordType' alignH' alignV
Long Parameter List,ZedGraph,ImageObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ImageObj.cs,ImageObj,The method has 5 parameters. Parameters: image' left' top' width' height
Long Parameter List,ZedGraph,ImageObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ImageObj.cs,GetCoords,The method has 5 parameters. Parameters: pane' g' scaleFactor' shape' coords
Long Parameter List,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The method has 14 parameters. Parameters: g' pane' isXBase' pixBase' pixHigh' pixLow' pixOpen' pixClose' halfSize' scaleFactor' pen' fill' border' pt
Long Parameter List,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The method has 6 parameters. Parameters: g' pane' curve' baseAxis' valueAxis' scaleFactor
Long Parameter List,ZedGraph,Label,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Label.cs,Label,The method has 7 parameters. Parameters: text' fontFamily' fontSize' color' isBold' isItalic' isUnderline
Long Parameter List,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSegment,The method has 7 parameters. Parameters: g' pane' x1' y1' x2' y2' scaleFactor
Long Parameter List,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,InterpolatePoint,The method has 10 parameters. Parameters: g' pane' curve' lastPt' scaleFactor' pen' lastX' lastY' tmpX' tmpY
Long Parameter List,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,CloseCurve,The method has 6 parameters. Parameters: pane' curve' arrPoints' count' yMin' path
Long Parameter List,ZedGraph,LineItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineItem.cs,LineItem,The method has 6 parameters. Parameters: label' x' y' color' symbolType' lineWidth
Long Parameter List,ZedGraph,LineItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineItem.cs,LineItem,The method has 5 parameters. Parameters: label' x' y' color' symbolType
Long Parameter List,ZedGraph,LineItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineItem.cs,LineItem,The method has 5 parameters. Parameters: label' points' color' symbolType' lineWidth
Long Parameter List,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,LineObj,The method has 5 parameters. Parameters: color' x1' y1' x2' y2
Long Parameter List,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The method has 5 parameters. Parameters: pane' g' scaleFactor' shape' coords
Long Parameter List,ZedGraph,Location,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Location.cs,Location,The method has 5 parameters. Parameters: x' y' coordType' alignH' alignV
Long Parameter List,ZedGraph,Location,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Location.cs,Location,The method has 7 parameters. Parameters: x' y' width' height' coordType' alignH' alignV
Long Parameter List,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,FindNearestPaneObject,The method has 5 parameters. Parameters: mousePt' g' pane' nearestObj' index
Long Parameter List,ZedGraph,MinorTic,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MinorTic.cs,Draw,The method has 7 parameters. Parameters: g' pane' pen' pixVal' topPix' shift' scaledTic
Long Parameter List,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The method has 10 parameters. Parameters: g' pane' isXBase' pixBase' pixHigh' pixLow' pixOpen' pixClose' halfSize' pen
Long Parameter List,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The method has 6 parameters. Parameters: g' pane' curve' baseAxis' valueAxis' scaleFactor
Long Parameter List,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,PieItem,The method has 6 parameters. Parameters: pieValue' color1' color2' fillAngle' displacement' label
Long Parameter List,ZedGraph,PointPair4,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPair4.cs,PointPair4,The method has 5 parameters. Parameters: x' y' z' t' label
Long Parameter List,ZedGraph,ReversibleFrame,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ReversibleFrame.cs,Rectangle,The method has 5 parameters. Parameters: dc' left' top' right' bottom
Long Parameter List,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The method has 7 parameters. Parameters: g' pane' baseVal' nTics' topPix' shift' scaleFactor
Long Parameter List,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,The method has 5 parameters. Parameters: g' pane' baseVal' topPix' scaleFactor
Long Parameter List,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabel,The method has 10 parameters. Parameters: g' pane' i' dVal' pixVal' shift' maxSpace' scaledTic' charHeight' scaleFactor
Long Parameter List,ZedGraph,StickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\StickItem.cs,StickItem,The method has 5 parameters. Parameters: label' x' y' color' lineWidth
Long Parameter List,ZedGraph,StockPointList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\StockPointList.cs,Add,The method has 6 parameters. Parameters: date' high' low' open' close' vol
Long Parameter List,ZedGraph,StockPt,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\StockPt.cs,StockPt,The method has 6 parameters. Parameters: date' high' low' open' close' vol
Long Parameter List,ZedGraph,StockPt,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\StockPt.cs,StockPt,The method has 7 parameters. Parameters: date' high' low' open' close' vol' tag
Long Parameter List,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The method has 6 parameters. Parameters: g' x' y' path' pen' brush
Long Parameter List,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The method has 7 parameters. Parameters: g' pane' x' y' scaleFactor' isSelected' dataValue
Long Parameter List,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Draw,The method has 5 parameters. Parameters: g' pane' curve' scaleFactor' isSelected
Long Parameter List,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,TextObj,The method has 6 parameters. Parameters: text' x' y' coordType' alignH' alignV
Long Parameter List,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,GetCoords,The method has 5 parameters. Parameters: pane' g' scaleFactor' shape' coords
Long Parameter List,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The method has 5 parameters. Parameters: curve' iPt' baseVal' lowVal' hiVal
Long Parameter List,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The method has 6 parameters. Parameters: pane' curve' iPt' baseVal' lowVal' hiVal
Long Parameter List,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,BarCenterValue,The method has 5 parameters. Parameters: curve' barWidth' iCluster' val' iOrdinal
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XDate,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,GetDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,SetDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,CalendarDateToXLDate,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,CalendarDateToXLDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,CalendarDateToXLDate,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,CalendarDateToJulianDay,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,CalendarDateToJulianDay,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,NormalizeCalendarDate,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToXLDate,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XLDateToCalendarDate,The method has 7 parameters. Parameters: xlDate' year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XLDateToCalendarDate,The method has 8 parameters. Parameters: xlDate' year' month' day' hour' minute' second' millisecond
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XLDateToCalendarDate,The method has 7 parameters. Parameters: xlDate' year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The method has 7 parameters. Parameters: jDay' year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The method has 7 parameters. Parameters: jDay' year' month' day' hour' minute' second
Long Parameter List,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The method has 8 parameters. Parameters: jDay' year' month' day' hour' minute' second' millisecond
Long Statement,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawTitle,The length of the statement  "						( this.MajorTic.IsOutside || this.MajorTic._isCrossOutside || this.MinorTic.IsOutside || this.MinorTic._isCrossOutside ) ); " is 123.
Long Statement,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,Draw,The length of the statement  "					RectangleF r = new RectangleF( ( tRect.X + ( tRect.Width / 2 ) ) - 1.0f' ( tRect.Y + ( tRect.Height / 2 ) ) - 1.0f' 1.0f' 1.0f ); " is 129.
Long Statement,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,Draw,The length of the statement  "					g.FillPie( Fill.MakeBrush( _boundingRectangle )' tRect.X' tRect.Y' tRect.Width' tRect.Height' -StartAngle' -SweepAngle ); " is 121.
Long Statement,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The length of the statement  "			_intersectionPoint = new PointF( (float)( rectCenter.X + ( rect.Width / 2 * Math.Cos( ( midAngle ) * Math.PI / 180 ) ) )' " is 121.
Long Statement,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The length of the statement  "			_pivotPoint = new PointF( (float)( _intersectionPoint.X + .05 * rect.Width * Math.Cos( ( midAngle ) * Math.PI / 180 ) )' " is 120.
Long Statement,ZedGraph,ReversibleFrame,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ReversibleFrame.cs,Draw,The length of the statement  "                IntPtr previousBrush = SelectObject(new HandleRef(null' hdc)' new HandleRef(null' GetStockObject((int)StockObject.NullBrush))); " is 127.
Long Statement,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,MakePath,The length of the statement  "			switch( _type == SymbolType.Default || ( _type == SymbolType.UserDefined && _userSymbol == null ) ? Default.Type : _type ) " is 122.
Complex Conditional,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The conditional expression  "pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,IsCrossShifted,The conditional expression  "( ( this is XAxis || this is YAxis ) && !crossAxis._scale.IsReverse ) ||  					( ( this is X2Axis || this is Y2Axis ) && crossAxis._scale.IsReverse )"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcCrossFraction,The conditional expression  "( ( this is XAxis || this is YAxis ) && _scale._isLabelsInside == crossAxis._scale.IsReverse ) ||  				 ( ( this is X2Axis || this is Y2Axis ) && _scale._isLabelsInside != crossAxis._scale.IsReverse )"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcTotalShift,The conditional expression  "_majorTic.IsOutside || _majorTic._isCrossOutside ||  										_minorTic.IsOutside || _minorTic._isCrossOutside"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcTotalShift,The conditional expression  "_majorTic.IsInside || _majorTic._isCrossInside ||  								_minorTic.IsInside || _minorTic._isCrossInside"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcSpace,The conditional expression  "this.MajorTic._isInside || this.MajorTic._isCrossInside ||  							this.MinorTic._isInside || this.MinorTic._isCrossInside"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcSpace,The conditional expression  "this.IsPrimary( pane ) && ( (  					( this is YAxis && (  						( !pane.XAxis._scale._isSkipFirstLabel && !pane.XAxis._scale._isReverse ) ||  						( !pane.XAxis._scale._isSkipLastLabel && pane.XAxis._scale._isReverse ) ) ) ||  					( this is Y2Axis && (  						( !pane.XAxis._scale._isSkipFirstLabel && pane.XAxis._scale._isReverse ) ||  						( !pane.XAxis._scale._isSkipLastLabel && !pane.XAxis._scale._isReverse ) ) ) ) &&  					pane.XAxis.IsVisible && pane.XAxis._scale._isVisible )"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,FixZeroLine,The conditional expression  "_isVisible && _majorGrid._isZeroLine &&  					_scale._min < 0.0 && _scale._max > 0.0"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawMinorTics,The conditional expression  "( this.MinorTic.IsOutside || this.MinorTic.IsOpposite || this.MinorTic.IsInside ||  					this.MinorTic._isCrossOutside || this.MinorTic._isCrossInside || _minorGrid._isVisible )  					&& _isVisible"  is complex.
Complex Conditional,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawMinorTics,The conditional expression  "( ( Math.Abs( dVal ) < 1e-20 && Math.Abs( dVal - majorVal ) > 1e-20 ) ||  								( Math.Abs( dVal ) > 1e-20 && Math.Abs( ( dVal - majorVal ) / dVal ) > 1e-10 ) ) &&  								( dVal >= first && dVal <= last )"  is complex.
Complex Conditional,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawBars,The conditional expression  "barType == BarType.Overlay || barType == BarType.Stack || barType == BarType.PercentStack ||  					barType == BarType.SortedOverlay"  is complex.
Complex Conditional,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The conditional expression  "Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000"  is complex.
Complex Conditional,ZedGraph,CurveItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,GetRange,The conditional expression  "!ignoreInitial &&  						!outOfBounds &&  						curX != PointPair.Missing &&  						curY != PointPair.Missing"  is complex.
Complex Conditional,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetRange,The conditional expression  "( ( curve is BarItem ) && ( pane._barSettings.Type == BarType.Stack ||  							pane._barSettings.Type == BarType.PercentStack ) ) ||  						( ( curve is LineItem ) && pane.LineType == LineType.Stack )"  is complex.
Complex Conditional,ZedGraph,DateAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateAsOrdinalScale.cs,SetDateFormat,The conditional expression  "val1 != PointPair.Missing &&  							val2 != PointPair.Missing &&  							!Double.IsNaN( val1 ) &&  							!Double.IsNaN( val2 ) &&  							!Double.IsInfinity( val1 ) &&  							!Double.IsInfinity( val2 ) &&  							Math.Abs( val2 - val1 ) > 1e-10"  is complex.
Complex Conditional,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcEvenStepDate,The conditional expression  "direction == 1 && month == 1 && day == 1 && hour == 0  						&& minute == 0 && second == 0"  is complex.
Complex Conditional,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcEvenStepDate,The conditional expression  "direction == 1 && day == 1 && hour == 0  						&& minute == 0 && second == 0"  is complex.
Complex Conditional,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcEvenStepDate,The conditional expression  "direction == 1 && hour == 0 && minute == 0 && second == 0"  is complex.
Complex Conditional,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,Draw,The conditional expression  "Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000"  is complex.
Complex Conditional,ZedGraph,ErrorBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBar.cs,Draw,The conditional expression  "!curve.Points[i].IsInvalid3D &&  								( scaleBase > 0 || !baseAxis._scale.IsLog ) &&  								( ( scaleValue > 0 && scaleLowValue > 0 ) || !valueAxis._scale.IsLog )"  is complex.
Complex Conditional,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Remake,The conditional expression  "font == null ||  					Math.Abs( newSize - oldSize ) > 0.1 ||  					font.Name != this.Family ||  					font.Bold != _isBold ||  					font.Italic != _isItalic ||  					font.Underline != _isUnderline"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,SetSpace,The conditional expression  "axis._scale._isLabelsInside && ( axis.IsPrimary( this ) || ( crossFrac != 0.0 && crossFrac != 1.0 ) )"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The conditional expression  "curve.IsBar || curve is ErrorBarItem ||  									curve is HiLowBarItem || curve is OHLCBarItem ||  									curve is JapaneseCandleStickItem"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The conditional expression  "xAct < centerVal - barWidthUserHalf ||  												xAct > centerVal + barWidthUserHalf ||  												yAct < lowVal || yAct > hiVal"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The conditional expression  "yAct < centerVal - barWidthUserHalf ||  												yAct > centerVal + barWidthUserHalf ||  												xAct < lowVal || xAct > hiVal"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The conditional expression  "xVal >= xAxis._scale._min && xVal <= xAxis._scale._max &&  											yVal >= yMinAct && yVal <= yMaxAct"  is complex.
Complex Conditional,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindContainedObjects,The conditional expression  "ci.Points[i].X > rectF.Left &&  						 ci.Points[i].X < rectF.Right &&  						 ci.Points[i].Y > rectF.Bottom &&  						 ci.Points[i].Y < rectF.Top"  is complex.
Complex Conditional,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The conditional expression  "!curve.Points[i].IsInvalid3D &&  								( date > 0 || !baseAxis._scale.IsLog ) &&  								( ( high > 0 && low > 0 ) || !valueAxis._scale.IsLog )"  is complex.
Complex Conditional,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,GetCoords,The conditional expression  "!pt.IsInvalid3D &&  					( date > 0 || !baseAxis._scale.IsLog ) &&  					( ( high > 0 && low > 0 ) || !valueAxis._scale.IsLog )"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSticks,The conditional expression  "pt.X != PointPair.Missing &&  							pt.Y != PointPair.Missing &&  							!System.Double.IsNaN( pt.X ) &&  							!System.Double.IsNaN( pt.Y ) &&  							!System.Double.IsInfinity( pt.X ) &&  							!System.Double.IsInfinity( pt.Y ) &&  							( !xAxis._scale.IsLog || pt.X > 0.0 ) &&  							( !yAxis._scale.IsLog || pt.Y > 0.0 )"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSmoothFilledCurve,The conditional expression  "this.IsVisible && !this.Color.IsEmpty && points != null &&  				BuildPointsArray( pane' curve' out arrPoints' out count ) &&  				count > 2"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,The conditional expression  "curX == PointPair.Missing ||  								curY == PointPair.Missing ||  								System.Double.IsNaN( curX ) ||  								System.Double.IsNaN( curY ) ||  								System.Double.IsInfinity( curX ) ||  								System.Double.IsInfinity( curY ) ||  								( xIsLog && curX <= 0.0 ) ||  								( yIsLog && curY <= 0.0 )"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,The conditional expression  "isOptDraw && tmpX >= minX && tmpX <= maxX &&  										tmpY >= minY && tmpY <= maxY"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,The conditional expression  "lastX > 5000000 || lastX < -5000000 ||  											lastY > 5000000 || lastY < -5000000 ||  											tmpX > 5000000 || tmpX < -5000000 ||  											tmpY > 5000000 || tmpY < -5000000"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurveOriginal,The conditional expression  "curX == PointPair.Missing ||  								curY == PointPair.Missing ||  								System.Double.IsNaN( curX ) ||  								System.Double.IsNaN( curY ) ||  								System.Double.IsInfinity( curX ) ||  								System.Double.IsInfinity( curY ) ||  								( xIsLog && curX <= 0.0 ) ||  								( yIsLog && curY <= 0.0 )"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurveOriginal,The conditional expression  "lastX > 5000000 || lastX < -5000000 ||  											lastY > 5000000 || lastY < -5000000 ||  											tmpX > 5000000 || tmpX < -5000000 ||  											tmpY > 5000000 || tmpY < -5000000"  is complex.
Complex Conditional,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The conditional expression  "curX < -1000000 || curY < -1000000 || curX > 1000000 || curY > 1000000"  is complex.
Complex Conditional,ZedGraph,LinearAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearAsOrdinalScale.cs,PickScale,The conditional expression  "( _ownerAxis is Y2Axis && curve.IsY2Axis ) ||  						( _ownerAxis is YAxis && !curve.IsY2Axis ) ||  						( _ownerAxis is X2Axis && curve.IsX2Axis ) ||  						( _ownerAxis is XAxis && !curve.IsX2Axis )"  is complex.
Complex Conditional,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The conditional expression  "pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000"  is complex.
Complex Conditional,ZedGraph,Link,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Link.cs,MakeCurveItemUrl,The conditional expression  "xAxis.Type == AxisType.Text && index >= 0 &&  					xAxis.Scale.TextLabels != null &&  					index <= xAxis.Scale.TextLabels.Length"  is complex.
Complex Conditional,ZedGraph,Link,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Link.cs,MakeCurveItemUrl,The conditional expression  "yAxis != null && yAxis.Type == AxisType.Text && index >= 0 &&  					yAxis.Scale.TextLabels != null &&  					index <= yAxis.Scale.TextLabels.Length"  is complex.
Complex Conditional,ZedGraph,NoDupePointList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\NoDupePointList.cs,FilterData,The conditional expression  "x >= 0 && x < width && y >= 0 && y < height"  is complex.
Complex Conditional,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The conditional expression  "!curve.Points[i].IsInvalid3D &&  								( date > 0 || !baseAxis._scale.IsLog ) &&  								( ( high > 0 && low > 0 ) || !valueAxis._scale.IsLog )"  is complex.
Complex Conditional,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,GetCoords,The conditional expression  "!pt.IsInvalid3D &&  					( date > 0 || !baseAxis._scale.IsLog ) &&  					( ( high > 0 && low > 0 ) || !valueAxis._scale.IsLog )"  is complex.
Complex Conditional,ZedGraph,RollingPointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\RollingPointPairList.cs,RemoveRange,The conditional expression  "index >= totalCount || index < 0 || count < 0 || count > totalCount"  is complex.
Complex Conditional,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,GetTopRightPix,The conditional expression  "tMajor > 1000 ||  					( ( minorTic.IsOutside || minorTic.IsInside || minorTic.IsOpposite )  					&& tMinor > 5000 )"  is complex.
Complex Conditional,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SetRange,The conditional expression  "axis != pane.XAxis && axis != pane.X2Axis &&  					pane.YAxis.Scale._rangeMin < double.MaxValue && pane.YAxis.Scale._rangeMax > double.MinValue"  is complex.
Complex Conditional,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SetRange,The conditional expression  "axis != pane.XAxis && axis != pane.X2Axis &&  					pane.Y2Axis.Scale._rangeMin < double.MaxValue && pane.Y2Axis.Scale._rangeMax > double.MinValue"  is complex.
Complex Conditional,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The conditional expression  "_isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000"  is complex.
Complex Conditional,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The conditional expression  "_isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000"  is complex.
Complex Conditional,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Draw,The conditional expression  "curX != PointPair.Missing &&  									curY != PointPair.Missing &&  									!System.Double.IsNaN( curX ) &&  									!System.Double.IsNaN( curY ) &&  									!System.Double.IsInfinity( curX ) &&  									!System.Double.IsInfinity( curY ) &&  									( curX > 0 || !xIsLog ) &&  									( !yIsLog || curY > 0.0 ) &&  									( xIsOrdinal || ( curX >= xMin && curX <= xMax ) )"  is complex.
Complex Conditional,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Draw,The conditional expression  "tmpX >= minX && tmpX <= maxX && tmpY >= minY && tmpY <= maxY"  is complex.
Complex Conditional,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,Draw,The conditional expression  "pix.X > -100000 && pix.X < 100000 && pix.Y > -100000 && pix.Y < 100000"  is complex.
Complex Conditional,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The conditional expression  "baseVal == PointPair.Missing || hiVal == PointPair.Missing ||  					( lowVal == PointPair.Missing && ( curve is ErrorBarItem ||  						curve is HiLowBarItem ) )"  is complex.
Complex Conditional,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,BarCenterValue,The conditional expression  "curve is ErrorBarItem || curve is HiLowBarItem ||  					curve is OHLCBarItem || curve is JapaneseCandleStickItem"  is complex.
Virtual Method Call from Constructor,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,Axis,The constructor "Axis" calls a virtual method "Clone".
Empty Catch Block,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,InterpolatePoint,The method has an empty catch block.
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: float angle = (float)Math.Atan2( dy' dx ) * 180.0F / (float)Math.PI;
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: PointF[] polyPt = new PointF[4];
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: float hsize = scaledSize / 3.0F;
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: polyPt[2].X = length - scaledSize;
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: polyPt[2].Y = -hsize;
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: polyPt[3] = polyPt[0];
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,ArrowObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ArrowObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,CalcSpace,The following statement contains a magic number: float tmp = pane.XAxis._scale.GetScaleMaxSpace( g' pane' scaleFactor' true ).Width / 2.0F;
Magic Number,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawTitle,The following statement contains a magic number: float x = ( _scale._maxPix - _scale._minPix ) / 2;
Magic Number,ZedGraph,Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Axis.cs,DrawTitle,The following statement contains a magic number: float gap = scaledTic * ( hasTic ? 1.0f : 0.0f ) +  							this.Title.FontSpec.BoundingBox( g' str' scaleFactor ).Height / 2.0F;
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: top = -10000;
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: top < -10000
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: left = -10000;
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: left < -10000
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: right = -10000;
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: right < -10000
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: bottom = -10000;
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,Draw,The following statement contains a magic number: bottom < -10000
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawSingleBar,The following statement contains a magic number: float pixSide = pixBase - clusterWidth / 2.0F + clusterGap / 2.0F +  								pos * ( barWidth + barGap );
Magic Number,ZedGraph,Bar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Bar.cs,DrawSingleBar,The following statement contains a magic number: float pixSide = pixBase - clusterWidth / 2.0F + clusterGap / 2.0F +  								pos * ( barWidth + barGap );
Magic Number,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,CreateBarLabels,The following statement contains a magic number: labelOffset = (float)( scale._max - scale._min ) * 0.015f;
Magic Number,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,CreateBarLabels,The following statement contains a magic number: position = (float)( hiVal + lowVal ) / 2.0f;
Magic Number,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,CreateBarLabels,The following statement contains a magic number: label.FontSpec.Angle = isVertical ? 90 : 0;
Magic Number,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,GetCoords,The following statement contains a magic number: float pixSide = pixBase - clusterWidth / 2.0F + clusterGap / 2.0F +  								pane.CurveList.GetBarItemPos( pane' this ) * ( barWidth + barGap );
Magic Number,ZedGraph,BarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BarItem.cs,GetCoords,The following statement contains a magic number: float pixSide = pixBase - clusterWidth / 2.0F + clusterGap / 2.0F +  								pane.CurveList.GetBarItemPos( pane' this ) * ( barWidth + barGap );
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: tmpRect.Inflate( 20' 20 );
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: tmpRect.Inflate( 20' 20 );
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,BoxObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\BoxObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,CurveItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,CurveItem,The following statement contains a magic number: sch >= 11
Magic Number,ZedGraph,Comparer,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveItem.cs,Compare,The following statement contains a magic number: (l == null && r == null) || ( System.Math.Abs( lVal - rVal ) < 1e-10 )
Magic Number,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetRange,The following statement contains a magic number: tXMinVal -= pane._barSettings._clusterScaleWidth / 2.0;
Magic Number,ZedGraph,CurveList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\CurveList.cs,GetRange,The following statement contains a magic number: tXMaxVal += pane._barSettings._clusterScaleWidth / 2.0;
Magic Number,ZedGraph,DateAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateAsOrdinalScale.cs,SetDateFormat,The following statement contains a magic number: double range = 10;
Magic Number,ZedGraph,DateAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateAsOrdinalScale.cs,SetDateFormat,The following statement contains a magic number: val1 != PointPair.Missing &&  							val2 != PointPair.Missing &&  							!Double.IsNaN( val1 ) &&  							!Double.IsNaN( val2 ) &&  							!Double.IsInfinity( val1 ) &&  							!Double.IsInfinity( val2 ) &&  							Math.Abs( val2 - val1 ) > 1e-10
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcMinorStart,The following statement contains a magic number: switch ( _minorUnit )  			{  				case DateUnit.Year:  				default:  					return (int) ( ( _min - baseVal ) / ( 365.0 * _minorStep ) );  				case DateUnit.Month:  					return (int) ( ( _min - baseVal ) / ( 28.0 * _minorStep ) );  				case DateUnit.Day:  					return (int) ( ( _min - baseVal ) / _minorStep );  				case DateUnit.Hour:  					return (int) ( ( _min - baseVal ) * XDate.HoursPerDay / _minorStep );  				case DateUnit.Minute:  					return (int) ( ( _min - baseVal ) * XDate.MinutesPerDay / _minorStep );  				case DateUnit.Second:  					return (int) ( ( _min - baseVal ) * XDate.SecondsPerDay / _minorStep );  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcMinorStart,The following statement contains a magic number: switch ( _minorUnit )  			{  				case DateUnit.Year:  				default:  					return (int) ( ( _min - baseVal ) / ( 365.0 * _minorStep ) );  				case DateUnit.Month:  					return (int) ( ( _min - baseVal ) / ( 28.0 * _minorStep ) );  				case DateUnit.Day:  					return (int) ( ( _min - baseVal ) / _minorStep );  				case DateUnit.Hour:  					return (int) ( ( _min - baseVal ) * XDate.HoursPerDay / _minorStep );  				case DateUnit.Minute:  					return (int) ( ( _min - baseVal ) * XDate.MinutesPerDay / _minorStep );  				case DateUnit.Second:  					return (int) ( ( _min - baseVal ) * XDate.SecondsPerDay / _minorStep );  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcNumTics,The following statement contains a magic number: switch ( _majorUnit )  			{  				case DateUnit.Year:  				default:  					nTics = (int) ( ( year2 - year1 ) / _majorStep + 1.001 );  					break;  				case DateUnit.Month:  					nTics = (int) ( ( month2 - month1 + 12.0 * ( year2 - year1 ) ) / _majorStep + 1.001 );  					break;  				case DateUnit.Day:  					nTics = (int) ( ( _max - _min ) / _majorStep + 1.001 );  					break;  				case DateUnit.Hour:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.HoursPerDay ) + 1.001 );  					break;  				case DateUnit.Minute:  					nTics = (int) ( ( _max - _min ) / ( _majorStep / XDate.MinutesPerDay ) + 1.001 );  					break;  				case DateUnit.Second:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.SecondsPerDay ) + 1.001 );  					break;  				case DateUnit.Millisecond:  					nTics = (int)( ( _max - _min ) / ( _majorStep / XDate.MillisecondsPerDay ) + 1.001 );  					break;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,PickScale,The following statement contains a magic number: _max = _max + 0.2 * ( _max == 0 ? 1.0 : Math.Abs( _max ) );
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,PickScale,The following statement contains a magic number: _min = _min - 0.2 * ( _min == 0 ? 1.0 : Math.Abs( _min ) );
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,PickScale,The following statement contains a magic number: _max - _min < 1.0e-20
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcDateStepSize,The following statement contains a magic number: tempStep = Math.Ceiling( tempStep / 365.0 );
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,CalcDateStepSize,The following statement contains a magic number: scale._minorStep = 0.25;
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,GetUnitMultiple,The following statement contains a magic number: switch ( unit )  			{  				case DateUnit.Year:  				default:  					return 365.0;  				case DateUnit.Month:  					return 30.0;  				case DateUnit.Day:  					return 1.0;  				case DateUnit.Hour:  					return 1.0 / XDate.HoursPerDay;  				case DateUnit.Minute:  					return 1.0 / XDate.MinutesPerDay;  				case DateUnit.Second:  					return 1.0 / XDate.SecondsPerDay;  				case DateUnit.Millisecond:  					return 1.0 / XDate.MillisecondsPerDay;  			}
Magic Number,ZedGraph,DateScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\DateScale.cs,GetUnitMultiple,The following statement contains a magic number: switch ( unit )  			{  				case DateUnit.Year:  				default:  					return 365.0;  				case DateUnit.Month:  					return 30.0;  				case DateUnit.Day:  					return 1.0;  				case DateUnit.Hour:  					return 1.0 / XDate.HoursPerDay;  				case DateUnit.Minute:  					return 1.0 / XDate.MinutesPerDay;  				case DateUnit.Second:  					return 1.0 / XDate.SecondsPerDay;  				case DateUnit.Millisecond:  					return 1.0 / XDate.MillisecondsPerDay;  			}
Magic Number,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,EllipseObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\EllipseObj.cs,Draw,The following statement contains a magic number: Math.Abs( pixRect.Left ) < 100000 &&  					Math.Abs( pixRect.Top ) < 100000 &&  					Math.Abs( pixRect.Right ) < 100000 &&  					Math.Abs( pixRect.Bottom ) < 100000
Magic Number,ZedGraph,ErrorBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBarItem.cs,DrawLegendKey,The following statement contains a magic number: pixBase = rect.Left + rect.Width / 2.0F;
Magic Number,ZedGraph,ErrorBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ErrorBarItem.cs,GetCoords,The following statement contains a magic number: float pixSide = pixBase - scaledSize / 2.0F;
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: _max = _max + 0.2 * ( _max == 0 ? 1.0 : Math.Abs( _max ) );
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: _min = _min - 0.2 * ( _min == 0 ? 1.0 : Math.Abs( _min ) );
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: _max - _min < 1.0e-20
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: Math.Abs( _min ) > 1.0e-10
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: Math.Abs( _max ) > 1.0e-10
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: Math.Abs( mag ) <= 3
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: _mag = (int) ( Math.Floor( mag / 3.0 ) * 3.0 );
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,PickScale,The following statement contains a magic number: _mag = (int) ( Math.Floor( mag / 3.0 ) * 3.0 );
Magic Number,ZedGraph,ExponentScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ExponentScale.cs,MakeLabel,The following statement contains a magic number: double scaleMult = Math.Pow( (double) 10.0' _mag );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,Fill,The following statement contains a magic number: ColorBlend blend = new ColorBlend( 2 );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,Fill,The following statement contains a magic number: ColorBlend blend = new ColorBlend( 3 );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,Fill,The following statement contains a magic number: blend.Colors[2] = color3;
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,Fill,The following statement contains a magic number: blend.Positions[1] = 0.5f;
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,Fill,The following statement contains a magic number: blend.Positions[2] = 1.0f;
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,CreateBrushFromBlend,The following statement contains a magic number: _brush = new LinearGradientBrush( new Rectangle( 0' 0' 100' 100 )'  				Color.Red' Color.White' angle );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,CreateBrushFromBlend,The following statement contains a magic number: _brush = new LinearGradientBrush( new Rectangle( 0' 0' 100' 100 )'  				Color.Red' Color.White' angle );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,GetGradientColor,The following statement contains a magic number: valueFraction = 0.5;
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,GetGradientColor,The following statement contains a magic number: _rangeMax - _rangeMin < 1e-20 || val == double.MaxValue
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,GetGradientColor,The following statement contains a magic number: RectangleF rect = new RectangleF( 0' 0' 100' 1 );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,GetGradientColor,The following statement contains a magic number: _gradientBM = new Bitmap( 100' 1 );
Magic Number,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,GetGradientColor,The following statement contains a magic number: return _gradientBM.GetPixel( (int) (99.9 * valueFraction)' 0 );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Remake,The following statement contains a magic number: font == null ||  					Math.Abs( newSize - oldSize ) > 0.1 ||  					font.Name != this.Family ||  					font.Bold != _isBold ||  					font.Italic != _isItalic ||  					font.Underline != _isUnderline
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,Draw,The following statement contains a magic number: RectangleF rectF = new RectangleF( -sizeF.Width / 2.0F' 0.0F'  								sizeF.Width' sizeF.Height );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,DrawTenPower,The following statement contains a magic number: RectangleF rectF = new RectangleF( -totSize.Width / 2.0F' 0.0F'  				totSize.Width' totSize.Height );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,DrawTenPower,The following statement contains a magic number: g.DrawString( "10"' _font' brush'  								( -totSize.Width + size10.Width ) / 2.0F'  								sizeText.Height * Default.SuperShift' strFormat );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,DrawTenPower,The following statement contains a magic number: g.DrawString( text' _superScriptFont' brush'  								( totSize.Width - sizeText.Width - charWidth ) / 2.0F'  								0.0F'  								strFormat );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,BoundingBox,The following statement contains a magic number: float cs = (float)Math.Abs( Math.Cos( _angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,BoundingBox,The following statement contains a magic number: float sn = (float)Math.Abs( Math.Sin( _angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,BoundingBoxTenPower,The following statement contains a magic number: float cs = (float)Math.Abs( Math.Cos( _angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,BoundingBoxTenPower,The following statement contains a magic number: float sn = (float)Math.Abs( Math.Sin( _angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,PointInBox,The following statement contains a magic number: RectangleF rect = new RectangleF( new PointF( -sizeF.Width / 2.0F' 0.0F )' sizeF );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,SetupMatrix,The following statement contains a magic number: xa = sizeF.Width / 2.0F;
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,SetupMatrix,The following statement contains a magic number: ya = -sizeF.Height / 2.0F;
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetMatrix,The following statement contains a magic number: xa = sizeF.Width / 2.0F;
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetMatrix,The following statement contains a magic number: ya = -sizeF.Height / 2.0F;
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetBox,The following statement contains a magic number: RectangleF rect = new RectangleF( new PointF( -sizeF.Width / 2.0F' 0.0F )' sizeF );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetBox,The following statement contains a magic number: PointF[] pts = new PointF[4];
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetBox,The following statement contains a magic number: pts[2] = new PointF( rect.Right' rect.Bottom );
Magic Number,ZedGraph,FontSpec,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\FontSpec.cs,GetBox,The following statement contains a magic number: pts[3] = new PointF( rect.Left' rect.Bottom );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,DrawLegendKey,The following statement contains a magic number: float yMid = rect.Top + rect.Height / 2.0F;
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,DrawLegendKey,The following statement contains a magic number: Pen pen = new Pen( NeedleColor' pane.ScaledPenWidth( NeedleWidth / 2' scaleFactor ) );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalculateGasGaugeParameters,The following statement contains a magic number: float sweep = ( (float)ggn.NeedleValue - (float)minVal ) /  										( (float)maxVal - (float)minVal ) * 180.0f;
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: float percentS = ( ( nonExpRect.Height * 2 ) - nonExpRect.Width ) / ( nonExpRect.Height * 2 );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: float percentS = ( ( nonExpRect.Height * 2 ) - nonExpRect.Width ) / ( nonExpRect.Height * 2 );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Height = ( ( nonExpRect.Height * 2 ) - ( ( nonExpRect.Height * 2 ) * percentS ) );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Height = ( ( nonExpRect.Height * 2 ) - ( ( nonExpRect.Height * 2 ) * percentS ) );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: ( 2 * nonExpRect.Height ) > nonExpRect.Width
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: float xDelta = ( chartRect.Width / 2 ) - ( nonExpRect.Width / 2 );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: float xDelta = ( chartRect.Width / 2 ) - ( nonExpRect.Width / 2 );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Inflate( -(float)0.05F * nonExpRect.Height' -(float)0.05 * nonExpRect.Width );
Magic Number,ZedGraph,GasGaugeNeedle,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeNeedle.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Inflate( -(float)0.05F * nonExpRect.Height' -(float)0.05 * nonExpRect.Width );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalculateGasGuageParameters,The following statement contains a magic number: float start = ( (float)ggr.MinValue - (float)minVal ) / ( (float)maxVal - (float)minVal ) * 180.0f;
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalculateGasGuageParameters,The following statement contains a magic number: float sweep = ( (float)ggr.MaxValue - (float)minVal ) / ( (float)maxVal - (float)minVal ) * 180.0f;
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalculateGasGuageParameters,The following statement contains a magic number: Fill f = new Fill( Color.White' ggr.RegionColor' -( sweep / 2f ) );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: float percentS = ( ( nonExpRect.Height * 2 ) - nonExpRect.Width ) / ( nonExpRect.Height * 2 );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: float percentS = ( ( nonExpRect.Height * 2 ) - nonExpRect.Width ) / ( nonExpRect.Height * 2 );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Height = ( ( nonExpRect.Height * 2 ) - ( ( nonExpRect.Height * 2 ) * percentS ) );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Height = ( ( nonExpRect.Height * 2 ) - ( ( nonExpRect.Height * 2 ) * percentS ) );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: ( 2 * nonExpRect.Height ) > nonExpRect.Width
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: float xDelta = ( chartRect.Width / 2 ) - ( nonExpRect.Width / 2 );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: float xDelta = ( chartRect.Width / 2 ) - ( nonExpRect.Width / 2 );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Inflate( -(float)0.05F * nonExpRect.Height' -(float)0.05 * nonExpRect.Width );
Magic Number,ZedGraph,GasGaugeRegion,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GasGaugeRegion.cs,CalcRectangle,The following statement contains a magic number: nonExpRect.Inflate( -(float)0.05F * nonExpRect.Height' -(float)0.05 * nonExpRect.Width );
Magic Number,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,GraphPane,The following statement contains a magic number: sch >= 11
Magic Number,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestObject,The following statement contains a magic number: tmpRect = new RectangleF( ( _rect.Left + _rect.Right - paneTitleBox.Width ) / 2'  						_rect.Top + _margin.Top * scaleFactor'  						paneTitleBox.Width' paneTitleBox.Height );
Magic Number,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The following statement contains a magic number: double minDist = 1e20;
Magic Number,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The following statement contains a magic number: double xVal' yVal' dist = 99999' distX' distY;
Magic Number,ZedGraph,GraphPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\GraphPane.cs,FindNearestPoint,The following statement contains a magic number: float halfSymbol = (float)( ( (LineItem)nearestCurve ).Symbol.Size *  					CalcScaleFactor() / 2 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,HSBColor,The following statement contains a magic number: this.A = 255;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: int sector = (int) Math.Floor( (double) hsbColor.H / 42.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: double fraction = (double) hsbColor.H / 42.5 - (double) sector;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: double sFrac = (double) hsbColor.S / 255.0;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: byte p = (byte) (( (double) hsbColor.B * ( 1.0 - sFrac ) ) + 0.5);
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: byte q = (byte) (( (double) hsbColor.B * ( 1.0 - sFrac * fraction ) ) + 0.5);
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: byte t = (byte) (( (double) hsbColor.B * ( 1.0 - sFrac * ( 1.0 - fraction ) ) ) + 0.5);
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: switch( sector )  			{  				case 0:			// red - yellow  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' t' p );  					break;  				case 1:			// yellow - green  					rgbColor = Color.FromArgb( hsbColor.A' q' hsbColor.B' p );  					break;  				case 2:			// green - cyan  					rgbColor = Color.FromArgb( hsbColor.A' p' hsbColor.B' t );  					break;  				case 3:			// cyan - blue  					rgbColor = Color.FromArgb( hsbColor.A' p' q' hsbColor.B );  					break;  				case 4:			// blue - magenta  					rgbColor = Color.FromArgb( hsbColor.A' t' p' hsbColor.B );  					break;  				case 5:  				default:		// magenta - red  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' p' q );  					break;  			}
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: switch( sector )  			{  				case 0:			// red - yellow  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' t' p );  					break;  				case 1:			// yellow - green  					rgbColor = Color.FromArgb( hsbColor.A' q' hsbColor.B' p );  					break;  				case 2:			// green - cyan  					rgbColor = Color.FromArgb( hsbColor.A' p' hsbColor.B' t );  					break;  				case 3:			// cyan - blue  					rgbColor = Color.FromArgb( hsbColor.A' p' q' hsbColor.B );  					break;  				case 4:			// blue - magenta  					rgbColor = Color.FromArgb( hsbColor.A' t' p' hsbColor.B );  					break;  				case 5:  				default:		// magenta - red  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' p' q );  					break;  			}
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: switch( sector )  			{  				case 0:			// red - yellow  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' t' p );  					break;  				case 1:			// yellow - green  					rgbColor = Color.FromArgb( hsbColor.A' q' hsbColor.B' p );  					break;  				case 2:			// green - cyan  					rgbColor = Color.FromArgb( hsbColor.A' p' hsbColor.B' t );  					break;  				case 3:			// cyan - blue  					rgbColor = Color.FromArgb( hsbColor.A' p' q' hsbColor.B );  					break;  				case 4:			// blue - magenta  					rgbColor = Color.FromArgb( hsbColor.A' t' p' hsbColor.B );  					break;  				case 5:  				default:		// magenta - red  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' p' q );  					break;  			}
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,ToRGB,The following statement contains a magic number: switch( sector )  			{  				case 0:			// red - yellow  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' t' p );  					break;  				case 1:			// yellow - green  					rgbColor = Color.FromArgb( hsbColor.A' q' hsbColor.B' p );  					break;  				case 2:			// green - cyan  					rgbColor = Color.FromArgb( hsbColor.A' p' hsbColor.B' t );  					break;  				case 3:			// cyan - blue  					rgbColor = Color.FromArgb( hsbColor.A' p' q' hsbColor.B );  					break;  				case 4:			// blue - magenta  					rgbColor = Color.FromArgb( hsbColor.A' t' p' hsbColor.B );  					break;  				case 5:  				default:		// magenta - red  					rgbColor = Color.FromArgb( hsbColor.A' hsbColor.B' p' q );  					break;  			}
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: double r = (double) rgbColor.R / 255.0;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: double g = (double) rgbColor.G / 255.0;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: double b = (double) rgbColor.B / 255.0;
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.B = (byte) ( max * 255.0 + 0.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.B = (byte) ( max * 255.0 + 0.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.S = (byte) ( delta / max * 255.0 + 0.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.S = (byte) ( delta / max * 255.0 + 0.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.H = (byte) ( h * 42.5 );
Magic Number,ZedGraph,HSBColor,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\HSBColor.cs,FromRGB,The following statement contains a magic number: hsbColor.H += 255;
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,JapaneseCandleStick,The following statement contains a magic number: schema2 >= 11
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: rect = new RectangleF( pixBase - halfSize' Math.Min( pixOpen' pixClose )'  								halfSize * 2.0f' Math.Abs( pixOpen - pixClose ) );
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: _isOpenCloseVisible && Math.Abs( pixOpen ) < 1000000 &&  							Math.Abs( pixClose ) < 1000000
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: _isOpenCloseVisible && Math.Abs( pixOpen ) < 1000000 &&  							Math.Abs( pixClose ) < 1000000
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: pixBase != PointPair.Missing && Math.Abs( pixLow ) < 1000000 &&  						Math.Abs( pixHigh ) < 1000000
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: pixBase != PointPair.Missing && Math.Abs( pixLow ) < 1000000 &&  						Math.Abs( pixHigh ) < 1000000
Magic Number,ZedGraph,JapaneseCandleStick,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStick.cs,Draw,The following statement contains a magic number: pixBase = (int) ( baseAxis.Scale.Transform( curve.IsOverrideOrdinal' i' date ) + 0.5 );
Magic Number,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,DrawLegendKey,The following statement contains a magic number: pixBase = rect.Left + rect.Width / 2.0F;
Magic Number,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,DrawLegendKey,The following statement contains a magic number: pixOpen = pixHigh + rect.Height / 3;
Magic Number,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,DrawLegendKey,The following statement contains a magic number: pixClose = pixLow - rect.Height / 3;
Magic Number,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,DrawLegendKey,The following statement contains a magic number: float halfSize = 2 * scaleFactor;
Magic Number,ZedGraph,JapaneseCandleStickItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\JapaneseCandleStickItem.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}"'  								pixSide' pixLow'  								pixSide + halfSize * 2' pixHigh );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Legend,The following statement contains a magic number: schema >= 11
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Legend,The following statement contains a magic number: schema >= 12
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: float halfGap = _tmpSize / 2.0F;
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: _legendItemWidth = 100;
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: x = _rect.Left + halfGap / 2.0F +  								( iEntry % _hStack ) * _legendItemWidth;
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: tmpFont.Draw( g' pane' curve._label._text'  										x + 2.5F * _tmpSize' y + _legendItemHeight / 2.0F'  										AlignH.Left' AlignV.Center' scaleFactor );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: tmpFont.Draw( g' pane' curve._label._text'  										x + 2.5F * _tmpSize' y + _legendItemHeight / 2.0F'  										AlignH.Left' AlignV.Center' scaleFactor );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: RectangleF rect = new RectangleF( x' y + _legendItemHeight / 4.0F'  									2 * _tmpSize' _legendItemHeight / 2.0F );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: RectangleF rect = new RectangleF( x' y + _legendItemHeight / 4.0F'  									2 * _tmpSize' _legendItemHeight / 2.0F );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,Draw,The following statement contains a magic number: RectangleF rect = new RectangleF( x' y + _legendItemHeight / 4.0F'  									2 * _tmpSize' _legendItemHeight / 2.0F );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,FindPoint,The following statement contains a magic number: int i = (int)( ( mousePt.X - _rect.Left - _tmpSize / 2.0f ) / _legendItemWidth );
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: float halfGap = _tmpSize / 2.0F'  					maxWidth = 0'  					tmpWidth'  					gapPix = _gap * _tmpSize;
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: switch ( _position )  				{  					// Never stack if the legend is to the right or left  					case LegendPos.Right:  					case LegendPos.Left:  						widthAvail = 0;  						break;    					// for the top & bottom' the axis border width is available  					case LegendPos.Top:  					case LegendPos.TopCenter:  					case LegendPos.Bottom:  					case LegendPos.BottomCenter:  						widthAvail = tChartRect.Width;  						break;    					// for the top & bottom flush left' the panerect less margins is available  					case LegendPos.TopFlushLeft:  					case LegendPos.BottomFlushLeft:  						widthAvail = clientRect.Width;  						break;    					// for inside the axis area or Float' use 1/2 of the axis border width  					case LegendPos.InsideTopRight:  					case LegendPos.InsideTopLeft:  					case LegendPos.InsideBotRight:  					case LegendPos.InsideBotLeft:  					case LegendPos.Float:  						widthAvail = tChartRect.Width / 2;  						break;    					// shouldn't ever happen  					default:  						widthAvail = 0;  						break;  				}
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: _legendItemWidth = 3.0f * _tmpSize + maxWidth;
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: switch ( _position )  				{  					case LegendPos.Right:  						newRect.X = clientRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;    						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.Top:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.TopFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix * 1.5f;  						tChartRect.Height -= totLegHeight + gapPix * 1.5f;  						break;  					case LegendPos.TopCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = tChartRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Bottom:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Left:  						newRect.X = clientRect.Left;  						newRect.Y = tChartRect.Top;    						tChartRect.X += totLegWidth + halfGap;  						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.InsideTopRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideTopLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideBotRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.InsideBotLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.Float:  						newRect.Location = this.Location.TransformTopLeft( pane' totLegWidth' totLegHeight );  						break;  				}
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: switch ( _position )  				{  					case LegendPos.Right:  						newRect.X = clientRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;    						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.Top:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.TopFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix * 1.5f;  						tChartRect.Height -= totLegHeight + gapPix * 1.5f;  						break;  					case LegendPos.TopCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = tChartRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Bottom:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Left:  						newRect.X = clientRect.Left;  						newRect.Y = tChartRect.Top;    						tChartRect.X += totLegWidth + halfGap;  						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.InsideTopRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideTopLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideBotRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.InsideBotLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.Float:  						newRect.Location = this.Location.TransformTopLeft( pane' totLegWidth' totLegHeight );  						break;  				}
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: switch ( _position )  				{  					case LegendPos.Right:  						newRect.X = clientRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;    						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.Top:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.TopFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix * 1.5f;  						tChartRect.Height -= totLegHeight + gapPix * 1.5f;  						break;  					case LegendPos.TopCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = tChartRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Bottom:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Left:  						newRect.X = clientRect.Left;  						newRect.Y = tChartRect.Top;    						tChartRect.X += totLegWidth + halfGap;  						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.InsideTopRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideTopLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideBotRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.InsideBotLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.Float:  						newRect.Location = this.Location.TransformTopLeft( pane' totLegWidth' totLegHeight );  						break;  				}
Magic Number,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following statement contains a magic number: switch ( _position )  				{  					case LegendPos.Right:  						newRect.X = clientRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;    						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.Top:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.TopFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix * 1.5f;  						tChartRect.Height -= totLegHeight + gapPix * 1.5f;  						break;  					case LegendPos.TopCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = tChartRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Bottom:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Left:  						newRect.X = clientRect.Left;  						newRect.Y = tChartRect.Top;    						tChartRect.X += totLegWidth + halfGap;  						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.InsideTopRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideTopLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideBotRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.InsideBotLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.Float:  						newRect.Location = this.Location.TransformTopLeft( pane' totLegWidth' totLegHeight );  						break;  				}
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,Line,The following statement contains a magic number: sch >= 13
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSmoothFilledCurve,The following statement contains a magic number: path.AddCurve( arrPoints' 0' count - 2' tension );
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSmoothFilledCurve,The following statement contains a magic number: g.DrawCurve( pen' arrPoints' 0' count - 2' tension );
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawSmoothFilledCurve,The following statement contains a magic number: this.IsVisible && !this.Color.IsEmpty && points != null &&  				BuildPointsArray( pane' curve' out arrPoints' out count ) &&  				count > 2
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,DrawCurve,The following statement contains a magic number: bool isOptDraw = _isOptimizedDraw && points.Count > 1000;
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The following statement contains a magic number: arrPoints = new PointF[( _stepType == ZedGraph.StepType.NonStep ? 1 : 2 ) *  											points.Count + 1];
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The following statement contains a magic number: curX < -1000000 || curY < -1000000 || curX > 1000000 || curY > 1000000
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The following statement contains a magic number: curX < -1000000 || curY < -1000000 || curX > 1000000 || curY > 1000000
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The following statement contains a magic number: curX < -1000000 || curY < -1000000 || curX > 1000000 || curY > 1000000
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildPointsArray,The following statement contains a magic number: curX < -1000000 || curY < -1000000 || curX > 1000000 || curY > 1000000
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildLowPointsArray,The following statement contains a magic number: arrPoints = new PointF[( _stepType == ZedGraph.StepType.NonStep ? 1 : 2 ) *  					( pane.LineType == LineType.Stack ? 2 : 1 ) *  					points.Count + 1];
Magic Number,ZedGraph,Line,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Line.cs,BuildLowPointsArray,The following statement contains a magic number: arrPoints = new PointF[( _stepType == ZedGraph.StepType.NonStep ? 1 : 2 ) *  					( pane.LineType == LineType.Stack ? 2 : 1 ) *  					points.Count + 1];
Magic Number,ZedGraph,LinearAsOrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearAsOrdinalScale.cs,MakeLabel,The following statement contains a magic number: double scaleMult = Math.Pow( (double) 10.0' _mag );
Magic Number,ZedGraph,LinearScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearScale.cs,PickScale,The following statement contains a magic number: _max = _max + 0.2 * ( _max == 0 ? 1.0 : Math.Abs( _max ) );
Magic Number,ZedGraph,LinearScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearScale.cs,PickScale,The following statement contains a magic number: _min = _min - 0.2 * ( _min == 0 ? 1.0 : Math.Abs( _min ) );
Magic Number,ZedGraph,LinearScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LinearScale.cs,PickScale,The following statement contains a magic number: _max - _min < 1.0e-30
Magic Number,ZedGraph,LineBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineBase.cs,GetPen,The following statement contains a magic number: float[] pattern = new float[2];
Magic Number,ZedGraph,LineBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineBase.cs,GetPen,The following statement contains a magic number: _dashOff > 1e-10 && _dashOn > 1e-10
Magic Number,ZedGraph,LineBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineBase.cs,GetPen,The following statement contains a magic number: _dashOff > 1e-10 && _dashOn > 1e-10
Magic Number,ZedGraph,LineItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineItem.cs,DrawLegendKey,The following statement contains a magic number: int xMid = (int)( rect.Left + rect.Width / 2.0F );
Magic Number,ZedGraph,LineItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineItem.cs,DrawLegendKey,The following statement contains a magic number: int yMid = (int) (rect.Top + rect.Height / 2.0F);
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: float angle = (float)Math.Atan2( dy' dx ) * 180.0F / (float)Math.PI;
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,Draw,The following statement contains a magic number: pix1.X > -10000 && pix1.X < 100000 && pix1.Y > -100000 && pix1.Y < 100000 &&  				pix2.X > -10000 && pix2.X < 100000 && pix2.Y > -100000 && pix2.Y < 100000
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: PointF[] pts = new PointF[4];
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[0] = new PointF( 0' 3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[1] = new PointF( pixRect.Width' 3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[2] = new PointF( pixRect.Width' -3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[2] = new PointF( pixRect.Width' -3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[3] = new PointF( 0' -3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: pts[3] = new PointF( 0' -3 );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,LineObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LineObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,DeLinearize,The following statement contains a magic number: return Math.Pow( 10.0' val );
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: double[] dLogVal = { 0' 0.301029995663981' 0.477121254719662' 0.602059991327962'  									0.698970004336019' 0.778151250383644' 0.845098040014257'  									0.903089986991944' 0.954242509439325' 1 };
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: return baseVal + Math.Floor( (double) iTic / 9.0 ) + dLogVal[( iTic + 9 ) % 9];
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: return baseVal + Math.Floor( (double) iTic / 9.0 ) + dLogVal[( iTic + 9 ) % 9];
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorTicValue,The following statement contains a magic number: return baseVal + Math.Floor( (double) iTic / 9.0 ) + dLogVal[( iTic + 9 ) % 9];
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,CalcMinorStart,The following statement contains a magic number: return -9;
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _max = 10.0;
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _max = _max * 2.0;
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _min = _min / 2.0;
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _max - _min < 1.0e-20
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _min = Math.Pow( (double) 10.0'  					Math.Floor( Math.Log10( _min ) ) );
Magic Number,ZedGraph,LogScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\LogScale.cs,PickScale,The following statement contains a magic number: _max = Math.Pow( (double) 10.0'  					Math.Ceiling( Math.Log10( _max ) ) );
Magic Number,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,MasterPane,The following statement contains a magic number: sch >= 11
Magic Number,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,OnDeserialization,The following statement contains a magic number: Bitmap bitmap = new Bitmap( 10' 10 );
Magic Number,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,OnDeserialization,The following statement contains a magic number: Bitmap bitmap = new Bitmap( 10' 10 );
Magic Number,ZedGraph,MasterPane,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MasterPane.cs,SetLayout,The following statement contains a magic number: _prop[i] = ( proportion == null || proportion.Length <= i || proportion[i] < 1e-10 ) ?  												1.0f : proportion[i];
Magic Number,ZedGraph,MinorGrid,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MinorGrid.cs,GetPen,The following statement contains a magic number: float[] pattern = new float[2];
Magic Number,ZedGraph,MinorGrid,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MinorGrid.cs,GetPen,The following statement contains a magic number: _dashOff > 1e-10 && _dashOn > 1e-10
Magic Number,ZedGraph,MinorGrid,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\MinorGrid.cs,GetPen,The following statement contains a magic number: _dashOff > 1e-10 && _dashOn > 1e-10
Magic Number,ZedGraph,NoDupePointList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\NoDupePointList.cs,FilterData,The following statement contains a magic number: int x = (int)( xAxis.Scale.Transform( dp.X ) + 0.5 ) - left;
Magic Number,ZedGraph,NoDupePointList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\NoDupePointList.cs,FilterData,The following statement contains a magic number: int y = (int)( yAxis.Scale.Transform( dp.Y ) + 0.5 ) - top;
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The following statement contains a magic number: Math.Abs( pixLow ) < 1000000 && Math.Abs( pixHigh ) < 1000000
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The following statement contains a magic number: Math.Abs( pixLow ) < 1000000 && Math.Abs( pixHigh ) < 1000000
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The following statement contains a magic number: _isOpenCloseVisible && Math.Abs( pixOpen ) < 1000000
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The following statement contains a magic number: _isOpenCloseVisible && Math.Abs( pixClose ) < 1000000
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,Draw,The following statement contains a magic number: pixBase = (int)( baseAxis.Scale.Transform( curve.IsOverrideOrdinal' i' date ) + 0.5 );
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,GetBarWidth,The following statement contains a magic number: width = baseAxis._scale.GetClusterWidth( _userScaleSize ) /  								( 1.0F + pane._barSettings.MinClusterGap ) / 2.0f;
Magic Number,ZedGraph,OHLCBar,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBar.cs,GetBarWidth,The following statement contains a magic number: return (int)(width + 0.5f);
Magic Number,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,DrawLegendKey,The following statement contains a magic number: pixBase = rect.Left + rect.Width / 2.0F;
Magic Number,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,DrawLegendKey,The following statement contains a magic number: pixOpen = pixHigh + rect.Height / 4;
Magic Number,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,DrawLegendKey,The following statement contains a magic number: pixClose = pixLow - rect.Height / 4;
Magic Number,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,DrawLegendKey,The following statement contains a magic number: float halfSize = 2.0f * scaleFactor;
Magic Number,ZedGraph,OHLCBarItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OHLCBarItem.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}"'  								pixSide' pixLow'  								pixSide + halfSize * 2' pixHigh );
Magic Number,ZedGraph,OrdinalScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\OrdinalScale.cs,PickScale,The following statement contains a magic number: scale._max = scale._min + 0.5;
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,DrawTitle,The following statement contains a magic number: _title._fontSpec.Draw( g' this' _title._text'  					( _rect.Left + _rect.Right ) / 2'  					_rect.Top + _margin.Top * (float) scaleFactor + size.Height / 2.0F'  					AlignH.Center' AlignV.Center' scaleFactor );
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,DrawTitle,The following statement contains a magic number: _title._fontSpec.Draw( g' this' _title._text'  					( _rect.Left + _rect.Right ) / 2'  					_rect.Top + _margin.Top * (float) scaleFactor + size.Height / 2.0F'  					AlignH.Center' AlignV.Center' scaleFactor );
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,CalcScaleFactor,The following statement contains a magic number: const float ASPECTLIMIT = 1.5F;
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,CalcScaleFactor,The following statement contains a magic number: scaleFactor = length / ( _baseDimension * 72F );
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,CalcScaleFactor,The following statement contains a magic number: scaleFactor = 0.1F;
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,CalcScaleFactor,The following statement contains a magic number: scaleFactor < 0.1F
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,TransformCoord,The following statement contains a magic number: x = 0.5;
Magic Number,ZedGraph,PaneBase,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PaneBase.cs,TransformCoord,The following statement contains a magic number: y = 0.5;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)0.05F * nonExplRect.Height' -(float)0.05F * nonExplRect.Width );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)0.05F * nonExplRect.Height' -(float)0.05F * nonExplRect.Width );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: float delta = ( nonExplRect.Height - nonExplRect.Width ) / 2;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width )'  											-(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width )'  											-(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width )'  											-(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: nonExplRect.Inflate( -(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width )'  											-(float)( .1 * ( 1.5 / aspectRatio ) * nonExplRect.Width ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcPieRect,The following statement contains a magic number: aspectRatio < 1.5
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcExplodedRect,The following statement contains a magic number: explRect.X += (float)( this.Displacement * explRect.Width / 2 * Math.Cos( _midAngle * Math.PI / 180 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcExplodedRect,The following statement contains a magic number: explRect.X += (float)( this.Displacement * explRect.Width / 2 * Math.Cos( _midAngle * Math.PI / 180 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcExplodedRect,The following statement contains a magic number: explRect.Y += (float)( this.Displacement * explRect.Height / 2 * Math.Sin( _midAngle * Math.PI / 180 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcExplodedRect,The following statement contains a magic number: explRect.Y += (float)( this.Displacement * explRect.Height / 2 * Math.Sin( _midAngle * Math.PI / 180 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculatePieChartParams,The following statement contains a magic number: curve.SweepAngle = (float)( 360 * curve.Value / pieTotalValue );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculatePieChartParams,The following statement contains a magic number: curve.MidAngle = curve.StartAngle + curve.SweepAngle / 2;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: fill = chartRect.X + chartRect.Width - _endPoint.X - 5;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _labelDetail.LayoutArea = new SizeF( fill' size.Height * 3.0F );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 315 || _midAngle <= 45
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 315 || _midAngle <= 45
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: fill = chartRect.Y + chartRect.Height - _endPoint.Y - 5;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: CalculateLinePoints( rect' _midAngle + ( _sweepAngle + _startAngle - _midAngle ) / 3 );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 90
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: size.Height / 2 > fill
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 45 && _midAngle <= 135
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 45 && _midAngle <= 135
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: fill = _endPoint.X - chartRect.X - 5;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _labelDetail.LayoutArea = new SizeF( fill' size.Height * 3.0F );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 135 && _midAngle <= 225
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 135 && _midAngle <= 225
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: fill = _endPoint.Y - 5 - chartRect.Y;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: CalculateLinePoints( rect' _midAngle - ( _sweepAngle + _startAngle - _midAngle ) / 3 );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle < 270
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: size.Height / 2 > fill
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 225 && _midAngle <= 315
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,DesignLabel,The following statement contains a magic number: _midAngle > 225 && _midAngle <= 315
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: PointF rectCenter = new PointF( ( rect.X + rect.Width / 2 )' ( rect.Y + rect.Height / 2 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: PointF rectCenter = new PointF( ( rect.X + rect.Width / 2 )' ( rect.Y + rect.Height / 2 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _intersectionPoint = new PointF( (float)( rectCenter.X + ( rect.Width / 2 * Math.Cos( ( midAngle ) * Math.PI / 180 ) ) )'  				(float)( rectCenter.Y + ( rect.Height / 2 * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _intersectionPoint = new PointF( (float)( rectCenter.X + ( rect.Width / 2 * Math.Cos( ( midAngle ) * Math.PI / 180 ) ) )'  				(float)( rectCenter.Y + ( rect.Height / 2 * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _intersectionPoint = new PointF( (float)( rectCenter.X + ( rect.Width / 2 * Math.Cos( ( midAngle ) * Math.PI / 180 ) ) )'  				(float)( rectCenter.Y + ( rect.Height / 2 * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _intersectionPoint = new PointF( (float)( rectCenter.X + ( rect.Width / 2 * Math.Cos( ( midAngle ) * Math.PI / 180 ) ) )'  				(float)( rectCenter.Y + ( rect.Height / 2 * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _pivotPoint = new PointF( (float)( _intersectionPoint.X + .05 * rect.Width * Math.Cos( ( midAngle ) * Math.PI / 180 ) )'  				(float)( _intersectionPoint.Y + .05 * rect.Width * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _pivotPoint = new PointF( (float)( _intersectionPoint.X + .05 * rect.Width * Math.Cos( ( midAngle ) * Math.PI / 180 ) )'  				(float)( _intersectionPoint.Y + .05 * rect.Width * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _pivotPoint = new PointF( (float)( _intersectionPoint.X + .05 * rect.Width * Math.Cos( ( midAngle ) * Math.PI / 180 ) )'  				(float)( _intersectionPoint.Y + .05 * rect.Width * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _pivotPoint = new PointF( (float)( _intersectionPoint.X + .05 * rect.Width * Math.Cos( ( midAngle ) * Math.PI / 180 ) )'  				(float)( _intersectionPoint.Y + .05 * rect.Width * Math.Sin( ( midAngle ) * Math.PI / 180 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalculateLinePoints,The following statement contains a magic number: _endPoint = new PointF( (float)( _pivotPoint.X + .05 * rect.Width )' _pivotPoint.Y );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,BuildLabelString,The following statement contains a magic number: switch ( curve._labelType )  			{  				case PieLabelType.Value:  					curve._labelStr = curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Percent:  					curve._labelStr = ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Name_Percent:  					curve._labelStr = curve._label._text + ": " + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value_Percent:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat ) +  						" (" + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat ) + ")";  					break;  				case PieLabelType.Name:  					curve._labelStr = curve._label._text;  					break;  				case PieLabelType.None:  				default:  					break;  			}
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,BuildLabelString,The following statement contains a magic number: switch ( curve._labelType )  			{  				case PieLabelType.Value:  					curve._labelStr = curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Percent:  					curve._labelStr = ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Name_Percent:  					curve._labelStr = curve._label._text + ": " + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value_Percent:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat ) +  						" (" + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat ) + ")";  					break;  				case PieLabelType.Name:  					curve._labelStr = curve._label._text;  					break;  				case PieLabelType.None:  				default:  					break;  			}
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,BuildLabelString,The following statement contains a magic number: switch ( curve._labelType )  			{  				case PieLabelType.Value:  					curve._labelStr = curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Percent:  					curve._labelStr = ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat );  					break;  				case PieLabelType.Name_Percent:  					curve._labelStr = curve._label._text + ": " + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat );  					break;  				case PieLabelType.Name_Value_Percent:  					curve._labelStr = curve._label._text + ": " + curve._pieValue.ToString( "F"' labelFormat ) +  						" (" + ( curve._sweepAngle / 360 ).ToString( "P"' labelFormat ) + ")";  					break;  				case PieLabelType.Name:  					curve._labelStr = curve._label._text;  					break;  				case PieLabelType.None:  				default:  					break;  			}
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcNewBaseRect,The following statement contains a magic number: baseRect.Inflate( -(float)( ( xDispl / 10 ) )' -(float)( ( xDispl / 10 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,CalcNewBaseRect,The following statement contains a magic number: baseRect.Inflate( -(float)( ( xDispl / 10 ) )' -(float)( ( xDispl / 10 ) ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: pt.X += _boundingRectangle.Width / 2.0f;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: pt.Y += _boundingRectangle.Height / 2.0f;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: float radius = _boundingRectangle.Width / 2.0f;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: int count = (int)Math.Floor ( SweepAngle / 5 ) + 1;
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: PointF[] pts = new PointF[2 + count];
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: pts[j] = new PointF(radius * (float)Math.Cos(angle * Math.PI / 180.0)'  											radius * (float)Math.Sin( angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: pts[j] = new PointF(radius * (float)Math.Cos(angle * Math.PI / 180.0)'  											radius * (float)Math.Sin( angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: j < count + 2
Magic Number,ZedGraph,PieItem,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PieItem.cs,GetCoords,The following statement contains a magic number: j < count + 2
Magic Number,ZedGraph,PointPairComparerY,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPair.cs,Compare,The following statement contains a magic number: System.Math.Abs( lY - rY ) < .000000001
Magic Number,ZedGraph,PointPairComparer,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPair.cs,Compare,The following statement contains a magic number: ( l == null && r == null ) || ( System.Math.Abs( lVal - rVal ) < 1e-100 )
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,InterpolateX,The following statement contains a magic number: this.Count < 2
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: tension /= 3.0;
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: this.Count < 2
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: X0 = X1 - ( X2 - X1 )/3;
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: Y0 = Y1 - ( Y2 - Y1 )/3;
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: X3 = X2 + ( X2 - X1 )/3;
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: Y3 = Y2 + ( Y2 - Y1 )/3;
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: B1 = 3.0 * t * (1 - t) * (1 - t);
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,SplineInterpolateX,The following statement contains a magic number: B2 = 3.0 * t * t * (1 - t);
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,InterpolateY,The following statement contains a magic number: this.Count < 2
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,LinearRegression,The following statement contains a magic number: count < 2 || maxX - minX < 1e-20
Magic Number,ZedGraph,PointPairList,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PointPairList.cs,LinearRegression,The following statement contains a magic number: count < 2 || maxX - minX < 1e-20
Magic Number,ZedGraph,PolyObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PolyObj.cs,PolyObj,The following statement contains a magic number: schema3 >= 11
Magic Number,ZedGraph,PolyObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PolyObj.cs,MakePath,The following statement contains a magic number: Math.Abs( pixPt.X ) < 100000 &&  						Math.Abs( pixPt.Y ) < 100000
Magic Number,ZedGraph,PolyObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\PolyObj.cs,MakePath,The following statement contains a magic number: Math.Abs( pixPt.X ) < 100000 &&  						Math.Abs( pixPt.Y ) < 100000
Magic Number,ZedGraph,ReversibleFrame,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ReversibleFrame.cs,Draw,The following statement contains a magic number: backgroundColor.GetBrightness() < 0.5
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Scale,The following statement contains a magic number: _majorStep = 0.1;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Scale,The following statement contains a magic number: _minorStep = 0.1;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Scale,The following statement contains a magic number: schema >= 11
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,MakeLabel,The following statement contains a magic number: double scaleMult = Math.Pow( (double)10.0' _mag );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,GetScaleMaxSpace,The following statement contains a magic number: double dVal'  					scaleMult = Math.Pow( (double)10.0' _mag );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: double scaleMult = Math.Pow( (double)10.0' _mag );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: double rangeTol = ( _maxLinTemp - _minLinTemp ) * 0.001;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: int firstTic = (int)( ( _minLinTemp - baseVal ) / _majorStep + 0.99 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: float lastPixVal = -10000;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: dVal2 = CalcMajorTicValue( baseVal' -0.5 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: dVal2 = CalcMajorTicValue( baseVal' (double)i + 0.5 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabels,The following statement contains a magic number: bool isSkipCross = _isSkipCrossLabel && !_ownerAxis._crossAuto &&  									Math.Abs( _ownerAxis._cross - dVal ) < rangeTol * 10.0;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,The following statement contains a magic number: double rangeTol = ( _maxLinTemp - _minLinTemp ) * 0.001;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,The following statement contains a magic number: int firstTic = (int)( ( _minLinTemp - baseVal ) / _majorStep + 0.99 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,The following statement contains a magic number: dVal2 = CalcMajorTicValue( baseVal' -0.5 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawGrid,The following statement contains a magic number: dVal2 = CalcMajorTicValue( baseVal' (double)i + 0.5 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,DrawLabel,The following statement contains a magic number: textCenter = textTop + maxSpace / 2.0F;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,GetTopRightPix,The following statement contains a magic number: tMajor > 1000 ||  					( ( minorTic.IsOutside || minorTic.IsInside || minorTic.IsOpposite )  					&& tMinor > 5000 )
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,GetTopRightPix,The following statement contains a magic number: tMajor > 1000 ||  					( ( minorTic.IsOutside || minorTic.IsInside || minorTic.IsOpposite )  					&& tMinor > 5000 )
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,The following statement contains a magic number: _max *= ( _min < 0 ? 0.95 : 1.05 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,The following statement contains a magic number: _max *= ( _min < 0 ? 0.95 : 1.05 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,The following statement contains a magic number: _min *= ( _min < 0 ? 1.05 : 0.95 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,The following statement contains a magic number: _min *= ( _min < 0 ? 1.05 : 0.95 );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,PickScale,The following statement contains a magic number: Math.Abs( _max ) > 1e-100
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: float maxWidth = 1000;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: float temp = 1000;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: float costh = (float) Math.Abs( Math.Cos( _fontSpec.Angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: float sinth = (float) Math.Abs( Math.Sin( _fontSpec.Angle * Math.PI / 180.0 ) );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: costh > 0.001
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: sinth > 0.001
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcMaxLabels,The following statement contains a magic number: width = ( chartRect.Width == 0 ) ? pane.Rect.Width * 0.75 : chartRect.Width;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SetScaleMag,The following statement contains a magic number: Math.Abs(mag) <= 3
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SetScaleMag,The following statement contains a magic number: this._mag = (int)(Math.Floor(mag / 3.0) * 3.0);
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SetScaleMag,The following statement contains a magic number: this._mag = (int)(Math.Floor(mag / 3.0) * 3.0);
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcStepSize,The following statement contains a magic number: double magPow = Math.Pow( (double) 10.0' mag );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcStepSize,The following statement contains a magic number: double magMsd = ( (int) ( tempStep / magPow + .5 ) );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcStepSize,The following statement contains a magic number: magMsd = 10.0;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcStepSize,The following statement contains a magic number: magMsd > 5.0
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcBoundedStepSize,The following statement contains a magic number: double magPow = Math.Pow( (double) 10.0' mag );
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcBoundedStepSize,The following statement contains a magic number: magMsd = 10.0;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcBoundedStepSize,The following statement contains a magic number: magMsd > 5.0
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalcNumTics,The following statement contains a magic number: nTics = (int) ( ( _max - _min ) / _majorStep + 0.01 ) + 1;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Transform,The following statement contains a magic number: denom > 1e-100
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SafeLog,The following statement contains a magic number: x > 1.0e-20
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,SafeExp,The following statement contains a magic number: x > 1.0e-20
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Zoom,The following statement contains a magic number: centerVal = (maxLin + minLin) / 2.0;
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Zoom,The following statement contains a magic number: zoomFraction > 0.0001 && zoomFraction < 1000.0
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,Zoom,The following statement contains a magic number: zoomFraction > 0.0001 && zoomFraction < 1000.0
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalculateRangeGrace,The following statement contains a magic number: Math.Abs(_rangeMax) < 1e-30
Magic Number,ZedGraph,Scale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Scale.cs,CalculateRangeGrace,The following statement contains a magic number: Math.Abs(_rangeMax - _rangeMin) < 1e-30
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,Symbol,The following statement contains a magic number: sch >= 11
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,DrawSymbol,The following statement contains a magic number: _isVisible &&  					this.Type != SymbolType.None &&  					x < 100000 && x > -100000 &&  					y < 100000 && y > -100000
Magic Number,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,MakePath,The following statement contains a magic number: float	hsize = scaledSize / 2'  					hsize1 = hsize + 1;
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,Draw,The following statement contains a magic number: pix.X > -100000 && pix.X < 100000 && pix.Y > -100000 && pix.Y < 100000
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,Draw,The following statement contains a magic number: pix.X > -100000 && pix.X < 100000 && pix.Y > -100000 && pix.Y < 100000
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,Draw,The following statement contains a magic number: pix.X > -100000 && pix.X < 100000 && pix.Y > -100000 && pix.Y < 100000
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,Draw,The following statement contains a magic number: pix.X > -100000 && pix.X < 100000 && pix.Y > -100000 && pix.Y < 100000
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,TextObj,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextObj.cs,GetCoords,The following statement contains a magic number: coords = String.Format( "{0:f0}'{1:f0}'{2:f0}'{3:f0}'{4:f0}'{5:f0}'{6:f0}'{7:f0}'"'  						pts[0].X' pts[0].Y' pts[1].X' pts[1].Y'  						pts[2].X' pts[2].Y' pts[3].X' pts[3].Y );
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,CalcNumTics,The following statement contains a magic number: nTics = 10;
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,The following statement contains a magic number: _min = 0.5;
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,The following statement contains a magic number: _max = _textLabels.Length + 0.5;
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,The following statement contains a magic number: _max = _min + 10.0;
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,The following statement contains a magic number: _max - _min < .1
Magic Number,ZedGraph,TextScale,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\TextScale.cs,PickScale,The following statement contains a magic number: _minorStep = _majorStep / 10;
Magic Number,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The following statement contains a magic number: lowVal = lowVal / positiveStack * 100.0;
Magic Number,ZedGraph,ValueHandler,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\ValueHandler.cs,GetValues,The following statement contains a magic number: hiVal = hiVal / positiveStack * 100.0;
Magic Number,ZedGraph,X2Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\X2Axis.cs,X2Axis,The following statement contains a magic number: _scale._fontSpec.Angle = 180F;
Magic Number,ZedGraph,X2Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\X2Axis.cs,X2Axis,The following statement contains a magic number: _title._fontSpec.Angle = 180F;
Magic Number,ZedGraph,X2Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\X2Axis.cs,SetTransformMatrix,The following statement contains a magic number: g.RotateTransform( 180 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: month += 12;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: month <= 2
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: double A = Math.Floor( (double) year / 100.0 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: double B = 2 - A + Math.Floor( A / 4.0 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: double B = 2 - A + Math.Floor( A / 4.0 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: return	Math.Floor( 365.25 * ( (double) year + 4716.0 ) ) +  					Math.Floor( 30.6001 * (double) ( month + 1 ) ) +  					(double) day + B - 1524.5 +  					hour  / HoursPerDay + minute / MinutesPerDay + second / SecondsPerDay +  					millisecond / MillisecondsPerDay;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: return	Math.Floor( 365.25 * ( (double) year + 4716.0 ) ) +  					Math.Floor( 30.6001 * (double) ( month + 1 ) ) +  					(double) day + B - 1524.5 +  					hour  / HoursPerDay + minute / MinutesPerDay + second / SecondsPerDay +  					millisecond / MillisecondsPerDay;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: return	Math.Floor( 365.25 * ( (double) year + 4716.0 ) ) +  					Math.Floor( 30.6001 * (double) ( month + 1 ) ) +  					(double) day + B - 1524.5 +  					hour  / HoursPerDay + minute / MinutesPerDay + second / SecondsPerDay +  					millisecond / MillisecondsPerDay;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,_CalendarDateToJulianDay,The following statement contains a magic number: return	Math.Floor( 365.25 * ( (double) year + 4716.0 ) ) +  					Math.Floor( 30.6001 * (double) ( month + 1 ) ) +  					(double) day + B - 1524.5 +  					hour  / HoursPerDay + minute / MinutesPerDay + second / SecondsPerDay +  					millisecond / MillisecondsPerDay;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: jDay += 0.0005 / SecondsPerDay;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double z = Math.Floor( jDay + 0.5);
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double f = jDay + 0.5 - z;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double alpha = Math.Floor( ( z - 1867216.25 ) / 36524.25 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double alpha = Math.Floor( ( z - 1867216.25 ) / 36524.25 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double A = z + 1.0 + alpha - Math.Floor( alpha / 4 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double B = A + 1524.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double C = Math.Floor( ( B - 122.1 ) / 365.25 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double C = Math.Floor( ( B - 122.1 ) / 365.25 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double D = Math.Floor( 365.25 * C );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double E = Math.Floor( ( B - D ) / 30.6001 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: day = (int) Math.Floor( B - D - Math.Floor( 30.6001 * E ) + f );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: month = (int) ( ( E < 14.0 ) ? E - 1.0 : E - 13.0 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: month = (int) ( ( E < 14.0 ) ? E - 1.0 : E - 13.0 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: year = (int) ( ( month > 2 ) ? C - 4716 : C - 4715 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: year = (int) ( ( month > 2 ) ? C - 4716 : C - 4715 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: year = (int) ( ( month > 2 ) ? C - 4716 : C - 4715 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double fday =  ( jDay - 0.5 ) - Math.Floor( jDay - 0.5 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,JulianDayToCalendarDate,The following statement contains a magic number: double fday =  ( jDay - 0.5 ) - Math.Floor( jDay - 0.5 );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XLDateToDayOfWeek,The following statement contains a magic number: return (int) ( XLDateToJulianDay( xlDate ) + 1.5 ) % 7;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,XLDateToDayOfWeek,The following statement contains a magic number: return (int) ( XLDateToJulianDay( xlDate ) + 1.5 ) % 7;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[h]"' ((int) (xlDate * 24)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[hh]"' ((int) (xlDate * 24)).ToString("d2") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 24 - (int) (xlDate * 24) ) / 24.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 24 - (int) (xlDate * 24) ) / 24.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 24 - (int) (xlDate * 24) ) / 24.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[m]"' ((int) (xlDate * 1440)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[mm]"' ((int) (xlDate * 1440)).ToString("d2") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 1440 - (int) (xlDate * 1440) ) / 1440.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 1440 - (int) (xlDate * 1440) ) / 1440.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 1440 - (int) (xlDate * 1440) ) / 1440.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[s]"' ((int) (xlDate * 86400)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[ss]"' ((int) (xlDate * 86400)).ToString("d2") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 86400 - (int) (xlDate * 86400) ) / 86400.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 86400 - (int) (xlDate * 86400) ) / 86400.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: xlDate = ( xlDate * 86400 - (int) (xlDate * 86400) ) / 86400.0;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[f]"' ((int) (xlDate * 864000)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[ff]"' ((int) (xlDate * 8640000)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[fff]"' ((int) (xlDate * 86400000)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[ffff]"' ((int) (xlDate * 864000000)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: fmtStr = fmtStr.Replace( "[fffff]"' ((int) (xlDate * 8640000000)).ToString("d") );
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: year = 9999;
Magic Number,ZedGraph,XDate,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\XDate.cs,ToString,The following statement contains a magic number: year > 9999
Magic Number,ZedGraph,Y2Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Y2Axis.cs,Y2Axis,The following statement contains a magic number: _scale._fontSpec.Angle = -90.0F;
Magic Number,ZedGraph,Y2Axis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Y2Axis.cs,SetTransformMatrix,The following statement contains a magic number: g.RotateTransform( -90 );
Magic Number,ZedGraph,YAxis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\YAxis.cs,YAxis,The following statement contains a magic number: _scale._fontSpec.Angle = 90.0F;
Magic Number,ZedGraph,YAxis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\YAxis.cs,YAxis,The following statement contains a magic number: _title._fontSpec.Angle = -180F;
Magic Number,ZedGraph,YAxis,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\YAxis.cs,SetTransformMatrix,The following statement contains a magic number: g.RotateTransform( 90 );
Missing Default,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,The following switch statement is missing a default case: switch ( _alignH )  						{  						case AlignH.Left:  							dx = rect.Left - linBrush.Rectangle.Left;  							break;  						case AlignH.Center:  							dx = ( rect.Left + rect.Width / 2.0F ) - linBrush.Rectangle.Left;  							break;  						case AlignH.Right:  							dx = ( rect.Left + rect.Width ) - linBrush.Rectangle.Left;  							break;  						}
Missing Default,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,The following switch statement is missing a default case: switch ( _alignV )  						{  						case AlignV.Top:  							dy = rect.Top - linBrush.Rectangle.Top;  							break;  						case AlignV.Center:  							dy = ( rect.Top + rect.Height / 2.0F ) - linBrush.Rectangle.Top;  							break;  						case AlignV.Bottom:  							dy = ( rect.Top + rect.Height) - linBrush.Rectangle.Top;  							break;  						}
Missing Default,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,The following switch statement is missing a default case: switch ( _alignH )  						{  						case AlignH.Left:  							dx = rect.Left;  							break;  						case AlignH.Center:  							dx = ( rect.Left + rect.Width / 2.0F );  							break;  						case AlignH.Right:  							dx = ( rect.Left + rect.Width );  							break;  						}
Missing Default,ZedGraph,Fill,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Fill.cs,ScaleBrush,The following switch statement is missing a default case: switch ( _alignV )  						{  						case AlignV.Top:  							dy = rect.Top;  							break;  						case AlignV.Center:  							dy = ( rect.Top + rect.Height / 2.0F );  							break;  						case AlignV.Bottom:  							dy = ( rect.Top + rect.Height);  							break;  						}
Missing Default,ZedGraph,Legend,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Legend.cs,CalcRect,The following switch statement is missing a default case: switch ( _position )  				{  					case LegendPos.Right:  						newRect.X = clientRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;    						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.Top:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.TopFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Top;    						tChartRect.Y += totLegHeight + gapPix * 1.5f;  						tChartRect.Height -= totLegHeight + gapPix * 1.5f;  						break;  					case LegendPos.TopCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = tChartRect.Top;    						tChartRect.Y += totLegHeight + gapPix;  						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Bottom:  						newRect.X = tChartRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomFlushLeft:  						newRect.X = clientRect.Left;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.BottomCenter:  						newRect.X = tChartRect.Left + ( tChartRect.Width - totLegWidth ) / 2;  						newRect.Y = clientRect.Bottom - totLegHeight;    						tChartRect.Height -= totLegHeight + gapPix;  						break;  					case LegendPos.Left:  						newRect.X = clientRect.Left;  						newRect.Y = tChartRect.Top;    						tChartRect.X += totLegWidth + halfGap;  						tChartRect.Width -= totLegWidth + gapPix;  						break;  					case LegendPos.InsideTopRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideTopLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Top;  						break;  					case LegendPos.InsideBotRight:  						newRect.X = tChartRect.Right - totLegWidth;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.InsideBotLeft:  						newRect.X = tChartRect.Left;  						newRect.Y = tChartRect.Bottom - totLegHeight;  						break;  					case LegendPos.Float:  						newRect.Location = this.Location.TransformTopLeft( pane' totLegWidth' totLegHeight );  						break;  				}
Missing Default,ZedGraph,Symbol,D:\research\architectureSmells\repos\discomurray_ZedGraph\source\ZedGraph\Symbol.cs,MakePath,The following switch statement is missing a default case: switch( _type == SymbolType.Default || ( _type == SymbolType.UserDefined && _userSymbol == null ) ? Default.Type : _type )  			{  			case SymbolType.Square:  				path.AddLine( -hsize' -hsize' hsize' -hsize );  				path.AddLine( hsize' -hsize' hsize' hsize );  				path.AddLine( hsize' hsize' -hsize' hsize );  				path.AddLine( -hsize' hsize' -hsize' -hsize );  				break;  			case SymbolType.Diamond:  				path.AddLine( 0' -hsize' hsize' 0 );  				path.AddLine( hsize' 0' 0' hsize );  				path.AddLine( 0' hsize' -hsize' 0 );  				path.AddLine( -hsize' 0' 0' -hsize );  				break;  			case SymbolType.Triangle:  				path.AddLine( 0' -hsize' hsize' hsize );  				path.AddLine( hsize' hsize' -hsize' hsize );  				path.AddLine( -hsize' hsize' 0' -hsize );  				break;  			case SymbolType.Circle:  				path.AddEllipse( -hsize' -hsize' scaledSize' scaledSize );  				break;  			case SymbolType.XCross:  				path.AddLine( -hsize' -hsize' hsize1' hsize1 );  				path.StartFigure();  				path.AddLine( hsize' -hsize' -hsize1' hsize1 );  				break;  			case SymbolType.Plus:  				path.AddLine( 0' -hsize' 0' hsize1 );  				path.StartFigure();  				path.AddLine( -hsize' 0' hsize1' 0 );  				break;  			case SymbolType.Star:  				path.AddLine( 0' -hsize' 0' hsize1 );  				path.StartFigure();  				path.AddLine( -hsize' 0' hsize1' 0 );  				path.StartFigure();  				path.AddLine( -hsize' -hsize' hsize1' hsize1 );  				path.StartFigure();  				path.AddLine( hsize' -hsize' -hsize1' hsize1 );  				break;  			case SymbolType.TriangleDown:  				path.AddLine( 0' hsize' hsize' -hsize );  				path.AddLine( hsize' -hsize' -hsize' -hsize );  				path.AddLine( -hsize' -hsize' 0' hsize );  				break;  			case SymbolType.HDash:  				path.AddLine( -hsize' 0' hsize1' 0 );  				break;  			case SymbolType.VDash:  				path.AddLine( 0' -hsize' 0' hsize1 );  				break;  			case SymbolType.UserDefined:  				path = _userSymbol.Clone() as GraphicsPath;  				Matrix scaleTransform = new Matrix( scaledSize' 0.0f' 0.0f' scaledSize' 0.0f' 0.0f );  				path.Transform( scaleTransform );  				break;  			}
