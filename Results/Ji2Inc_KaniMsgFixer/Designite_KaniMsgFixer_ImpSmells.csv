Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,Cyclomatic complexity of the method is 15
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnGetList_Click,The following statement contains a magic number: try {  	string[] paths;  	if (recursiveCheckBox.Checked) {  		paths = Directory.GetFiles (this.pbInput.Path' "*.msg"' SearchOption.AllDirectories);  	}  	else {  		paths = Directory.GetFiles (this.pbInput.Path' "*.msg"' SearchOption.TopDirectoryOnly);  	}  	if (paths.Count () == 0) {  		MessageBox.Show ("MSGファイルが存在しません。");  		return;  	}  	this._pathList.Clear ();  	foreach (var path in paths) {  		this._pathList.Add (new FilePath (path));  	}  	this.dgvList.AutoGenerateColumns = false;  	this.dgvList.DataSource = this._pathList;  	this.dgvList.Columns.Clear ();  	var colPath = new DataGridViewTextBoxColumn ();  	colPath.HeaderText = "Path";  	colPath.Width = 700;  	colPath.DataPropertyName = "Path";  	this.dgvList.Columns.Add (colPath);  	dgvList.AllowUserToAddRows = false;  	dgvList.AutoResizeColumns ();  	dgvList.ClearSelection ();  	//DataGridView1の行ヘッダーに行番号を表示する  	for (int i = 0; i < this.dgvList.Rows.Count; i++) {  		this.dgvList.Rows [i].HeaderCell.Value = (i + 1).ToString ();  	}  	//行ヘッダーの幅を自動調節する  	this.dgvList.AutoResizeRowHeadersWidth (DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders);  }  catch (Exception ex) {  	MessageBox.Show (ex.Message + "\r\n" + ex.StackTrace);  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnGetList_Click,The following statement contains a magic number: colPath.Width = 700;  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: for (int index = start; index < this._pathList.Count; ++index) {  	if (this._isContinue) {  		var filePath = this._pathList [index];  		if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  			Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  			existLongpath = true;  			continue;  		}  		if (0 < index)  			this.dgvList.Rows [index - 1].Selected = false;  		this.dgvList.Rows [index].Selected = true;  		this.dgvList.FirstDisplayedScrollingRowIndex = index;  		Outlook.MailItem item = (Outlook.MailItem)app.Session.OpenSharedItem (filePath.Path);  		item.InternetCodepage = 50221;  		//item.Save();  		item.Close (Outlook.OlInspectorClose.olSave);  	}  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: for (int index = start; index < this._pathList.Count; ++index) {  	if (this._isContinue) {  		var filePath = this._pathList [index];  		if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  			Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  			existLongpath = true;  			continue;  		}  		if (0 < index)  			this.dgvList.Rows [index - 1].Selected = false;  		this.dgvList.Rows [index].Selected = true;  		this.dgvList.FirstDisplayedScrollingRowIndex = index;  		Outlook.MailItem item = (Outlook.MailItem)app.Session.OpenSharedItem (filePath.Path);  		item.InternetCodepage = 50221;  		//item.Save();  		item.Close (Outlook.OlInspectorClose.olSave);  	}  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (this._isContinue) {  	var filePath = this._pathList [index];  	if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  		Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  		existLongpath = true;  		continue;  	}  	if (0 < index)  		this.dgvList.Rows [index - 1].Selected = false;  	this.dgvList.Rows [index].Selected = true;  	this.dgvList.FirstDisplayedScrollingRowIndex = index;  	Outlook.MailItem item = (Outlook.MailItem)app.Session.OpenSharedItem (filePath.Path);  	item.InternetCodepage = 50221;  	//item.Save();  	item.Close (Outlook.OlInspectorClose.olSave);  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (this._isContinue) {  	var filePath = this._pathList [index];  	if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  		Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  		existLongpath = true;  		continue;  	}  	if (0 < index)  		this.dgvList.Rows [index - 1].Selected = false;  	this.dgvList.Rows [index].Selected = true;  	this.dgvList.FirstDisplayedScrollingRowIndex = index;  	Outlook.MailItem item = (Outlook.MailItem)app.Session.OpenSharedItem (filePath.Path);  	item.InternetCodepage = 50221;  	//item.Save();  	item.Close (Outlook.OlInspectorClose.olSave);  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  	Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  	existLongpath = true;  	continue;  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: item.InternetCodepage = 50221;  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: GC.Collect (2' GCCollectionMode.Forced);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: System.Threading.Thread.Sleep (1000);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: for (int index = start; index < this._pathList.Count; ++index) {  	if (this._isContinue) {  		var filePath = this._pathList [index];  		if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  			Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  			existLongpath = true;  			continue;  		}  		if (0 < index)  			this.dgvList.Rows [index - 1].Selected = false;  		this.dgvList.Rows [index].Selected = true;  		this.dgvList.FirstDisplayedScrollingRowIndex = index;  		var proc = new Process ();  		proc.StartInfo.FileName = filePath.Path;  		proc.Start ();  		proc.WaitForInputIdle ();  		if (start == index)  			Thread.Sleep (4000);  		else  			Thread.Sleep (1000);  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		if (radio2010.Checked) {  			SendKeys.SendWait ("%HAOC");  			// メッセージ、アクション、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		else {  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FS");  		// 上書き保存  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FC");  		// 閉じる  		proc.WaitForExit ();  	}  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: for (int index = start; index < this._pathList.Count; ++index) {  	if (this._isContinue) {  		var filePath = this._pathList [index];  		if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  			Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  			existLongpath = true;  			continue;  		}  		if (0 < index)  			this.dgvList.Rows [index - 1].Selected = false;  		this.dgvList.Rows [index].Selected = true;  		this.dgvList.FirstDisplayedScrollingRowIndex = index;  		var proc = new Process ();  		proc.StartInfo.FileName = filePath.Path;  		proc.Start ();  		proc.WaitForInputIdle ();  		if (start == index)  			Thread.Sleep (4000);  		else  			Thread.Sleep (1000);  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		if (radio2010.Checked) {  			SendKeys.SendWait ("%HAOC");  			// メッセージ、アクション、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		else {  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FS");  		// 上書き保存  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FC");  		// 閉じる  		proc.WaitForExit ();  	}  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: for (int index = start; index < this._pathList.Count; ++index) {  	if (this._isContinue) {  		var filePath = this._pathList [index];  		if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  			Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  			existLongpath = true;  			continue;  		}  		if (0 < index)  			this.dgvList.Rows [index - 1].Selected = false;  		this.dgvList.Rows [index].Selected = true;  		this.dgvList.FirstDisplayedScrollingRowIndex = index;  		var proc = new Process ();  		proc.StartInfo.FileName = filePath.Path;  		proc.Start ();  		proc.WaitForInputIdle ();  		if (start == index)  			Thread.Sleep (4000);  		else  			Thread.Sleep (1000);  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		SendKeys.SendWait ("{TAB}");  		if (radio2010.Checked) {  			SendKeys.SendWait ("%HAOC");  			// メッセージ、アクション、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		else {  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  			SendKeys.SendWait ("%HXC");  			// メッセージ、その他のアクション、エンコード  			SendKeys.SendWait ("{ENTER}");  			// 日本語（自動選択）  		}  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FS");  		// 上書き保存  		//Thread.Sleep(500);  		SendKeys.SendWait ("%FC");  		// 閉じる  		proc.WaitForExit ();  	}  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (this._isContinue) {  	var filePath = this._pathList [index];  	if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  		Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  		existLongpath = true;  		continue;  	}  	if (0 < index)  		this.dgvList.Rows [index - 1].Selected = false;  	this.dgvList.Rows [index].Selected = true;  	this.dgvList.FirstDisplayedScrollingRowIndex = index;  	var proc = new Process ();  	proc.StartInfo.FileName = filePath.Path;  	proc.Start ();  	proc.WaitForInputIdle ();  	if (start == index)  		Thread.Sleep (4000);  	else  		Thread.Sleep (1000);  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	if (radio2010.Checked) {  		SendKeys.SendWait ("%HAOC");  		// メッセージ、アクション、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	else {  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FS");  	// 上書き保存  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FC");  	// 閉じる  	proc.WaitForExit ();  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (this._isContinue) {  	var filePath = this._pathList [index];  	if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  		Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  		existLongpath = true;  		continue;  	}  	if (0 < index)  		this.dgvList.Rows [index - 1].Selected = false;  	this.dgvList.Rows [index].Selected = true;  	this.dgvList.FirstDisplayedScrollingRowIndex = index;  	var proc = new Process ();  	proc.StartInfo.FileName = filePath.Path;  	proc.Start ();  	proc.WaitForInputIdle ();  	if (start == index)  		Thread.Sleep (4000);  	else  		Thread.Sleep (1000);  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	if (radio2010.Checked) {  		SendKeys.SendWait ("%HAOC");  		// メッセージ、アクション、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	else {  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FS");  	// 上書き保存  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FC");  	// 閉じる  	proc.WaitForExit ();  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (this._isContinue) {  	var filePath = this._pathList [index];  	if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  		Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  		existLongpath = true;  		continue;  	}  	if (0 < index)  		this.dgvList.Rows [index - 1].Selected = false;  	this.dgvList.Rows [index].Selected = true;  	this.dgvList.FirstDisplayedScrollingRowIndex = index;  	var proc = new Process ();  	proc.StartInfo.FileName = filePath.Path;  	proc.Start ();  	proc.WaitForInputIdle ();  	if (start == index)  		Thread.Sleep (4000);  	else  		Thread.Sleep (1000);  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	SendKeys.SendWait ("{TAB}");  	if (radio2010.Checked) {  		SendKeys.SendWait ("%HAOC");  		// メッセージ、アクション、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	else {  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  		SendKeys.SendWait ("%HXC");  		// メッセージ、その他のアクション、エンコード  		SendKeys.SendWait ("{ENTER}");  		// 日本語（自動選択）  	}  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FS");  	// 上書き保存  	//Thread.Sleep(500);  	SendKeys.SendWait ("%FC");  	// 閉じる  	proc.WaitForExit ();  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (259 < Encoding.GetEncoding ("Shift_JIS").GetByteCount (filePath.Path)) {  	Logger.Write (LogLevel.WARNING' "ロングパス：" + filePath.Path);  	existLongpath = true;  	continue;  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (start == index)  	Thread.Sleep (4000);  else  	Thread.Sleep (1000);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: if (start == index)  	Thread.Sleep (4000);  else  	Thread.Sleep (1000);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: Thread.Sleep (4000);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,btnExecute_Click,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,dgvList_CellContentDoubleClick,The following statement contains a magic number: if (259 < Encoding.GetEncoding (932).GetByteCount (path)) {  	MessageBox.Show ("ロングパスファイルのため開けません");  	return;  }  
Magic Number,Kani,KaniMsgFixer,C:\repos\Ji2Inc_KaniMsgFixer\KaniMsgFixer\KaniMsgFixer.cs,dgvList_CellContentDoubleClick,The following statement contains a magic number: if (259 < Encoding.GetEncoding (932).GetByteCount (path)) {  	MessageBox.Show ("ロングパスファイルのため開けません");  	return;  }  
