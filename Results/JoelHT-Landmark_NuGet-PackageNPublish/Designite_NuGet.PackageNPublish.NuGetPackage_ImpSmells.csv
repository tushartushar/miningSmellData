Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.PackageNPublish.NuGetPackage.T4Support,PackageProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\PackageProperties.cs,PackageProperties,The method has 6 parameters. Parameters: hostDirectory' moduleNames' id' title' description' versions
Magic Number,NuGet.PackageNPublish.NuGetPackage.T4Support,AssemblyProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\AssemblyProperties.cs,ReadInfo,The following statement contains a magic number: var value = matcher.Match(rawAssemblyInfo).Groups[2].ToString();
Magic Number,NuGet.PackageNPublish.NuGetPackage.T4Support,PackageProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\PackageProperties.cs,ConvertToLong,The following statement contains a magic number: long ordinal = 1000;
Magic Number,NuGet.PackageNPublish.NuGetPackage.T4Support,PackageProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\PackageProperties.cs,ConvertToLong,The following statement contains a magic number: if (parts.Length >= 4 && version.Contains('-') && !version.EndsWith("-"))              {                  ordinal += 1000;              }
Magic Number,NuGet.PackageNPublish.NuGetPackage.T4Support,PackageProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\PackageProperties.cs,ConvertToLong,The following statement contains a magic number: if (parts.Length >= 4 && version.Contains('-') && !version.EndsWith("-"))              {                  ordinal += 1000;              }
Magic Number,NuGet.PackageNPublish.NuGetPackage.T4Support,PackageProperties,C:\repos\JoelHT-Landmark_NuGet-PackageNPublish\NuGet.PackageNPublish.NuGetPackage\T4Support\PackageProperties.cs,ConvertToLong,The following statement contains a magic number: foreach (var number in version.Trim('-').Split('.'))              {                  long l;                  long.TryParse(number' out l);                    result += l * ordinal;                  ordinal /= 10;              }
