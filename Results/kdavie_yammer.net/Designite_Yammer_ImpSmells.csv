Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateAuthHeader,The method has 5 parameters. Parameters: method' nonce' timeStamp' sig' session
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The method has 6 parameters. Parameters: fullUrl' method' nonce' timeStamp' sig' session
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The method has 5 parameters. Parameters: fullUrl' method' nonce' timeStamp' sig
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The method has 7 parameters. Parameters: fullUrl' method' nonce' timeStamp' sig' boundary' session
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The method has 6 parameters. Parameters: fullUrl' method' nonce' timeStamp' sig' boundary
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,GetSignature,The method has 5 parameters. Parameters: method' session' url' timestamp' nonce
Long Parameter List,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,AddFileHeaders,The method has 8 parameters. Parameters: fileNames' contentBoundary' contentDisposition' fi' i' postDataSize' headerLength' fileHeaders
Long Parameter List,Yammer,PreviousCompany,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\PreviousCompany.cs,Create,The method has 5 parameters. Parameters: company' position' description' startYear' endYear
Long Parameter List,Yammer,Session,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Session.cs,Start,The method has 5 parameters. Parameters: useProxy' address' port' username' password
Long Parameter List,Yammer,Session,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Session.cs,Login,The method has 5 parameters. Parameters: useProxy' address' port' username' password
Long Parameter List,Yammer,UserEducation,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\UserEducation.cs,Create,The method has 5 parameters. Parameters: school' degree' description' startYear' endYear
Long Identifier,Yammer,Resources,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Resources.cs,,The length of the parameter YAMMER_MESSAGES_DELETE_FAVORITE is 31.
Long Identifier,Yammer,Resources,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Resources.cs,,The length of the parameter YAMMER_SUGGESTIONS_SHOW_GROUPS is 30.
Long Identifier,Yammer,Resources,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Resources.cs,,The length of the parameter YAMMER_SUBSCRIPTIONS_SUBSCRIBE is 30.
Long Identifier,Yammer,Resources,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Resources.cs,,The length of the parameter YAMMER_SUBSCRIPTIONS_UNSUBSCRIBE is 32.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetAllMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_ALL + "?newer_than=" + id.ToString()' session)); " is 121.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetAllMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_ALL + "?older_than=" + id.ToString()' session)); " is 121.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetSentMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_SENT + "?newer_than=" + id.ToString()' session)); " is 122.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetSentMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_SENT + "?older_than=" + id.ToString()' session)); " is 122.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetReceivedMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_RECEIVED + "?newer_than=" + id.ToString()' session)); " is 126.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetReceivedMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_RECEIVED + "?older_than=" + id.ToString()' session)); " is 126.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetFollowingMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FOLLOWING + "?newer_than=" + id.ToString()' session)); " is 127.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetFollowingMessages,The length of the statement  "                return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FOLLOWING + "?older_than=" + id.ToString()' session)); " is 127.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetMessagesTaggedWith,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_TAGGED_WITH + id.ToString() + ".xml"' session)); " is 121.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,GetMessagesFavoritesOf,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FAVORITES_OF + id.ToString() + ".xml"' session)); " is 122.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,DeleteSubscriptionToUser,The length of the statement  "            string data = Yammer.HttpUtility.Delete(Resources.YAMMER_RELATIONSHIPS_DELETE + "?target_type=user" + "&target_id=" + id.ToString()' session); " is 142.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,DeleteSubscriptionToTag,The length of the statement  "            string data = Yammer.HttpUtility.Delete(Resources.YAMMER_RELATIONSHIPS_DELETE + "?target_type=tag" + "&target_id=" + id.ToString()' session); " is 141.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,ReadReferences,The length of the statement  "                ObjectType objectType = (ObjectType)Enum.Parse(Type.GetType("Yammer.ObjectType")' node.SelectSingleNode("type").InnerText.ToUpper()); " is 133.
Long Statement,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,ReadReferences,The length of the statement  "                        AddMessageReferences(messages.FindAll(delegate(Message m) { return m.SenderId.ToString() == user.Id || m.RepliedToId == user.Id; })' user); " is 139.
Long Statement,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetUsers,The length of the statement  "            this.Cache.Add("users"' users' null' DateTime.Now.AddHours(6)' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Normal' null); " is 141.
Long Statement,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetImage,The length of the statement  "                HttpWebRequest request = Yammer.HttpUtility.CreateWebRequest(Yammer.WebMethod.GET' Yammer.Session.WebProxy' url' false); " is 120.
Long Statement,Yammer,Auth,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Auth.cs,GetRequestToken,The length of the statement  "                HttpWebRequest request = Yammer.HttpUtility.CreateWebRequest(WebMethod.GET' proxy' auth.GetRequestTokenQuery(consumerKey' consumerSecret)' true); " is 145.
Long Statement,Yammer,Auth,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Auth.cs,GetAccessToken,The length of the statement  "                HttpWebRequest request = Yammer.HttpUtility.CreateWebRequest(WebMethod.POST' this.Proxy' GetAccessTokenQuery(callbackToken)' true); " is 131.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,Put,The length of the statement  "            HttpWebRequest request = CreateWebRequest(fullUrl' WebMethod.PUT' new string[] { nonce' timestamp' signature }' session); " is 121.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateAuthHeader,The length of the statement  "            //Authorization: OAuth realm=""' oauth_consumer_key="AMbmZSOP3wHm1cjfvSsRg"' oauth_signature_method="HMAC-SHA1"' oauth_signature="yLDH5eLS4uUVa3vVbNxvDX9B8aFgnwRSFla3jph9y90%26"' oauth_timestamp="1229537444"' oauth_nonce="1229537444"' oauth_version="1.0" " is 254.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateAuthHeader,The length of the statement  "            //Authorization: OAuth realm=""' oauth_consumer_key="AMbmZSOP3wHm1cjfvSsRg"' oauth_signature_method="HMAC-SHA1"' oauth_signature="yLDH5eLS4uUVa3vVbNxvDX9B8aFgnwRSFla3jph9y90%26"' oauth_timestamp="1229537444"' oauth_nonce="1229537444"' oauth_version="1.0" " is 254.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,UploadAttachments,The length of the statement  "            HttpWebRequest request = HttpUtility.CreateWebRequest(url' WebMethod.POST' nonce' timestamp' signature' beginBoundary' session); " is 128.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,UploadAttachments,The length of the statement  "            AddFileHeaders(fileNames' contentBoundary' contentDisposition' fi' ref i' ref postDataSize' ref headerLength' fileHeaders); " is 123.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,UploadAttachments,The length of the statement  "            AddFileHeaders(fileNames' contentBoundary' contentDisposition' fi' ref i' ref postDataSize' ref headerLength' fileHeaders); " is 123.
Long Statement,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,GetPostParameters,The length of the statement  "                sb.Append(contentBoundary + "\r\n" + contentDisposition + '"' + parameters.GetKey(i) + "\"\r\n\r\n" + parameters[i].ToString() + "\r\n"); " is 137.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesSentBy,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_SENT_BY + id.ToString() + ".xml"' parameters)); " is 120.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesSentBy,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_SENT_BY + id.ToString() + ".xml"' parameters)); " is 120.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesSentBy,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_SENT_BY + id.ToString() + ".xml"' parameters)); " is 120.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesTaggedWith,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_TAGGED_WITH + id.ToString() + ".xml"' parameters)); " is 124.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesTaggedWith,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_TAGGED_WITH + id.ToString() + ".xml"' parameters)); " is 124.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesTaggedWith,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_TAGGED_WITH + id.ToString() + ".xml"' parameters)); " is 124.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesInGroup,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_IN_GROUP + id.ToString() + ".xml"' parameters)); " is 121.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesInGroup,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_IN_GROUP + id.ToString() + ".xml"' parameters)); " is 121.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesInGroup,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_IN_GROUP + id.ToString() + ".xml"' parameters)); " is 121.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesFavoritesOf,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FAVORITES_OF + id.ToString() + ".xml"' parameters)); " is 125.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesFavoritesOf,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FAVORITES_OF + id.ToString() + ".xml"' parameters)); " is 125.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesFavoritesOf,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_FAVORITES_OF + id.ToString() + ".xml"' parameters)); " is 125.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,GetMessagesInThread,The length of the statement  "            return RetrieveMessages(Yammer.HttpUtility.Get(Resources.YAMMER_MESSAGES_IN_THREAD + id.ToString() + ".xml"' parameters)); " is 122.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,ReadReferences,The length of the statement  "                ObjectType objectType = (ObjectType)Enum.Parse(Type.GetType("Yammer.ObjectType")' node.SelectSingleNode("type").InnerText.ToUpper()); " is 133.
Long Statement,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,ReadReferences,The length of the statement  "                        AddMessageReferences(messages.FindAll(delegate(Message m) { return m.SenderId.ToString() == user.Id || m.RepliedToId == user.Id; })' user); " is 139.
Long Statement,Yammer,Relationship,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Relationship.cs,DeleteRelationship,The length of the statement  "            Yammer.HttpUtility.Delete(Resources.YAMMER_RELATIONSHIPS_DELETE + id.ToString().ToLower() + ".xml?type=" + type.ToString().ToLower()); " is 134.
Long Statement,Yammer,Subscription,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Subscription.cs,DeleteSubscriptionToUser,The length of the statement  "            string data = Yammer.HttpUtility.Delete(Resources.YAMMER_RELATIONSHIPS_DELETE + "?target_type=user" + "&target_id=" + id.ToString()); " is 133.
Long Statement,Yammer,Subscription,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Subscription.cs,DeleteSubscriptionToTag,The length of the statement  "            string data = Yammer.HttpUtility.Delete(Resources.YAMMER_RELATIONSHIPS_DELETE + "?target_type=tag" + "&target_id=" + id.ToString()); " is 132.
Long Statement,Yammer,User,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\User.cs,AddUserParam,The length of the statement  "                                    parameters.Add(name.Name' pc.Company + "'" + pc.Position + "'" + pc.Description + "'" + pc.StartYear + "'" + pc.EndYear); " is 121.
Long Statement,Yammer,Utility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Utility.cs,AddMembershipParams,The length of the statement  "                        MembershipParameterAttribute name = (MembershipParameterAttribute)MembershipParameterAttribute.GetCustomAttribute(pi' typeof(MembershipParameterAttribute)); " is 156.
Complex Conditional,Yammer,Session,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Session.cs,ValidateProxySettings,The conditional expression  "address == null || port == null || username == null || password == null"  is complex.
Complex Conditional,Yammer,Session,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Session.cs,ValidateProxySettings,The conditional expression  "address == string.Empty || port == string.Empty || username == string.Empty || password == string.Empty"  is complex.
Empty Catch Block,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The method has an empty catch block.
Magic Number,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetUsers,The following statement contains a magic number: if (System.IO.File.Exists(path))              {                  XmlSerializer serializer = new XmlSerializer(typeof(List<Yammer.User>));                  TextReader reader = new StreamReader(path);                  users = (List<Yammer.User>)serializer.Deserialize(reader);                  reader.Close();              }              else              {                  MembershipParameters mp1 = new MembershipParameters();                  mp1.PageId = 1;                  users = Yammer.User.GetAllUsers(mp1);                  if (users.Count > 49)                  {                      bool cont = true;                      int i = 2;                      while (cont)                      {                          MembershipParameters mp = new MembershipParameters();                          mp.PageId = i;                          List<User> userPage = Yammer.User.GetAllUsers(mp);                          if (userPage.Count > 0)                          {                              users.AddRange(userPage.ToArray());                              i++;                              cont = true;                          }                          else                              cont = false;                      }                                                              }                  TextWriter writer = new StreamWriter(path);                  XmlSerializer serializer = new XmlSerializer(typeof(List<Yammer.User>));                  serializer.Serialize(writer' users);                  writer.Close();              }
Magic Number,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetUsers,The following statement contains a magic number: if (System.IO.File.Exists(path))              {                  XmlSerializer serializer = new XmlSerializer(typeof(List<Yammer.User>));                  TextReader reader = new StreamReader(path);                  users = (List<Yammer.User>)serializer.Deserialize(reader);                  reader.Close();              }              else              {                  MembershipParameters mp1 = new MembershipParameters();                  mp1.PageId = 1;                  users = Yammer.User.GetAllUsers(mp1);                  if (users.Count > 49)                  {                      bool cont = true;                      int i = 2;                      while (cont)                      {                          MembershipParameters mp = new MembershipParameters();                          mp.PageId = i;                          List<User> userPage = Yammer.User.GetAllUsers(mp);                          if (userPage.Count > 0)                          {                              users.AddRange(userPage.ToArray());                              i++;                              cont = true;                          }                          else                              cont = false;                      }                                                              }                  TextWriter writer = new StreamWriter(path);                  XmlSerializer serializer = new XmlSerializer(typeof(List<Yammer.User>));                  serializer.Serialize(writer' users);                  writer.Close();              }
Magic Number,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetUsers,The following statement contains a magic number: this.Cache.Add("users"' users' null' DateTime.Now.AddHours(6)' System.Web.Caching.Cache.NoSlidingExpiration' CacheItemPriority.Normal' null);
Magic Number,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetAvatars,The following statement contains a magic number: imageList.ImageSize = new System.Drawing.Size(48' 48);
Magic Number,Yammer,Assets,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Assets.cs,GetAvatars,The following statement contains a magic number: imageList.ImageSize = new System.Drawing.Size(48' 48);
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The following statement contains a magic number: sig = oauthParams[2];
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,CreateWebRequest,The following statement contains a magic number: sig = oauthParams[2];
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,GenerateRandomString,The following statement contains a magic number: for (int i = 0; i <= intLenghtOfString; ++i)              {                  appendedChar = Convert.ToChar(Convert.ToInt32(26 * randomNumber.NextDouble()) + 65);                  randomString.Append(appendedChar);              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,GenerateRandomString,The following statement contains a magic number: for (int i = 0; i <= intLenghtOfString; ++i)              {                  appendedChar = Convert.ToChar(Convert.ToInt32(26 * randomNumber.NextDouble()) + 65);                  randomString.Append(appendedChar);              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,GetWebResponse,The following statement contains a magic number: try              {                  response = request.GetResponse();                  using (StreamReader reader = new StreamReader(response.GetResponseStream()' Encoding.UTF8))                      data = reader.ReadToEnd();                }               catch (System.Net.WebException ex)              {                  if (ex.Status != WebExceptionStatus.ConnectionClosed && ex.Status != WebExceptionStatus.KeepAliveFailure)                      throw ex;                  else                      System.Threading.Thread.Sleep(500);              }              catch (Exception ex)              {                  //System.Windows.Forms.MessageBox.Show("Error retrieving web response " + ex.Message);                  throw ex;              }              finally              {                  if (response != null)                      response.Close();              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,UploadAttachments,The following statement contains a magic number: string beginBoundary = GenerateRandomString(25);
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,UploadAttachments,The following statement contains a magic number: string beginBoundary = GenerateRandomString(25);
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The following statement contains a magic number: if (imageStream.Length > 0)              {                  byte[] header = new byte[4]; // Change size if needed.                  string[] imageHeaders = new[]{                  "\xFF\xD8"' // JPEG                  "BM"'       // BMP                  "GIF"'      // GIF                  Encoding.ASCII.GetString(new byte[]{137' 80' 78' 71})}; // PNG                    imageStream.Read(header' 0' header.Length);                    bool isImageHeader = imageHeaders.Count(str => Encoding.ASCII.GetString(header).StartsWith(str)) > 0;                  if (isImageHeader == true)                  {                      try                      {                          System.Drawing.Image.FromStream(imageStream).Dispose();                          imageStream.Close();                          return true;                      }                        catch                      {                        }                  }              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The following statement contains a magic number: if (imageStream.Length > 0)              {                  byte[] header = new byte[4]; // Change size if needed.                  string[] imageHeaders = new[]{                  "\xFF\xD8"' // JPEG                  "BM"'       // BMP                  "GIF"'      // GIF                  Encoding.ASCII.GetString(new byte[]{137' 80' 78' 71})}; // PNG                    imageStream.Read(header' 0' header.Length);                    bool isImageHeader = imageHeaders.Count(str => Encoding.ASCII.GetString(header).StartsWith(str)) > 0;                  if (isImageHeader == true)                  {                      try                      {                          System.Drawing.Image.FromStream(imageStream).Dispose();                          imageStream.Close();                          return true;                      }                        catch                      {                        }                  }              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The following statement contains a magic number: if (imageStream.Length > 0)              {                  byte[] header = new byte[4]; // Change size if needed.                  string[] imageHeaders = new[]{                  "\xFF\xD8"' // JPEG                  "BM"'       // BMP                  "GIF"'      // GIF                  Encoding.ASCII.GetString(new byte[]{137' 80' 78' 71})}; // PNG                    imageStream.Read(header' 0' header.Length);                    bool isImageHeader = imageHeaders.Count(str => Encoding.ASCII.GetString(header).StartsWith(str)) > 0;                  if (isImageHeader == true)                  {                      try                      {                          System.Drawing.Image.FromStream(imageStream).Dispose();                          imageStream.Close();                          return true;                      }                        catch                      {                        }                  }              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The following statement contains a magic number: if (imageStream.Length > 0)              {                  byte[] header = new byte[4]; // Change size if needed.                  string[] imageHeaders = new[]{                  "\xFF\xD8"' // JPEG                  "BM"'       // BMP                  "GIF"'      // GIF                  Encoding.ASCII.GetString(new byte[]{137' 80' 78' 71})}; // PNG                    imageStream.Read(header' 0' header.Length);                    bool isImageHeader = imageHeaders.Count(str => Encoding.ASCII.GetString(header).StartsWith(str)) > 0;                  if (isImageHeader == true)                  {                      try                      {                          System.Drawing.Image.FromStream(imageStream).Dispose();                          imageStream.Close();                          return true;                      }                        catch                      {                        }                  }              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,IsValidImage,The following statement contains a magic number: if (imageStream.Length > 0)              {                  byte[] header = new byte[4]; // Change size if needed.                  string[] imageHeaders = new[]{                  "\xFF\xD8"' // JPEG                  "BM"'       // BMP                  "GIF"'      // GIF                  Encoding.ASCII.GetString(new byte[]{137' 80' 78' 71})}; // PNG                    imageStream.Read(header' 0' header.Length);                    bool isImageHeader = imageHeaders.Count(str => Encoding.ASCII.GetString(header).StartsWith(str)) > 0;                  if (isImageHeader == true)                  {                      try                      {                          System.Drawing.Image.FromStream(imageStream).Dispose();                          imageStream.Close();                          return true;                      }                        catch                      {                        }                  }              }
Magic Number,Yammer,HttpUtility,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\HttpUtility.cs,WriteFile,The following statement contains a magic number: int bufferSize = 10240;
Magic Number,Yammer,Security,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Security.cs,Decrypt,The following statement contains a magic number: try {                      key = System.Text.Encoding.UTF8.GetBytes(Left(sEncryptionKey' 8));                      DESCryptoServiceProvider des = new DESCryptoServiceProvider();                      inputByteArray = Convert.FromBase64String(stringToDecrypt);                      MemoryStream ms = new MemoryStream();                      CryptoStream cs = new CryptoStream(ms' des.CreateDecryptor(key' IV)' CryptoStreamMode.Write);                      cs.Write(inputByteArray' 0' inputByteArray.Length);                      cs.FlushFinalBlock();                      System.Text.Encoding encoding = System.Text.Encoding.UTF8;                      return encoding.GetString(ms.ToArray());                  }                  catch (Exception e) {                      return e.Message;                  }
Magic Number,Yammer,Security,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Security.cs,Encrypt,The following statement contains a magic number: try {                      key = System.Text.Encoding.UTF8.GetBytes(Left(SEncryptionKey' 8));                      DESCryptoServiceProvider des = new DESCryptoServiceProvider();                      byte[] inputByteArray = Encoding.UTF8.GetBytes(stringToEncrypt);                      MemoryStream ms = new MemoryStream();                      CryptoStream cs = new CryptoStream(ms' des.CreateEncryptor(key' IV)' CryptoStreamMode.Write);                      cs.Write(inputByteArray' 0' inputByteArray.Length);                      cs.FlushFinalBlock();                      return Convert.ToBase64String(ms.ToArray());                  }                  catch (Exception e) {                      return e.Message;                  }
Magic Number,Yammer,Security,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Security.cs,GetMd5Sum,The following statement contains a magic number: byte[] unicodeText = new byte[str.Length * 2];
Missing Default,Yammer,ApiWrapper,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\ApiWrapper.cs,AddMessageReferences,The following switch statement is missing a default case: switch (ConvertReferenceType(reference' out user' out tag' out thread))                      {                          case ObjectType.USER:                              msg.References.Users.Add(user);                              break;                          case ObjectType.THREAD:                              msg.References.Thread = thread;                              break;                          case ObjectType.TAG:                              msg.References.Tags.Add(tag);                              break;                      }
Missing Default,Yammer,Message,C:\repos\kdavie_yammer.net\Yammer Framework\Yammer\Message.cs,AddMessageReferences,The following switch statement is missing a default case: switch (ConvertReferenceType(reference' out user' out tag' out thread))                      {                          case ObjectType.USER:                              msg.References.Users.Add(user);                              break;                          case ObjectType.THREAD:                              msg.References.Thread = thread;                              break;                          case ObjectType.TAG:                              msg.References.Tags.Add(tag);                              break;                      }
