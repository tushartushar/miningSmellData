Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NotificationManager.WindowsPhone,ToastNotificationContent,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationContent.cs,GetXmlDocument,Cyclomatic complexity of the method is 9
Complex Method,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,Cyclomatic complexity of the method is 8
Long Parameter List,NotificationManager,IToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\IToastNotificationManager.cs,ShowToast,The method has 8 parameters.
Long Parameter List,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The method has 8 parameters.
Long Parameter List,NotificationManager.Windows,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\Windows\ToastNotificationManager.cs,ShowToast,The method has 8 parameters.
Long Statement,NotificationManager,ToastNotificationManagerFacade,C:\repos\cj1024_RSSReader\NotificationManager\ToastNotificationManagerFacade.cs,GetInstanceForCurrentApplication,The length of the statement  "		if (App.Library.Common.DeviceInfoHelper.GetCurrentPlatform () == global::Windows.Foundation.Metadata.Platform.WindowsPhone) { " is 125.
Long Statement,NotificationManager.WindowsPhone,ToastNotificationContent,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationContent.cs,GetXmlDocument,The length of the statement  "	var toastXml = global::Windows.UI.Notifications.ToastNotificationManager.GetTemplateContent (global::Windows.UI.Notifications.ToastTemplateType.ToastText02); " is 157.
Long Statement,NotificationManager.WindowsPhone,ToastNotificationContent,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationContent.cs,GetXmlDocument,The length of the statement  "			audio.SetAttribute ("src"' string.Format ("ms-winsoundevent:Notification.{0}"' Enum.GetName (typeof(ToastAuidoType)' _auidoType))); " is 131.
Long Statement,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The length of the statement  "			global::Windows.UI.Notifications.ScheduledToastNotification toast = repeat > 0 ? new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime' TimeSpan.FromSeconds (Math.Min (3600' Math.Max (60' repeatInterval)))' repeat) : new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime); " is 330.
Long Statement,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,GetToken,The length of the statement  "		var extrainfonode = toastNode.ChildNodes.FirstOrDefault (node => EXTRANODENAME.Equals (node.NodeName' StringComparison.OrdinalIgnoreCase)); " is 139.
Long Statement,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,GetToken,The length of the statement  "			var tokenattribute = extrainfonode.Attributes.FirstOrDefault (attribute => TOKENATTRIBUTENAME.Equals (attribute.NodeName' StringComparison.OrdinalIgnoreCase)); " is 159.
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: if (repeat > 5) {  	throw new ArgumentOutOfRangeException ("repeat"' repeat' "Should Be Less Than 5");  }  
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: if (!string.IsNullOrEmpty (id) && id.Length > 15) {  	throw new ArgumentOutOfRangeException ("id"' id' "Should Be Less Than 15 Characters");  }  
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: try {  	if (delayInSecond == 0) {  		var toast = new global::Windows.UI.Notifications.ToastNotification (toastDOM);  		toast.Activated += Toast_Activated;  		toast.Dismissed += Toast_Dismissed;  		toast.Failed += Toast_Failed;  		ToastNotifier.Show (toast);  	}  	else {  		var dueTime = DateTimeOffset.Now.AddSeconds (delayInSecond);  		global::Windows.UI.Notifications.ScheduledToastNotification toast = repeat > 0 ? new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime' TimeSpan.FromSeconds (Math.Min (3600' Math.Max (60' repeatInterval)))' repeat) : new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime);  		if (!string.IsNullOrEmpty (id)) {  			toast.Id = id;  		}  		ToastNotifier.AddToSchedule (toast);  	}  }  catch (Exception) {  	throw;  }  
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: try {  	if (delayInSecond == 0) {  		var toast = new global::Windows.UI.Notifications.ToastNotification (toastDOM);  		toast.Activated += Toast_Activated;  		toast.Dismissed += Toast_Dismissed;  		toast.Failed += Toast_Failed;  		ToastNotifier.Show (toast);  	}  	else {  		var dueTime = DateTimeOffset.Now.AddSeconds (delayInSecond);  		global::Windows.UI.Notifications.ScheduledToastNotification toast = repeat > 0 ? new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime' TimeSpan.FromSeconds (Math.Min (3600' Math.Max (60' repeatInterval)))' repeat) : new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime);  		if (!string.IsNullOrEmpty (id)) {  			toast.Id = id;  		}  		ToastNotifier.AddToSchedule (toast);  	}  }  catch (Exception) {  	throw;  }  
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: if (delayInSecond == 0) {  	var toast = new global::Windows.UI.Notifications.ToastNotification (toastDOM);  	toast.Activated += Toast_Activated;  	toast.Dismissed += Toast_Dismissed;  	toast.Failed += Toast_Failed;  	ToastNotifier.Show (toast);  }  else {  	var dueTime = DateTimeOffset.Now.AddSeconds (delayInSecond);  	global::Windows.UI.Notifications.ScheduledToastNotification toast = repeat > 0 ? new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime' TimeSpan.FromSeconds (Math.Min (3600' Math.Max (60' repeatInterval)))' repeat) : new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime);  	if (!string.IsNullOrEmpty (id)) {  		toast.Id = id;  	}  	ToastNotifier.AddToSchedule (toast);  }  
Magic Number,NotificationManager.WindowsPhone,ToastNotificationManager,C:\repos\cj1024_RSSReader\NotificationManager\WindowsPhone\ToastNotificationManager.cs,ShowToast,The following statement contains a magic number: if (delayInSecond == 0) {  	var toast = new global::Windows.UI.Notifications.ToastNotification (toastDOM);  	toast.Activated += Toast_Activated;  	toast.Dismissed += Toast_Dismissed;  	toast.Failed += Toast_Failed;  	ToastNotifier.Show (toast);  }  else {  	var dueTime = DateTimeOffset.Now.AddSeconds (delayInSecond);  	global::Windows.UI.Notifications.ScheduledToastNotification toast = repeat > 0 ? new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime' TimeSpan.FromSeconds (Math.Min (3600' Math.Max (60' repeatInterval)))' repeat) : new global::Windows.UI.Notifications.ScheduledToastNotification (toastDOM' dueTime);  	if (!string.IsNullOrEmpty (id)) {  		toast.Id = id;  	}  	ToastNotifier.AddToSchedule (toast);  }  
