Implementation smell,Namespace,Class,File,Method,Description
Complex Method,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,UpdateDatabase,Cyclomatic complexity of the method is 8
Long Parameter List,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The method has 5 parameters.
Long Parameter List,dbsc.Core.ImportTableSpecification,TableWithSchemaSpecificationWithCustomSelect,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableWithSchemaSpecificationWithCustomSelect.cs,TableWithSchemaSpecificationWithCustomSelect,The method has 5 parameters.
Long Identifier,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,ValidateUpdateOptionsForCheckoutAndUpdate,The length of the parameter whyCheckoutAndUpdateNotSupported is 32.
Long Statement,dbsc.Core,ImportTableCalculator,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableCalculator.cs,GetTablesToImport,The length of the statement  "		ICollection<TTableSpec> nonMatchingNonWildcardSpecs = tableSpecs.GetNonWildcardTableSpecsThatDontExist (eligibleTables); " is 120.
Long Statement,dbsc.Core,ImportTableCalculator,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableCalculator.cs,GetTablesToImport,The length of the statement  "			throw new DbscException (string.Format ("The following tables were specified to be imported but do not exist: {0}"' string.Join ("' "' nonMatchingNonWildcardSpecs.Select (spec => GetTableFromNonWildcardSpec (spec' tableSpecs))))); " is 230.
Long Statement,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,Clone,The length of the statement  "	DbConnectionInfo clone = new DbConnectionInfo (server: Server' database: Database' port: Port' username: Username' password: Password); " is 135.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,Checkout,The length of the statement  "	options = options.CloneCheckoutOptionsWithDatabaseNamesFilledIn<TConnectionSettings' TCheckoutSettings' TImportSettings' TUpdateSettings> (scriptStack.MasterDatabaseName); " is 171.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,ValidateUpdateOptionsForCheckoutAndUpdate,The length of the statement  "		throw new DbscException (string.Format ("Cannot update to r{0} because there is no upgrade script for r{0}."' options.Revision.Value)); " is 135.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,ValidateUpdateOptionsForCheckoutAndUpdate,The length of the statement  "			throw new DbscException (string.Format ("Source database {0} was not created with dbsc and cannot be imported from or you do not have permission to it."' options.ImportOptions.SourceDatabase.ToDescriptionString ())); " is 216.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,ShowRevision,The length of the statement  "		settings = settings.CloneCheckoutOptionsWithDatabaseNamesFilledIn<TConnectionSettings' TCheckoutSettings' TImportSettings' TUpdateSettings> (scriptStack.MasterDatabaseName); " is 173.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,Update,The length of the statement  "	options = options.CloneUpdateOptionsWithDatabaseNamesFilledIn<TConnectionSettings' TImportSettings' TUpdateSettings> (scriptStack.MasterDatabaseName); " is 150.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,ValidateUpdateOptionsForUpdate,The length of the statement  "		throw new DbscException (string.Format ("Target database {0} was not created with dbsc and cannot be updated."' options.TargetDatabase.ToDescriptionString ())); " is 160.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,UpdateDatabase,The length of the statement  "	IEnumerable<int> revisionsToUpgradeTo = scriptStack.ScriptsByRevision.Keys.OrderBy (r => r).Where (r => r > versionBeforeUpdate); " is 129.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,UpdateDatabase,The length of the statement  "			throw new DbscException (string.Format ("Cannot update to r{0} because the database is already at r{1}."' options.Revision.Value' versionBeforeUpdate)); " is 152.
Long Statement,dbsc.Core,DbscEngine,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbscEngine.cs,UpdateDatabase,The length of the statement  "			throw new DbscException (string.Format ("Cannot update to r{0} because there is no upgrade script for r{0}."' options.Revision.Value)); " is 135.
Long Statement,dbsc.Core,ImportSettingsWithTableList,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportSettingsWithTableList.cs,Clone,The length of the statement  "	ImportSettingsWithTableList<TConnectionSettings> clone = new ImportSettingsWithTableList<TConnectionSettings> ((TConnectionSettings)SourceDatabase.Clone ()); " is 157.
Long Statement,dbsc.Core,StringExtensions,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\StringExtensions.cs,QuoteCommandLineArgWindows,The length of the statement  "	escapedArg = backslashSequenceBeforeQuotes.Replace (arg' match => new string ('\\'' match.Groups [1].Length * 2) + "\""); " is 121.
Long Statement,dbsc.Core,Utils,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Utils.cs,ReadPassword,The length of the statement  "	// stdout being redirected affecting the value of Console.ReadKey is a bug (https://bugzilla.xamarin.com/show_bug.cgi?id=12552). " is 128.
Long Statement,dbsc.Core.ImportTableSpecification,TableWithoutSchemaSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableWithoutSchemaSpecificationCollection.cs,Clone,The length of the statement  "	return new TableWithoutSchemaSpecificationCollection<TTable> (new List<TableWithoutSchemaSpecification> (TableSpecifications)); " is 127.
Long Statement,dbsc.Core.ImportTableSpecification,TableWithSchemaSpecificationWithCustomSelectCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableWithSchemaSpecificationWithCustomSelectCollection.cs,Clone,The length of the statement  "	return new TableWithSchemaSpecificationWithCustomSelectCollection<TTable> (new List<TableWithSchemaSpecificationWithCustomSelect> (TableSpecifications)' DefaultSchema); " is 168.
Long Statement,dbsc.Core.ImportTableSpecification,TableSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableSpecificationCollection.cs,GetTablesToImport,The length of the statement  "	List<TableAndRule<TTable' TTableSpecification>> tablesToImport = new List<TableAndRule<TTable' TTableSpecification>> (); " is 120.
Long Statement,dbsc.Core.ImportTableSpecification,TableSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableSpecificationCollection.cs,GetNonWildcardTableSpecsThatDontExist,The length of the statement  "	List<TTableSpecification> nonWildcardTableSpecs = TableSpecifications.Where (spec => !spec.Negated && !spec.HasWildcards).ToList (); " is 132.
Long Statement,dbsc.Core.ImportTableSpecification,TableSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableSpecificationCollection.cs,GetNonWildcardTableSpecsThatDontExist,The length of the statement  "	// O(n^2) :-\ Ehhh' you shouldn't be specifying a large number of tables anyway' wildcards and exclusions should keeps import lists short " is 137.
Long Statement,dbsc.Core.ImportTableSpecification,TableSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableSpecificationCollection.cs,GetNonWildcardTableSpecsThatDontExist,The length of the statement  "		bool found = eligibleTables.Any (table => MatchTableWithSpec (nonWildcardTableSpec' table) == MatchResult.PositiveMatch); " is 121.
Long Statement,dbsc.Core.ImportTableSpecification,TableWithSchemaSpecificationCollection,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableWithSchemaSpecificationCollection.cs,Clone,The length of the statement  "	return new TableWithSchemaSpecificationCollection<TTable> (new List<TableWithSchemaSpecification> (TableSpecifications)' DefaultSchema); " is 136.
Long Statement,dbsc.Core.ImportTableSpecification,TableWithSchemaSpecification,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\TableWithSchemaSpecification.cs,Match,The length of the statement  "		TableSpecificationFragment defaultSchemaFrag = new TableSpecificationFragment (defaultSchema' DefaultSchemaIsCaseSensitive); " is 124.
Long Statement,dbsc.Core.Options,BasicOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\BasicOptionBundle.cs,AddToOptionSet,The length of the statement  "	optionSet.Add ("v|version"' "Show version information and exit."' argExistence => ShowVersion = (argExistence != null)); " is 120.
Long Statement,dbsc.Core.Options,BasicOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\BasicOptionBundle.cs,AddToOptionSet,The length of the statement  "	optionSet.Add ("r="' "Revision number to check out or update up to. If not specified' goes up to the highest available revision."' arg => Revision = Utils.ParseIntOption (arg' "revision")); " is 189.
Long Statement,dbsc.Core.Options,BasicOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\BasicOptionBundle.cs,SetCommand,The length of the statement  "		throw new DbscOptionException (string.Format ("{0} is not a supported operation. Use \"checkout\" or \"update\"."' arg)); " is 121.
Long Statement,dbsc.Core.Options,DBCreateTemplateOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\DBCreateTemplateOptionBundle.cs,PostValidate,The length of the statement  "			throw new DbscOptionException (string.Format ("Error reading DB creation template {0}: {1}."' TemplatePath' ex.Message)' ex); " is 125.
Long Statement,dbsc.Core.Options,ImportTableListFileOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\ImportTableListFileOptionBundle.cs,PostValidate,The length of the statement  "			throw new DbscOptionException (string.Format ("Error reading import table list {0}: {1}"' ImportTableListPath' ex.Message)' ex); " is 128.
Long Statement,dbsc.Core.Options,SourceDBOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\SourceDBOptionBundle.cs,GetDefaultSourceDbServerOptionText,The length of the statement  "	string sourceDbServerMessage = string.Format ("Database server to import data from. Only specify this option if you wish to import data. Data will be imported when the target database's revision matches the source database's revision. The source database must have been created using {0}."' programName); " is 304.
Long Statement,dbsc.Core.Options,SourceDBPortOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\SourceDBPortOptionBundle.cs,AddToOptionSet,The length of the statement  "	optionSet.Add ("sourcePort|sourceDbPort="' "Port number of the source database to connect to. Defaults to the normal port."' arg => SourceDBPort = Utils.ParseIntOption (arg' "sourcePort")); " is 189.
Long Statement,dbsc.Core.Options,ImportTableListOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\ImportTableListOptionBundle.cs,PostValidate,The length of the statement  "			throw new Exception (string.Format ("Error reading import table list file {0}: {1}"' ImportTableListPath' ex.Message)' ex); " is 123.
Long Statement,dbsc.Core.Options,TargetDBPortOptionBundle,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\Options\TargetDBPortOptionBundle.cs,AddToOptionSet,The length of the statement  "	optionSet.Add ("port|targetDbPort="' "Port number of the target database to connect to. Defaults to the normal port."' arg => TargetDBPort = Utils.ParseIntOption (arg' "port")); " is 177.
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ConnectTimeoutInSeconds = 10;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ScriptTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ScriptTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ScriptTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ScriptTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: CommandTimeoutInSeconds = 15;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ImportTableTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ImportTableTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ImportTableTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,DbConnectionInfo,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\DbConnectionInfo.cs,DbConnectionInfo,The following statement contains a magic number: ImportTableTimeoutInSeconds = 60 * 60 * 24 * 7;  
Magic Number,dbsc.Core,StringExtensions,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\StringExtensions.cs,QuoteCommandLineArgWindows,The following statement contains a magic number: escapedArg = backslashSequenceBeforeQuotes.Replace (arg' match => new string ('\\'' match.Groups [1].Length * 2) + "\"");  
Magic Number,dbsc.Core,StringExtensions,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\StringExtensions.cs,QuoteCommandLineArgWindows,The following statement contains a magic number: escapedArg = backslashSequenceAtEnd.Replace (escapedArg' match => new string ('\\'' match.Groups [1].Length * 2));  
Magic Number,dbsc.Core.ImportTableSpecification,StringOrWildcard,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\StringOrWildcard.cs,GetHashCode,The following statement contains a magic number: unchecked {  	hash += 17 * this.Type.GetHashCode ();  	if (this.String != null) {  		hash += this.String.GetHashCode ();  	}  }  
Magic Number,dbsc.Core.ImportTableSpecification,StringOrWildcard,F:\newReposMay17\LHCGreg_dbsc\dbsc.Core\ImportTableSpecification\StringOrWildcard.cs,GetHashCode,The following statement contains a magic number: hash += 17 * this.Type.GetHashCode ();  
