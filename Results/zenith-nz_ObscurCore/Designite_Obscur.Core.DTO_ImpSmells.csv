Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,SequenceEqualConstantTime,Cyclomatic complexity of the method is 9
Long Parameter List,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,CopyBytes,The method has 5 parameters. Parameters: src' srcOffset' dst' dstOffset' length
Long Parameter List,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,SequenceEqualConstantTime,The method has 5 parameters. Parameters: x' xOffset' y' yOffset' length
Long Parameter List,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,InternalConstantTimeEquals,The method has 5 parameters. Parameters: x' xOffset' y' yOffset' length
Long Statement,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,Equals,The length of the statement  "                FunctionConfiguration == null ? other.FunctionConfiguration == null : FunctionConfiguration.SequenceEqualShortCircuiting(other.FunctionConfiguration) &&  " is 152.
Long Statement,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,Equals,The length of the statement  "                AdditionalData == null ? other.AdditionalData == null : AdditionalData.SequenceEqualShortCircuiting(other.AdditionalData) &&  " is 124.
Long Statement,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,Equals,The length of the statement  "                   AdditionalData == null ? other.AdditionalData == null : AdditionalData.SequenceEqualShortCircuiting(other.AdditionalData) &&  " is 124.
Long Statement,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,Equals,The length of the statement  "                   ConfirmationCanary == null ? other.ConfirmationCanary == null : ConfirmationCanary.SequenceEqualShortCircuiting(other.ConfirmationCanary); " is 138.
Long Statement,Obscur.Core.DTO,PayloadItem,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\PayloadItem.cs,GetHashCode,The length of the statement  "                //hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0); " is 125.
Long Statement,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The length of the statement  "                hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0); " is 123.
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,AuthenticationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\AuthenticationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionType.GetHashCode();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (KeySizeBits.HasValue ? KeySizeBits.Value.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Salt != null ? Salt.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (OutputSizeBits.HasValue ? OutputSizeBits.Value.GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,CipherConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\CipherConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Type.GetHashCode();                  hashCode = (hashCode * 397) ^ CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ KeySizeBits;                  hashCode = (hashCode * 397) ^ (InitialisationVector != null ? InitialisationVector.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ModeName != null ? ModeName.ToLowerInvariant().GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (BlockSizeBits != null ? BlockSizeBits.Value : 0);                  hashCode = (hashCode * 397) ^ (PaddingName != null ? PaddingName.ToLowerInvariant().GetHashCode() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound1,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound1.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ GX1.GetHashCode();                  hashCode = (hashCode * 397) ^ X1V.GetHashCode();                  hashCode = (hashCode * 397) ^ X1R.GetHashCode();                  hashCode = (hashCode * 397) ^ GX2.GetHashCode();                  hashCode = (hashCode * 397) ^ X2V.GetHashCode();                  hashCode = (hashCode * 397) ^ X2R.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound2,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound2.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ A.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sV.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sR.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound2,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound2.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ A.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sV.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sR.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECJpakeRound2,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECJpakeRound2.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ A.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sV.GetHashCode();                  hashCode = (hashCode * 397) ^ X2sR.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PublicComponent.GetHashCode();                  hashCode = (hashCode * 397) ^ CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PublicComponent.GetHashCode();                  hashCode = (hashCode * 397) ^ CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PublicComponent.GetHashCode();                  hashCode = (hashCode * 397) ^ CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PublicComponent.GetHashCode();                  hashCode = (hashCode * 397) ^ CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PublicComponent.GetHashCode();                  hashCode = (hashCode * 397) ^ CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKeypair,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKeypair.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedPublicKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (EncodedPrivateKey != null ? EncodedPrivateKey.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKeypair,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKeypair.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedPublicKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (EncodedPrivateKey != null ? EncodedPrivateKey.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKeypair,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKeypair.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedPublicKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (EncodedPrivateKey != null ? EncodedPrivateKey.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKeypair,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKeypair.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedPublicKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (EncodedPrivateKey != null ? EncodedPrivateKey.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ECKeypair,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ECKeypair.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CurveProviderName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ CurveName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ EncodedPublicKey.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (EncodedPrivateKey != null ? EncodedPrivateKey.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,InternalConstantTimeEquals,The following statement contains a magic number: return (1 & (((uint)differentbits - 1) >> 8));
Magic Number,Obscur.Core.DTO,ExtensionMethods,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ExtensionMethods.cs,GetHashCodeExt,The following statement contains a magic number: while (--i >= 0) {                  hc *= 257;                  hc ^= data[i];              }
Magic Number,Obscur.Core.DTO,JpakeRound3,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\JpakeRound3.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = ParticipantId.GetHashCode();                  hashCode = (hashCode * 397) ^ VerifiedOutput.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,KeyDerivationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\KeyDerivationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Salt.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,KeyDerivationConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\KeyDerivationConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Salt.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (FunctionConfiguration != null ? FunctionConfiguration.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Manifest,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Manifest.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = PayloadItems.GetHashCode();                  hashCode = (hashCode * 397) ^ PayloadConfiguration.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ManifestHeader,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ManifestHeader.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FormatVersion.GetHashCode();                  hashCode = (hashCode * 397) ^ CryptographyScheme.GetHashCode();                  hashCode = (hashCode * 397) ^                             (CryptographySchemeConfiguration != null ? CryptographySchemeConfiguration.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ManifestHeader,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ManifestHeader.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FormatVersion.GetHashCode();                  hashCode = (hashCode * 397) ^ CryptographyScheme.GetHashCode();                  hashCode = (hashCode * 397) ^                             (CryptographySchemeConfiguration != null ? CryptographySchemeConfiguration.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,PayloadConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\PayloadConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SchemeName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (SchemeConfiguration != null ? SchemeConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ EntropyScheme.GetHashCode();                  hashCode = (hashCode * 397) ^ (EntropySchemeData != null ? EntropySchemeData.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,PayloadConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\PayloadConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SchemeName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (SchemeConfiguration != null ? SchemeConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ EntropyScheme.GetHashCode();                  hashCode = (hashCode * 397) ^ (EntropySchemeData != null ? EntropySchemeData.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,PayloadConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\PayloadConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SchemeName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (SchemeConfiguration != null ? SchemeConfiguration.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ EntropyScheme.GetHashCode();                  hashCode = (hashCode * 397) ^ (EntropySchemeData != null ? EntropySchemeData.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Pbkdf2Configuration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Pbkdf2Configuration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = FunctionName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ Iterations.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,RangeConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\RangeConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  return (Minimum * 397) ^ Maximum.GetHashCode();              }
Magic Number,Obscur.Core.DTO,ScryptConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ScryptConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Iterations.GetHashCode();                  hashCode = (hashCode * 397) ^ Blocks.GetHashCode();                  hashCode = (hashCode * 397) ^ Parallelism.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,ScryptConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\ScryptConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Iterations.GetHashCode();                  hashCode = (hashCode * 397) ^ Blocks.GetHashCode();                  hashCode = (hashCode * 397) ^ Parallelism.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,StreamCipherCsprngConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\StreamCipherCsprngConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (Key != null ? Key.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,StreamCipherCsprngConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\StreamCipherCsprngConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = CipherName.ToLowerInvariant().GetHashCode();                  hashCode = (hashCode * 397) ^ (Key != null ? Key.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ (Nonce != null ? Nonce.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Key.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ UsePermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ ContextPermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Key.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ UsePermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ ContextPermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Key.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ UsePermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ ContextPermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricKey,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricKey.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = Key.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (AdditionalData != null ? AdditionalData.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ UsePermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ ContextPermissions.GetHashCode();                  hashCode = (hashCode * 397) ^ (ConfirmationCanary != null ? ConfirmationCanary.GetHashCodeExt() : 0);                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^                             (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^                             (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^                             (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^                             (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,SymmetricManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\SymmetricManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^                             (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
Magic Number,Obscur.Core.DTO,Um1HybridManifestCryptographyConfiguration,C:\repos\zenith-nz_ObscurCore\Obscur.Core.DTO\Um1HybridManifestCryptographyConfiguration.cs,GetHashCode,The following statement contains a magic number: unchecked {                  int hashCode = SymmetricCipher.GetHashCode();                  hashCode = (hashCode * 397) ^ Authentication.GetHashCode();                  hashCode = (hashCode * 397) ^ AuthenticationVerifiedOutput.GetHashCodeExt();                  hashCode = (hashCode * 397) ^ (KeyConfirmation != null ? KeyConfirmation.GetHashCode() : 0);                  hashCode = (hashCode * 397) ^ (KeyConfirmationVerifiedOutput != null ? KeyConfirmationVerifiedOutput.GetHashCodeExt() : 0);                  hashCode = (hashCode * 397) ^ KeyDerivation.GetHashCode();                  hashCode = (hashCode * 397) ^ EphemeralKey.GetHashCode();                  return hashCode;              }
