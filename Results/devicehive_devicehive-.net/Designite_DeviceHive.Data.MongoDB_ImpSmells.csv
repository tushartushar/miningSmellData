Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,QueryWithGridInterval,The method has 364 lines of code.
Complex Method,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,QueryWithGridInterval,Cyclomatic complexity of the method is 16
Complex Method,DeviceHive.Data.MongoDB,DeviceRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceRepository.cs,Save,Cyclomatic complexity of the method is 8
Long Statement,DeviceHive.Data.MongoDB,AccessKeyRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\AccessKeyRepository.cs,Save,The length of the statement  "	_mongo.OAuthGrants.Update (Query<OAuthGrant>.EQ (e => e.AccessKeyID' accessKey.ID)' Update<OAuthGrant>.Set (e => e.AccessKey' accessKey)' new MongoUpdateOptions { " is 162.
Long Statement,DeviceHive.Data.MongoDB,AccessKeyRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\AccessKeyRepository.cs,Cleanup,The length of the statement  "	_mongo.AccessKeys.Remove (Query.And (Query<AccessKey>.EQ (e => e.Type' (int)AccessKeyType.Session)' Query<AccessKey>.LT (e => e.ExpirationDate' timestamp))); " is 157.
Long Statement,DeviceHive.Data.MongoDB,DeviceClassRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceClassRepository.cs,Get,The length of the statement  "	return _mongo.DeviceClasses.FindOne (Query.And (Query<DeviceClass>.EQ (e => e.Name' name)' Query<DeviceClass>.EQ (e => e.Version' version))); " is 141.
Long Statement,DeviceHive.Data.MongoDB,DeviceClassRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceClassRepository.cs,Save,The length of the statement  "	_mongo.Devices.Update (Query<Device>.EQ (e => e.DeviceClassID' deviceClass.ID)' Update<Device>.Set (d => d.DeviceClass' deviceClass)' new MongoUpdateOptions { " is 158.
Long Statement,DeviceHive.Data.MongoDB,DeviceClassRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceClassRepository.cs,Delete,The length of the statement  "		throw new InvalidOperationException ("Could not delete a device class because there are one or several devices associated with it"); " is 132.
Long Statement,DeviceHive.Data.MongoDB,DeviceCommandRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceCommandRepository.cs,Save,The length of the statement  "			Update = Update.Combine (command.Timestamp == default(DateTime) ? Update<DeviceCommand>.CurrentDate (e => e.Timestamp) : Update<DeviceCommand>.Set (e => e.Timestamp' command.Timestamp)' Update<DeviceCommand>.Set (e => e.Command' command.Command)' Update.Set ("Parameters"' command.Parameters == null ? BsonNull.Value : BsonSerializer.Deserialize<BsonValue> (command.Parameters))' Update<DeviceCommand>.Set (e => e.DeviceID' command.DeviceID)' Update<DeviceCommand>.Set (e => e.UserID' command.UserID)' Update<DeviceCommand>.Set (e => e.Lifetime' command.Lifetime)' Update<DeviceCommand>.Set (e => e.Status' command.Status)' Update<DeviceCommand>.Set (e => e.Result' command.Result))' " is 683.
Long Statement,DeviceHive.Data.MongoDB,DeviceEquipmentRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceEquipmentRepository.cs,GetByDeviceAndCode,The length of the statement  "	return _mongo.DeviceEquipment.FindOne (Query.And (Query<DeviceEquipment>.EQ (e => e.DeviceID' deviceId)' Query<DeviceEquipment>.EQ (e => e.Code' code))); " is 153.
Long Statement,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,Save,The length of the statement  "			Update = Update.Combine (notification.Timestamp == default(DateTime) ? Update<DeviceNotification>.CurrentDate (e => e.Timestamp) : Update<DeviceNotification>.Set (e => e.Timestamp' notification.Timestamp)' Update<DeviceNotification>.Set (e => e.Notification' notification.Notification)' Update.Set ("Parameters"' notification.Parameters == null ? BsonNull.Value : BsonSerializer.Deserialize<BsonValue> (notification.Parameters))' Update<DeviceNotification>.Set (e => e.DeviceID' notification.DeviceID))' " is 503.
Long Statement,DeviceHive.Data.MongoDB,DeviceRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceRepository.cs,GetByUser,The length of the statement  "	var networkIds = _mongo.UserNetworks.AsQueryable ().Where (e => e.UserID == userId).Select (e => (int?)e.NetworkID).ToArray (); " is 127.
Long Statement,DeviceHive.Data.MongoDB,DeviceRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceRepository.cs,GetDisconnectedDevices,The length of the statement  "	var devices = _mongo.Devices.AsQueryable ().Where (d => d.Status != offlineStatus).Where (d => d.DeviceClass.OfflineTimeout != null).Select (d => new { " is 151.
Long Statement,DeviceHive.Data.MongoDB,NetworkRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\NetworkRepository.cs,Save,The length of the statement  "	_mongo.Devices.Update (Query<Device>.EQ (e => e.NetworkID' network.ID)' Update<Device>.Set (d => d.Network' network)' new MongoUpdateOptions { " is 142.
Long Statement,DeviceHive.Data.MongoDB,NetworkRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\NetworkRepository.cs,Delete,The length of the statement  "		throw new InvalidOperationException ("Could not delete a network because there are one or several devices associated with it"); " is 127.
Long Statement,DeviceHive.Data.MongoDB,OAuthClientRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\OAuthClientRepository.cs,Save,The length of the statement  "	_mongo.OAuthGrants.Update (Query<OAuthGrant>.EQ (e => e.ClientID' oauthClient.ID)' Update<OAuthGrant>.Set (e => e.Client' oauthClient)' new MongoUpdateOptions { " is 160.
Long Statement,DeviceHive.Data.MongoDB,UserNetworkRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\UserNetworkRepository.cs,Get,The length of the statement  "	var userNetwork = _mongo.UserNetworks.FindOne (Query.And (Query<UserNetwork>.EQ (e => e.UserID' userId)' Query<UserNetwork>.EQ (e => e.NetworkID' networkId))); " is 159.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("user_networks").CreateIndex (IndexKeys.Ascending ("UserID"' "NetworkID")' IndexOptions.SetUnique (true)); " is 141.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("networks").CreateIndex (IndexKeys.Ascending ("Name")' IndexOptions.SetUnique (true)); " is 121.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("device_classes").CreateIndex (IndexKeys.Ascending ("Name"' "Version")' IndexOptions.SetUnique (true)); " is 138.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("devices").CreateIndex (IndexKeys.Ascending ("GUID")' IndexOptions.SetUnique (true)); " is 120.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("devices").CreateIndex (IndexKeys.Ascending ("DeviceClass.Name"' "DeviceClass.Version")); " is 124.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_1,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_1.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("device_equipment").CreateIndex (IndexKeys.Ascending ("DeviceID"' "Code")' IndexOptions.SetUnique (true)); " is 141.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_2,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_2.cs,Up,The length of the statement  "		devices.Update (Query.EQ ("DeviceClassID"' deviceClass ["_id"])' Update.Set ("DeviceClass"' deviceClass)' new MongoUpdateOptions { " is 130.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_3,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_3.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("access_keys").CreateIndex (IndexKeys.Ascending ("Key")' IndexOptions.SetUnique (true)); " is 123.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_4,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_4.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("oauth_clients").CreateIndex (IndexKeys.Ascending ("OAuthID")' IndexOptions.SetUnique (true)); " is 129.
Long Statement,DeviceHive.Data.MongoDB.Migrations,Migration_4,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\Migrations\Migration_4.cs,Up,The length of the statement  "	Connection.Database.GetCollection ("oauth_grants").CreateIndex (IndexKeys.Ascending ("AuthCode")' IndexOptions.SetUnique (true)); " is 129.
Magic Number,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,QueryWithGridInterval,The following statement contains a magic number: operations.Add (new BsonDocument {  	{  		"$project"'  		new BsonDocument {  			{  				"DeviceID"'  				1  			}'  			{  				"Timestamp"'  				1  			}'  			{  				"Notification"'  				1  			}'  			{  				"Parameters"'  				1  			}'  			{  				"tsmod"'  				new BsonDocument {  					{  						"$mod"'  						new BsonArray {  							new BsonDocument {  								{  									"$add"'  									new BsonArray {  										new BsonDocument {  											{  												"$subtract"'  												new BsonArray {  													"$Timestamp"'  													periodStart  												}  											}  										}'  										periodMilliseconds  									}  								}  							}'  							new BsonInt64 (1000 * filter.GridInterval.Value)  						}  					}  				}  			}  		}  	}  });  
Duplicate Code,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,QueryWithGridInterval,The method contains a code clone-set at the following line numbers (starting from the method definition): ((105' 129)' (156' 180))
Missing Default,DeviceHive.Data.MongoDB,DeviceNotificationRepository,F:\newReposMay17\devicehive_devicehive-.net\src\Server\DeviceHive.Data.MongoDB\DeviceNotificationRepository.cs,QueryWithGridInterval,The following switch statement is missing a default case: switch (filter.SortField) {  case DeviceNotificationSortField.Timestamp:  	operations.Add (new BsonDocument {  		{  			"$sort"'  			new BsonDocument {  				{  					"Timestamp"'  					sortOrder  				}  			}  		}  	});  	break;  case DeviceNotificationSortField.Notification:  	operations.Add (new BsonDocument {  		{  			"$sort"'  			new BsonDocument {  				{  					"Notification"'  					sortOrder  				}'  				{  					"Timestamp"'  					sortOrder  				}  			}  		}  	});  	break;  }  
