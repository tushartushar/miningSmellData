Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,HandleMessage,Cyclomatic complexity of the method is 8
Complex Method,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,SetAvailableChannels,Cyclomatic complexity of the method is 8
Long Parameter List,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,AddSubscriptionAsync,The method has 5 parameters.
Long Parameter List,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,PollNotificationsAsync,The method has 5 parameters.
Long Parameter List,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,PollCommandsAsync,The method has 5 parameters.
Long Parameter List,DeviceHive.Client,Subscription,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Internal\Subscription.cs,Subscription,The method has 5 parameters.
Long Statement,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,AddNotificationSubscriptionAsync,The length of the statement  "	return await AddSubscriptionAsync (SubscriptionType.Notification' deviceGuids' notificationNames' obj => callback ((DeviceNotification)obj)' timestamp); " is 152.
Long Statement,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,AddCommandSubscriptionAsync,The length of the statement  "	return await AddSubscriptionAsync (SubscriptionType.Command' deviceGuids' commandNames' obj => callback ((DeviceCommand)obj)' timestamp); " is 137.
Long Statement,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,EnsureConnectedAsync,The length of the statement  "		throw new InvalidOperationException ("The channel is not active' please call the Open method and wait until it completes!"); " is 124.
Long Statement,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,OpenAsync,The length of the statement  "		throw new InvalidOperationException ("The connection is already open' please call the CloseAsync method before opening it again!"); " is 131.
Long Statement,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,PollNotificationTaskMethodAsync,The length of the statement  "			var notifications = await PollNotificationsAsync (subscription.DeviceGuids' subscription.EventNames' subscription.Timestamp' subscriptionTask.IsLastPollFailed ? (int?)0 : null' cancellationToken); " is 196.
Long Statement,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,PollCommandTaskMethodAsync,The length of the statement  "			var commands = await PollCommandsAsync (subscription.DeviceGuids' subscription.EventNames' subscription.Timestamp' subscriptionTask.IsLastPollFailed ? (int?)0 : null' cancellationToken); " is 186.
Long Statement,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,PollCommandUpdateAsync,The length of the statement  "		var command = await RestClient.GetAsync<Command> (string.Format ("device/{0}/command/{1}/poll"' deviceGuid' commandId)' token); " is 127.
Long Statement,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,OpenAsync,The length of the statement  "			throw new InvalidOperationException ("The WebSocket connection is already open' please call the CloseAsync method before opening it again!"); " is 141.
Long Statement,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,SendNotificationAsync,The length of the statement  "	var result = await SendRequestAsync ("notification/insert"' new JProperty ("deviceGuid"' deviceGuid)' new JProperty ("notification"' Serialize (notification))); " is 160.
Long Statement,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,SendCommandAsync,The length of the statement  "	var result = await SendRequestAsync ("command/insert"' new JProperty ("deviceGuid"' deviceGuid)' new JProperty ("command"' Serialize (command))); " is 145.
Long Statement,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,UpdateCommandAsync,The length of the statement  "	await SendRequestAsync ("command/update"' new JProperty ("deviceGuid"' deviceGuid)' new JProperty ("commandId"' command.Id)' new JProperty ("command"' Serialize (update))); " is 172.
Long Statement,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,HandleConnectionClose,The length of the statement  "	var exception = new DeviceHiveException (State == ChannelState.Connected ? "WebSocket connection was closed!" : "Could not open a WebSocket connection!"); " is 154.
Long Statement,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,GetNotificationsAsync,The length of the statement  "	return await _restClient.GetAsync<List<Notification>> (string.Format ("device/{0}/notification"' deviceGuid) + RestClient.MakeQueryString (filter)); " is 148.
Long Statement,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,GetCommandsAsync,The length of the statement  "	return await _restClient.GetAsync<List<Command>> (string.Format ("device/{0}/command"' deviceGuid) + RestClient.MakeQueryString (filter)); " is 138.
Long Statement,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,SetAvailableChannels,The length of the statement  "		throw new InvalidOperationException ("Could not set available channels after a channel has been opened! " + "Please call the SetAvailableChannels before making any actions with DeviceHive."); " is 191.
Long Statement,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,OpenChannelAsync,The length of the statement  "				throw new DeviceHiveException ("There are no channels that could be used to connect to the server! " + "Please ensure a compatible channel is registered via a call to the SetAvailableChannels method."); " is 202.
Long Statement,DeviceHive.Client,AsyncLock,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Internal\AsyncLock.cs,LockAsync,The length of the statement  "	return wait.IsCompleted ? m_releaser : wait.ContinueWith ((_' state) => new Releaser ((AsyncLock)state)' this' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 204.
Long Statement,DeviceHive.Client,RestClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\RestClient.cs,MakeQueryString,The length of the statement  "	return "?" + string.Join ("&"' jObject.Properties ().Select (p => p.Name + "=" + Uri.EscapeDataString (p.Value.ToString ()))); " is 126.
Long Statement,DeviceHive.Client,RestClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\RestClient.cs,ValidateResponseStatusAsync,The length of the statement  "	if (response.StatusCode == HttpStatusCode.BadRequest || response.StatusCode == HttpStatusCode.Forbidden || response.StatusCode == HttpStatusCode.NotFound || response.StatusCode == HttpStatusCode.MethodNotAllowed) { " is 214.
Long Statement,DeviceHive.Client,RestClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\RestClient.cs,ValidateResponseStatusAsync,The length of the statement  "		var message = errorDetail != null && !string.IsNullOrEmpty (errorDetail.Message) ? "DeviceHive server returns an error: " + errorDetail.Message : "DeviceHive server returns an unspecified error!"; " is 196.
Long Statement,DeviceHive.Client,RestClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\RestClient.cs,ReadAsAsync,The length of the statement  "		throw new DeviceHiveException ("DeviceHive server returned content with unexpected content type: " + content.Headers.ContentType.MediaType); " is 140.
Complex Conditional,DeviceHive.Client,RestClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\RestClient.cs,ValidateResponseStatusAsync,The conditional expression  "response.StatusCode == HttpStatusCode.BadRequest || response.StatusCode == HttpStatusCode.Forbidden || response.StatusCode == HttpStatusCode.NotFound || response.StatusCode == HttpStatusCode.MethodNotAllowed"  is complex.
Empty Catch Block,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,InvokeSubscriptionCallback,The method has an empty catch block.
Empty Catch Block,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,InvokeCommandCallback,The method has an empty catch block.
Empty Catch Block,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,Reconnect,The method has an empty catch block.
Magic Number,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,InvokeCommandCallback,The following statement contains a magic number: if (commandCallback.Callback == null && commandCallback.WaitHandle != null) {  	Task.WhenAny (commandCallback.WaitHandle.Task' Task.Delay (10000)).Wait ();  }  
Magic Number,DeviceHive.Client,Channel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\Channel.cs,InvokeCommandCallback,The following statement contains a magic number: Task.WhenAny (commandCallback.WaitHandle.Task' Task.Delay (10000)).Wait ();  
Magic Number,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,LongPollingChannel,The following statement contains a magic number: CommandUpdatePollTimeout = TimeSpan.FromSeconds (30);  
Magic Number,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,WebSocketChannel,The following statement contains a magic number: Timeout = 30000;  
Magic Number,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,Reconnect,The following statement contains a magic number: await Task.Delay (1000);  
Magic Number,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,DeviceHiveClient,The following statement contains a magic number: if (ServicePointManager.DefaultConnectionLimit < 10)  	ServicePointManager.DefaultConnectionLimit = 10;  
Magic Number,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,DeviceHiveClient,The following statement contains a magic number: if (ServicePointManager.DefaultConnectionLimit < 10)  	ServicePointManager.DefaultConnectionLimit = 10;  
Magic Number,DeviceHive.Client,DeviceHiveClient,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\DeviceHiveClient.cs,DeviceHiveClient,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 10;  
Missing Default,DeviceHive.Client,LongPollingChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\LongPollingChannel.cs,SubscriptionAdded,The following switch statement is missing a default case: switch (subscription.Type) {  case SubscriptionType.Notification:  	subscriptionTask.Run (async () => await PollNotificationTaskMethodAsync (subscriptionTask));  	break;  case SubscriptionType.Command:  	subscriptionTask.Run (async () => await PollCommandTaskMethodAsync (subscriptionTask));  	break;  }  
Missing Default,DeviceHive.Client,WebSocketChannel,F:\newReposMay17\devicehive_devicehive-.net\src\Client\DeviceHive.Client\Channels\WebSocket4NetChannel.cs,HandleMessage,The following switch statement is missing a default case: switch (action) {  case "notification/insert":  	{  		var notification = Deserialize<DeviceNotification> (json);  		InvokeSubscriptionCallback (notification.SubscriptionId' notification.Notification.Timestamp.Value' notification);  	}  	return;  case "command/insert":  	{  		var command = Deserialize<DeviceCommand> (json);  		InvokeSubscriptionCallback (command.SubscriptionId' command.Command.Timestamp.Value' command);  	}  	return;  case "command/update":  	{  		var command = Deserialize<Command> ((JObject)json ["command"]);  		InvokeCommandCallback (command);  	}  	return;  }  
