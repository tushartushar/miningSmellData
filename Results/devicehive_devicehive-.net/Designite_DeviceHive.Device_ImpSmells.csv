Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeviceHive.Device,DeviceBase,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceBase.cs,DeviceBase,Cyclomatic complexity of the method is 8
Complex Method,DeviceHive.Device,RestfulDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\RestfulDeviceService.cs,RegisterDevice,Cyclomatic complexity of the method is 11
Complex Method,DeviceHive.Device,RestfulDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\RestfulDeviceService.cs,UpdateDevice,Cyclomatic complexity of the method is 10
Complex Method,DeviceHive.Device,RestfulDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\RestfulDeviceService.cs,Put,Cyclomatic complexity of the method is 9
Long Parameter List,DeviceHive.Device,Device,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\Device.cs,Device,The method has 7 parameters.
Long Parameter List,DeviceHive.Device,RestfulDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\RestfulDeviceService.cs,Put,The method has 5 parameters.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetProperty,The length of the statement  "		var propertyInfo = t.GetProperty (property' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly); " is 142.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetProperties,The length of the statement  "		propertyInfos.AddRange (t.GetProperties (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly)); " is 140.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetMethod,The length of the statement  "		var methodInfo = t.GetMethod (method' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly); " is 136.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetMethods,The length of the statement  "		methodInfos.AddRange (t.GetMethods (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly)); " is 135.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetField,The length of the statement  "		var fieldInfo = t.GetField (field' BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly); " is 133.
Long Statement,DeviceHive.Device,ReflectionExtensioins,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Helpers\ReflectionExtensions.cs,PrivateGetFields,The length of the statement  "		fieldInfos.AddRange (t.GetFields (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.DeclaredOnly)); " is 133.
Long Statement,DeviceHive.Device,DeviceBase,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceBase.cs,HandleCommand,The length of the statement  "		var parameters = commandType == typeof(DeviceCommand) ? command : (command.Parameters == null ? Activator.CreateInstance (commandType) : command.Parameters.ToObject (commandType' JsonSerializer)); " is 196.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,Start,The length of the statement  "		_tasks.Add (Task.Factory.StartNew (() => MainDeviceTask (deviceCopy)' token' TaskCreationOptions.LongRunning' TaskScheduler.Default)); " is 134.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SendStatusUpdate,The length of the statement  "		Logger.Error (string.Format ("Exception while updating device {1} ({2}) status to '{0}'"' status' sender.ID' sender.Name)' ex); " is 127.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SendNotification,The length of the statement  "		var cNotification = new Notification (notification.Name.Trim ()' notification.Parameters == null ? null : notification.Parameters.DeepClone ()); " is 144.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SendNotification,The length of the statement  "		Logger.Error (string.Format ("Exception while sending notification '{0}' from device {1} ({2})"' notification.Name' sender.ID' sender.Name)' ex); " is 145.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,RegisterDevice,The length of the statement  "		var cDeviceClass = new DeviceClass (device.ClassName' device.ClassVersion' device.ClassOfflineTimeout' device.ClassData == null ? null : JToken.FromObject (device.ClassData' device.JsonSerializer)); " is 198.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,RegisterDevice,The length of the statement  "		var cDevice = new Device (device.ID' device.Key' device.Name' device.Status' device.Data == null ? null : JToken.FromObject (device.Data' device.JsonSerializer)' Network' cDeviceClass); " is 185.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,RegisterDevice,The length of the statement  "		cDevice.Equipment = device.EquipmentInfo.Select (e => new Equipment (e.Name' e.Code' e.Type' e.Data == null ? null : JToken.FromObject (e.Data' device.JsonSerializer))).ToList (); " is 179.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,RegisterDevice,The length of the statement  "		Logger.Error (string.Format ("Exception while registering device {0} ({1})' rethrowing exception"' device.ID' device.Name)' ex); " is 128.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,DispatchCommandTask,The length of the statement  "		var command = new DeviceCommand (cCommand.Name.Trim ()' cCommand.Parameters == null ? null : cCommand.Parameters.DeepClone ()' cCommand.UserId); " is 144.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,DispatchCommandTask,The length of the statement  "		Logger.Error (string.Format ("Exception while handling a command '{0}' by device {1} ({2})"' cCommand.Name' device.ID' device.Name)' ex); " is 137.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SendCommandResult,The length of the statement  "	Logger.InfoFormat ("Sending command '{0}' status '{1}' from device {2} ({3})"' cCommand.Name' cCommand.Status' device.ID' device.Name); " is 135.
Long Statement,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SendCommandResult,The length of the statement  "		Logger.Error (string.Format ("Exception while sending command '{0}' status '{1}' from device {2} ({3})"' cCommand.Name' cCommand.Status' device.ID' device.Name)' ex); " is 166.
Long Statement,DeviceHive.Device,RestfulDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\RestfulDeviceService.cs,UpdateCommand,The length of the statement  "		Put (string.Format ("/device/{0}/command/{1}"' deviceId' command.Id)' deviceId' deviceKey' c' NullValueHandling.Ignore); " is 120.
Long Statement,DeviceHive.Device,WebSocketDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\WebSocketDeviceService.cs,SendNotification,The length of the statement  "	var res = SendRequest ("notification/insert"' deviceGuid' deviceKey' new JProperty ("notification"' Serialize (notification))); " is 127.
Long Statement,DeviceHive.Device,WebSocketDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\WebSocketDeviceService.cs,UpdateCommand,The length of the statement  "	SendRequest ("command/update"' deviceGuid' deviceKey' new JProperty ("commandId"' command.Id)' new JProperty ("command"' Serialize (command' NullValueHandling.Ignore))); " is 169.
Empty Catch Block,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,Stop,The method has an empty catch block.
Magic Number,DeviceHive.Device,DeviceBase,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceBase.cs,DeviceBase,The following statement contains a magic number: foreach (var method in GetType ().PublicGetMethods ().Where (p => p.IsDefined (typeof(DeviceCommandAttribute)' true))) {  	if (method.GetParameters ().Length != 2)  		throw new InvalidOperationException (string.Format ("The action method '{0}' must include two parameters: DeviceCommand (or any custom strongly-typed object with ParameterAttribute attributes) and CancellationToken"' method.Name));  	if (method.GetParameters () [1].ParameterType != typeof(CancellationToken))  		throw new InvalidOperationException (string.Format ("The second parameter of action method '{0}' must be of CancellationToken type"' method.Name));  	if (!typeof(DeviceCommandResult).IsAssignableFrom (method.ReturnType))  		throw new InvalidOperationException (string.Format ("The action method '{0}' must return DeviceCommandResult object"' method.Name));  	var commandAttribute = method.GetAttributes<DeviceCommandAttribute> ().First ();  	if (_deviceCommands.ContainsKey (commandAttribute.Name))  		throw new InvalidOperationException (string.Format ("There several action methods with '{0}' command name"' commandAttribute.Name));  	_deviceCommands [commandAttribute.Name] = method;  }  
Magic Number,DeviceHive.Device,DeviceBase,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceBase.cs,DeviceBase,The following statement contains a magic number: if (method.GetParameters ().Length != 2)  	throw new InvalidOperationException (string.Format ("The action method '{0}' must include two parameters: DeviceCommand (or any custom strongly-typed object with ParameterAttribute attributes) and CancellationToken"' method.Name));  
Magic Number,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SubscribeToCommands,The following statement contains a magic number: if (device.ListenCommands) {  	while (true) {  		try {  			DeviceClient.SubscribeToCommands (device.ID' device.Key);  			break;  		} catch (DeviceServiceException e) {  			Logger.ErrorFormat ("Error when subscribing to device {0} ({1}) commands: {2}"' device.ID' device.Name' e);  			// retry with small wait  			Thread.Sleep (100);  		}  	}  }  
Magic Number,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SubscribeToCommands,The following statement contains a magic number: while (true) {  	try {  		DeviceClient.SubscribeToCommands (device.ID' device.Key);  		break;  	} catch (DeviceServiceException e) {  		Logger.ErrorFormat ("Error when subscribing to device {0} ({1}) commands: {2}"' device.ID' device.Name' e);  		// retry with small wait  		Thread.Sleep (100);  	}  }  
Magic Number,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SubscribeToCommands,The following statement contains a magic number: try {  	DeviceClient.SubscribeToCommands (device.ID' device.Key);  	break;  } catch (DeviceServiceException e) {  	Logger.ErrorFormat ("Error when subscribing to device {0} ({1}) commands: {2}"' device.ID' device.Name' e);  	// retry with small wait  	Thread.Sleep (100);  }  
Magic Number,DeviceHive.Device,DeviceHost,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Device\DeviceHost.cs,SubscribeToCommands,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,DeviceHive.Device,WebSocketDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\WebSocketDeviceService.cs,WebSocketDeviceService,The following statement contains a magic number: Timeout = 30000;  
Missing Default,DeviceHive.Device,WebSocketDeviceService,F:\newReposMay17\devicehive_devicehive-.net\src\Device\DeviceHive.Device\Service\WebSocketDeviceService.cs,HandleMessage,The following switch statement is missing a default case: switch (action) {  case "command/insert":  	HandleCommandInsert (json);  	return;  }  
