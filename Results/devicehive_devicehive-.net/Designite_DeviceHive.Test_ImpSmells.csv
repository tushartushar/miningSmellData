Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The method has 135 lines of code.
Complex Method,DeviceHive.Test,ResponseMatchesContraint,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,IsMatches,Cyclomatic complexity of the method is 14
Long Parameter List,DeviceHive.Test.WebSocketsTest.Utils,DeviceControllerWrapper,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\WebSocketsTest\Utils\DeviceControllerWrapper.cs,UpdateDeviceCommand,The method has 5 parameters. Parameters: connection' deviceId' deviceKey' commandId' command
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,OnCreateDependencies,The length of the statement  "            var userResponse = Client.Post("/user"' new { login = "_ut_u"' password = NewUserPassword' role = 1' status = 0 }' auth: Admin);" is 128.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Create,The length of the statement  "            Func<string' object> key = label => new { type = 0' label = label' expirationDate = new DateTime(2015' 1' 1)' permissions = new[] {" is 131.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Create,The length of the statement  "                new { domains = new[] { "www.example.com" }' networkIds = new[] { 1' 2 }' actions = new[] { "GetNetwork"' "GetDevice" } } }};" is 125.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Update,The length of the statement  "            var resource = Create(new { type = 0' label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" }' subnets = new[] { "127.0.0.1" } } } }' auth: Admin); " is 167.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Update,The length of the statement  "            Func<string' object> key = label => new { type = 1' label = label' permissions = new[] { new { actions = new[] { "GetNetwork" }' subnets = new[] { "127.0.0.2" } } } };" is 167.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Update_Partial,The length of the statement  "            var resource = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" } } } }' auth: Admin);" is 124.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The length of the statement  "            var resource = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" } } } }' auth: Admin);" is 124.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The length of the statement  "            resource = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" } } } }' auth: Admin); " is 120.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The length of the statement  "            resource = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" } } } }' auth: Owner);" is 120.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The length of the statement  "            resource = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "GetNetwork" } } } }' auth: Owner); " is 120.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { networkIds = new[] { networkId }' actions = new[] { "GetNetwork" } } } }' auth: user);" is 148.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { subnets = new[] { "0.0.0.0/0" }' actions = new[] { "GetNetwork" } } } }' auth: user);" is 147.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { subnets = new[] { "10.10.10.0/24" }' actions = new[] { "GetNetwork" } } } }' auth: user);" is 151.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { actions = new[] { "UpdateDeviceCommand" } } } }' auth: user);" is 123.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { networkIds = new[] { networkId + 1 }' actions = new[] { "GetNetwork" } } } }' auth: user);" is 152.
Long Statement,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The length of the statement  "            key = Create(new { label = "_ut"' permissions = new[] { new { networkIds = new[] { networkId + 1 }' actions = new[] { "GetNetwork" } } } }' auth: Admin);" is 153.
Long Statement,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,OnCreateDependencies,The length of the statement  "            var userResponse = Client.Post("/user"' new { login = "_ut"' password = NewUserPassword' role = 1' status = 0 }' auth: Admin); " is 126.
Long Statement,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Create,The length of the statement  "            var authResponse = Client.Post("/auth/accesskey"' new { providerName = "password"' login = User.Login' password = NewUserPassword }); " is 133.
Long Statement,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Delete,The length of the statement  "            var authResponse = Client.Post("/auth/accesskey"' new { providerName = "password"' login = User.Login' password = NewUserPassword }); " is 133.
Long Statement,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Unauthorized,The length of the statement  "            Expect(Client.Post("/auth/accesskey"' new { providerName = "nonexist" }).Status' Is.EqualTo(401)); // non-supported or disabled provider  " is 136.
Long Statement,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Unauthorized,The length of the statement  "            Expect(Client.Post("/auth/accesskey"' new { providerName = "password"' login = "xx"' password = "xx" }).Status' Is.EqualTo(401)); " is 129.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Create,The length of the statement  "            Func<string' object> deviceClass = version => new { name = "_ut"' version = version' offlineTimeout = 3600' equipment = new[] {" is 127.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The length of the statement  "            var resource = Create(new { name = "_ut"' version = "1"' equipment = new[] { new { name = "_ut_name1"' type = "_ut_type1"' code = "_ut_code1" } } }' auth: Admin); " is 162.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The length of the statement  "            Update(resource' new { name = "_ut2"' version = "2"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }' auth: Admin);" is 225.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { name = "_ut2"' version = "2"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } })); " is 239.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The length of the statement  "            Update(resource' new { name = "_ut3"' version = "3"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }' auth: accessKey); " is 229.
Long Statement,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { name = "_ut3"' version = "3"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } })); " is 239.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The length of the statement  "            commands = List(new Dictionary<string' string> { { "start"' DateTime.UtcNow.AddHours(-1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 145.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The length of the statement  "            commands = List(new Dictionary<string' string> { { "start"' DateTime.UtcNow.AddHours(1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 144.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The length of the statement  "            commands = List(new Dictionary<string' string> { { "end"' DateTime.UtcNow.AddHours(-1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 143.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The length of the statement  "            commands = List(new Dictionary<string' string> { { "end"' DateTime.UtcNow.AddHours(1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 142.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Create,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { command = "_ut"' parameters = (string)null' status = (string)null' result = (string)null' timestamp = ResponseMatchesContraint.Timestamp' userId = user2.ID })); " is 209.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The length of the statement  "            Update(resource' new { parameters = new { a = "b" }' status = "OK"' result = "Success" }' auth: Device(DeviceGUID' "key")); " is 123.
Long Statement,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { parameters = new { a = "b" }' status = "OK"' result = "Success"' timestamp = ResponseMatchesContraint.Timestamp })); " is 165.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The length of the statement  "            notifications = List(new Dictionary<string' string> { { "start"' DateTime.UtcNow.AddHours(-1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 150.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The length of the statement  "            notifications = List(new Dictionary<string' string> { { "start"' DateTime.UtcNow.AddHours(1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 149.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The length of the statement  "            notifications = List(new Dictionary<string' string> { { "end"' DateTime.UtcNow.AddHours(-1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 148.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The length of the statement  "            notifications = List(new Dictionary<string' string> { { "end"' DateTime.UtcNow.AddHours(1).ToString("yyyy-MM-ddTHH:mm:ss.ffffff") } }' auth: user); " is 147.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Create,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { notification = "_ut"' parameters = (string)null' timestamp = ResponseMatchesContraint.Timestamp })); " is 149.
Long Statement,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Update,The length of the statement  "            Expect(() => Update(resource' new { notification = "_ut2"' parameters = new { a = "b" } }' auth: Admin)' FailsWith(405)); " is 121.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,GetAll,The length of the statement  "            Update(ID' new { name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: Admin);" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,GetAll,The length of the statement  "            Update(anotherDeviceId' new { name = "_ut2"' network = new { name = "_ut_n_a" }' deviceClass = new { name = "_ut_dc_a"' version = "1" } }' auth: Admin);" is 152.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: Admin);" is 147.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create,The length of the statement  "            Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' isBlocked = false' network = new { name = "_ut_n" }' deviceClass = new {" is 138.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create,The length of the statement  "                new { id = ID' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } } }));" is 122.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_Client,The length of the statement  "            Expect(() => { Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: user1); return false; }' FailsWith(403));" is 196.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_Client,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: user2);" is 147.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_Client,The length of the statement  "            Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' isBlocked = false' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }));" is 176.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_NetworkKey,The length of the statement  "            Expect(() => { Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }); return false; }' FailsWith(403));" is 183.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_NetworkKey,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n"' key = "network_key" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 155.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_NetworkKey,The length of the statement  "            Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' network = new { name = "_ut_n"' key = "network_key" }' deviceClass = new { name = "_ut_dc"' version = "1" } }));" is 178.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_RefCreate,The length of the statement  "                name = "_ut_dc_a"' version = "1"' equipment = new[] { new { name = "_ut_eq"' code = "_ut_eq"' type = "_ut_eq" } } } }));" is 120.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_LegacyEquipment,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n_a" }' deviceClass = new { name = "_ut_dc_a"' version = "1" }'" is 135.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_LegacyEquipment,The length of the statement  "                name = "_ut_dc_a"' version = "1"' equipment = new[] { new { name = "eq1"' code = "eq1_code"' type = "eq1_type" } } } }));" is 121.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update,The length of the statement  "            var obj = new { name = "_ut2"' status = "status"' data = new { a = "b" }' network = new { name = "_ut_n2"' description = "desc" }'" is 130.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update,The length of the statement  "                deviceClass = new { name = "_ut_dc"' version = "2"' equipment = new[] { new { name = "_ut_eq"' code = "_ut_eq"' type = "_ut_eq" } } } };" is 136.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_Partial,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The length of the statement  "            Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' status = "status"' isBlocked = true' data = new { a = "b" }'" is 126.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Delete_ClientAuth,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: Admin);" is 147.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Delete_DeviceAuth,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: Admin);" is 147.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,BadRequest,The length of the statement  "            Expect(() => Update(ID' new { key = "key"' name = "_ut"' network = new { }' deviceClass = new { } }' auth: Admin)' FailsWith(400));" is 131.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } });" is 134.
Long Statement,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Forbidden,The length of the statement  "            Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" }' isBlocked = true }' auth: Admin); " is 165.
Long Statement,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { name = "_ut2"' code = "code2"' type = "type2"' data = new { a = "b" } })); " is 123.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,GetAll,The length of the statement  "            var clientResource1 = Create(new { name = "_ut1"' oauthId = "_ut_1"' domain = "_ut1.com"' redirectUri = "_ut1.com" }' auth: Admin);" is 131.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,GetAll,The length of the statement  "            var clientResource2 = Create(new { name = "_ut2"' oauthId = "_ut_2"' domain = "_ut2.com"' redirectUri = "_ut2.com" }' auth: Admin);" is 131.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Get,The length of the statement  "            var clientResource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin);" is 126.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create,The length of the statement  "            var resource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin);" is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create,The length of the statement  "            resource = Create(new { name = "_ut2"' oauthId = "_ut_2"' domain = "_ut2.com"' redirectUri = "_ut2.com" }' auth: accessKey); " is 124.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create,The length of the statement  "            Expect(Get(resource)' Matches(new { name = "_ut2"' oauthId = "_ut_2"' domain = "_ut2.com"' redirectUri = "_ut2.com" })); " is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create_Existing,The length of the statement  "            var resource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin);" is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create_Existing,The length of the statement  "            Expect(() => Create(new { name = "_ut2"' oauthId = "_ut_"' domain = "_ut2.com"' redirectUri = "_ut2.com" }' auth: Admin)' FailsWith(403));" is 138.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update,The length of the statement  "            var resource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin); " is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update,The length of the statement  "            Expect(Get(resource)' Matches(new { name = "_ut2"' oauthId = "_ut_2"' domain = "_ut2.com"' redirectUri = "_ut2.com" })); " is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update,The length of the statement  "            Update(resource' new { name = "_ut3"' oauthId = "_ut_3"' domain = "_ut3.com"' redirectUri = "_ut3.com" }' auth: accessKey); " is 123.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update,The length of the statement  "            Expect(Get(resource)' Matches(new { name = "_ut3"' oauthId = "_ut_3"' domain = "_ut3.com"' redirectUri = "_ut3.com" })); " is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update_Partial,The length of the statement  "            var resource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin);" is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Update_Partial,The length of the statement  "            Expect(Get(resource)' Matches(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com"' subnet = "127.0.0.0/24" }));" is 141.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Delete,The length of the statement  "            var resource = Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: Admin);" is 120.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" })' FailsWith(401));" is 122.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" })' FailsWith(401));" is 144.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: user)' FailsWith(401));" is 134.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: user)' FailsWith(401));" is 156.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401)); " is 139.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401)); " is 161.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401)); " is 139.
Long Statement,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The length of the statement  "            Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401)); " is 161.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,OnCreateDependencies,The length of the statement  "            var userResponse = Client.Post("/user"' new { login = "_ut"' password = NewUserPassword' role = 1' status = 0 }' auth: Admin);" is 126.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,OnCreateDependencies,The length of the statement  "            var clientResponse = Client.Post("/oauth/client"' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com"' subnet = "127.0.0.0/24" }' auth: Admin);" is 173.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The length of the statement  "            var clientResponse = Client.Post("/oauth/client"' new { name = "_ut2"' oauthId = "_ut_2"' domain = "_ut2.com"' redirectUri = "_ut2.com" }' auth: Admin);" is 152.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The length of the statement  "            var grantResource1 = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' accessType = "Offline"' redirectUri = "_ut1.com"' scope = "GetNetwork"' networkIds = new[] { 1' 2 } }' auth: User);" is 199.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The length of the statement  "            var grantResource2 = Create(new { client = new { oauthId = "_ut_2" }' type = "Token"' accessType = "Online"' redirectUri = "_ut2.com"' scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);" is 199.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Get,The length of the statement  "            var grantResource = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' redirectUri = "_ut.com"' scope = "GetNetwork" }' auth: User);" is 144.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Create,The length of the statement  "            var resource = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' redirectUri = "_ut.com"' scope = "GetNetwork"' networkIds = new[] { 1' 2 } }' auth: User);" is 168.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Create,The length of the statement  "                accessKey = new { label = "OAuth token for: _ut" }' type = "Code"' accessType = "Online"' redirectUri = "_ut.com"' scope = "GetNetwork" }));" is 140.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Create_Implicit,The length of the statement  "            var resource = Create(new { client = new { oauthId = "_ut_" }' type = "Token"' redirectUri = "_ut.com"' scope = "GetNetwork"' accessType = "Offline" }' auth: User);" is 164.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            var response = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' redirectUri = "_ut.com"' scope = "GetNetwork" }' auth: User);" is 139.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);" is 142.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            Expect(resource2' Matches(new { timestamp = ResponseMatchesContraint.Timestamp' scope = "GetNetwork"' networkIds = new[] { 2' 3 } }));" is 134.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            Expect(resource2["timestamp"].Parent.ToString()' Is.Not.EqualTo(resource["timestamp"].Parent.ToString())); // timestamp must change" is 131.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            Expect((string)resource2["accessKey"]["key"]' Is.Not.EqualTo((string)resource["accessKey"]["key"])); // access key must change" is 126.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            Expect((int)resource2["accessKey"]["id"]' Is.EqualTo((int)resource["accessKey"]["id"])); // access key id should be preserved" is 125.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The length of the statement  "            Expect(resource2["accessKey"]["expirationDate"].Parent.ToString()' Is.Not.EqualTo(resource["accessKey"]["expirationDate"].Parent.ToString()));" is 142.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The length of the statement  "            var resource = Create(new { client = new { oauthId = "_ut_" }' type = "Token"' redirectUri = "_ut.com"' scope = "GetNetwork"' accessType = "Offline" }' auth: User);" is 164.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The length of the statement  "            var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);" is 142.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The length of the statement  "            Expect((string)response2.Json["accessKey"]["key"]' Is.Not.EqualTo((string)resource["accessKey"]["key"])); // access key must change" is 131.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The length of the statement  "            Expect((int)response2.Json["accessKey"]["id"]' Is.EqualTo((int)resource["accessKey"]["id"])); // access key id should be preserved" is 130.
Long Statement,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Delete,The length of the statement  "            var resource = Create(new { client = new { oauthId = "_ut_" }' type = "Token"' redirectUri = "_ut.com"' scope = "GetNetwork" }' auth: User);" is 140.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,OnCreateDependencies,The length of the statement  "            var userResponse = Client.Post("/user"' new { login = "_ut"' password = NewUserPassword' role = 1' status = 0 }' auth: Admin); " is 126.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,OnCreateDependencies,The length of the statement  "            var clientResponse = Client.Post("/oauth/client"' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com"' subnet = "127.0.0.0/24" }' auth: Admin); " is 173.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_AuthCode,The length of the statement  "            var grantResponse = Client.Post("/user/" + User.ID + "/oauth/grant"' new { client = new { oauthId = "_ut_" }' type = "Code"' redirectUri = "_ut1.com"' scope = "GetNetwork" }' auth: User); " is 187.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_AuthCode,The length of the statement  "            var response = SendRequest(new { grant_type = "authorization_code"' code = (string)grantResponse.Json["authCode"]' redirect_uri = "_ut1.com" }' " is 143.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_Password,The length of the statement  "            var response = SendRequest(new { grant_type = "password"' scope = "GetNetwork"' username = User.Login' password = User.Password }' " is 130.
Long Statement,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_Password,The length of the statement  "                accessKey = new { label = "OAuth token for: _ut" }' type = "Password"' accessType = "Online"' redirectUri = "_ut.com"' scope = "GetNetwork" })); " is 144.
Long Statement,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,OnCreateDependencies,The length of the statement  "            var userResponse = Client.Post("/user"' new { login = "_ut"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin);" is 126.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create,The length of the statement  "            var resource = Create(new { login = "_ut"' password = NewUserPassword' role = 0' status = 0' data = new { a = "b" } }' auth: Admin);" is 132.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut"' role = 0' status = 0' data = new { a = "b" }' lastLogin = (DateTime?)null })); " is 142.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create,The length of the statement  "            resource = Create(new { login = "_ut2"' password = NewUserPassword' role = 0' status = 0' data = new { a = "b" } }' auth: accessKey); " is 133.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut2"' role = 0' status = 0' data = new { a = "b" }' lastLogin = (DateTime?)null })); " is 143.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_OAuth,The length of the statement  "            var resource = Create(new { login = "_ut"' facebookLogin = "facebook"' role = 0' status = 0' data = new { a = "b" } }' auth: Admin);" is 132.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_OAuth,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut"' facebookLogin = "facebook"' role = 0' status = 0' data = new { a = "b" }' lastLogin = (DateTime?)null }));" is 170.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_Existing,The length of the statement  "            var resource = Create(new { login = "_ut"' facebookLogin = "facebook"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin);" is 136.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_Existing,The length of the statement  "            Expect(() => Create(new { login = "_ut"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin)' FailsWith(403)); " is 123.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_Existing,The length of the statement  "            Expect(() => Create(new { login = "_ut2"' facebookLogin = "facebook"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin)' FailsWith(403));" is 152.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The length of the statement  "            var resource = Create(new { login = "_ut"' data = new { a = "b" }' googleLogin = "google"' facebookLogin = "facebook"' githubLogin = "github"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin); " is 208.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The length of the statement  "            Update(resource' new { login = "_ut2"' data = new { a = "b2" }' googleLogin = "google2"' facebookLogin = "facebook2"' githubLogin = "github2"' role = 1' status = 1 }' auth: Admin); " is 180.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut2"' data = new { a = "b2" }' googleLogin = "google2"' facebookLogin = "facebook2"' githubLogin = "github2"' role = 1' status = 1' lastLogin = (DateTime?)null })); " is 223.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The length of the statement  "            Update(resource' new { login = "_ut3"' data = new { a = "b3" }' googleLogin = "google3"' facebookLogin = "facebook3"' githubLogin = "github3"' role = 1' status = 2 }' auth: accessKey); " is 184.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut3"' data = new { a = "b3" }' googleLogin = "google3"' facebookLogin = "facebook3"' githubLogin = "github3"' role = 1' status = 2' lastLogin = (DateTime?)null })); " is 223.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            var resource = Create(new { login = "_ut"' password = NewUserPassword' data = new { a = "b" }' facebookLogin = "facebook"' googleLogin = "google"' githubLogin = "github"' role = 1' status = 0 }' auth: Admin); " is 208.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            var current = Client.Put(ResourceUri + "/current"' new { password = NewUserPassword + "*" }' auth: User("_ut"' NewUserPassword)); " is 129.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            current = Client.Put(ResourceUri + "/current"' new { password = NewUserPassword + "*"' oldPassword = NewUserPassword' login = "_ut2"' data = new { a = "b2" }' facebookLogin = "updated"' googleLogin = "updated"' githubLogin = "updated"' role = 0' status = 1 }' auth: User("_ut"' NewUserPassword));" is 296.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut"' role = 1' status = 0' data = new { a = "b2" }' facebookLogin = "facebook"' googleLogin = "google"' githubLogin = "github" })); " is 190.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            current = Client.Put(ResourceUri + "/current"' new { password = NewUserPassword + "$"' oldPassword = NewUserPassword + "*"' data = new { a = "b3" }' login = "_ut3"' facebookLogin = "updated"' googleLogin = "updated"' githubLogin = "updated"' role = 0' status = 1 }' auth: accessKey); " is 283.
Long Statement,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The length of the statement  "            Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut"' role = 1' status = 0' data = new { a = "b3" }' facebookLogin = "facebook"' googleLogin = "google"' githubLogin = "github" })); " is 190.
Long Statement,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Create_Devices,The length of the statement  "            var accessKey2 = CreateAccessKey(user' new[] { "GetNetwork"' "GetDevice" }' deviceGuids: new[] { Guid.NewGuid().ToString() });" is 126.
Long Statement,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The length of the statement  "            accessKeys = DataContext.AccessKey.GetByUsers(new[] { user.ID }' new AccessKeyFilter { Type = (int)AccessKeyType.Default }); " is 124.
Long Statement,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,CreateUser,The length of the statement  "            var userResource = Client.Post("/user"' new { login = login' password = NewUserPassword' role = role' status = 0 }' auth: Admin); " is 129.
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Create,The following statement contains a magic number: Func<string' object> key = label => new { type = 0' label = label' expirationDate = new DateTime(2015' 1' 1)' permissions = new[] {                 new { domains = new[] { "www.example.com" }' networkIds = new[] { 1' 2 }' actions = new[] { "GetNetwork"' "GetDevice" } } }};
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Create,The following statement contains a magic number: Func<string' object> key = label => new { type = 0' label = label' expirationDate = new DateTime(2015' 1' 1)' permissions = new[] {                 new { domains = new[] { "www.example.com" }' networkIds = new[] { 1' 2 }' actions = new[] { "GetNetwork"' "GetDevice" } } }};
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Update_Partial,The following statement contains a magic number: Update(resource' new { expirationDate = new DateTime(2015' 1' 1) }' auth: Admin);
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Update_Partial,The following statement contains a magic number: Expect(Get(resource' auth: Admin)' Matches(new { label = "_ut"' expirationDate = new DateTime(2015' 1' 1) }));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Owner)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Owner)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Authorization,The following statement contains a magic number: Expect(Client.Get("/network/" + networkId' auth: AccessKey((string)key["key"])).Status' Is.EqualTo(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { label = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { label = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { label = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { label = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { label = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { label = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { label = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { label = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,AccessKeyTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AccessKeyTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { label = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,ApiInfoTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ApiInfoTest.cs,Get,The following statement contains a magic number: Expect(response.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Config,The following statement contains a magic number: Expect(response.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Create,The following statement contains a magic number: Assert.That(authResponse.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Create,The following statement contains a magic number: Assert.That(accessKeyResponse.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Delete,The following statement contains a magic number: Assert.That(authResponse.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,AccessKey_Delete,The following statement contains a magic number: Assert.That(accessKeyResponse.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,BadRequest,The following statement contains a magic number: Expect(Client.Post("/auth/accesskey"' new { }).Status' Is.EqualTo(400));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Post("/auth/accesskey"' new { providerName = "nonexist" }).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Post("/auth/accesskey"' new { providerName = "password"' login = "xx"' password = "xx" }).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,AuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\AuthTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Delete("/auth/accesskey").Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Create,The following statement contains a magic number: Func<string' object> deviceClass = version => new { name = "_ut"' version = version' offlineTimeout = 3600' equipment = new[] {                 new { name = "_ut_name"' type = "_ut_type"' code = "_ut_code" } }};
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Create_Existing,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' version = "1" }' auth: Admin)' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The following statement contains a magic number: Update(resource' new { name = "_ut2"' version = "2"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }' auth: Admin);
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The following statement contains a magic number: Expect(Get(resource' auth: Admin)' Matches(new { name = "_ut2"' version = "2"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The following statement contains a magic number: Update(resource' new { name = "_ut3"' version = "3"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }' auth: accessKey);
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Update,The following statement contains a magic number: Expect(Get(resource' auth: Admin)' Matches(new { name = "_ut3"' version = "3"' isPermanent = true' offlineTimeout = 3600' data = new { a = "b" }' equipment = new[] { new { name = "_ut_name2"' type = "_ut_type2"' code = "_ut_code2" } } }));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' version = "1" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' version = "1" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' version = "1" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' version = "1" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' version = "1" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' version = "1" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' version = "1" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' version = "1" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceClassTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceClassTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' version = "1" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The following statement contains a magic number: Expect(commands.Count' Is.EqualTo(2));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The following statement contains a magic number: Expect(commands.Count' Is.EqualTo(2));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,GetAll,The following statement contains a magic number: Expect(commands.Count' Is.EqualTo(2));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get(ResourceUri + "/poll?names=_ut1"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result = (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { command = "_ut1" }));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll_NoWait,The following statement contains a magic number: var poll = Task.Factory.StartNew(() =>                  {                      var response = Client.Get(ResourceUri + "/poll?waitTimeout=0"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                      Expect(response.Json.Count()' Is.EqualTo(0));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll_NoWait,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get("/device/command/poll?names=_ut1&deviceGuids=" + DeviceGUID' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result = (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { deviceGuid = DeviceGUID' command = new { command = "_ut1" } }));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_OtherDevice,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get("/device/command/poll"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result = (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { deviceGuid = DeviceGUID' command = new { command = "_ut2" } }));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_NoWait,The following statement contains a magic number: var poll = Task.Factory.StartNew(() =>                  {                      var response = Client.Get("/device/command/poll?waitTimeout=0"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                      Expect(response.Json.Count()' Is.EqualTo(0));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,PollMany_NoWait,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll_ByID,The following statement contains a magic number: var poll = new Task(() =>              {                  var response = Client.Get(ResourceUri + "/" + GetResourceId(resource) + "/poll"' auth: user);                  Expect(response.Status' Is.EqualTo(200));                  Expect(response.Json' Is.InstanceOf<JObject>());                    var result = (JObject)response.Json;                  Expect(result' Matches(new { command = "_ut1"' status = "Done"' result = "OK" }));              });
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll_ByID,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Poll_ByID,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" }' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" }' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" }' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" }' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The following statement contains a magic number: Expect(() => Update(resource' new { command = "_ut1" }' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The following statement contains a magic number: Expect(() => Update(resource' new { command = "_ut1" }' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The following statement contains a magic number: Expect(() => Update(resource' new { command = "_ut1" }' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Update,The following statement contains a magic number: Expect(() => Update(resource' new { command = "_ut1" }' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Delete,The following statement contains a magic number: Expect(() => Delete(resource' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { command2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { command = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { command = "_ut" }' auth: Device(DeviceGUID' "key"))' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceCommandTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceCommandTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { command = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,GetAll,The following statement contains a magic number: Expect(() => List(auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,GetAll,The following statement contains a magic number: Expect(() => List(auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,GetAll,The following statement contains a magic number: Expect(() => List(auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,GetAll,The following statement contains a magic number: Expect(() => List(auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Get,The following statement contains a magic number: Expect(() => Get("test"' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Get,The following statement contains a magic number: Expect(() => Get("test"' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Get,The following statement contains a magic number: Expect(() => Get("test"' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Get,The following statement contains a magic number: Expect(() => Get("test"' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { parameters = new { x = "y" } }' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Update,The following statement contains a magic number: Expect(() => Update("test"' new { parameters = new { x = "y" } }' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Delete,The following statement contains a magic number: Expect(() => Delete("test"' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get("none")' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceEquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceEquipmentTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get("none"' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: Expect(notifications.Count' Is.EqualTo(4));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: notifications = List(new Dictionary<string' string> { { "gridInterval"' Convert.ToString(24 * 3600) } }' auth: user);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: notifications = List(new Dictionary<string' string> { { "gridInterval"' Convert.ToString(24 * 3600) } }' auth: user);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: Expect(notifications.Count' Is.EqualTo(3));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: Expect(notifications.Count' Is.GreaterThanOrEqualTo(2));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,GetAll,The following statement contains a magic number: Expect(notifications.Count' Is.GreaterThanOrEqualTo(2));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Get,The following statement contains a magic number: Expect(() => Get(resource' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get(ResourceUri + "/poll?names=_ut1"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result =  (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { notification = "_ut1" }));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll_NoWait,The following statement contains a magic number: var poll = Task.Factory.StartNew(() =>                  {                      var response = Client.Get(ResourceUri + "/poll?waitTimeout=0"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                      Expect(response.Json.Count()' Is.EqualTo(0));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Poll_NoWait,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get("/device/notification/poll?names=_ut1&deviceGuids=" + DeviceGUID' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result = (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { deviceGuid = DeviceGUID' notification = new { notification = "_ut1" }}));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_OtherDevice,The following statement contains a magic number: var poll = new Task(() =>                  {                      var response = Client.Get("/device/notification/poll"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                        var result = (JArray)response.Json;                      Expect(result.Count' Is.EqualTo(1));                      Expect(result[0]' Matches(new { deviceGuid = DeviceGUID' notification = new { notification = "_ut2" } }));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_OtherDevice,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_NoWait,The following statement contains a magic number: var poll = Task.Factory.StartNew(() =>                  {                      var response = Client.Get("/device/notification/poll?waitTimeout=0"' auth: user);                      Expect(response.Status' Is.EqualTo(200));                      Expect(response.Json' Is.InstanceOf<JArray>());                      Expect(response.Json.Count()' Is.EqualTo(0));                  });
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,PollMany_NoWait,The following statement contains a magic number: Expect(poll.Wait(2000)' Is.True);
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { notification = "_ut" }' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { notification = "_ut" }' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { notification = "_ut" }' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Create,The following statement contains a magic number: Expect(() => Create(new { notification = "_ut" }' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Update,The following statement contains a magic number: Expect(() => Update(resource' new { notification = "_ut2"' parameters = new { a = "b" } }' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Delete,The following statement contains a magic number: Expect(() => Delete(resource' auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { notification2 = "_ut" }' auth: Device(DeviceGUID' "key"))' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { notification = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Get(ResourceUri + "/poll").Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Get("/device/notification/poll").Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: Device(DeviceGUID' "key"))' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Device(DeviceGUID' "key"))' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Get(ResourceUri + "/poll"' auth: Device(DeviceGUID' "key")).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,Unauthorized,The following statement contains a magic number: Expect(Client.Get("/device/notification/poll"' auth: Device(DeviceGUID' "key")).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceNotificationTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceNotificationTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The following statement contains a magic number: Expect(() => Get(ID' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The following statement contains a magic number: Expect(() => Get(ID' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The following statement contains a magic number: Expect(() => Get(ID' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The following statement contains a magic number: Expect(() => Get(ID' auth: accessKey3)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Get,The following statement contains a magic number: Expect(() => Get(ID' auth: Device(ID' "wrong_key"))' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_Client,The following statement contains a magic number: Expect(() => { Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }' auth: user1); return false; }' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_NetworkKey,The following statement contains a magic number: Expect(() => { Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1" } }); return false; }' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Create_Permanent,The following statement contains a magic number: Update(ID' new { key = "key"' name = "_ut"' network = new { name = "_ut_n" }'                 deviceClass = new { name = "_ut_dc"' version = "1"' offlineTimeout = 10'                 equipment = new[] { new { name = "eq1"' code = "eq1_code"' type = "eq1_type" }}}});
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_DeviceAuth,The following statement contains a magic number: Update(ID' new { status = "status"' data = new { a = "b" }' network = new { name = "_ut_n" }'                 deviceClass = new { name = "_ut_dc"' version = "1"' offlineTimeout = 10 } }' auth: Device(ID' "key"));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_DeviceAuth,The following statement contains a magic number: Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' status = "status"' data = new { a = "b" }'                 network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1"' offlineTimeout = 10 } }));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status" }' auth: user1)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Update(ID' new { status = "status"' isBlocked = true' data = new { a = "b" }'                 deviceClass = new { name = "_ut_dc"' version = "1"' offlineTimeout = 10 } }' auth: user2);
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Expect(Get(ID' auth: Admin)' Matches(new { id = ID' name = "_ut"' status = "status"' isBlocked = true' data = new { a = "b" }'                 network = new { name = "_ut_n" }' deviceClass = new { name = "_ut_dc"' version = "1"' offlineTimeout = 10 } }));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status2" }' auth: accessKey1)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status2" }' auth: accessKey2)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Update_ClientAuth,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status2" }' auth: accessKey3)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Delete_ClientAuth,The following statement contains a magic number: Expect(() => Get(ID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Delete_DeviceAuth,The following statement contains a magic number: Expect(() => Get(ID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Update(ID' new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Update(ID' new { key = "key"' name = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Update(ID' new { key = "key"' name = "_ut"' network = new { }' deviceClass = new { } }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(ID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(ID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: Device(ID' "key"))' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Forbidden,The following statement contains a magic number: Expect(() => Get(ID' auth: Device(ID' "key"))' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Forbidden,The following statement contains a magic number: Expect(() => Update(ID' new { status = "status" }' auth: Device(ID' "key"))' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,Forbidden,The following statement contains a magic number: Expect(() => Delete(ID' auth: Device(ID' "key"))' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,DeviceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\DeviceTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(Guid.NewGuid()' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,GetAll,The following statement contains a magic number: Expect(() => List(auth: Admin)' FailsWith(405));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,EquipmentTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\EquipmentTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Create_Existing,The following statement contains a magic number: Expect(() => Create(new { name = "_ut2"' oauthId = "_ut_"' domain = "_ut2.com"' redirectUri = "_ut2.com" }' auth: Admin)' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut"' oauthId = "_ut_"' domain = "_ut.com"' redirectUri = "_ut.com" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthClientTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthClientTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The following statement contains a magic number: var grantResource1 = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' accessType = "Offline"' redirectUri = "_ut1.com"' scope = "GetNetwork"' networkIds = new[] { 1' 2 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The following statement contains a magic number: var grantResource2 = Create(new { client = new { oauthId = "_ut_2" }' type = "Token"' accessType = "Online"' redirectUri = "_ut2.com"' scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,GetAll,The following statement contains a magic number: var grantResource2 = Create(new { client = new { oauthId = "_ut_2" }' type = "Token"' accessType = "Online"' redirectUri = "_ut2.com"' scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Create,The following statement contains a magic number: var resource = Create(new { client = new { oauthId = "_ut_" }' type = "Code"' redirectUri = "_ut.com"' scope = "GetNetwork"' networkIds = new[] { 1' 2 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Create,The following statement contains a magic number: Expect(permissions[0]' Matches(new { domains = new[] { "_ut.com" }'                 subnets = new[] { "127.0.0.0/24" }' actions = new[] { "GetNetwork" }' networkIds = new[] { 1' 2 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: Expect(response2.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: Expect(resource2' Matches(new { timestamp = ResponseMatchesContraint.Timestamp' scope = "GetNetwork"' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: Expect(resource2' Matches(new { timestamp = ResponseMatchesContraint.Timestamp' scope = "GetNetwork"' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: Expect(resource2["accessKey"]["permissions"][0]' Matches(new { domains = new[] { "_ut.com" }'                 subnets = new[] { "127.0.0.0/24" }' actions = new[] { "GetDevice" }' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update,The following statement contains a magic number: Expect(resource2["accessKey"]["permissions"][0]' Matches(new { domains = new[] { "_ut.com" }'                 subnets = new[] { "127.0.0.0/24" }' actions = new[] { "GetDevice" }' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: var response2 = Client.Put(ResourceUri + "/" + GetResourceId(resource)' new { scope = "GetDevice"' networkIds = new[] { 2' 3 } }' auth: User);
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: Expect(response2.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: Expect(resource2["accessKey"]["permissions"][0]' Matches(new { domains = new[] { "_ut.com" }'                 subnets = new[] { "127.0.0.0/24" }' actions = new[] { "GetDevice" }' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Update_Implicit,The following statement contains a magic number: Expect(resource2["accessKey"]["permissions"][0]' Matches(new { domains = new[] { "_ut.com" }'                 subnets = new[] { "127.0.0.0/24" }' actions = new[] { "GetDevice" }' networkIds = new[] { 2' 3 } }));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: User)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Delete,The following statement contains a magic number: Expect(accessKeyResource.Status' Is.EqualTo(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: User)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthGrantTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthGrantTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_AuthCode,The following statement contains a magic number: Expect(response.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_Password,The following statement contains a magic number: Expect(response.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,OAuthTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\OAuthTest.cs,Token_Password,The following statement contains a magic number: Assert.That(grantsResponse.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(NetworkID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(NetworkID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserNetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserNetworkTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Get_Current,The following statement contains a magic number: Expect(current.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Get_Current,The following statement contains a magic number: Expect(current.Status' Is.EqualTo(200));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_Existing,The following statement contains a magic number: Expect(() => Create(new { login = "_ut"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin)' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Create_Existing,The following statement contains a magic number: Expect(() => Create(new { login = "_ut2"' facebookLogin = "facebook"' password = NewUserPassword' role = 0' status = 0 }' auth: Admin)' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The following statement contains a magic number: Update(resource' new { login = "_ut3"' data = new { a = "b3" }' googleLogin = "google3"' facebookLogin = "facebook3"' githubLogin = "github3"' role = 1' status = 2 }' auth: accessKey);
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update,The following statement contains a magic number: Expect(Get(resource' auth: Admin)' Matches(new { login = "_ut3"' data = new { a = "b3" }' googleLogin = "google3"' facebookLogin = "facebook3"' githubLogin = "github3"' role = 1' status = 2' lastLogin = (DateTime?)null }));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The following statement contains a magic number: Expect(current.Status' Is.EqualTo(403));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The following statement contains a magic number: Expect(Client.Get(ResourceUri + "/current"' auth: User("_ut"' NewUserPassword)).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The following statement contains a magic number: Expect(current.Status' Is.EqualTo(403));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Update_Current,The following statement contains a magic number: Expect(Client.Get(ResourceUri + "/current"' auth: User("_ut"' NewUserPassword + "*")).Status' Is.EqualTo(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get("current")' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { login = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { login = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update("current"' new { })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { login = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { login = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { login = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { login = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List(auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { login = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { login = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,UserTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\UserTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { login = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Get,The following statement contains a magic number: Expect(() => Get(networkId' auth: user1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Get,The following statement contains a magic number: Expect(() => Get(networkId' auth: accessKey1)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Get,The following statement contains a magic number: Expect(() => Get(networkId' auth: accessKey2)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Create_Existing,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: Admin)' FailsWith(403));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Delete,The following statement contains a magic number: Expect(() => Get(resource' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,BadRequest,The following statement contains a magic number: Expect(() => Create(new { name2 = "_ut" }' auth: Admin)' FailsWith(400));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" })' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: user)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => List()' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Create(new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,Unauthorized,The following statement contains a magic number: Expect(() => Delete(UnexistingResourceID' auth: accessKey)' FailsWith(401));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,NotFound,The following statement contains a magic number: Expect(() => Get(UnexistingResourceID' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.ApiTest,NetworkTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\NetworkTest.cs,NotFound,The following statement contains a magic number: Expect(() => Update(UnexistingResourceID' new { name = "_ut" }' auth: Admin)' FailsWith(404));
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: Assert.AreEqual(2' accessKey1.Permissions.Count);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: accessKey.Permissions.Add(new AccessKeyPermission {                 Subnets = new[] { "127.0.0.3" }'                 Domains = new[] { "www.example.com" }'                 Networks = new[] { 1' 2' 3 }});
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: accessKey.Permissions.Add(new AccessKeyPermission {                 Subnets = new[] { "127.0.0.3" }'                 Domains = new[] { "www.example.com" }'                 Networks = new[] { 1' 2' 3 }});
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: Assert.AreEqual(2' accessKey2.Permissions.Count);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: Assert.AreEqual(new[] { 1' 2' 3 }' accessKey2.Permissions[1].Networks);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,AccessKey,The following statement contains a magic number: Assert.AreEqual(new[] { 1' 2' 3 }' accessKey2.Permissions[1].Networks);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,DeviceClass,The following statement contains a magic number: Assert.AreEqual(2' deviceClass1.Equipment.Count);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,DeviceClass,The following statement contains a magic number: deviceClass.OfflineTimeout = 10;
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,DeviceClass,The following statement contains a magic number: Assert.AreEqual(10' deviceClass3.OfflineTimeout);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,DeviceClass,The following statement contains a magic number: Assert.AreEqual(2' deviceClass3.Equipment.Count);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: Assert.Less(Math.Abs(DateTime.UtcNow.Subtract(grant1.Timestamp).TotalMinutes)' 10);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: grant.Networks = new[] { 5' 10 };
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: grant.Networks = new[] { 5' 10 };
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: Assert.AreEqual(2' grant3.Networks.Length);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: Assert.AreEqual(5' grant3.Networks[0]);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,OAuthGrant,The following statement contains a magic number: Assert.AreEqual(10' grant3.Networks[1]);
Magic Number,DeviceHive.Test.DataTest,BaseDataTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\DataTest\BaseDataTest.cs,Timestamp,The following statement contains a magic number: Assert.Less(Math.Abs(DateTime.UtcNow.Subtract(timestamp).TotalMinutes)' 10);
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,ResourceTest,The following statement contains a magic number: ExpectedCreatedStatus = 201;
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,ResourceTest,The following statement contains a magic number: ExpectedUpdatedStatus = 204;
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,ResourceTest,The following statement contains a magic number: ExpectedDeletedStatus = 204;
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,ResourceTest,The following statement contains a magic number: UnexistingResourceID = 999999;
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,List,The following statement contains a magic number: ExpectResponseStatus(response' 200);
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,List,The following statement contains a magic number: ExpectResponseStatus(response' 200);
Magic Number,DeviceHive.Test,ResourceTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\ResourceTest.cs,Get,The following statement contains a magic number: ExpectResponseStatus(response' 200);
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity = new TestClass                  {                      Int = 5'                      IntNullable = 5'                      Bool = true'                      BoolNullable = true'                      DateTime = DateTime.UtcNow'                      DateTimeNullable = DateTime.UtcNow'                      Guid = Guid.NewGuid()'                      GuidNullable = Guid.NewGuid()'                      Enum = TestEnum.Value1'                      EnumNullable = TestEnum.Value1'                      String = "String"'                      IntArray = new[] { 1' 2' 3 }'                      StringArray = new[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity = new TestClass                  {                      Int = 5'                      IntNullable = 5'                      Bool = true'                      BoolNullable = true'                      DateTime = DateTime.UtcNow'                      DateTimeNullable = DateTime.UtcNow'                      Guid = Guid.NewGuid()'                      GuidNullable = Guid.NewGuid()'                      Enum = TestEnum.Value1'                      EnumNullable = TestEnum.Value1'                      String = "String"'                      IntArray = new[] { 1' 2' 3 }'                      StringArray = new[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity = new TestClass                  {                      Int = 5'                      IntNullable = 5'                      Bool = true'                      BoolNullable = true'                      DateTime = DateTime.UtcNow'                      DateTimeNullable = DateTime.UtcNow'                      Guid = Guid.NewGuid()'                      GuidNullable = Guid.NewGuid()'                      Enum = TestEnum.Value1'                      EnumNullable = TestEnum.Value1'                      String = "String"'                      IntArray = new[] { 1' 2' 3 }'                      StringArray = new[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity = new TestClass                  {                      Int = 5'                      IntNullable = 5'                      Bool = true'                      BoolNullable = true'                      DateTime = DateTime.UtcNow'                      DateTimeNullable = DateTime.UtcNow'                      Guid = Guid.NewGuid()'                      GuidNullable = Guid.NewGuid()'                      Enum = TestEnum.Value1'                      EnumNullable = TestEnum.Value1'                      String = "String"'                      IntArray = new[] { 1' 2' 3 }'                      StringArray = new[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity3 = new TestClass                  {                      IntNullable = 5'                      IntNullable2 = 5'                      BoolNullable = true'                      BoolNullable2 = true'                      DateTimeNullable = DateTime.UtcNow'                      DateTimeNullable2 = DateTime.UtcNow'                      GuidNullable = Guid.NewGuid()'                      GuidNullable2 = Guid.NewGuid()'                      EnumNullable = TestEnum.Value1'                      EnumNullable2 = TestEnum.Value1'                      String = "String"'                      String2 = "String"'                      IntArray = new int[] { 1' 2' 3 }'                      StringArray = new string[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity3 = new TestClass                  {                      IntNullable = 5'                      IntNullable2 = 5'                      BoolNullable = true'                      BoolNullable2 = true'                      DateTimeNullable = DateTime.UtcNow'                      DateTimeNullable2 = DateTime.UtcNow'                      GuidNullable = Guid.NewGuid()'                      GuidNullable2 = Guid.NewGuid()'                      EnumNullable = TestEnum.Value1'                      EnumNullable2 = TestEnum.Value1'                      String = "String"'                      String2 = "String"'                      IntArray = new int[] { 1' 2' 3 }'                      StringArray = new string[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity3 = new TestClass                  {                      IntNullable = 5'                      IntNullable2 = 5'                      BoolNullable = true'                      BoolNullable2 = true'                      DateTimeNullable = DateTime.UtcNow'                      DateTimeNullable2 = DateTime.UtcNow'                      GuidNullable = Guid.NewGuid()'                      GuidNullable2 = Guid.NewGuid()'                      EnumNullable = TestEnum.Value1'                      EnumNullable2 = TestEnum.Value1'                      String = "String"'                      String2 = "String"'                      IntArray = new int[] { 1' 2' 3 }'                      StringArray = new string[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,Property,The following statement contains a magic number: var entity3 = new TestClass                  {                      IntNullable = 5'                      IntNullable2 = 5'                      BoolNullable = true'                      BoolNullable2 = true'                      DateTimeNullable = DateTime.UtcNow'                      DateTimeNullable2 = DateTime.UtcNow'                      GuidNullable = Guid.NewGuid()'                      GuidNullable2 = Guid.NewGuid()'                      EnumNullable = TestEnum.Value1'                      EnumNullable2 = TestEnum.Value1'                      String = "String"'                      String2 = "String"'                      IntArray = new int[] { 1' 2' 3 }'                      StringArray = new string[] { "a"' "b"' "c" }'                  };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,RawJsonProperty,The following statement contains a magic number: Assert.That((int)json["rawJson"]' Is.EqualTo(5));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,RawJsonProperty,The following statement contains a magic number: json = new JObject(new JProperty("rawJson"' 5));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,RawJsonProperty,The following statement contains a magic number: json = new JObject(new JProperty("rawJson"' new JArray(1' 2' 3)));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,RawJsonProperty,The following statement contains a magic number: json = new JObject(new JProperty("rawJson"' new JArray(1' 2' 3)));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,RawJsonProperty,The following statement contains a magic number: json = new JObject(new JProperty("rawJson"' new JObject(new JProperty("a"' 5))));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: entity = new TestClass { InnerReference = new TestInnerClass { Int = 5 } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: entity = new TestClass { InnerReference = new TestInnerClass { Int = 5 } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: Assert.That(entity.InnerReference.Int' Is.EqualTo(5));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: entity = new TestClass { InnerReference = new TestInnerClass { Int = 5 } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: json = new JObject(new JProperty("innerReference"' new JObject(new JProperty("int"' 5))));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,ReferenceProperty,The following statement contains a magic number: Assert.That(entity.InnerReference.Int' Is.EqualTo(5));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,CollectionProperty,The following statement contains a magic number: entity = new TestClass { InnerCollection = new List<TestInnerClass> { new TestInnerClass { Int = 5 } } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,CollectionProperty,The following statement contains a magic number: entity = new TestClass { InnerCollection = new List<TestInnerClass> { new TestInnerClass { Int = 5 } } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,CollectionProperty,The following statement contains a magic number: entity = new TestClass { InnerCollection = new List<TestInnerClass> { new TestInnerClass { Int = 5 } } };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,CollectionProperty,The following statement contains a magic number: json = new JObject(new JProperty("innerCollection"' new JArray(new JObject(new JProperty("int"' 5)))));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,CollectionProperty,The following statement contains a magic number: Assert.That(entity.InnerCollection[0].Int' Is.EqualTo(5));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: var entity = new TestClass              {                  Int = 5'                  IntNullable = 5'                  Bool = true'                  BoolNullable = true'                  DateTime = DateTime.UtcNow'                  DateTimeNullable = DateTime.UtcNow'                  Guid = Guid.NewGuid()'                  GuidNullable = Guid.NewGuid()'                  Enum = TestEnum.Value1'                  EnumNullable = TestEnum.Value1'                  String = "String"'              };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: var entity = new TestClass              {                  Int = 5'                  IntNullable = 5'                  Bool = true'                  BoolNullable = true'                  DateTime = DateTime.UtcNow'                  DateTimeNullable = DateTime.UtcNow'                  Guid = Guid.NewGuid()'                  GuidNullable = Guid.NewGuid()'                  Enum = TestEnum.Value1'                  EnumNullable = TestEnum.Value1'                  String = "String"'              };
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: var json = new JObject(                  new JProperty("int"' 5)'                  new JProperty("intNullable"' 5)'                  new JProperty("bool"' true)'                  new JProperty("boolNullable"' true)'                  new JProperty("datetime"' "2012-05-03T06:22:34.000000")'                  new JProperty("datetimeNullable"' "2012-05-03T06:22:34.000000")'                  new JProperty("guid"' Guid.NewGuid().ToString())'                  new JProperty("guidNullable"' Guid.NewGuid().ToString())'                  new JProperty("enum"' 1)'                  new JProperty("enumNullable"' 1)'                  new JProperty("string"' "String"));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: var json = new JObject(                  new JProperty("int"' 5)'                  new JProperty("intNullable"' 5)'                  new JProperty("bool"' true)'                  new JProperty("boolNullable"' true)'                  new JProperty("datetime"' "2012-05-03T06:22:34.000000")'                  new JProperty("datetimeNullable"' "2012-05-03T06:22:34.000000")'                  new JProperty("guid"' Guid.NewGuid().ToString())'                  new JProperty("guidNullable"' Guid.NewGuid().ToString())'                  new JProperty("enum"' 1)'                  new JProperty("enumNullable"' 1)'                  new JProperty("string"' "String"));
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: i < 1000
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: i < 1000
Magic Number,DeviceHive.Test.Mapping,JsonMapperTest,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\Mapping\JsonMapperTest.cs,SpeedTest,The following statement contains a magic number: iteration < 10
Missing Default,DeviceHive.Test,JsonClient,D:\research\architectureSmells\repos\devicehive_devicehive-.net\src\Server\DeviceHive.Test\ApiTest\JsonClient.cs,Run,The following switch statement is missing a default case: switch (auth.Type)                  {                      case "User":                          request.Headers["Authorization"] = "Basic " + Convert.ToBase64String(                              Encoding.UTF8.GetBytes(string.Format("{0}:{1}"' auth.Login' auth.Password)));                          break;                      case "AccessKey":                          request.Headers["Authorization"] = "Bearer " + auth.Login;                          break;                      case "Device":                          request.Headers["Auth-DeviceID"] = auth.Login;                          request.Headers["Auth-DeviceKey"] = auth.Password;                          break;                  }
