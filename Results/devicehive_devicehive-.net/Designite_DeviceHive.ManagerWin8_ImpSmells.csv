Implementation smell,Namespace,Class,File,Method,Description
Long Method,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,LoadState,The method has 105 lines of code.
Complex Method,DeviceHive.ManagerWin8.Common,RichTextColumns,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\RichTextColumns.cs,MeasureOverride,Cyclomatic complexity of the method is 8
Complex Method,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,Cyclomatic complexity of the method is 24
Long Parameter List,DeviceHive.ManagerWin8.Data,SampleDataCommon,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,SampleDataCommon,The method has 5 parameters.
Long Parameter List,DeviceHive.ManagerWin8.Data,SampleDataItem,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,SampleDataItem,The method has 7 parameters.
Long Parameter List,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,SampleDataGroup,The method has 5 parameters.
Long Statement,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,App_CommandsRequested,The length of the statement  "	args.Request.ApplicationCommands.Add (new SettingsCommand ("CloudConnection"' "Cloud connection"' x => ShowCloudSettings ())); " is 126.
Long Statement,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The length of the statement  "			await ClientService.Current.SendCommandAsync (deviceId' command' CommandResultCallback' commandResultCancellatonSource.Token); " is 126.
Long Statement,DeviceHive.ManagerWin8,MainPage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MainPage.xaml.cs,LoadDevices,The length of the statement  "			new MessageDialog (ex.Message + (ex.InnerException != null ? "\n\n" + ex.InnerException.Message : "")' "Error").ShowAsync (); " is 125.
Long Statement,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 246.
Long Statement,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,OnNavigatedTo,The length of the statement  "		this.LoadState (e.Parameter' frameState.ContainsKey (this._pageKey) ? (Dictionary<String' Object>)frameState [this._pageKey] : null); " is 133.
Long Statement,DeviceHive.ManagerWin8.Common,SuspensionManager,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,DeviceHive.ManagerWin8.Common,SuspensionManager,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The length of the statement  "	bool isPortrait = DisplayProperties.CurrentOrientation == DisplayOrientations.Portrait || DisplayProperties.CurrentOrientation == DisplayOrientations.PortraitFlipped; " is 166.
Long Statement,DeviceHive.ManagerWin8.Data,SampleDataSource,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,GetItem,The length of the statement  "	var matches = _sampleDataSource.AllGroups.SelectMany (group => group.Items).Where (item => item.UniqueId.Equals (uniqueId)); " is 124.
Complex Conditional,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Empty Catch Block,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,OnLaunched,The method has an empty catch block.
Empty Catch Block,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,LoadState,The method has an empty catch block.
Empty Catch Block,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,LoadState,The method has an empty catch block.
Magic Number,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,ShowCloudSettings,The following statement contains a magic number: settings.HeaderBackground = new SolidColorBrush (Color.FromArgb (255' 26' 160' 255));  
Magic Number,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,ShowCloudSettings,The following statement contains a magic number: settings.HeaderBackground = new SolidColorBrush (Color.FromArgb (255' 26' 160' 255));  
Magic Number,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,ShowCloudSettings,The following statement contains a magic number: settings.HeaderBackground = new SolidColorBrush (Color.FromArgb (255' 26' 160' 255));  
Magic Number,DeviceHive.ManagerWin8,App,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\App.xaml.cs,ShowCloudSettings,The following statement contains a magic number: settings.HeaderBackground = new SolidColorBrush (Color.FromArgb (255' 26' 160' 255));  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,LoadState,The following statement contains a magic number: filterNotificationsStart = DateTime.Now.AddDays (-7);  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,LoadState,The following statement contains a magic number: filterCommandsStart = DateTime.Now.AddDays (-7);  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,ShowFilterFlyout,The following statement contains a magic number: flyOut.FlyoutPresenterStyle.Setters.Add (new Setter (FlyoutPresenter.PaddingProperty' 10));  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,ShowFilterFlyout,The following statement contains a magic number: filterPanel.Margin = new Thickness (10);  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,ShowFilterFlyout,The following statement contains a magic number: filterPanel.Children.Add (new TextBlock () {  	Text = "Start time"'  	FontSize = 14.8  });  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,ShowFilterFlyout,The following statement contains a magic number: filterPanel.Children.Add (new TextBlock () {  	Text = "End time"'  	FontSize = 14.8'  	Margin = new Thickness (0' 10' 0' 0)  });  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,ShowFilterFlyout,The following statement contains a magic number: filterPanel.Children.Add (new TextBlock () {  	Text = "End time"'  	FontSize = 14.8'  	Margin = new Thickness (0' 10' 0' 0)  });  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: flyOut.FlyoutPresenterStyle.Setters.Add (new Setter (FlyoutPresenter.PaddingProperty' 10));  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: panel.Width = 300;  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: panel.Margin = new Thickness (10);  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: panel.Children.Add (new TextBlock () {  	Text = "Command name"'  	FontSize = 14.8  });  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: panel.Children.Add (new TextBlock () {  	Text = "Params"'  	FontSize = 14.8'  	Margin = new Thickness (0' 10' 0' 0)  });  
Magic Number,DeviceHive.ManagerWin8,DevicePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DevicePage.xaml.cs,SendCommand_Tapped,The following statement contains a magic number: panel.Children.Add (new TextBlock () {  	Text = "Params"'  	FontSize = 14.8'  	Margin = new Thickness (0' 10' 0' 0)  });  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	} else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  } else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,DeviceHive.ManagerWin8.Common,LayoutAwarePage,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: if (isSnapped)  	return 20;  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 20;  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: if (isPortrait)  	return 100;  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 100;  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetMarginForCurrentView,The following statement contains a magic number: return 120;  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: for (int x = margin; x < /*width*/max; x += (tileHeight * 2)) {  	for (int y = 140; y < /*height*/max; y += (tileHeight * 2)) {  		var rect = new Rectangle {  			Width = tileHeight'  			Height = tileHeight'  			VerticalAlignment = VerticalAlignment.Top'  			HorizontalAlignment = HorizontalAlignment.Left'  			Margin = new Thickness (x' y' 0' 0)'  			IsHitTestVisible = false'  			Fill = brush'  		};  		yield return rect;  	}  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: for (int x = margin; x < /*width*/max; x += (tileHeight * 2)) {  	for (int y = 140; y < /*height*/max; y += (tileHeight * 2)) {  		var rect = new Rectangle {  			Width = tileHeight'  			Height = tileHeight'  			VerticalAlignment = VerticalAlignment.Top'  			HorizontalAlignment = HorizontalAlignment.Left'  			Margin = new Thickness (x' y' 0' 0)'  			IsHitTestVisible = false'  			Fill = brush'  		};  		yield return rect;  	}  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: for (int x = margin; x < /*width*/max; x += (tileHeight * 2)) {  	for (int y = 140; y < /*height*/max; y += (tileHeight * 2)) {  		var rect = new Rectangle {  			Width = tileHeight'  			Height = tileHeight'  			VerticalAlignment = VerticalAlignment.Top'  			HorizontalAlignment = HorizontalAlignment.Left'  			Margin = new Thickness (x' y' 0' 0)'  			IsHitTestVisible = false'  			Fill = brush'  		};  		yield return rect;  	}  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: x += (tileHeight * 2)
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: for (int y = 140; y < /*height*/max; y += (tileHeight * 2)) {  	var rect = new Rectangle {  		Width = tileHeight'  		Height = tileHeight'  		VerticalAlignment = VerticalAlignment.Top'  		HorizontalAlignment = HorizontalAlignment.Left'  		Margin = new Thickness (x' y' 0' 0)'  		IsHitTestVisible = false'  		Fill = brush'  	};  	yield return rect;  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: for (int y = 140; y < /*height*/max; y += (tileHeight * 2)) {  	var rect = new Rectangle {  		Width = tileHeight'  		Height = tileHeight'  		VerticalAlignment = VerticalAlignment.Top'  		HorizontalAlignment = HorizontalAlignment.Left'  		Margin = new Thickness (x' y' 0' 0)'  		IsHitTestVisible = false'  		Fill = brush'  	};  	yield return rect;  }  
Magic Number,MC.MetroGridHelper,MetroGridHelper,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\MetroGridHelper.cs,GetGridShapesForMargin,The following statement contains a magic number: y += (tileHeight * 2)
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	if (TopItems.Count > 12) {  		TopItems.RemoveAt (12);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (TopItems.Count > 12) {  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  	TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  } else if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	TopItems.Add (Items [11]);  } else if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.NewStartingIndex < 12) {  	TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  	TopItems.RemoveAt (12);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.RemoveAt (12);  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems.RemoveAt (e.OldStartingIndex);  	if (Items.Count >= 12) {  		TopItems.Add (Items [11]);  	}  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (Items.Count >= 12) {  	TopItems.Add (Items [11]);  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: TopItems.Add (Items [11]);  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: if (e.OldStartingIndex < 12) {  	TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  }  
Magic Number,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following statement contains a magic number: while (TopItems.Count < Items.Count && TopItems.Count < 12) {  	TopItems.Add (Items [TopItems.Count]);  }  
Missing Default,DeviceHive.ManagerWin8.Data,SampleDataGroup,F:\newReposMay17\devicehive_devicehive-.net\src\ManagerWin8\DeviceHive.ManagerWin8\DataModel\SampleDataSource.cs,ItemsCollectionChanged,The following switch statement is missing a default case: switch (e.Action) {  case NotifyCollectionChangedAction.Add:  	if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		if (TopItems.Count > 12) {  			TopItems.RemoveAt (12);  		}  	}  	break;  case NotifyCollectionChangedAction.Move:  	if (e.OldStartingIndex < 12 && e.NewStartingIndex < 12) {  		TopItems.Move (e.OldStartingIndex' e.NewStartingIndex);  	} else if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		TopItems.Add (Items [11]);  	} else if (e.NewStartingIndex < 12) {  		TopItems.Insert (e.NewStartingIndex' Items [e.NewStartingIndex]);  		TopItems.RemoveAt (12);  	}  	break;  case NotifyCollectionChangedAction.Remove:  	if (e.OldStartingIndex < 12) {  		TopItems.RemoveAt (e.OldStartingIndex);  		if (Items.Count >= 12) {  			TopItems.Add (Items [11]);  		}  	}  	break;  case NotifyCollectionChangedAction.Replace:  	if (e.OldStartingIndex < 12) {  		TopItems [e.OldStartingIndex] = Items [e.OldStartingIndex];  	}  	break;  case NotifyCollectionChangedAction.Reset:  	TopItems.Clear ();  	while (TopItems.Count < Items.Count && TopItems.Count < 12) {  		TopItems.Add (Items [TopItems.Count]);  	}  	break;  }  
