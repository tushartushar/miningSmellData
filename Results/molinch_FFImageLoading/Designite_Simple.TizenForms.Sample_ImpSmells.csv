Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Simple.TizenForms.Sample,ComparePage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ComparePage.cs,ComparePage,The following statement contains a magic number: Content =                  new StackLayout()                  {                      Orientation = StackOrientation.Horizontal'                      Children =                      {                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new CachedImage                                  {                                      HeightRequest = 300'                                      ErrorPlaceholder = "error.jpg"'                                      LoadingPlaceholder = "placeholder.jpg"'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new Image                                  {                                      HeightRequest = 300'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(Image.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                      }                  };
Magic Number,Simple.TizenForms.Sample,ComparePage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ComparePage.cs,ComparePage,The following statement contains a magic number: Content =                  new StackLayout()                  {                      Orientation = StackOrientation.Horizontal'                      Children =                      {                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new CachedImage                                  {                                      HeightRequest = 300'                                      ErrorPlaceholder = "error.jpg"'                                      LoadingPlaceholder = "placeholder.jpg"'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new Image                                  {                                      HeightRequest = 300'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(Image.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                      }                  };
Magic Number,Simple.TizenForms.Sample,ComparePage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ComparePage.cs,ComparePage,The following statement contains a magic number: Content =                  new StackLayout()                  {                      Orientation = StackOrientation.Horizontal'                      Children =                      {                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new CachedImage                                  {                                      HeightRequest = 300'                                      ErrorPlaceholder = "error.jpg"'                                      LoadingPlaceholder = "placeholder.jpg"'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new Image                                  {                                      HeightRequest = 300'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(Image.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                      }                  };
Magic Number,Simple.TizenForms.Sample,ComparePage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ComparePage.cs,ComparePage,The following statement contains a magic number: Content =                  new StackLayout()                  {                      Orientation = StackOrientation.Horizontal'                      Children =                      {                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new CachedImage                                  {                                      HeightRequest = 300'                                      ErrorPlaceholder = "error.jpg"'                                      LoadingPlaceholder = "placeholder.jpg"'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                          new ListView {                              HasUnevenRows = false'                              RowHeight = 320'                              ItemsSource = items'                              ItemTemplate = new DataTemplate(() =>                              {                                  var cell = new ViewCell();                                  var label = new Label                                  {                                      VerticalOptions = LayoutOptions.Start'                                      HorizontalOptions = LayoutOptions.FillAndExpand'                                  };                                  var image = new Image                                  {                                      HeightRequest = 300'                                      VerticalOptions = LayoutOptions.CenterAndExpand'                                      HorizontalOptions = LayoutOptions.CenterAndExpand'                                  };                                  label.SetBinding(Label.TextProperty' new Binding("Title"));                                  image.SetBinding(Image.SourceProperty' new Binding("Source"));                                    cell.View = new StackLayout                                  {                                      Children =                                      {                                          label'                                          image                                      }                                  };                                  return cell;                              })                          }'                      }                  };
Magic Number,Simple.TizenForms.Sample,DownSampeTestPage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\DownSampleTestPage.cs,DownSampeTestPage,The following statement contains a magic number: var img = new CachedImage              {                  Source = "http://i.imgur.com/Ddqmjin.jpg"'                  LoadingPlaceholder = "placeholder.jpg"'                  DownsampleUseDipUnits = true'                  DownsampleWidth = 50'              };
Magic Number,Simple.TizenForms.Sample,ListViewPage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ListViewPage.cs,ListViewPage,The following statement contains a magic number: Content = new ListView {                  HasUnevenRows = false'                  RowHeight = 320'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var cell = new ViewCell();                      var label = new Label                      {                          VerticalOptions = LayoutOptions.Start'                          HorizontalOptions = LayoutOptions.FillAndExpand'                      };                      var image = new CachedImage                      {                          HeightRequest = 300'                          ErrorPlaceholder = "error.jpg"'                          LoadingPlaceholder = "placeholder.jpg"'                          VerticalOptions = LayoutOptions.CenterAndExpand'                          HorizontalOptions = LayoutOptions.CenterAndExpand'                      };                      label.SetBinding(Label.TextProperty' new Binding("Title"));                      image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                        cell.View = new StackLayout                      {                          Children =                          {                              label'                              image                          }                      };                        return cell;                  })              };
Magic Number,Simple.TizenForms.Sample,ListViewPage,D:\research\architectureSmells\repos\molinch_FFImageLoading\samples\Simple.TizenForms.Sample\Forms\ListViewPage.cs,ListViewPage,The following statement contains a magic number: Content = new ListView {                  HasUnevenRows = false'                  RowHeight = 320'                  ItemsSource = items'                  ItemTemplate = new DataTemplate(() =>                  {                      var cell = new ViewCell();                      var label = new Label                      {                          VerticalOptions = LayoutOptions.Start'                          HorizontalOptions = LayoutOptions.FillAndExpand'                      };                      var image = new CachedImage                      {                          HeightRequest = 300'                          ErrorPlaceholder = "error.jpg"'                          LoadingPlaceholder = "placeholder.jpg"'                          VerticalOptions = LayoutOptions.CenterAndExpand'                          HorizontalOptions = LayoutOptions.CenterAndExpand'                      };                      label.SetBinding(Label.TextProperty' new Binding("Title"));                      image.SetBinding(CachedImage.SourceProperty' new Binding("Source"));                        cell.View = new StackLayout                      {                          Children =                          {                              label'                              image                          }                      };                        return cell;                  })              };
