Implementation smell,Namespace,Class,File,Method,Description
Long Method,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The method has 156 lines of code.
Complex Method,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,OnMeasure,Cyclomatic complexity of the method is 8
Complex Method,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,Cyclomatic complexity of the method is 21
Long Identifier,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,,The length of the parameter FadeAnimationForCachedImagesProperty is 36.
Long Identifier,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,,The length of the parameter DownloadStartedCommandProperty is 30.
Long Identifier,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,,The length of the parameter DownloadProgressCommandProperty is 31.
Long Identifier,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,,The length of the parameter FileWriteFinishedCommandProperty is 32.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,InvalidateCache,The length of the statement  "                await ImageService.Instance.InvalidateCacheEntryAsync(fileImageSource.File' cacheType' removeSimilar).ConfigureAwait(false); " is 124.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,InvalidateCache,The length of the statement  "                await ImageService.Instance.InvalidateCacheEntryAsync(uriImageSource.Uri.OriginalString' cacheType' removeSimilar).ConfigureAwait(false); " is 137.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,InvalidateCache,The length of the statement  "              await ImageService.Instance.InvalidateCacheEntryAsync(embResourceSource.Uri.OriginalString' cacheType' removeSimilar).ConfigureAwait(false); " is 140.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "                // More here: https://github.com/luberda-molinet/FFImageLoading/wiki/Xamarin.Forms-API#downsampletoviewsize-bool-default-false " is 126.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "                ImageService.Instance.Config.Logger?.Error("DownsampleToViewSize failed - view is expandable in both dimensions' so it doesn't have a size. Please use DownsampleWidth or DownsampleHeight property."); " is 199.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "            imageLoader.DownloadStarted((downloadInformation) => OnDownloadStarted(new CachedImageEvents.DownloadStartedEventArgs(downloadInformation))); " is 141.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "            imageLoader.DownloadProgress((progress) => OnDownloadProgress(new CachedImageEvents.DownloadProgressEventArgs(progress))); " is 122.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "            imageLoader.FileWriteFinished((fileWriteInfo) => OnFileWriteFinished(new CachedImageEvents.FileWriteFinishedEventArgs(fileWriteInfo))); " is 135.
Long Statement,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The length of the statement  "            imageLoader.Success((imageInformation' loadingResult) => OnSuccess(new CachedImageEvents.SuccessEventArgs(imageInformation' loadingResult))); " is 141.
Magic Number,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,SetupOnBeforeImageLoading,The following statement contains a magic number: if (DownsampleToViewSize && (WidthRequest > 0 || HeightRequest > 0))              {                  if (HeightRequest > WidthRequest)                  {                      imageLoader.DownSampleInDip(height: (int)HeightRequest);                  }                  else                  {                      imageLoader.DownSampleInDip(width: (int)WidthRequest);                  }              }              else if (DownsampleToViewSize && (Width > 0 || Height > 0))              {                  if (Height > Width)                  {                      imageLoader.DownSampleInDip(height: (int)Height);                  }                  else                  {                      imageLoader.DownSampleInDip(width: (int)Width);                  }              }              else if ((int)DownsampleHeight != 0 || (int)DownsampleWidth != 0)              {                  if (DownsampleHeight > DownsampleWidth)                  {                      if (DownsampleUseDipUnits)                          imageLoader.DownSampleInDip(height: (int)DownsampleHeight);                      else                          imageLoader.DownSample(height: (int)DownsampleHeight);                  }                  else                  {                      if (DownsampleUseDipUnits)                          imageLoader.DownSampleInDip(width: (int)DownsampleWidth);                      else                          imageLoader.DownSample(width: (int)DownsampleWidth);                  }              }              else if (DownsampleToViewSize)              {                  // Fallback to a constant value due to a lot people misusing DownsampleToViewSize property                  // More here: https://github.com/luberda-molinet/FFImageLoading/wiki/Xamarin.Forms-API#downsampletoviewsize-bool-default-false                  imageLoader.DownSample(height: 100);                    ImageService.Instance.Config.Logger?.Error("DownsampleToViewSize failed - view is expandable in both dimensions' so it doesn't have a size. Please use DownsampleWidth or DownsampleHeight property.");              }
Magic Number,FFImageLoading.Forms,ColorExtensions,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\Extensions\ColorExtensions.cs,ColorToMatrix,The following statement contains a magic number: var rBrightness = brightness == null ? -r / 2 : brightness.Value;
Magic Number,FFImageLoading.Forms,ColorExtensions,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\Extensions\ColorExtensions.cs,ColorToMatrix,The following statement contains a magic number: var gBrightness = brightness == null ? -g / 2 : brightness.Value;
Magic Number,FFImageLoading.Forms,ColorExtensions,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\Extensions\ColorExtensions.cs,ColorToMatrix,The following statement contains a magic number: var bBrightness = brightness == null ? -b / 2 : brightness.Value;
Missing Default,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,OnMeasure,The following switch statement is missing a default case: switch (Aspect)                      {                          case Aspect.AspectFit:                          case Aspect.AspectFill:                              height = Math.Min(desiredHeight' heightConstraint);                              width = desiredWidth * (height / desiredHeight);                              break;                          case Aspect.Fill:                              width = Math.Min(desiredWidth' widthConstraint);                              height = desiredHeight * (width / desiredWidth);                              break;                      }
Missing Default,FFImageLoading.Forms,CachedImage,C:\repos\molinch_FFImageLoading\source\FFImageLoading.Forms\CachedImage.cs,OnMeasure,The following switch statement is missing a default case: switch (Aspect)                      {                          case Aspect.AspectFit:                          case Aspect.AspectFill:                              width = Math.Min(desiredWidth' widthConstraint);                              height = desiredHeight * (width / desiredWidth);                              break;                          case Aspect.Fill:                              height = Math.Min(desiredHeight' heightConstraint);                              width = desiredWidth * (height / desiredHeight);                              break;                      }
