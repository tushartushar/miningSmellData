Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CacheAspect.Attributes,CacheableAttribute,C:\repos\gekowa_Cache\Cache\Attributes\Cacheable.cs,OnEntry,Cyclomatic complexity of the method is 11
Complex Method,CacheAspect,KeyBuilder,C:\repos\gekowa_Cache\Cache\Supporting\KeyBuilder.cs,BuildCacheKey,Cyclomatic complexity of the method is 18
Empty Catch Block,CacheAspect,DiskCache,C:\repos\gekowa_Cache\Cache\Implementations\DiskCache.cs,Delete,The method has an empty catch block.
Empty Catch Block,CacheAspect,DiskCache,C:\repos\gekowa_Cache\Cache\Implementations\DiskCache.cs,Delete,The method has an empty catch block.
Empty Catch Block,CacheAspect,DiskCache,C:\repos\gekowa_Cache\Cache\Implementations\DiskCache.cs,DeleteSimilar,The method has an empty catch block.
Empty Catch Block,CacheAspect,DiskCache,C:\repos\gekowa_Cache\Cache\Implementations\DiskCache.cs,DeleteSimilar,The method has an empty catch block.
Empty Catch Block,CacheAspect,DiskCache,C:\repos\gekowa_Cache\Cache\Implementations\DiskCache.cs,DeleteSimilar,The method has an empty catch block.
Missing Default,CacheAspect,KeyBuilder,C:\repos\gekowa_Cache\Cache\Supporting\KeyBuilder.cs,BuildCacheKey,The following switch statement is missing a default case: switch (Settings) {  case CacheSettings.UseSelectedParameters:  	{  		var parameterName = parameter.Name;  		if (SelectedParameters.Contains (parameterName)) {  			BuildKeyWithArgument (argument' cacheKeyBuilder);  		}  	}  	break;  case CacheSettings.Default:  	BuildKeyWithArgument (argument' cacheKeyBuilder);  	break;  }  
