Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,HawkNet.Owin.Tests,Logger,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,WriteCore,The method has 5 parameters. Parameters: eventType' eventId' state' exception' formatter
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownAuthAttribute,The length of the statement  "                "id = \"123\"' ts = \"1353788437\"' nonce = \"1353788437\"' x = \"3\"' mac = \"/qwS4UjfVWMcUyW6EEgUH4jlr7T/wuKe3dKijvTvSos=\"' ext = \"hello\""}); " is 146.
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownBadMac,The length of the statement  "                "id = \"456\"' ts = \"" + ts + "\"' nonce=\"k3j4h2\"' mac = \"/qwS4UjfVWMcU4jlr7T/wuKe3dKijvTvSos=\"' ext = \"hello\""}); " is 121.
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha1,The length of the statement  "            var mac = Hawk.CalculateMac("example.com"' "get"' new Uri("http://example.com:8080/resource/4?filter=a")' "hello"' ts.ToString()' "j4h3g2"' credential' "header"); " is 162.
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha256,The length of the statement  "            var mac = Hawk.CalculateMac("example.com"' "get"' new Uri("http://example.com:8080/resource/4?filter=a")' "hello"' ts.ToString()' "j4h3g2"' credential' "header"); " is 162.
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderAndPayloadWithSha256,The length of the statement  "            var mac = Hawk.CalculateMac("example.com"' "post"' new Uri("http://example.com:8080/resource/4?filter=a")' "hello"' ts.ToString()' "j4h3g2"' credential' "header"' hash); " is 169.
Long Statement,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldAuthenticateServer,The length of the statement  "            var mac = Hawk.CalculateMac("example.com"' "get"' new Uri("http://example.com:8080/resource/4?filter=a")' "hello"' ts.ToString()' "j4h3g2"' credential' "header"); " is 162.
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldSkipAuthOnWrongAuthScheme,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                  new AppFuncTransition((env) =>                       {                          response.StatusCode = 200;                          return Task.FromResult<object>(null);                      })'                   builder'                   new HawkAuthenticationOptions                  {                      Credentials = GetCredential                  }              );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldSkipAuthOnWrongAuthScheme,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnMissingAuthAttribute,The following statement contains a magic number: response.StatusCode = 401;
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnMissingAuthAttribute,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                  new AppFuncTransition((env) =>                       {                          response.StatusCode = 401;                          return Task.FromResult<object>(null);                      })'                  builder'                  new HawkAuthenticationOptions                  {                      Credentials = GetCredential                  }              );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnMissingAuthAttribute,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownAuthAttribute,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                   new AppFuncTransition((env) =>                   {                       response.StatusCode = 401;                       return Task.FromResult<object>(null);                   })'                  builder'                  new HawkAuthenticationOptions                  {                      Credentials = GetCredential                  }              );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownAuthAttribute,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnInvalidAuthFormat,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                  new AppFuncTransition((env) =>                  {                      response.StatusCode = 401;                      return Task.FromResult<object>(null);                  })'                 builder'                 new HawkAuthenticationOptions                 {                     Credentials = GetCredential                 }              );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnInvalidAuthFormat,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnCredentialsFuncException,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                  new AppFuncTransition((env) =>                  {                      response.StatusCode = 401;                      return Task.FromResult<object>(null);                  })'                 builder'                 new HawkAuthenticationOptions                 {                     Credentials = (id) => { throw new Exception("Invalid"); }                 }              );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnCredentialsFuncException,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnMissingCredentials,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 401;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) => { return null; }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnMissingCredentials,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnInvalidCredentials,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 401;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) =>                                 {                                     return Task.FromResult(new HawkCredential                                     {                                         Key = "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn"'                                         User = "steve"                                     });                                 }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnInvalidCredentials,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownCredentialsAlgorithm,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 401;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) =>                                 {                                     return Task.FromResult(new HawkCredential                                     {                                         Id = "123"'                                         Algorithm = "hmac-sha-0"'                                         Key = "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn"'                                         User = "steve"                                     });                                 }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownCredentialsAlgorithm,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownBadMac,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 401;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) =>                                 {                                     return Task.FromResult(new HawkCredential                                     {                                         Id = "123"'                                         Algorithm = "sha256"'                                         Key = "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn"'                                         User = "steve"                                     });                                 }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldFailOnUnknownBadMac,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldNotReturnChallengeOnEmptyAuthHeaderWithStatusOk,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 200;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) =>                                 {                                     return Task.FromResult(new HawkCredential                                     {                                         Id = "123"'                                         Algorithm = "hmac-sha-0"'                                         Key = "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn"'                                         User = "steve"                                     });                                 }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldNotReturnChallengeOnEmptyAuthHeaderWithStatusOk,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldReturnChallengeOnEmptyAuthHeaderWithStatusUnauthorized,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 401;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) =>                                 {                                     return Task.FromResult(new HawkCredential                                     {                                         Id = "123"'                                         Algorithm = "hmac-sha-0"'                                         Key = "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn"'                                         User = "steve"                                     });                                 }                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldReturnChallengeOnEmptyAuthHeaderWithStatusUnauthorized,The following statement contains a magic number: Assert.AreEqual(401' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha1,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 200;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) => Task.FromResult(credential)                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha1,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha256,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 200;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) => Task.FromResult(credential)                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderWithSha256,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderAndPayloadWithSha256,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 200;                                  return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) => Task.FromResult(credential)                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldParseValidAuthHeaderAndPayloadWithSha256,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldAuthenticateServer,The following statement contains a magic number: var middleware = new HawkAuthenticationMiddleware(                              new AppFuncTransition((env) =>                              {                                  response.StatusCode = 200;                                                                    var content = Encoding.UTF8.GetBytes("foo");                                    response.Body.Write(content' 0' content.Length);                                    return Task.FromResult<object>(null);                              })'                             builder'                             new HawkAuthenticationOptions                             {                                 Credentials = (id) => Task.FromResult(credential)'                                 IncludeServerAuthorization = true'                             }                          );
Magic Number,HawkNet.Owin.Tests,HawkMiddlewareFixture,C:\research\architectureSmells\repos\pcibraro_hawknet\HawkNet.Owin.Tests\HawkAuthenticationHandlerFixture.cs,ShouldAuthenticateServer,The following statement contains a magic number: Assert.AreEqual(200' response.StatusCode);
