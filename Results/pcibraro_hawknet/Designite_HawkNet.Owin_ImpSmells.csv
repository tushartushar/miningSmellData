Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,HawkNet.Owin,HawkAuthenticationHandler,C:\repos\pcibraro_hawknet\HawkNet.Owin\HawkAuthenticationHandler.cs,AuthenticateResponse,The method has 7 parameters. Parameters: authorization' host' method' uri' mediaType' credentials' response
Magic Number,HawkNet.Owin,HawkAuthenticationHandler,C:\repos\pcibraro_hawknet\HawkNet.Owin\HawkAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: if (Response.StatusCode == 200)              {                  if (this.Options.IncludeServerAuthorization)                  {                      var authorization = AuthenticationHeaderValue.Parse(Request.Headers["authorization"]);                        await AuthenticateResponse(authorization.Parameter'                              Request.Host.Value'                              Request.Method'                              Request.Uri'                              Response.ContentType'                              this.Options.Credentials'                              Response);                  }              }              else if (Response.StatusCode == 401)              {                  var ts = Hawk.ConvertToUnixTimestamp(DateTime.Now).ToString();                  var challenge = string.Format("ts=\"{0}\" ntp=\"{1}\""'                          ts' "pool.ntp.org");                    Response.Headers.Append("WWW-Authenticate"' HawkAuthenticationOptions.Scheme + " " + challenge);              }
Magic Number,HawkNet.Owin,HawkAuthenticationHandler,C:\repos\pcibraro_hawknet\HawkNet.Owin\HawkAuthenticationHandler.cs,ApplyResponseChallengeAsync,The following statement contains a magic number: if (Response.StatusCode == 200)              {                  if (this.Options.IncludeServerAuthorization)                  {                      var authorization = AuthenticationHeaderValue.Parse(Request.Headers["authorization"]);                        await AuthenticateResponse(authorization.Parameter'                              Request.Host.Value'                              Request.Method'                              Request.Uri'                              Response.ContentType'                              this.Options.Credentials'                              Response);                  }              }              else if (Response.StatusCode == 401)              {                  var ts = Hawk.ConvertToUnixTimestamp(DateTime.Now).ToString();                  var challenge = string.Format("ts=\"{0}\" ntp=\"{1}\""'                          ts' "pool.ntp.org");                    Response.Headers.Append("WWW-Authenticate"' HawkAuthenticationOptions.Scheme + " " + challenge);              }
Magic Number,HawkNet.Owin,HawkAuthenticationHandler,C:\repos\pcibraro_hawknet\HawkNet.Owin\HawkAuthenticationHandler.cs,UnixTimeStampToDateTime,The following statement contains a magic number: var datetime = new DateTime(1970' 1' 1' 0' 0' 0' 0);
Magic Number,HawkNet.Owin,HawkAuthenticationOptions,C:\repos\pcibraro_hawknet\HawkNet.Owin\HawkAuthenticationOptions.cs,HawkAuthenticationOptions,The following statement contains a magic number: this.TimeskewInSeconds = 60;
