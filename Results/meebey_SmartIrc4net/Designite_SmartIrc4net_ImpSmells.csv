Implementation smell,Namespace,Class,File,Method,Description
Long Method,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The method has 193 lines of code.
Long Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The method has 137 lines of code.
Long Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_GetMessageType,The method has 161 lines of code.
Long Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_HandleEvents,The method has 135 lines of code.
Long Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The method has 470 lines of code.
Long Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,The method has 130 lines of code.
Complex Method,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,Cyclomatic complexity of the method is 12
Complex Method,Meebey.SmartIrc4net,IrcCommands,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcCommands\IrcCommands.cs,Mode,Cyclomatic complexity of the method is 10
Complex Method,Meebey.SmartIrc4net,Rfc2812,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcCommands\Rfc2812.cs,Mode,Cyclomatic complexity of the method is 11
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,Cyclomatic complexity of the method is 18
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_UnescapeTagValue,Cyclomatic complexity of the method is 8
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_GetMessageType,Cyclomatic complexity of the method is 35
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_HandleEvents,Cyclomatic complexity of the method is 39
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,Cyclomatic complexity of the method is 87
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_JOIN,Cyclomatic complexity of the method is 10
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_KICK,Cyclomatic complexity of the method is 8
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,Cyclomatic complexity of the method is 11
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_NICK,Cyclomatic complexity of the method is 12
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,Cyclomatic complexity of the method is 25
Complex Method,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_WHOREPLY,Cyclomatic complexity of the method is 8
Complex Method,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,Cyclomatic complexity of the method is 12
Complex Method,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,InitWork,Cyclomatic complexity of the method is 8
Complex Method,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpDccDelegate,Cyclomatic complexity of the method is 14
Complex Method,Meebey.SmartIrc4net,ServerProperties,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\ServerProperties.cs,ParseStringNumberPairs,Cyclomatic complexity of the method is 8
Complex Method,Meebey.SmartIrc4net,ChannelModeChangeInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\ChannelModeChangeInfo.cs,Parse,Cyclomatic complexity of the method is 11
Long Parameter List,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,Login,The method has 5 parameters. Parameters: nicklist' realname' usermode' username' password
Long Parameter List,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,Login,The method has 5 parameters. Parameters: nick' realname' usermode' username' password
Long Parameter List,Meebey.SmartIrc4net,IrcMessageData,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcMessageData.cs,IrcMessageData,The method has 11 parameters. Parameters: ircclient' from' nick' ident' host' channel' message' rawmessage' type' replycode' tags
Long Parameter List,Meebey.SmartIrc4net,KickEventArgs,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\EventArgs.cs,KickEventArgs,The method has 5 parameters. Parameters: data' channel' who' whom' kickreason
Long Parameter List,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The method has 5 parameters. Parameters: irc' user' externalIpAdress' passive' priority
Long Parameter List,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The method has 9 parameters. Parameters: irc' user' externalIpAdress' file' filename' filesize' speed' passive' priority
Long Parameter List,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,SendFile,The method has 6 parameters. Parameters: user' file' filename' filesize' speed' passive
Long Parameter List,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,SendFile,The method has 7 parameters. Parameters: user' file' filename' filesize' speed' passive' priority
Long Parameter List,Meebey.SmartIrc4net,PrimaryOrFallbackEncoding,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\PrimaryOrFallbackEncoding.cs,GetBytes,The method has 5 parameters. Parameters: chars' charIndex' charCount' bytes' byteIndex
Long Parameter List,Meebey.SmartIrc4net,PrimaryOrFallbackEncoding,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\PrimaryOrFallbackEncoding.cs,GetChars,The method has 5 parameters. Parameters: bytes' byteIndex' byteCount' chars' charIndex
Long Identifier,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,,The length of the parameter _InviteExceptListReceivedEvent is 30.
Long Statement,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The length of the statement  "                    LocalCertificateSelectionCallback selectionCallback = delegate(object sender' string targetHost' X509CertificateCollection localCertificates' X509Certificate remoteCertificate' string[] acceptableIssuers) { " is 206.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                    Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                    Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                        Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                    Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_InterpretChannelMode,The length of the statement  "                                    Logger.ChannelSyncing.Error("_InterpretChannelMode(): GetChannelUser(" + ircdata.Channel + "'" + temp + ") returned null! Ignoring..."); " is 136.
Long Statement,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,The length of the statement  "                        Logger.ChannelSyncing.Debug("creating ChannelUser: "+nickname+" for Channel: "+channelname+" because he doesn't exist yet"); " is 124.
Long Statement,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,AcceptRequest,The length of the statement  "                    Irc.SendMessage(SendType.CtcpRequest' User' "DCC CHAT chat " + HostToDccInt(ExternalIPAdress).ToString() + " " + LocalEndPoint.Port); " is 133.
Long Statement,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,ToString,The length of the statement  "            return "DCC Session " + session + " of " + this.GetType().ToString() + " is " + ((isConnected)?"connected to "+RemoteEndPoint.Address.ToString():"not connected") + "[" + this.User + "]"; " is 186.
Long Statement,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,AcceptRequest,The length of the statement  "                    Irc.SendMessage(SendType.CtcpRequest' User' "DCC SEND \"" + _Filename + "\" " + HostToDccInt(ExternalIPAdress).ToString() + " " + LocalEndPoint.Port + " " + _Filesize); " is 168.
Long Statement,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The length of the statement  "                            Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + e.Data.MessageArray[4] + " " + FilterMarker(e.Data.MessageArray[5])); " is 198.
Long Statement,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The length of the statement  "                            Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + FilterMarker(e.Data.MessageArray[4])); " is 167.
Long Statement,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,SendFile,The length of the statement  "                this.SendFile(user' new FileStream(filepath' FileMode.Open)' fi.Name' fi.Length' DccSpeed.RfcSendAhead' false' Priority.Medium); " is 128.
Long Statement,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,SendFile,The length of the statement  "                this.SendFile(user' new FileStream(filepath' FileMode.Open)' fi.Name' fi.Length' DccSpeed.RfcSendAhead' passive' Priority.Medium); " is 130.
Long Statement,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpSourceDelegate,The length of the statement  "            SendMessage(SendType.CtcpReply' e.Data.Nick' "SOURCE " + ((CtcpSource==null)?"http://smartirc4net.meebey.net":CtcpSource)); " is 123.
Long Statement,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpFingerDelegate,The length of the statement  "            //SendMessage(SendType.CtcpReply' e.Data.Nick' "FINGER " + this.Realname + " (" + this.Email + ") Idle " + this.Idle + " seconds (" + ((string.IsNullOrEmpty(this.Reason))?this.Reason:"-") + ") " ); " is 197.
Complex Conditional,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The conditional expression  "_AutoRetry &&                      (_AutoRetryLimit == -1 ||                       _AutoRetryLimit == 0 ||                       _AutoRetryLimit <= _AutoRetryAttempt)"  is complex.
Complex Conditional,Meebey.SmartIrc4net,WriteThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_CheckBuffer,The conditional expression  "_CheckHighBuffer() &&                      _CheckAboveMediumBuffer() &&                      _CheckMediumBuffer() &&                      _CheckBelowMediumBuffer() &&                      _CheckLowBuffer()"  is complex.
Complex Conditional,Meebey.SmartIrc4net,WriteThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_CheckLowBuffer,The conditional expression  "(_HighCount > 0) ||                          (_AboveMediumCount > 0) ||                          (_MediumCount > 0) ||                          (_BelowMediumCount > 0)"  is complex.
Complex Conditional,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_JOIN,The conditional expression  "who == "anonymous" &&                      ircdata.Ident == "anonymous" &&                      ircdata.Host == "anonymous." &&                      IsJoined(channelname' who)"  is complex.
Complex Conditional,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PART,The conditional expression  "who == "anonymous" &&                          ircdata.Ident == "anonymous" &&                          ircdata.Host == "anonymous." &&                          !IsJoined(channel' who)"  is complex.
Virtual Method Call from Constructor,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The constructor "DccChat" calls a virtual method "DccChatRequestEvent".
Virtual Method Call from Constructor,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The constructor "DccSend" calls a virtual method "DccSendRequestEvent".
Empty Catch Block,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The method has an empty catch block.
Empty Catch Block,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The method has an empty catch block.
Empty Catch Block,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_OnConnectionError,The method has an empty catch block.
Empty Catch Block,Meebey.SmartIrc4net,ReadThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Stop,The method has an empty catch block.
Empty Catch Block,Meebey.SmartIrc4net,WriteThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Stop,The method has an empty catch block.
Empty Catch Block,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_OnConnectionError,The method has an empty catch block.
Magic Number,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The following statement contains a magic number: _TcpClient.ReceiveTimeout = _SocketReceiveTimeout * 1000;
Magic Number,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,Connect,The following statement contains a magic number: _TcpClient.SendTimeout = _SocketSendTimeout * 1000;
Magic Number,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_SimpleParser,The following statement contains a magic number: line = rawline.Substring(prefix.Length + 2);
Magic Number,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_OnConnectionError,The following statement contains a magic number: Thread.Sleep(AutoRetryDelay * 1000);
Magic Number,Meebey.SmartIrc4net,WriteThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_CheckBuffer,The following statement contains a magic number: _BurstCount < 3
Magic Number,Meebey.SmartIrc4net,IdleWorkerThread,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_Worker,The following statement contains a magic number: Thread.Sleep(_Connection._IdleWorkerInterval * 1000);
Magic Number,Meebey.SmartIrc4net,Rfc2812,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcCommands\Rfc2812.cs,Mode,The following statement contains a magic number: int maxModeChanges = 3;
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following statement contains a magic number: switch (type) {                  case ReceiveType.Join:                  case ReceiveType.Kick:                  case ReceiveType.Part:                  case ReceiveType.TopicChange:                  case ReceiveType.ChannelModeChange:                  case ReceiveType.ChannelMessage:                  case ReceiveType.ChannelAction:                  case ReceiveType.ChannelNotice:                      channel = linear[2];                  break;                  case ReceiveType.Who:                  case ReceiveType.Topic:                  case ReceiveType.Invite:                  case ReceiveType.BanList:                  case ReceiveType.ChannelMode:                      channel = linear[3];                  break;                  case ReceiveType.Name:                      channel = linear[4];                  break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following statement contains a magic number: switch (type) {                  case ReceiveType.Join:                  case ReceiveType.Kick:                  case ReceiveType.Part:                  case ReceiveType.TopicChange:                  case ReceiveType.ChannelModeChange:                  case ReceiveType.ChannelMessage:                  case ReceiveType.ChannelAction:                  case ReceiveType.ChannelNotice:                      channel = linear[2];                  break;                  case ReceiveType.Who:                  case ReceiveType.Topic:                  case ReceiveType.Invite:                  case ReceiveType.BanList:                  case ReceiveType.ChannelMode:                      channel = linear[3];                  break;                  case ReceiveType.Name:                      channel = linear[4];                  break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following statement contains a magic number: switch (type) {                  case ReceiveType.Join:                  case ReceiveType.Kick:                  case ReceiveType.Part:                  case ReceiveType.TopicChange:                  case ReceiveType.ChannelModeChange:                  case ReceiveType.ChannelMessage:                  case ReceiveType.ChannelAction:                  case ReceiveType.ChannelNotice:                      channel = linear[2];                  break;                  case ReceiveType.Who:                  case ReceiveType.Topic:                  case ReceiveType.Invite:                  case ReceiveType.BanList:                  case ReceiveType.ChannelMode:                      channel = linear[3];                  break;                  case ReceiveType.Name:                      channel = linear[4];                  break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following statement contains a magic number: switch (replycode) {                  case ReplyCode.List:                  case ReplyCode.ListEnd:                  case ReplyCode.ErrorNoChannelModes:                  case ReplyCode.InviteList:                  case ReplyCode.ExceptionList:                      channel = linear[3];                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_UnescapeTagValue,The following statement contains a magic number: sequence = tagValue.Substring(pos' 2);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_GetMessageType,The following statement contains a magic number: switch (replycode) {                      case ReplyCode.Welcome:                      case ReplyCode.YourHost:                      case ReplyCode.Created:                      case ReplyCode.MyInfo:                      case ReplyCode.Bounce:                          return ReceiveType.Login;                      case ReplyCode.LuserClient:                      case ReplyCode.LuserOp:                      case ReplyCode.LuserUnknown:                      case ReplyCode.LuserMe:                      case ReplyCode.LuserChannels:                          return ReceiveType.Info;                      case ReplyCode.MotdStart:                      case ReplyCode.Motd:                      case ReplyCode.EndOfMotd:                          return ReceiveType.Motd;                      case ReplyCode.NamesReply:                      case ReplyCode.EndOfNames:                          return ReceiveType.Name;                      case ReplyCode.WhoReply:                      case ReplyCode.EndOfWho:                          return ReceiveType.Who;                      case ReplyCode.ListStart:                      case ReplyCode.List:                      case ReplyCode.ListEnd:                          return ReceiveType.List;                      case ReplyCode.BanList:                      case ReplyCode.EndOfBanList:                          return ReceiveType.BanList;                      case ReplyCode.Topic:                      case ReplyCode.NoTopic:                          return ReceiveType.Topic;                      case ReplyCode.WhoIsUser:                      case ReplyCode.WhoIsServer:                      case ReplyCode.WhoIsOperator:                      case ReplyCode.WhoIsIdle:                      case ReplyCode.WhoIsChannels:                      case ReplyCode.EndOfWhoIs:                          return ReceiveType.WhoIs;                      case ReplyCode.WhoWasUser:                      case ReplyCode.EndOfWhoWas:                          return ReceiveType.WhoWas;                      case ReplyCode.UserModeIs:                          return ReceiveType.UserMode;                      case ReplyCode.ChannelModeIs:                          return ReceiveType.ChannelMode;                      default:                          if (((int)replycode >= 400) &&                              ((int)replycode <= 599)) {                              return ReceiveType.ErrorMessage;                          } else {  #if LOG4NET                              Logger.MessageTypes.Debug("replycode unknown ("+code+"): \""+rawline+"\"");  #endif                              return ReceiveType.Unknown;                          }                                          }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_GetMessageType,The following statement contains a magic number: switch (replycode) {                      case ReplyCode.Welcome:                      case ReplyCode.YourHost:                      case ReplyCode.Created:                      case ReplyCode.MyInfo:                      case ReplyCode.Bounce:                          return ReceiveType.Login;                      case ReplyCode.LuserClient:                      case ReplyCode.LuserOp:                      case ReplyCode.LuserUnknown:                      case ReplyCode.LuserMe:                      case ReplyCode.LuserChannels:                          return ReceiveType.Info;                      case ReplyCode.MotdStart:                      case ReplyCode.Motd:                      case ReplyCode.EndOfMotd:                          return ReceiveType.Motd;                      case ReplyCode.NamesReply:                      case ReplyCode.EndOfNames:                          return ReceiveType.Name;                      case ReplyCode.WhoReply:                      case ReplyCode.EndOfWho:                          return ReceiveType.Who;                      case ReplyCode.ListStart:                      case ReplyCode.List:                      case ReplyCode.ListEnd:                          return ReceiveType.List;                      case ReplyCode.BanList:                      case ReplyCode.EndOfBanList:                          return ReceiveType.BanList;                      case ReplyCode.Topic:                      case ReplyCode.NoTopic:                          return ReceiveType.Topic;                      case ReplyCode.WhoIsUser:                      case ReplyCode.WhoIsServer:                      case ReplyCode.WhoIsOperator:                      case ReplyCode.WhoIsIdle:                      case ReplyCode.WhoIsChannels:                      case ReplyCode.EndOfWhoIs:                          return ReceiveType.WhoIs;                      case ReplyCode.WhoWasUser:                      case ReplyCode.EndOfWhoWas:                          return ReceiveType.WhoWas;                      case ReplyCode.UserModeIs:                          return ReceiveType.UserMode;                      case ReplyCode.ChannelModeIs:                          return ReceiveType.ChannelMode;                      default:                          if (((int)replycode >= 400) &&                              ((int)replycode <= 599)) {                              return ReceiveType.ErrorMessage;                          } else {  #if LOG4NET                              Logger.MessageTypes.Debug("replycode unknown ("+code+"): \""+rawline+"\"");  #endif                              return ReceiveType.Unknown;                          }                                          }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_KICK,The following statement contains a magic number: string whom = ircdata.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_NOTICE,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelNotice:                      if (OnChannelNotice != null) {                          OnChannelNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryNotice:                      if (OnQueryNotice != null) {                          OnQueryNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.CtcpReply:                      if (OnCtcpReply != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpReply(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_NOTICE,The following statement contains a magic number: switch (ircdata.Type) {                  case ReceiveType.ChannelNotice:                      if (OnChannelNotice != null) {                          OnChannelNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryNotice:                      if (OnQueryNotice != null) {                          OnQueryNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.CtcpReply:                      if (OnCtcpReply != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpReply(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_NICK,The following statement contains a magic number: string newnickname = ircdata.RawMessageArray[2];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_MODE,The following statement contains a magic number: _Usermode = ircdata.RawMessageArray[3].Substring(1);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_MODE,The following statement contains a magic number: IsMe(ircdata.RawMessageArray[2])
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_CHANNELMODEIS,The following statement contains a magic number: string mode = ircdata.RawMessageArray[4];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_CHANNELMODEIS,The following statement contains a magic number: string parameter = String.Join(" "' ircdata.RawMessageArray' 5' ircdata.RawMessageArray.Length-5);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_CHANNELMODEIS,The following statement contains a magic number: string parameter = String.Join(" "' ircdata.RawMessageArray' 5' ircdata.RawMessageArray.Length-5);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_WELCOME,The following statement contains a magic number: _Nickname = ircdata.RawMessageArray[2];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,The following statement contains a magic number: userlist = new string[] { ircdata.RawMessageArray[5] };
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,The following statement contains a magic number: ircdata.RawMessageArray.Length > 5
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_LIST,The following statement contains a magic number: int userCount = Int32.Parse(ircdata.RawMessageArray[4]);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_ENDOFNAMES,The following statement contains a magic number: string channelname = ircdata.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_AWAY,The following statement contains a magic number: string who = ircdata.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_ERR_NOCHANMODES,The following statement contains a magic number: string channelname = ircdata.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_ERR_NICKNAMEINUSE,The following statement contains a magic number: int number = rand.Next(999);
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_ERR_NICKNAMEINUSE,The following statement contains a magic number: nickname = Nickname.Substring(0' 5)+number;
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_ERR_NICKNAMEINUSE,The following statement contains a magic number: Nickname.Length > 5
Magic Number,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_BOUNCE,The following statement contains a magic number: port = int.Parse(match.Groups [2].Value);
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: whoInfo.f_Channel  = data.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: whoInfo.f_Ident    = data.RawMessageArray[4];
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: whoInfo.f_Host     = data.RawMessageArray[5];
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: whoInfo.f_Server   = data.RawMessageArray[6];
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: whoInfo.f_Nick     = data.RawMessageArray[7];
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: data.MessageArray == null || data.MessageArray.Length < 2
Magic Number,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following statement contains a magic number: string usermode = data.RawMessageArray[8];
Magic Number,Meebey.SmartIrc4net,BanInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\BanInfo.cs,Parse,The following statement contains a magic number: info.f_Channel = data.RawMessageArray[3];
Magic Number,Meebey.SmartIrc4net,BanInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\BanInfo.cs,Parse,The following statement contains a magic number: info.f_Mask= data.RawMessageArray[4];
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: bool okIP = long.TryParse(e.Data.MessageArray[3]' out ip);
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: bool okPo = int.TryParse(FilterMarker(e.Data.MessageArray[4])' out port);
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: e.Data.MessageArray.Length > 5 && e.Data.MessageArray[5] != "T"
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: e.Data.MessageArray.Length > 5 && e.Data.MessageArray[5] != "T"
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: (e.Data.MessageArray[2]=="chat") && okIP && okPo
Magic Number,Meebey.SmartIrc4net,DccChat,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccChat.cs,DccChat,The following statement contains a magic number: e.Data.MessageArray.Length > 4
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,DccConnection,The following statement contains a magic number: Timeout = DateTime.Now.AddSeconds(120);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,HostToDccInt,The following statement contains a magic number: long temp = (ip.Address & 0xff) << 24;
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,HostToDccInt,The following statement contains a magic number: temp |= (ip.Address & 0xff00)  << 8;
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,HostToDccInt,The following statement contains a magic number: temp |= (ip.Address >> 8)  & 0xff00;
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,HostToDccInt,The following statement contains a magic number: temp |= (ip.Address >> 24)  & 0xff;
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,DccIntToHost,The following statement contains a magic number: IPEndPoint ep = new IPEndPoint(ip' 80);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,DccIntToHost,The following statement contains a magic number: return ipparts[3] + "." + ipparts[2] + "." + ipparts[1] + "." + ipparts[0];
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,DccIntToHost,The following statement contains a magic number: return ipparts[3] + "." + ipparts[2] + "." + ipparts[1] + "." + ipparts[0];
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: byte[] acks = new byte[4];
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[0] = (byte)((SentBytes >>24 ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[0] = (byte)((SentBytes >>24 ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[1] = (byte)((SentBytes >>16 ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[1] = (byte)((SentBytes >>16 ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[2] = (byte)((SentBytes >>8  ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[2] = (byte)((SentBytes >>8  ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[2] = (byte)((SentBytes >>8  ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[3] = (byte)((SentBytes      ) % 256);
Magic Number,Meebey.SmartIrc4net,DccConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccConnection.cs,getAck,The following statement contains a magic number: acks[3] = (byte)((SentBytes      ) % 256);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: bool okIP = long.TryParse(e.Data.MessageArray[3]' out ip);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: bool okPo = int.TryParse(e.Data.MessageArray[4]' out port);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: bool okFs = long.TryParse(FilterMarker(e.Data.MessageArray[5])' out filesize);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: _Filename = e.Data.MessageArray[2].Trim(new char[] {'\"'});
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: e.Data.MessageArray.Length > 5
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: DccSendRequestEvent(new DccSendRequestEventArgs(this' e.Data.MessageArray[2]' filesize));
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,DccSend,The following statement contains a magic number: e.Data.MessageArray.Length > 4
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: long.TryParse(FilterMarker(e.Data.MessageArray[4])' out offset);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + e.Data.MessageArray[4] + " " + FilterMarker(e.Data.MessageArray[5]));
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + e.Data.MessageArray[4] + " " + FilterMarker(e.Data.MessageArray[5]));
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + e.Data.MessageArray[4] + " " + FilterMarker(e.Data.MessageArray[5]));
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: Irc.SendMessage(SendType.CtcpRequest' e.Data.Nick' "DCC ACCEPT " + e.Data.MessageArray[2] + " " + e.Data.MessageArray[3] + " " + e.Data.MessageArray[4] + " " + FilterMarker(e.Data.MessageArray[5]));
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: e.Data.MessageArray.Length > 5
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: (e.Data.MessageArray.Length > 4) && (_Filename == e.Data.MessageArray[2].Trim(new char[] {'\"'}))
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryResume,The following statement contains a magic number: (e.Data.MessageArray.Length > 4) && (_Filename == e.Data.MessageArray[2].Trim(new char[] {'\"'}))
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryAccept,The following statement contains a magic number: (e.Data.MessageArray.Length > 4) && (_Filename == e.Data.MessageArray[2].Trim(new char[] {'\"'}))
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,TryAccept,The following statement contains a magic number: (e.Data.MessageArray.Length > 4) && (_Filename == e.Data.MessageArray[2].Trim(new char[] {'\"'}))
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,SetRemote,The following statement contains a magic number: bool okIP = long.TryParse(e.Data.MessageArray[3]' out ip);
Magic Number,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,SetRemote,The following statement contains a magic number: bool okPo = int.TryParse(e.Data.MessageArray[4]' out port);
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpPingDelegate,The following statement contains a magic number: SendMessage(SendType.CtcpReply' e.Data.Nick' "PING "+e.Data.Message.Substring(6' (e.Data.Message.Length-7)));
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpPingDelegate,The following statement contains a magic number: SendMessage(SendType.CtcpReply' e.Data.Nick' "PING "+e.Data.Message.Substring(6' (e.Data.Message.Length-7)));
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpPingDelegate,The following statement contains a magic number: e.Data.Message.Length > 7
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpRfcPingDelegate,The following statement contains a magic number: SendMessage(SendType.CtcpReply' e.Data.Nick' "PONG "+e.Data.Message.Substring(6' (e.Data.Message.Length-7)));
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpRfcPingDelegate,The following statement contains a magic number: SendMessage(SendType.CtcpReply' e.Data.Nick' "PONG "+e.Data.Message.Substring(6' (e.Data.Message.Length-7)));
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpRfcPingDelegate,The following statement contains a magic number: e.Data.Message.Length > 7
Magic Number,Meebey.SmartIrc4net,IrcFeatures,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\IrcFeatures.cs,CtcpDccDelegate,The following statement contains a magic number: e.Data.MessageArray.Length < 2
Magic Number,Meebey.SmartIrc4net,ServerProperties,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\ServerProperties.cs,ParseStringNumberPairs,The following statement contains a magic number: split.Length != 2
Magic Number,Meebey.SmartIrc4net,ChannelModeMap,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\ChannelModeChangeInfo.cs,Parse,The following statement contains a magic number: var onlySet = channelModes.Split(''')[2];
Magic Number,Meebey.SmartIrc4net,ChannelModeMap,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\ChannelModeChangeInfo.cs,Parse,The following statement contains a magic number: var never = channelModes.Split(''')[3];
Missing Default,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_SimpleParser,The following switch statement is missing a default case: switch (replycode) {                      case ReplyCode.Welcome:                          _IsRegistered = true;  #if LOG4NET                          Logger.Connection.Info("logged in");  #endif                          break;                  }
Missing Default,Meebey.SmartIrc4net,IrcConnection,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcConnection\IrcConnection.cs,_SimpleParser,The following switch statement is missing a default case: switch (command) {                      case "ERROR":                          // FIXME: handle server errors differently than connection errors!                          //IsConnectionError = true;                          break;                      case "PONG":                          PingStopwatch.Stop();                          NextPingStopwatch.Reset();                          NextPingStopwatch.Start();    #if LOG4NET                          Logger.Connection.Debug("PONG received' took: " + PingStopwatch.ElapsedMilliseconds + " ms");  #endif                          break;                  }
Missing Default,Meebey.SmartIrc4net,IrcCommands,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcCommands\IrcCommands.cs,SendMessage,The following switch statement is missing a default case: switch(type) {                  case SendType.Message:                      RfcPrivmsg(destination' message' priority);                  break;                  case SendType.Action:                      RfcPrivmsg(destination' "\x1"+"ACTION "+message+"\x1"' priority);                  break;                  case SendType.Notice:                      RfcNotice(destination' message' priority);                  break;                  case SendType.CtcpRequest:                      RfcPrivmsg(destination' "\x1"+message+"\x1"' priority);                  break;                  case SendType.CtcpReply:                      RfcNotice(destination' "\x1"+message+"\x1"' priority);                  break;              }
Missing Default,Meebey.SmartIrc4net,IrcCommands,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcCommands\IrcCommands.cs,SendReply,The following switch statement is missing a default case: switch (data.Type) {                  case ReceiveType.ChannelMessage:                      SendMessage(SendType.Message' data.Channel' message' priority);                  break;                  case ReceiveType.QueryMessage:                      SendMessage(SendType.Message' data.Nick' message' priority);                  break;                  case ReceiveType.QueryNotice:                      SendMessage(SendType.Notice' data.Nick' message' priority);                  break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following switch statement is missing a default case: switch (type) {                  case ReceiveType.Join:                  case ReceiveType.Kick:                  case ReceiveType.Part:                  case ReceiveType.TopicChange:                  case ReceiveType.ChannelModeChange:                  case ReceiveType.ChannelMessage:                  case ReceiveType.ChannelAction:                  case ReceiveType.ChannelNotice:                      channel = linear[2];                  break;                  case ReceiveType.Who:                  case ReceiveType.Topic:                  case ReceiveType.Invite:                  case ReceiveType.BanList:                  case ReceiveType.ChannelMode:                      channel = linear[3];                  break;                  case ReceiveType.Name:                      channel = linear[4];                  break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,MessageParser,The following switch statement is missing a default case: switch (replycode) {                  case ReplyCode.List:                  case ReplyCode.ListEnd:                  case ReplyCode.ErrorNoChannelModes:                  case ReplyCode.InviteList:                  case ReplyCode.ExceptionList:                      channel = linear[3];                      break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_HandleEvents,The following switch statement is missing a default case: switch (code) {                  case "PING":                      _Event_PING(ircdata);                  break;                  case "ERROR":                      _Event_ERROR(ircdata);                  break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_HandleEvents,The following switch statement is missing a default case: switch (code) {                  case "PRIVMSG":                      _Event_PRIVMSG(ircdata);                  break;                  case "NOTICE":                      _Event_NOTICE(ircdata);                  break;                  case "JOIN":                      _Event_JOIN(ircdata);                  break;                  case "PART":                      _Event_PART(ircdata);                  break;                  case "KICK":                      _Event_KICK(ircdata);                  break;                  case "QUIT":                      _Event_QUIT(ircdata);                  break;                  case "TOPIC":                      _Event_TOPIC(ircdata);                  break;                  case "NICK":                      _Event_NICK(ircdata);                  break;                  case "INVITE":                      _Event_INVITE(ircdata);                  break;                  case "MODE":                      _Event_MODE(ircdata);                  break;                  case "PONG":                      _Event_PONG(ircdata);                  break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_HandleEvents,The following switch statement is missing a default case: switch (ircdata.ReplyCode) {                      case ReplyCode.Welcome:                          _Event_RPL_WELCOME(ircdata);                          break;                      case ReplyCode.Topic:                          _Event_RPL_TOPIC(ircdata);                          break;                      case ReplyCode.NoTopic:                          _Event_RPL_NOTOPIC(ircdata);                          break;                      case ReplyCode.NamesReply:                          _Event_RPL_NAMREPLY(ircdata);                          break;                      case ReplyCode.EndOfNames:                          _Event_RPL_ENDOFNAMES(ircdata);                          break;                      case ReplyCode.List:                          _Event_RPL_LIST(ircdata);                          break;                      case ReplyCode.ListEnd:                          _Event_RPL_LISTEND(ircdata);                          break;                      case ReplyCode.WhoReply:                          _Event_RPL_WHOREPLY(ircdata);                          break;                      case ReplyCode.EndOfWho:                          _Event_RPL_ENDOFWHO(ircdata);                          break;                      case ReplyCode.ChannelModeIs:                          _Event_RPL_CHANNELMODEIS(ircdata);                          break;                      case ReplyCode.BanList:                          _Event_RPL_BANLIST(ircdata);                          break;                      case ReplyCode.EndOfBanList:                          _Event_RPL_ENDOFBANLIST(ircdata);                          break;                      case ReplyCode.ErrorNoChannelModes:                          _Event_ERR_NOCHANMODES(ircdata);                          break;                      case ReplyCode.Motd:                          _Event_RPL_MOTD(ircdata);                          break;                      case ReplyCode.EndOfMotd:                          _Event_RPL_ENDOFMOTD(ircdata);                          break;                      case ReplyCode.Away:                          _Event_RPL_AWAY(ircdata);                          break;                      case ReplyCode.UnAway:                          _Event_RPL_UNAWAY(ircdata);                          break;                      case ReplyCode.NowAway:                          _Event_RPL_NOWAWAY(ircdata);                          break;                      case ReplyCode.TryAgain:                          _Event_RPL_TRYAGAIN(ircdata);                          break;                      case ReplyCode.ErrorNicknameInUse:                          _Event_ERR_NICKNAMEINUSE(ircdata);                          break;                      case ReplyCode.InviteList:                          _Event_RPL_INVITELIST(ircdata);                          break;                      case ReplyCode.EndOfInviteList:                          _Event_RPL_ENDOFINVITELIST(ircdata);                          break;                      case ReplyCode.ExceptionList:                          _Event_RPL_EXCEPTLIST(ircdata);                          break;                      case ReplyCode.EndOfExceptionList:                          _Event_RPL_ENDOFEXCEPTLIST(ircdata);                          break;                      case ReplyCode.Bounce:                          _Event_RPL_BOUNCE(ircdata);                          break;                  }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_PRIVMSG,The following switch statement is missing a default case: switch (ircdata.Type) {                  case ReceiveType.ChannelMessage:                      if (OnChannelMessage != null) {                          OnChannelMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.ChannelAction:                      if (OnChannelAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnChannelAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.QueryMessage:                      if (OnQueryMessage != null) {                          OnQueryMessage(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryAction:                      if (OnQueryAction != null) {                          string action = ircdata.Message.Substring(8' ircdata.Message.Length - 9);                          OnQueryAction(this' new ActionEventArgs(ircdata' action));                      }                      break;                  case ReceiveType.CtcpRequest:                      if (OnCtcpRequest != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpRequest(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_NOTICE,The following switch statement is missing a default case: switch (ircdata.Type) {                  case ReceiveType.ChannelNotice:                      if (OnChannelNotice != null) {                          OnChannelNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.QueryNotice:                      if (OnQueryNotice != null) {                          OnQueryNotice(this' new IrcEventArgs(ircdata));                      }                      break;                  case ReceiveType.CtcpReply:                      if (OnCtcpReply != null) {                          int space_pos = ircdata.Message.IndexOf(' ');                           string cmd = "";                          string param = "";                          if (space_pos != -1) {                              cmd = ircdata.Message.Substring(1' space_pos - 1);                              param = ircdata.Message.Substring(space_pos + 1'                                          ircdata.Message.Length - space_pos - 2);                          } else {                              cmd = ircdata.Message.Substring(1' ircdata.Message.Length - 2);                          }                          OnCtcpReply(this' new CtcpEventArgs(ircdata' cmd' param));                      }                      break;              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_NAMREPLY,The following switch statement is missing a default case: switch(kvp.Key) {                                  case 'q':                                      owner = true;                                      break;                                  case 'a':                                      chanadmin = true;                                      break;                                  case 'o':                                      op = true;                                      break;                                  case 'h':                                      halfop = true;                                      break;                                  case 'v':                                      voice = true;                                      break;                              }
Missing Default,Meebey.SmartIrc4net,IrcClient,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\IrcClient.cs,_Event_RPL_WHOREPLY,The following switch statement is missing a default case: switch (channel[0]) {                          case '#':                          case '!':                          case '&':                          case '+':                              // this channel may not be where we are joined!                              // see RFC 1459 and RFC 2812' it must return a channelname                              // we use this channel info when possible...                              if (channeluser != null) {                                  channeluser.IsOp    = info.IsOp;                                  channeluser.IsVoice = info.IsVoice;                              }                          break;                      }
Missing Default,Meebey.SmartIrc4net,WhoInfo,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcClient\WhoInfo.cs,Parse,The following switch statement is missing a default case: switch (usermode[i]) {                      case 'H':                          away = false;                      break;                      case 'G':                          away = true;                      break;                      case '~':                          owner = true;                      break;                      case '&':                          chanadmin = true;                      break;                      case '@':                          op = true;                      break;                      case '%':                          halfop = true;                      break;                      case '+':                          voice = true;                      break;                      case '*':                          ircop = true;                      break;                      case 'r':                          registered = true;                      break;                  }
Missing Default,Meebey.SmartIrc4net,DccSend,D:\research\architectureSmells\repos\meebey_SmartIrc4net\src\IrcFeatures\DccSend.cs,InitWork,The following switch statement is missing a default case: switch(_Speed)                          {                              case DccSpeed.Rfc:                                  Connection.GetStream().Read(_Buffer' 0' _Buffer.Length);                                  // TODO: only send x not ACKed Bytes ahead / (nobody wants this anyway)                                  break;                              case DccSpeed.RfcSendAhead:                                  Connection.GetStream().Read(_Buffer' 0' _Buffer.Length);                                  break;                              case DccSpeed.Turbo: // Available > 0 should not happen                                  break;                          }
