Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Bender.Nodes.Object,ObjectFactory,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ObjectFactory.cs,CreateInstance,Cyclomatic complexity of the method is 10
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,Xml,The method has 5 parameters. Parameters: bytes' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,Xml,The method has 5 parameters. Parameters: bytes' xsl' type' encoding' configure
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXml,The method has 5 parameters. Parameters: bytes' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXml,The method has 5 parameters. Parameters: bytes' xsl' type' encoding' configure
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,Xml,The method has 5 parameters. Parameters: stream' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,Xml,The method has 5 parameters. Parameters: stream' xsl' type' encoding' configure
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXml,The method has 5 parameters. Parameters: stream' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXml,The method has 5 parameters. Parameters: stream' xsl' type' encoding' configure
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,XmlFile,The method has 5 parameters. Parameters: path' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,XmlFile,The method has 5 parameters. Parameters: path' xsl' type' encoding' configure
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXmlFile,The method has 5 parameters. Parameters: path' xsl' type' encoding' options
Long Parameter List,Bender,Deserialize,C:\repos\mikeobrien_Bender\src\Bender\Deserialize.FormUrlEncoded.cs,DeserializeXmlFile,The method has 5 parameters. Parameters: path' xsl' type' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,FormUrlEncodedStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,FormUrlEncodedStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeFormUrlEncodedStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeFormUrlEncodedStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,FormUrlEncodedFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,FormUrlEncodedFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeFormUrlEncodedFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeFormUrlEncodedFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,CsvStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,CsvStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeCsvStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeCsvStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,CsvFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,CsvFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeCsvFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeCsvFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,JsonStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,JsonStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeJsonStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeJsonStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,JsonFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,JsonFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeJsonFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeJsonFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,XmlStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,XmlStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeXmlStream,The method has 5 parameters. Parameters: source' type' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeXmlStream,The method has 5 parameters. Parameters: source' type' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,XmlFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,XmlFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeXmlFile,The method has 5 parameters. Parameters: source' type' path' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,SerializeXmlFile,The method has 5 parameters. Parameters: source' type' path' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Bytes,The method has 5 parameters. Parameters: object' type' target' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Bytes,The method has 5 parameters. Parameters: object' type' target' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: object' type' target' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: object' type' target' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: source' target' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: source' target' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: source' target' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: source' target' stream' encoding' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: object' type' target' stream' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 5 parameters. Parameters: object' type' target' stream' configure
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 6 parameters. Parameters: object' type' target' stream' encoding' options
Long Parameter List,Bender,Serialize,C:\repos\mikeobrien_Bender\src\Bender\Serialize.FormUrlEncoded.cs,Stream,The method has 6 parameters. Parameters: object' type' target' stream' encoding' configure
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeBytes,The method has 5 parameters. Parameters: object' type' targetFactory' format' encoding
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeStream,The method has 5 parameters. Parameters: object' type' targetFactory' format' encoding
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeStream,The method has 5 parameters. Parameters: source' targetFactory' format' stream' encoding
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeStream,The method has 5 parameters. Parameters: source' targetFactory' format' stream' encoding
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeStream,The method has 5 parameters. Parameters: object' type' target' stream' encoding
Long Parameter List,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeStream,The method has 6 parameters. Parameters: object' type' targetFactory' format' stream' encoding
Long Parameter List,Bender.Extensions,FuncExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\FuncExtensions.cs,WhenNot,The method has 5 parameters. Parameters: func' arg1' arg2' arg3' arg4
Long Parameter List,Bender.Nodes.CharacterSeparated,FileNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\CharacterSeparated\FileNode.cs,FileNode,The method has 5 parameters. Parameters: nodeType' actualType' specifiedType' options' writer
Long Parameter List,Bender.Nodes.CharacterSeparated,FileNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\CharacterSeparated\FileNode.cs,SerializeStream,The method has 5 parameters. Parameters: stream' actualType' specifiedType' serialize' encoding
Long Parameter List,Bender.Nodes.CharacterSeparated,FileNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\CharacterSeparated\FileNode.cs,SerializeFile,The method has 5 parameters. Parameters: path' actualType' specifiedType' serialize' encoding
Long Parameter List,Bender.Nodes.Object,NodeFactory,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\NodeFactory.cs,CreateSerializable,The method has 6 parameters. Parameters: name' object' parent' context' member' index
Long Parameter List,Bender.Nodes.Object,NodeFactory,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\NodeFactory.cs,CreateDeserializable,The method has 5 parameters. Parameters: name' object' parent' context' member
Long Parameter List,Bender.Nodes.Object,ObjectNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ObjectNode.cs,ObjectNode,The method has 6 parameters. Parameters: context' name' object' member' parent' index
Long Parameter List,Bender.Nodes.Object,DictionaryNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\DictionaryNode.cs,DictionaryNode,The method has 6 parameters. Parameters: context' name' dictionary' member' parent' index
Long Parameter List,Bender.Nodes.Object,EnumerableNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\EnumerableNode.cs,EnumerableNode,The method has 6 parameters. Parameters: context' name' enumerable' member' parent' index
Long Parameter List,Bender.Nodes.Object,ObjectNodeBase,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ObjectNodeBase.cs,ObjectNodeBase,The method has 6 parameters. Parameters: name' source' member' parent' context' index
Long Parameter List,Bender.Nodes.Object,ValueNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ValueNode.cs,ValueNode,The method has 6 parameters. Parameters: context' name' source' member' parent' index
Long Parameter List,Bender.Nodes.Xml,ElementNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Xml\ElementNode.cs,ElementNode,The method has 5 parameters. Parameters: element' xsl' options' namespace' parent
Long Parameter List,Bender.Nodes,Node,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Node.cs,Node,The method has 5 parameters. Parameters: name' format' parent' metadata' encoder
Long Identifier,Bender.Reflection,TypeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Reflection\TypeExtensions.cs,GetKind,The length of the parameter enumerableImplementationsAreComplex is 35.
Long Identifier,Bender.Reflection,TypeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Reflection\TypeExtensions.cs,GetKind,The length of the parameter dictionaryImplementationsAreComplex is 35.
Long Identifier,Bender.Reflection,CachedType,C:\repos\mikeobrien_Bender\src\Bender\Reflection\CachedType.cs,,The length of the parameter _concreteGenericDictionaryType is 30.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlBytes,The length of the statement  "            return SerializeBytes(source' type' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat' encoding); " is 123.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlStream,The length of the statement  "            return SerializeStream(source' type' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat' encoding); " is 124.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlStream,The length of the statement  "            SerializeStream(source' type' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat' stream' encoding); " is 125.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlFile,The length of the statement  "            SerializeStream(source' type' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat' encoding).SaveToFile(path); " is 134.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlNodes,The length of the statement  "            return (ElementNode)SerializeNodes(source' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat); " is 120.
Long Statement,Bender,Serializer,C:\repos\mikeobrien_Bender\src\Bender\Serializer.FormUrlEncoded.cs,SerializeXmlNodes,The length of the statement  "            return (ElementNode)SerializeNodes(source' type' (s' o) => ElementNode.Create(s.Name' s.Metadata' o)' XmlNodeBase.NodeFormat); " is 126.
Long Statement,Bender.Extensions,FuncExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\FuncExtensions.cs,Or,The length of the statement  "            return func1 != null && func2 != null ? (p1' p2' p3' p4) => func1(p1' p2' p3' p4) || func2(p1' p2' p3' p4) : func1 ?? func2; " is 124.
Long Statement,Bender.Extensions,FuncExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\FuncExtensions.cs,And,The length of the statement  "            return func1 != null && func2 != null ? (p1' p2' p3' p4) => func1(p1' p2' p3' p4) && func2(p1' p2' p3' p4) : func1 ?? func2; " is 124.
Long Statement,Bender.Extensions,FuncExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\FuncExtensions.cs,AndNot,The length of the statement  "            return func1 != null ? (Func<T1' T2' T3' bool>)((p1' p2' p3) => func1(p1' p2' p3) && !func2(p1' p2' p3)) : (p1' p2' p3) => !func2(p1' p2' p3); " is 142.
Long Statement,Bender.Extensions,FuncExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\FuncExtensions.cs,AndNot,The length of the statement  "            return func1 != null ? (Func<T1' T2' T3' T4' bool>)((p1' p2' p3' p4) => func1(p1' p2' p3' p4) && !func2(p1' p2' p3' p4)) : (p1' p2' p3' p4) => !func2(p1' p2' p3' p4); " is 166.
Long Statement,Bender.Nodes.Object,NodeFactory,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\NodeFactory.cs,CreateSerializable,The length of the statement  "                    if (parent == null) throw new TypeNotSupportedException("simple type"' @object.SpecifiedType' Mode.Serialize' "complex types"); " is 127.
Complex Conditional,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,TryParseMicrosoftJsonDateFormat,The conditional expression  "hasOpen && hasClose && source.Length > 8 &&                  long.TryParse(source.Substring(6' source.Length - 8)' out epoch)"  is complex.
Complex Conditional,Bender.Nodes.Object,ValueNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ValueNode.cs,GetValue,The conditional expression  "value != null && Context.Options.Serialization.NonNumericFloatMode !=                       NonNumericFloatSerializationMode.Raw &&                  ((type.Is<float>(true) && value.As<float>().IsNonNumeric()) ||                   (type.Is<double>(true) && value.As<double>().IsNonNumeric()))"  is complex.
Complex Conditional,Bender.Nodes.Xml,ElementNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Xml\ElementNode.cs,AddNode,The conditional expression  "(Options.Serialization.XmlValueNodeType == XmlValueNodeType.Attribute ||                      node.Metadata.Contains<System.Xml.Serialization.XmlAttributeAttribute>() ||                      node.Metadata.Contains<XmlAttributeAttribute>()) &&                       node.NodeType.IsValue()"  is complex.
Complex Conditional,Bender.Nodes,NodeMapper<TSource;TTarget>,C:\repos\mikeobrien_Bender\src\Bender\Nodes\NodeMapper.cs,Map,The conditional expression  "(source.IsArray() && target.IsObject()) ||                          (source.IsNonNullValue() && !target.IsValueOrVariable()) ||                          (!source.IsValueOrVariable() && target.IsValue())"  is complex.
Complex Conditional,Bender.Nodes,NodeMapper<TSource;TTarget>,C:\repos\mikeobrien_Bender\src\Bender\Nodes\NodeMapper.cs,Map,The conditional expression  "(source.IsValueOrVariable() && target.IsValue()) ||                          (source.IsValue() && target.IsVariable())"  is complex.
Magic Number,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,ToMicrosoftJsonDateFormat,The following statement contains a magic number: return "/Date({0})/".ToFormat((long)(date.ToUniversalTime() - new DateTime(1970' 1' 1)).TotalMilliseconds);
Magic Number,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,TryParseMicrosoftJsonDateFormat,The following statement contains a magic number: if (hasOpen && hasClose && source.Length > 8 &&                  long.TryParse(source.Substring(6' source.Length - 8)' out epoch))              {                  try                  {                      return new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc)                          .AddMilliseconds(epoch).ToLocalTime();                  }                  catch                  {                      throw new FormatException($"Datetime '{source}' is out of range.");                  }              }
Magic Number,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,TryParseMicrosoftJsonDateFormat,The following statement contains a magic number: if (hasOpen && hasClose && source.Length > 8 &&                  long.TryParse(source.Substring(6' source.Length - 8)' out epoch))              {                  try                  {                      return new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc)                          .AddMilliseconds(epoch).ToLocalTime();                  }                  catch                  {                      throw new FormatException($"Datetime '{source}' is out of range.");                  }              }
Magic Number,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,TryParseMicrosoftJsonDateFormat,The following statement contains a magic number: if (hasOpen && hasClose && source.Length > 8 &&                  long.TryParse(source.Substring(6' source.Length - 8)' out epoch))              {                  try                  {                      return new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc)                          .AddMilliseconds(epoch).ToLocalTime();                  }                  catch                  {                      throw new FormatException($"Datetime '{source}' is out of range.");                  }              }
Magic Number,Bender.Extensions,DateTimeExtensions,C:\repos\mikeobrien_Bender\src\Bender\Extensions\DateTimeExtensions.cs,TryParseMicrosoftJsonDateFormat,The following statement contains a magic number: if (hasOpen && hasClose && source.Length > 8 &&                  long.TryParse(source.Substring(6' source.Length - 8)' out epoch))              {                  try                  {                      return new DateTime(1970' 1' 1' 0' 0' 0' 0' DateTimeKind.Utc)                          .AddMilliseconds(epoch).ToLocalTime();                  }                  catch                  {                      throw new FormatException($"Datetime '{source}' is out of range.");                  }              }
Magic Number,Bender.Nodes.FormUrlEncoded,FormNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\FormUrlEncoded\FormNode.cs,ParseForm,The following statement contains a magic number: return form.Split('&')                  .Select(x => x.Split(new [] {'='}' 2))                  .Select(x => new FormValueNode(                      HttpUtility.UrlDecode(x[0])'                       x.Length > 1 ? HttpUtility.UrlDecode(x[1]) : null))                  .ToList();
Magic Number,Bender.Nodes.Object,ValueNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ValueNode.cs,SetValue,The following statement contains a magic number: if (value != null && !type.IsTypeOf(value))              {                  if (type.Is<string>()) Source.Instance = value.ToString();                  else if (value as string == "" && !type.Is<string>() && SpecifiedType.IsNullable)                      Source.Instance = null;                  else if (value is string && !type.Is<string>() && type.IsSimpleType)                  {                      try                      {                          if (type.IsEnum)                          {                              Source.Instance = Context.Options.EnumValueNameConventions                                  .GetName(value' SpecifiedType' Context)                                  .ParseEnum(SpecifiedType' Context.Options.Deserialization                                      .EnumValueComparison.IgnoreCase());                          }                          else Source.Instance = value.As<string>().ParseSimpleType(SpecifiedType);                      }                      catch (Exception exception)                      {                          throw new ValueParseException(exception' value' _friendlyParseMessages[                              type.IsEnum ? typeof(Enum) : type.Type].ToFormat(value.Truncate(50)));                      }                  }                  else                  {                      try                      {                          Source.Instance = type.IsEnum ?                              value.ConvertToEnum(type.Type) :                               Convert.ChangeType(value' type.Type);                      }                      catch (Exception exception)                      {                          throw new ValueConversionException(exception' value' value.ToCachedType()' type);                      }                  }              }              else if (value == null && SpecifiedType.IsValueType && !SpecifiedType.IsNullable)              {                  if (!Context.Options.Deserialization.IgnoreNullsForValueTypes)                      throw new ValueCannotBeNullDeserializationException();              }              else Source.Instance = value;
Missing Default,Bender.Nodes.Object,ValueNode,C:\repos\mikeobrien_Bender\src\Bender\Nodes\Object\ValueNode.cs,GetValue,The following switch statement is missing a default case: switch (Context.Options.Serialization.NonNumericFloatMode)                  {                      case NonNumericFloatSerializationMode.Name: return value.ToString();                      case NonNumericFloatSerializationMode.Zero: return 0;                  }
