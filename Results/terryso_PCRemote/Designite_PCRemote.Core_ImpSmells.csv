Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,PCRemote.Core.Configuration,CommandConfiguration,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\CommandConfiguration.cs,LoadValuesFromConfigurationXml,Cyclomatic complexity of the method is 14
Complex Method,PCRemote.Core.Configuration,ConfigurationBase,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\ConfigurationBase.cs,LoadModules,Cyclomatic complexity of the method is 13
Complex Method,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,Cyclomatic complexity of the method is 9
Long Parameter List,PCRemote.Core.Utilities,MailUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\MailUtility.cs,Send,The method has 8 parameters. Parameters: toEmailAddress' toCcEmailAddress' attachmentList' emailSubject' emailBody' isBodyHtml' emailPriority' encodingType
Long Parameter List,PCRemote.Core.Utilities,ImageUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\ImageUtility.cs,BitBlt,The method has 9 parameters. Parameters: hObject' nXDest' nYDest' nWidth' nHeight' hObjSource' nXSrc' nYSrc' dwRop
Long Parameter List,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,capCreateCaptureWindowA,The method has 8 parameters. Parameters: lpszWindowName' dwStyle' x' y' nWidth' nHeight' hWndParent' nID
Long Parameter List,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,capGetDriverDescriptionA,The method has 5 parameters. Parameters: wDriver' lpszName' cbName' lpszVer' cbVer
Long Statement,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='even'><td>{0}</td><td>{1}</td><td>ÎÄ¼þ¼Ð</td><td></td></tr>"' directory.Name' directory.CreationTime); " is 130.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='odd'><td>{0}</td><td>{1}</td><td>ÎÄ¼þ¼Ð</td><td></td></tr>"' directory.Name' directory.CreationTime); " is 129.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='even'><td>{0}</td><td>{1}</td><td>ÎÄ¼þ</td><td>{2}</td></tr>"' file.Name' file.LastWriteTime' file.Length); " is 135.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='odd'><td>{0}</td><td>{1}</td><td>ÎÄ¼þ</td><td>{2}</td></tr>"' file.Name' file.LastWriteTime' file.Length); " is 134.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "            SendComment(context' "#PCÒ£¿ØÆ÷#ÕýÔÚ·¢ËÍÄ¿Â¼¡®{0}¡¯µÄÏêÏ¸ÐÅÏ¢µ½ÄãÖ¸¶¨µÄEmailÖÐ£¬Çë¹ýÒ»»á²éÊÕ¡£".FormatWith(context.CommandParameter)); " is 134.
Long Statement,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The length of the statement  "            SendComment(context' string.Format("#PCÒ£¿ØÆ÷# ¿ªÊ¼ÎªÄúÏÂÔØInstagramÉÏÓÃ»§ {0} µÄÕÕÆ¬¡£Í¼Æ¬ÓÐ¿ÉÄÜºÜ¶à£¬ÇëÄÍÐÄµÈºò¡£¡£¡£"' user)); " is 129.
Long Statement,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "´ËÓÊ¼þÓÉ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PCÒ£¿ØÆ÷#</a>×Ô¶¯·¢ËÍ£¬Çë²»Òª»Ø¸´¡£<br/>" + " is 158.
Long Statement,PCRemote.Core.Commands,PhotoCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The length of the statement  "                    context.WeiboService.SendWeiboWithPicture("ÎÒÕýÔÚÊ¹ÓÃ#PCÒ£¿ØÆ÷#·ÖÏíÎÒµÄWebCam×¥ÅÄ " + DateTime.Now.ToLongTimeString()' newPicPath); " is 131.
Long Statement,PCRemote.Core.Commands,PhotoCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "´ËÍ¼ÓÉ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PCÒ£¿ØÆ÷#</a>×Ô¶¯·¢ËÍ£¬Çë²»Òª»Ø¸´¡£<br/>" + " is 156.
Long Statement,PCRemote.Core.Commands,ScreenshotCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\ScreenshotCommand.cs,Execute,The length of the statement  "                context.WeiboService.SendWeiboWithPicture("ÎÒÕýÔÚÊ¹ÓÃ#PCÒ£¿ØÆ÷#·ÖÏíÎÒµÄÆÁÄ»½ØÍ¼ " + DateTime.Now.ToLongTimeString()' picPath); " is 126.
Long Statement,PCRemote.Core.Commands,ScreenshotCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\ScreenshotCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "´ËÍ¼ÓÉ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PCÒ£¿ØÆ÷#</a>×Ô¶¯·¢ËÍ£¬Çë²»Òª»Ø¸´¡£<br/>"  + " is 157.
Long Statement,PCRemote.Core.Utilities,ImageUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\ImageUtility.cs,CaptureDesktop,The length of the statement  "            BitBlt(dcImage' 0' 0' (int) (rect.Width)' (int) (rect.Height)' dcScreen' (int) (rect.Left)' (int) (rect.Top)' TernaryRasterOperations.SRCCOPY); " is 143.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Encrypt,The conditional expression  "(content == null) || (secret == null) || (content.Length == 0) || (secret.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The conditional expression  "(content == null) || (secret == null) || (content.Length == 0) || (secret.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Crypt,The conditional expression  "(source.Length == 0) || (source == null) || (key == null) || (key.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The conditional expression  "(source.Length == 0) || (source == null) || (key == null) || (key.Length == 0)"  is complex.
Empty Catch Block,PCRemote.Core.Commands,CommandBase,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\CommandBase.cs,SendComment,The method has an empty catch block.
Empty Catch Block,PCRemote.Core.Configuration,CommandConfiguration,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\CommandConfiguration.cs,LoadValuesFromConfigurationXml,The method has an empty catch block.
Empty Catch Block,PCRemote.Core.Configuration,ConfigurationBase,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\ConfigurationBase.cs,LoadModules,The method has an empty catch block.
Magic Number,PCRemote.Core.Commands,GetFileListCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,IsEven,The following statement contains a magic number: return (num%2) == 0;
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: var page = files.Count/100 + 1;
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: var filesToSend = files.Take(100).Skip(i*100).ToArray();
Magic Number,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: var filesToSend = files.Take(100).Skip(i*100).ToArray();
Magic Number,PCRemote.Core.Commands,Mp3Command,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\Mp3Command.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      song = parameters[0].Trim();                      break;                  case 2:                      song = parameters[0].Trim();                      singer = parameters[1].Trim();                      break;              }
Magic Number,PCRemote.Core.Commands,DarkScreenCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\DarkScreenCommand.cs,Execute,The following statement contains a magic number: SendMessage(0xFFFF' 0x112' 0xF170' 2);
Magic Number,PCRemote.Core.Commands,PhotoCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The following statement contains a magic number: var webcam = new WebCamUtility(context.Handle' 600' 480);
Magic Number,PCRemote.Core.Commands,PhotoCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The following statement contains a magic number: var webcam = new WebCamUtility(context.Handle' 600' 480);
Magic Number,PCRemote.Core.Commands,VolDecCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\VolDecCommand.cs,Execute,The following statement contains a magic number: i < 10
Magic Number,PCRemote.Core.Commands,VolIncCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\VolIncCommand.cs,Execute,The following statement contains a magic number: i < 10
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The following statement contains a magic number: Array.Copy(RealDecByte' Prefix' 2);
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The following statement contains a magic number: var ret = new byte[source.Length + 8];
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: buff = tb64.TransformFinalBlock(source' pos' 3);
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: pos += 3;
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: pos + 3 < source.Length
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: buff = fb64.TransformFinalBlock(source' pos' 4);
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: pos += 4;
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: pos + 4 < source.Length
Magic Number,PCRemote.Core.Utilities,CryptUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,HashPassword,The following statement contains a magic number: StringBuilder sb = new StringBuilder(30);
Magic Number,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: GlobalSettings.GetSettings().CacheSizeMb > 256 || GlobalSettings.GetSettings().CacheSizeMb < 1
Magic Number,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: Thread.Sleep(1000 - t);
Magic Number,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: t < 1000
Magic Number,PCRemote.Core.Utilities,NetworkUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadSub,The following statement contains a magic number: var buffer = new byte[102400];
Magic Number,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: byte[] lpszName = new byte[100];
Magic Number,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: byte[] lpszVer = new byte[100];
Magic Number,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: capGetDriverDescriptionA(0' lpszName' 100' lpszVer' 100);
Magic Number,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: capGetDriverDescriptionA(0' lpszName' 100' lpszVer' 100);
Magic Number,PCRemote.Core.Utilities,WebCamUtility,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: SendMessage(this.lwndC' 0x434' (short) 100' 0);
Missing Default,PCRemote.Core.Commands,InstagramCommand,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following switch statement is missing a default case: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Missing Default,PCRemote.Core.Commands,Mp3Command,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Commands\Mp3Command.cs,Execute,The following switch statement is missing a default case: switch (parameters.Length)              {                  case 1:                      song = parameters[0].Trim();                      break;                  case 2:                      song = parameters[0].Trim();                      singer = parameters[1].Trim();                      break;              }
Missing Default,PCRemote.Core.Configuration,CommandConfiguration,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\CommandConfiguration.cs,LoadValuesFromConfigurationXml,The following switch statement is missing a default case: switch (child.Name)                      {                          case "clear":                              _commands.Clear();                              break;                          case "remove":                              var removeNameAtt = child.Attributes["name"];                              var removeName = removeNameAtt == null ? null : removeNameAtt.Value;                              if (!string.IsNullOrEmpty(removeName) && _commands.ContainsKey(removeName))                              {                                  _commands.Remove(removeName);                              }                              break;                          case "add":                              var en = child.Attributes["enabled"];                              if (en != null && en.Value == "false")                                  continue;                                var nameAtt = child.Attributes["name"];                              var chineseNameAtt = child.Attributes["chineseName"];                              var typeAtt = child.Attributes["type"];                                var name = nameAtt == null ? null : nameAtt.Value;                              var chineseName = chineseNameAtt == null ? null : chineseNameAtt.Value;                              var itype = typeAtt == null ? null : typeAtt.Value;                                if (string.IsNullOrEmpty(name))                                  continue;                                if (string.IsNullOrEmpty(chineseName))                                  continue;                                if (string.IsNullOrEmpty(itype))                                  continue;                                var type = Type.GetType(itype);                              if (type == null)                                  continue;                                var command = default(ICommand);                                try                              {                                  command = (ICommand) Activator.CreateInstance(type);                              }                              catch (Exception)                              {                              }                                if (command == null)                                  continue;                                var enKeys = name.Split('|');                              var chKeys = chineseName.Split('|');                                foreach (var enKey in enKeys)                              {                                  _commands.Add(enKey' command);                              }                                foreach (var chKey in chKeys)                              {                                  _commands.Add(chKey' command);                              }                                break;                      }
Missing Default,PCRemote.Core.Configuration,ConfigurationBase,D:\research\architectureSmells\repos1\terryso_PCRemote\PCRemote.Core\Configuration\ConfigurationBase.cs,LoadModules,The following switch statement is missing a default case: switch (n.Name)                          {                              case "clear":                                  modules.Clear();                                  break;                              case "remove":                                  XmlAttribute removeNameAtt = n.Attributes["name"];                                  string removeName = removeNameAtt == null ? null : removeNameAtt.Value;                                    if (!string.IsNullOrEmpty(removeName) && modules.ContainsKey(removeName))                                  {                                      modules.Remove(removeName);                                  }                                    break;                              case "add":                                    XmlAttribute en = n.Attributes["enabled"];                                  if (en != null && en.Value == "false")                                      continue;                                    XmlAttribute nameAtt = n.Attributes["name"];                                  XmlAttribute typeAtt = n.Attributes["type"];                                  string name = nameAtt == null ? null : nameAtt.Value;                                  string itype = typeAtt == null ? null : typeAtt.Value;                                    if (string.IsNullOrEmpty(name))                                  {                                      continue;                                  }                                    if (string.IsNullOrEmpty(itype))                                  {                                      continue;                                  }                                    Type type = Type.GetType(itype);                                    if (type == null)                                  {                                      continue;                                  }                                    T mod = default(T);                                    try                                  {                                      mod = (T)Activator.CreateInstance(type);                                  }                                  catch (Exception ex)                                  {                                      //ExceptionLogger.Log(ex);                                  }                                    if (mod == null)                                  {                                      continue;                                  }                                    modules[name] = mod;                                  break;                          }
