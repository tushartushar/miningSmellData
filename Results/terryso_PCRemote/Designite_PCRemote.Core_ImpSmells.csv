Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,Cyclomatic complexity of the method is 8
Long Parameter List,PCRemote.Core.Utilities,MailUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\MailUtility.cs,Send,The method has 8 parameters. Parameters: toEmailAddress' toCcEmailAddress' attachmentList' emailSubject' emailBody' isBodyHtml' emailPriority' encodingType
Long Parameter List,PCRemote.Core.Utilities,ImageUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\ImageUtility.cs,BitBlt,The method has 9 parameters. Parameters: hObject' nXDest' nYDest' nWidth' nHeight' hObjSource' nXSrc' nYSrc' dwRop
Long Parameter List,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,capCreateCaptureWindowA,The method has 8 parameters. Parameters: lpszWindowName' dwStyle' x' y' nWidth' nHeight' hWndParent' nID
Long Parameter List,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,capGetDriverDescriptionA,The method has 5 parameters. Parameters: wDriver' lpszName' cbName' lpszVer' cbVer
Long Statement,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='even'><td>{0}</td><td>{1}</td><td>ΞΔΌώΌΠ</td><td></td></tr>"' directory.Name' directory.CreationTime); " is 130.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='odd'><td>{0}</td><td>{1}</td><td>ΞΔΌώΌΠ</td><td></td></tr>"' directory.Name' directory.CreationTime); " is 129.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='even'><td>{0}</td><td>{1}</td><td>ΞΔΌώ</td><td>{2}</td></tr>"' file.Name' file.LastWriteTime' file.Length); " is 135.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "                    sb.AppendFormat("<tr class='odd'><td>{0}</td><td>{1}</td><td>ΞΔΌώ</td><td>{2}</td></tr>"' file.Name' file.LastWriteTime' file.Length); " is 134.
Long Statement,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,Execute,The length of the statement  "            SendComment(context' "#PC£ΏΨΖχ#ΥύΤΪ·ΆΛΝΔΏΒΌ΅®{0}΅―µΔΟκΟΈΠΕΟΆµ½ΔγΦΈ¶¨µΔEmailΦΠ£¬ΗλΉύ»»α²ιΚΥ΅£".FormatWith(context.CommandParameter)); " is 134.
Long Statement,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The length of the statement  "            SendComment(context' string.Format("#PC£ΏΨΖχ# ΏΚΌΞΔϊΟΒΤΨInstagramΙΟΣΓ»§ {0} µΔΥΥΖ¬΅£ΝΌΖ¬ΣΠΏΙΔάΊά¶ΰ£¬ΗλΔΝΠΔµΘΊς΅£΅£΅£"' user)); " is 129.
Long Statement,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "΄ΛΣΚΌώΣΙ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PC£ΏΨΖχ#</a>ΧΤ¶―·ΆΛΝ£¬Ηλ²»»ΨΈ΄΅£<br/>" + " is 158.
Long Statement,PCRemote.Core.Commands,PhotoCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The length of the statement  "                    context.WeiboService.SendWeiboWithPicture("ΞΥύΤΪΚΉΣΓ#PC£ΏΨΖχ#·ΦΟνΞµΔWebCamΧ¥ΕΔ " + DateTime.Now.ToLongTimeString()' newPicPath); " is 131.
Long Statement,PCRemote.Core.Commands,PhotoCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "΄ΛΝΌΣΙ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PC£ΏΨΖχ#</a>ΧΤ¶―·ΆΛΝ£¬Ηλ²»»ΨΈ΄΅£<br/>" + " is 156.
Long Statement,PCRemote.Core.Commands,ScreenshotCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\ScreenshotCommand.cs,Execute,The length of the statement  "                context.WeiboService.SendWeiboWithPicture("ΞΥύΤΪΚΉΣΓ#PC£ΏΨΖχ#·ΦΟνΞµΔΖΑΔ»½ΨΝΌ " + DateTime.Now.ToLongTimeString()' picPath); " is 126.
Long Statement,PCRemote.Core.Commands,ScreenshotCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\ScreenshotCommand.cs,SendPhotoByEmail,The length of the statement  "            var body = "΄ΛΝΌΣΙ<a href='http://weibo.com/k/PC%25E9%2581%25A5%25E6%258E%25A7%25E5%2599%25A8?refer=Index_mark'>#PC£ΏΨΖχ#</a>ΧΤ¶―·ΆΛΝ£¬Ηλ²»»ΨΈ΄΅£<br/>"  + " is 157.
Long Statement,PCRemote.Core.Utilities,ImageUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\ImageUtility.cs,CaptureDesktop,The length of the statement  "            BitBlt(dcImage' 0' 0' (int) (rect.Width)' (int) (rect.Height)' dcScreen' (int) (rect.Left)' (int) (rect.Top)' TernaryRasterOperations.SRCCOPY); " is 143.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Encrypt,The conditional expression  "(content == null) || (secret == null) || (content.Length == 0) || (secret.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The conditional expression  "(content == null) || (secret == null) || (content.Length == 0) || (secret.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Crypt,The conditional expression  "(source.Length == 0) || (source == null) || (key == null) || (key.Length == 0)"  is complex.
Complex Conditional,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The conditional expression  "(source.Length == 0) || (source == null) || (key == null) || (key.Length == 0)"  is complex.
Empty Catch Block,PCRemote.Core.Commands,CommandBase,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\CommandBase.cs,SendComment,The method has an empty catch block.
Empty Catch Block,PCRemote.Core.Configuration,CommandConfiguration,C:\repos\terryso_PCRemote\PCRemote.Core\Configuration\CommandConfiguration.cs,LoadValuesFromConfigurationXml,The method has an empty catch block.
Empty Catch Block,PCRemote.Core.Configuration,ConfigurationBase,C:\repos\terryso_PCRemote\PCRemote.Core\Configuration\ConfigurationBase.cs,LoadModules,The method has an empty catch block.
Magic Number,PCRemote.Core.Commands,GetFileListCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\GetFileListCommand.cs,IsEven,The following statement contains a magic number: return (num%2) == 0;
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: var page = files.Count/100 + 1;
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: if(sendToEmail)              {                  for (var i = 0; i < page; i++)                  {                      var filesToSend = files.Take(100).Skip(i*100).ToArray();                      SendPhotoByEmail(context' filesToSend);                  }              }
Magic Number,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following statement contains a magic number: if(sendToEmail)              {                  for (var i = 0; i < page; i++)                  {                      var filesToSend = files.Take(100).Skip(i*100).ToArray();                      SendPhotoByEmail(context' filesToSend);                  }              }
Magic Number,PCRemote.Core.Commands,Mp3Command,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\Mp3Command.cs,Execute,The following statement contains a magic number: switch (parameters.Length)              {                  case 1:                      song = parameters[0].Trim();                      break;                  case 2:                      song = parameters[0].Trim();                      singer = parameters[1].Trim();                      break;              }
Magic Number,PCRemote.Core.Commands,DarkScreenCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\DarkScreenCommand.cs,Execute,The following statement contains a magic number: SendMessage(0xFFFF' 0x112' 0xF170' 2);
Magic Number,PCRemote.Core.Commands,PhotoCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The following statement contains a magic number: try              {                  var temp = Environment.GetEnvironmentVariable("TEMP");                  var picPath = temp + "\\" + Guid.NewGuid() + ".bmp";                    var webcam = new WebCamUtility(context.Handle' 600' 480);                  webcam.StartWebCam();                  webcam.GrabImage(context.Handle' picPath);                  webcam.CloseWebcam();                    bitmap = new Bitmap(picPath);                  var codecInfo = GetCodecInfo("image/jpeg");                  var quality = Encoder.Quality;                  encoderParams = new EncoderParameters(1);                  const long num = 0x5fL;                  parameter = new EncoderParameter(quality' num);                  encoderParams.Param[0] = parameter;                    var newPicPath = picPath.Replace("bmp"' "jpg");                  bitmap.Save(newPicPath' codecInfo' encoderParams);                    if (context.SendPhotoByEmail)                  {                      SendComment(context' "#PC£ΏΨΖχ#ΥύΤΪ·ΆΛΝΔγµΔWebCamΧ¥ΕΔµ½ΔγµΔΦΈ¶¨EmailΦΠ£¬ΗλΉύ»»αΘ¥²ιΚΥ΅£");                      SendPhotoByEmail(context' newPicPath);                  }                  else                  {                      SendComment(context' "#PC£ΏΨΖχ#ΥύΤΪΙΟ΄«ΔγµΔWebCamΧ¥ΕΔ£¬»»α½«»α³φΟΦΤΪΔγµΔΧξΠΒΞΆ²©ΦΠ΅£");                      context.WeiboService.SendWeiboWithPicture("ΞΥύΤΪΚΉΣΓ#PC£ΏΨΖχ#·ΦΟνΞµΔWebCamΧ¥ΕΔ " + DateTime.Now.ToLongTimeString()' newPicPath);                  }                }              finally              {                  if (parameter != null) parameter.Dispose();                  if (encoderParams != null) encoderParams.Dispose();                  if (bitmap != null) bitmap.Dispose();              }
Magic Number,PCRemote.Core.Commands,PhotoCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\PhotoCommand.cs,Execute,The following statement contains a magic number: try              {                  var temp = Environment.GetEnvironmentVariable("TEMP");                  var picPath = temp + "\\" + Guid.NewGuid() + ".bmp";                    var webcam = new WebCamUtility(context.Handle' 600' 480);                  webcam.StartWebCam();                  webcam.GrabImage(context.Handle' picPath);                  webcam.CloseWebcam();                    bitmap = new Bitmap(picPath);                  var codecInfo = GetCodecInfo("image/jpeg");                  var quality = Encoder.Quality;                  encoderParams = new EncoderParameters(1);                  const long num = 0x5fL;                  parameter = new EncoderParameter(quality' num);                  encoderParams.Param[0] = parameter;                    var newPicPath = picPath.Replace("bmp"' "jpg");                  bitmap.Save(newPicPath' codecInfo' encoderParams);                    if (context.SendPhotoByEmail)                  {                      SendComment(context' "#PC£ΏΨΖχ#ΥύΤΪ·ΆΛΝΔγµΔWebCamΧ¥ΕΔµ½ΔγµΔΦΈ¶¨EmailΦΠ£¬ΗλΉύ»»αΘ¥²ιΚΥ΅£");                      SendPhotoByEmail(context' newPicPath);                  }                  else                  {                      SendComment(context' "#PC£ΏΨΖχ#ΥύΤΪΙΟ΄«ΔγµΔWebCamΧ¥ΕΔ£¬»»α½«»α³φΟΦΤΪΔγµΔΧξΠΒΞΆ²©ΦΠ΅£");                      context.WeiboService.SendWeiboWithPicture("ΞΥύΤΪΚΉΣΓ#PC£ΏΨΖχ#·ΦΟνΞµΔWebCamΧ¥ΕΔ " + DateTime.Now.ToLongTimeString()' newPicPath);                  }                }              finally              {                  if (parameter != null) parameter.Dispose();                  if (encoderParams != null) encoderParams.Dispose();                  if (bitmap != null) bitmap.Dispose();              }
Magic Number,PCRemote.Core.Commands,VolDecCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\VolDecCommand.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  SendMessageW(context.Handle' WM_APPCOMMAND' context.Handle' new IntPtr(APPCOMMAND_VOLUME_DOWN));              }
Magic Number,PCRemote.Core.Commands,VolIncCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\VolIncCommand.cs,Execute,The following statement contains a magic number: for (int i = 0; i < 10; i++)              {                  SendMessageW(context.Handle' WM_APPCOMMAND' context.Handle' new IntPtr(APPCOMMAND_VOLUME_UP));              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The following statement contains a magic number: Array.Copy(RealDecByte' Prefix' 2);
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The following statement contains a magic number: if (CompareByteArrays(Constants.Operation.UnicodeReversePrefix' Prefix))              {                  byte SwitchTemp = 0;                  for (int i = 0; i < RealDecByte.Length - 1; i = i + 2)                  {                      SwitchTemp = RealDecByte[i];                      RealDecByte[i] = RealDecByte[i + 1];                      RealDecByte[i + 1] = SwitchTemp;                  }              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Decrypt,The following statement contains a magic number: var ret = new byte[source.Length + 8];
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: while (pos + 3 < source.Length)              {                  buff = tb64.TransformFinalBlock(source' pos' 3);                  stm.Write(buff' 0' buff.Length);                  pos += 3;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: while (pos + 3 < source.Length)              {                  buff = tb64.TransformFinalBlock(source' pos' 3);                  stm.Write(buff' 0' buff.Length);                  pos += 3;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Encode,The following statement contains a magic number: while (pos + 3 < source.Length)              {                  buff = tb64.TransformFinalBlock(source' pos' 3);                  stm.Write(buff' 0' buff.Length);                  pos += 3;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: while (pos + 4 < source.Length)              {                  buff = fb64.TransformFinalBlock(source' pos' 4);                  stm.Write(buff' 0' buff.Length);                  pos += 4;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: while (pos + 4 < source.Length)              {                  buff = fb64.TransformFinalBlock(source' pos' 4);                  stm.Write(buff' 0' buff.Length);                  pos += 4;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,Base64Decode,The following statement contains a magic number: while (pos + 4 < source.Length)              {                  buff = fb64.TransformFinalBlock(source' pos' 4);                  stm.Write(buff' 0' buff.Length);                  pos += 4;              }
Magic Number,PCRemote.Core.Utilities,CryptUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\CryptUtility.cs,HashPassword,The following statement contains a magic number: StringBuilder sb = new StringBuilder(30);
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: var buffer = new byte[1024];
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: if (GlobalSettings.GetSettings().CacheSizeMb > 256 || GlobalSettings.GetSettings().CacheSizeMb < 1)                  GlobalSettings.GetSettings().CacheSizeMb = 1;
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: using (st = response.GetResponseStream())              {                  //΄ςΏΞΔΌώΑχ                  using (fs = new FileStream(para.FilePath' FileMode.Create' FileAccess.Write' FileShare.Read' 8))                  {                      //ΚΉΣΓ»Ί³εΑχ                      using (bs = new BufferedStream(fs' GlobalSettings.GetSettings().CacheSizeMb*1024))                      {                          //¶ΑΘ΅µΪ»ΏιΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          //ΏΚΌΡ­»·                          while (osize > 0)                          {                              #region ΕΠ¶ΟΚΗ·ρΘ΅ΟϋΟΒΤΨ                                //ΘηΉϋΣΓ»§ΦΥΦΉΤς·µ»Ψfalse                              if (para.IsStop)                              {                                  //ΉΨ±ΥΑχ                                  bs.Close();                                  st.Close();                                  fs.Close();                                  return false;                              }                                #endregion                                //ΤφΌΣΡΝκ³ΙΧΦ½ΪΚύ                              para.DoneBytes += osize;                                //Π΄ΞΔΌώ(»Ί΄ζ)                              bs.Write(buffer' 0' osize);                                //ΟήΛΩ                              if (GlobalSettings.GetSettings().SpeedLimit > 0)                              {                                  //ΟΒΤΨΌΖΚύΌΣ»count++                                  limitcount++;                                  //ΟΒΤΨ1KB                                  osize = st.Read(buffer' 0' buffer.Length);                                  //ΐΫ»ύµ½limit KBΊσ                                  if (limitcount >= GlobalSettings.GetSettings().SpeedLimit)                                  {                                      t = Environment.TickCount - privateTick;                                      //Όμ²ιΚΗ·ρ΄σΣΪ»Γλ                                      if (t < 1000) //ΘηΉϋΠ΅ΣΪ»ΓλΤςµΘ΄ύΦΑ»Γλ                                          Thread.Sleep(1000 - t);                                      //ΦΨΦΓcountΊΝΌΖΚ±Ζχ£¬ΌΜΠψΟΒΤΨ                                      limitcount = 0;                                      privateTick = Environment.TickCount;                                  }                              }                              else //ΘηΉϋ²»ΟήΛΩ                              {                                  osize = st.Read(buffer' 0' buffer.Length);                              }                          } //end while                      } //end bufferedstream                  } // end filestream              }
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: using (st = response.GetResponseStream())              {                  //΄ςΏΞΔΌώΑχ                  using (fs = new FileStream(para.FilePath' FileMode.Create' FileAccess.Write' FileShare.Read' 8))                  {                      //ΚΉΣΓ»Ί³εΑχ                      using (bs = new BufferedStream(fs' GlobalSettings.GetSettings().CacheSizeMb*1024))                      {                          //¶ΑΘ΅µΪ»ΏιΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          //ΏΚΌΡ­»·                          while (osize > 0)                          {                              #region ΕΠ¶ΟΚΗ·ρΘ΅ΟϋΟΒΤΨ                                //ΘηΉϋΣΓ»§ΦΥΦΉΤς·µ»Ψfalse                              if (para.IsStop)                              {                                  //ΉΨ±ΥΑχ                                  bs.Close();                                  st.Close();                                  fs.Close();                                  return false;                              }                                #endregion                                //ΤφΌΣΡΝκ³ΙΧΦ½ΪΚύ                              para.DoneBytes += osize;                                //Π΄ΞΔΌώ(»Ί΄ζ)                              bs.Write(buffer' 0' osize);                                //ΟήΛΩ                              if (GlobalSettings.GetSettings().SpeedLimit > 0)                              {                                  //ΟΒΤΨΌΖΚύΌΣ»count++                                  limitcount++;                                  //ΟΒΤΨ1KB                                  osize = st.Read(buffer' 0' buffer.Length);                                  //ΐΫ»ύµ½limit KBΊσ                                  if (limitcount >= GlobalSettings.GetSettings().SpeedLimit)                                  {                                      t = Environment.TickCount - privateTick;                                      //Όμ²ιΚΗ·ρ΄σΣΪ»Γλ                                      if (t < 1000) //ΘηΉϋΠ΅ΣΪ»ΓλΤςµΘ΄ύΦΑ»Γλ                                          Thread.Sleep(1000 - t);                                      //ΦΨΦΓcountΊΝΌΖΚ±Ζχ£¬ΌΜΠψΟΒΤΨ                                      limitcount = 0;                                      privateTick = Environment.TickCount;                                  }                              }                              else //ΘηΉϋ²»ΟήΛΩ                              {                                  osize = st.Read(buffer' 0' buffer.Length);                              }                          } //end while                      } //end bufferedstream                  } // end filestream              }
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: using (st = response.GetResponseStream())              {                  //΄ςΏΞΔΌώΑχ                  using (fs = new FileStream(para.FilePath' FileMode.Create' FileAccess.Write' FileShare.Read' 8))                  {                      //ΚΉΣΓ»Ί³εΑχ                      using (bs = new BufferedStream(fs' GlobalSettings.GetSettings().CacheSizeMb*1024))                      {                          //¶ΑΘ΅µΪ»ΏιΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          //ΏΚΌΡ­»·                          while (osize > 0)                          {                              #region ΕΠ¶ΟΚΗ·ρΘ΅ΟϋΟΒΤΨ                                //ΘηΉϋΣΓ»§ΦΥΦΉΤς·µ»Ψfalse                              if (para.IsStop)                              {                                  //ΉΨ±ΥΑχ                                  bs.Close();                                  st.Close();                                  fs.Close();                                  return false;                              }                                #endregion                                //ΤφΌΣΡΝκ³ΙΧΦ½ΪΚύ                              para.DoneBytes += osize;                                //Π΄ΞΔΌώ(»Ί΄ζ)                              bs.Write(buffer' 0' osize);                                //ΟήΛΩ                              if (GlobalSettings.GetSettings().SpeedLimit > 0)                              {                                  //ΟΒΤΨΌΖΚύΌΣ»count++                                  limitcount++;                                  //ΟΒΤΨ1KB                                  osize = st.Read(buffer' 0' buffer.Length);                                  //ΐΫ»ύµ½limit KBΊσ                                  if (limitcount >= GlobalSettings.GetSettings().SpeedLimit)                                  {                                      t = Environment.TickCount - privateTick;                                      //Όμ²ιΚΗ·ρ΄σΣΪ»Γλ                                      if (t < 1000) //ΘηΉϋΠ΅ΣΪ»ΓλΤςµΘ΄ύΦΑ»Γλ                                          Thread.Sleep(1000 - t);                                      //ΦΨΦΓcountΊΝΌΖΚ±Ζχ£¬ΌΜΠψΟΒΤΨ                                      limitcount = 0;                                      privateTick = Environment.TickCount;                                  }                              }                              else //ΘηΉϋ²»ΟήΛΩ                              {                                  osize = st.Read(buffer' 0' buffer.Length);                              }                          } //end while                      } //end bufferedstream                  } // end filestream              }
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadFile,The following statement contains a magic number: using (st = response.GetResponseStream())              {                  //΄ςΏΞΔΌώΑχ                  using (fs = new FileStream(para.FilePath' FileMode.Create' FileAccess.Write' FileShare.Read' 8))                  {                      //ΚΉΣΓ»Ί³εΑχ                      using (bs = new BufferedStream(fs' GlobalSettings.GetSettings().CacheSizeMb*1024))                      {                          //¶ΑΘ΅µΪ»ΏιΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          //ΏΚΌΡ­»·                          while (osize > 0)                          {                              #region ΕΠ¶ΟΚΗ·ρΘ΅ΟϋΟΒΤΨ                                //ΘηΉϋΣΓ»§ΦΥΦΉΤς·µ»Ψfalse                              if (para.IsStop)                              {                                  //ΉΨ±ΥΑχ                                  bs.Close();                                  st.Close();                                  fs.Close();                                  return false;                              }                                #endregion                                //ΤφΌΣΡΝκ³ΙΧΦ½ΪΚύ                              para.DoneBytes += osize;                                //Π΄ΞΔΌώ(»Ί΄ζ)                              bs.Write(buffer' 0' osize);                                //ΟήΛΩ                              if (GlobalSettings.GetSettings().SpeedLimit > 0)                              {                                  //ΟΒΤΨΌΖΚύΌΣ»count++                                  limitcount++;                                  //ΟΒΤΨ1KB                                  osize = st.Read(buffer' 0' buffer.Length);                                  //ΐΫ»ύµ½limit KBΊσ                                  if (limitcount >= GlobalSettings.GetSettings().SpeedLimit)                                  {                                      t = Environment.TickCount - privateTick;                                      //Όμ²ιΚΗ·ρ΄σΣΪ»Γλ                                      if (t < 1000) //ΘηΉϋΠ΅ΣΪ»ΓλΤςµΘ΄ύΦΑ»Γλ                                          Thread.Sleep(1000 - t);                                      //ΦΨΦΓcountΊΝΌΖΚ±Ζχ£¬ΌΜΠψΟΒΤΨ                                      limitcount = 0;                                      privateTick = Environment.TickCount;                                  }                              }                              else //ΘηΉϋ²»ΟήΛΩ                              {                                  osize = st.Read(buffer' 0' buffer.Length);                              }                          } //end while                      } //end bufferedstream                  } // end filestream              }
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadSub,The following statement contains a magic number: try              {                  //ΝψΒη»Ί΄ζ(100KB)                  var buffer = new byte[102400];                  var request = HttpWebRequest.Create(para.Url);                  var response = request.GetResponse();                    //»ρΘ΅ΟΒΤΨΑχ                  var st = response.GetResponseStream();                  if (!para.UseDeflate)                  {                      //΄ςΏΞΔΌώΑχ                      using (var so = new FileStream(para.FilePath' FileMode.Create' FileAccess.ReadWrite' FileShare.Read' 8))                      {                          //¶ΑΘ΅ΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          while (osize > 0)                          {                              //Π΄ΘλΚύΎέ                              so.Write(buffer' 0' osize);                              osize = st.Read(buffer' 0' buffer.Length);                          }                      }                  }                  else                  {                      //deflate½βΡΉΛυ                      var deflate = new DeflateStream(st' CompressionMode.Decompress);                      using (var reader = new StreamReader(deflate))                      {                          File.WriteAllText(para.FilePath' reader.ReadToEnd());                      }                  }                  //ΉΨ±ΥΑχ                  st.Close();                  //»ΗΠΛ³ΐϋ·µ»Ψtrue                  return true;              }              catch              {                  //·ΆΙϊ΄νΞσ·µ»ΨFalse                  return false;              }
Magic Number,PCRemote.Core.Utilities,NetworkUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\NetworkUtility.cs,DownloadSub,The following statement contains a magic number: try              {                  //ΝψΒη»Ί΄ζ(100KB)                  var buffer = new byte[102400];                  var request = HttpWebRequest.Create(para.Url);                  var response = request.GetResponse();                    //»ρΘ΅ΟΒΤΨΑχ                  var st = response.GetResponseStream();                  if (!para.UseDeflate)                  {                      //΄ςΏΞΔΌώΑχ                      using (var so = new FileStream(para.FilePath' FileMode.Create' FileAccess.ReadWrite' FileShare.Read' 8))                      {                          //¶ΑΘ΅ΚύΎέ                          var osize = st.Read(buffer' 0' buffer.Length);                          while (osize > 0)                          {                              //Π΄ΘλΚύΎέ                              so.Write(buffer' 0' osize);                              osize = st.Read(buffer' 0' buffer.Length);                          }                      }                  }                  else                  {                      //deflate½βΡΉΛυ                      var deflate = new DeflateStream(st' CompressionMode.Decompress);                      using (var reader = new StreamReader(deflate))                      {                          File.WriteAllText(para.FilePath' reader.ReadToEnd());                      }                  }                  //ΉΨ±ΥΑχ                  st.Close();                  //»ΗΠΛ³ΐϋ·µ»Ψtrue                  return true;              }              catch              {                  //·ΆΙϊ΄νΞσ·µ»ΨFalse                  return false;              }
Magic Number,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: byte[] lpszName = new byte[100];
Magic Number,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: byte[] lpszVer = new byte[100];
Magic Number,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: capGetDriverDescriptionA(0' lpszName' 100' lpszVer' 100);
Magic Number,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: capGetDriverDescriptionA(0' lpszName' 100' lpszVer' 100);
Magic Number,PCRemote.Core.Utilities,WebCamUtility,C:\repos\terryso_PCRemote\PCRemote.Core\Utilities\WebCamUtility.cs,StartWebCam,The following statement contains a magic number: if (SendMessage(this.lwndC' 0x40a' (short) 0' 0))              {                  SendMessage(this.lwndC' 0x434' (short) 100' 0);                  SendMessage(this.lwndC' 0x432' true' 0);              }
Missing Default,PCRemote.Core.Commands,InstagramCommand,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\InstagramCommand.cs,Execute,The following switch statement is missing a default case: switch (parameters.Length)              {                  case 1:                      user = parameters[0].Trim();                      break;                  case 2:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      break;                  case 3:                      user = parameters[0].Trim();                      count = Convert.ToInt32(parameters[1].Trim());                      if (parameters[2].Trim() == "1")                          sendToEmail = true;                      break;              }
Missing Default,PCRemote.Core.Commands,Mp3Command,C:\repos\terryso_PCRemote\PCRemote.Core\Commands\Mp3Command.cs,Execute,The following switch statement is missing a default case: switch (parameters.Length)              {                  case 1:                      song = parameters[0].Trim();                      break;                  case 2:                      song = parameters[0].Trim();                      singer = parameters[1].Trim();                      break;              }
Missing Default,PCRemote.Core.Configuration,CommandConfiguration,C:\repos\terryso_PCRemote\PCRemote.Core\Configuration\CommandConfiguration.cs,LoadValuesFromConfigurationXml,The following switch statement is missing a default case: switch (child.Name)                      {                          case "clear":                              _commands.Clear();                              break;                          case "remove":                              var removeNameAtt = child.Attributes["name"];                              var removeName = removeNameAtt == null ? null : removeNameAtt.Value;                              if (!string.IsNullOrEmpty(removeName) && _commands.ContainsKey(removeName))                              {                                  _commands.Remove(removeName);                              }                              break;                          case "add":                              var en = child.Attributes["enabled"];                              if (en != null && en.Value == "false")                                  continue;                                var nameAtt = child.Attributes["name"];                              var chineseNameAtt = child.Attributes["chineseName"];                              var typeAtt = child.Attributes["type"];                                var name = nameAtt == null ? null : nameAtt.Value;                              var chineseName = chineseNameAtt == null ? null : chineseNameAtt.Value;                              var itype = typeAtt == null ? null : typeAtt.Value;                                if (string.IsNullOrEmpty(name))                                  continue;                                if (string.IsNullOrEmpty(chineseName))                                  continue;                                if (string.IsNullOrEmpty(itype))                                  continue;                                var type = Type.GetType(itype);                              if (type == null)                                  continue;                                var command = default(ICommand);                                try                              {                                  command = (ICommand) Activator.CreateInstance(type);                              }                              catch (Exception)                              {                              }                                if (command == null)                                  continue;                                var enKeys = name.Split('|');                              var chKeys = chineseName.Split('|');                                foreach (var enKey in enKeys)                              {                                  _commands.Add(enKey' command);                              }                                foreach (var chKey in chKeys)                              {                                  _commands.Add(chKey' command);                              }                                break;                      }
Missing Default,PCRemote.Core.Configuration,ConfigurationBase,C:\repos\terryso_PCRemote\PCRemote.Core\Configuration\ConfigurationBase.cs,LoadModules,The following switch statement is missing a default case: switch (n.Name)                          {                              case "clear":                                  modules.Clear();                                  break;                              case "remove":                                  XmlAttribute removeNameAtt = n.Attributes["name"];                                  string removeName = removeNameAtt == null ? null : removeNameAtt.Value;                                    if (!string.IsNullOrEmpty(removeName) && modules.ContainsKey(removeName))                                  {                                      modules.Remove(removeName);                                  }                                    break;                              case "add":                                    XmlAttribute en = n.Attributes["enabled"];                                  if (en != null && en.Value == "false")                                      continue;                                    XmlAttribute nameAtt = n.Attributes["name"];                                  XmlAttribute typeAtt = n.Attributes["type"];                                  string name = nameAtt == null ? null : nameAtt.Value;                                  string itype = typeAtt == null ? null : typeAtt.Value;                                    if (string.IsNullOrEmpty(name))                                  {                                      continue;                                  }                                    if (string.IsNullOrEmpty(itype))                                  {                                      continue;                                  }                                    Type type = Type.GetType(itype);                                    if (type == null)                                  {                                      continue;                                  }                                    T mod = default(T);                                    try                                  {                                      mod = (T)Activator.CreateInstance(type);                                  }                                  catch (Exception ex)                                  {                                      //ExceptionLogger.Log(ex);                                  }                                    if (mod == null)                                  {                                      continue;                                  }                                    modules[name] = mod;                                  break;                          }
