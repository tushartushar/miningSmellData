Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OpenQA.Selenium.Support.PageObjects,ByFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\ByFactory.cs,From,Cyclomatic complexity of the method is 17
Complex Method,OpenQA.Selenium.Support.PageObjects,PageFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\PageFactory.cs,InitElements,Cyclomatic complexity of the method is 9
Complex Method,OpenQA.Selenium.Support.UI,DefaultWait,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\DefaultWait.cs,Until,Cyclomatic complexity of the method is 10
Complex Method,OpenQA.Selenium.Support.UI,SelectElement,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\SelectElement.cs,SelectByText,Cyclomatic complexity of the method is 10
Long Statement,OpenQA.Selenium.Support.PageObjects,ByFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\ByFactory.cs,From,The length of the statement  "	throw new ArgumentException (string.Format (CultureInfo.InvariantCulture' "Did not know how to construct How from how {0}' using {1}"' how' usingValue)); " is 153.
Long Statement,OpenQA.Selenium.Support.PageObjects,PageFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\PageFactory.cs,InitElements,The length of the statement  "		throw new ArgumentException ("No constructor for the specified class containing a single argument of type IWebDriver can be found"); " is 132.
Long Statement,OpenQA.Selenium.Support.PageObjects,PageFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\PageFactory.cs,ShouldCacheLookup,The length of the statement  "	bool cache = member.GetCustomAttributes (cacheAttributeType' true).Length != 0 || member.DeclaringType.GetCustomAttributes (cacheAttributeType' true).Length != 0; " is 162.
Long Statement,OpenQA.Selenium.Support.UI,DefaultWait,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\DefaultWait.cs,Until,The length of the statement  "		throw new ArgumentException ("Can only wait on an object or boolean response' tried to use type: " + resultType.ToString ()' "condition"); " is 138.
Long Statement,OpenQA.Selenium.Support.UI,DefaultWait,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\DefaultWait.cs,Until,The length of the statement  "			string timeoutMessage = string.Format (CultureInfo.InvariantCulture' "Timed out after {0} seconds"' this.timeout.TotalSeconds); " is 127.
Long Statement,OpenQA.Selenium.Support.UI,SelectElement,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\SelectElement.cs,SelectByText,The length of the statement  "	IList<IWebElement> options = this.element.FindElements (By.XPath (".//option[normalize-space(.) = " + EscapeQuotes (text) + "]")); " is 130.
Long Statement,OpenQA.Selenium.Support.UI,SelectElement,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\SelectElement.cs,SelectByText,The length of the statement  "			candidates = this.element.FindElements (By.XPath (".//option[contains(.' " + EscapeQuotes (substringWithoutSpace) + ")]")); " is 123.
Long Statement,OpenQA.Selenium.Support.UI,SelectElement,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\SelectElement.cs,EscapeQuotes,The length of the statement  "	if (toEscape.IndexOf ("\""' StringComparison.OrdinalIgnoreCase) > -1 && toEscape.IndexOf ("'"' StringComparison.OrdinalIgnoreCase) > -1) { " is 138.
Long Statement,OpenQA.Selenium.Support.UI,SlowLoadableComponent,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\UI\SlowLoadableComponent.cs,Load,The length of the statement  "		string timeoutMessage = string.Format (CultureInfo.InvariantCulture' "Timed out after {0} seconds."' this.timeout.TotalSeconds); " is 128.
Missing Default,OpenQA.Selenium.Support.PageObjects,ByFactory,C:\repos\nreal_Automated\bin\Selenium\WebDriver.Support\PageObjects\ByFactory.cs,From,The following switch statement is missing a default case: switch (how) {  case How.Id:  	return By.Id (usingValue);  case How.Name:  	return By.Name (usingValue);  case How.TagName:  	return By.TagName (usingValue);  case How.ClassName:  	return By.ClassName (usingValue);  case How.CssSelector:  	return By.CssSelector (usingValue);  case How.LinkText:  	return By.LinkText (usingValue);  case How.PartialLinkText:  	return By.PartialLinkText (usingValue);  case How.XPath:  	return By.XPath (usingValue);  case How.Custom:  	if (attribute.CustomFinderType == null) {  		throw new ArgumentException ("Cannot use How.Custom without supplying a custom finder type");  	}  	if (!attribute.CustomFinderType.IsSubclassOf (typeof(By))) {  		throw new ArgumentException ("Custom finder type must be a descendent of the By class");  	}  	ConstructorInfo ctor = attribute.CustomFinderType.GetConstructor (new Type[] {  		typeof(string)  	});  	if (ctor == null) {  		throw new ArgumentException ("Custom finder type must expose a public constructor with a string argument");  	}  	By finder = ctor.Invoke (new object[] {  		usingValue  	}) as By;  	return finder;  }  
