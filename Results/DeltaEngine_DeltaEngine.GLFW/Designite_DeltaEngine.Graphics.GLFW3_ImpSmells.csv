Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,SetBlendMode,Cyclomatic complexity of the method is 27
Long Parameter List,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,SetUniformValue,The method has 5 parameters.
Long Parameter List,DeltaEngine.Graphics.GLFW3,OpenGL20CircularBuffer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20CircularBuffer.cs,AddDataNative,The method has 5 parameters.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Shader,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Shader.cs,LoadAttributeLocations,The length of the statement  "		string identifier = AttributePrefix + Format.Elements [i].ElementType.ToString ().Replace ("2D"' "").Replace ("3D"' ""); " is 120.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Shader,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Shader.cs,BindVertexDeclaration,The length of the statement  "			device.DefineVertexAttributeWithBytes (attributeLocations [i]' Format.Elements [i].ComponentCount' Format.Stride' Format.Elements [i].Offset); " is 142.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Shader,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Shader.cs,BindVertexDeclaration,The length of the statement  "			device.DefineVertexAttributeWithFloats (attributeLocations [i]' Format.Elements [i].ComponentCount' Format.Stride' Format.Elements [i].Offset); " is 143.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,GetBufferMode,The length of the statement  "	return mode == OpenGL20BufferMode.Static ? BufferUsageHint.StaticDraw : mode == OpenGL20BufferMode.Dynamic ? BufferUsageHint.DynamicDraw : BufferUsageHint.StreamDraw; " is 166.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,LoadTextureInNativePlatformFormat,The length of the statement  "	GL.TexImage2D (TextureTarget.Texture2D' 0' PixelInternalFormat.Rgba' width' height' 0' hasAlpha ? PixelFormat.Bgra : PixelFormat.Bgr' PixelType.UnsignedByte' nativeLoadedData); " is 176.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,FillTexture,The length of the statement  "	GL.TexImage2D (TextureTarget.Texture2D' 0' hasAlpha ? PixelInternalFormat.Rgba : PixelInternalFormat.Rgb' (int)size.Width' (int)size.Height' 0' PixelFormat.Rgba' PixelType.UnsignedByte' rgbaData); " is 196.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,DefineVertexAttributeWithFloats,The length of the statement  "	GL.VertexAttribPointer (attributeLocation' numberOfFloatComponents' VertexAttribPointerType.Float' false' vertexTotalSize' (IntPtr)attributeOffsetInVertex); " is 156.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,DefineVertexAttributeWithBytes,The length of the statement  "	GL.VertexAttribPointer (attributeLocation' numberOfByteComponents' VertexAttribPointerType.UnsignedByte' true' vertexTotalSize' (IntPtr)attributeOffsetInVertex); " is 161.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,DrawTriangles,The length of the statement  "	GL.DrawElements (BeginMode.Triangles' numberOfIndicesToRender' DrawElementsType.UnsignedShort' (IntPtr)indexOffsetInBytes); " is 123.
Long Statement,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,ReadPixels,The length of the statement  "	GL.ReadPixels ((int)frame.Left' (int)frame.Top' (int)frame.Width' (int)frame.Height' PixelFormat.Rgb' PixelType.UnsignedByte' bufferToStoreData); " is 145.
Long Statement,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,CopyRgbIntoBitmap,The length of the statement  "	BitmapData bitmapData = bitmap.LockBits (new Rectangle (0' 0' width' height)' ImageLockMode.WriteOnly' PixelFormat.Format24bppRgb); " is 131.
Long Statement,DeltaEngine.Graphics.GLFW3,OpenGL20Image,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20Image.cs,LoadBitmap,The length of the statement  "	BitmapData data = bitmap.LockBits (new Rectangle (0' 0' bitmap.Width' bitmap.Height)' ImageLockMode.ReadOnly' HasAlpha ? PixelFormat.Format32bppArgb : PixelFormat.Format24bppRgb); " is 179.
Magic Number,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,CheckOpenGLVersion,The following statement contains a magic number: if (majorVersion < 3 || string.IsNullOrEmpty (extensions))  	throw new OpenGLVersionDoesNotSupportShaders ();  
Magic Number,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,SetUniformValues,The following statement contains a magic number: for (int matrixIndex = 0; matrixIndex < matrices.Length; ++matrixIndex)  	matrices [matrixIndex].GetValues.CopyTo (values' matrixIndex * 16);  
Magic Number,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,SetUniformValues,The following statement contains a magic number: matrices [matrixIndex].GetValues.CopyTo (values' matrixIndex * 16);  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int targetIndex = (y * width + x) * 3;  		int sourceIndex = (((height - 1) - y) * width + x) * 3;  		bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  		bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  		bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  	}  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int targetIndex = (y * width + x) * 3;  		int sourceIndex = (((height - 1) - y) * width + x) * 3;  		bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  		bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  		bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  	}  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int targetIndex = (y * width + x) * 3;  		int sourceIndex = (((height - 1) - y) * width + x) * 3;  		bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  		bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  		bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  	}  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int y = 0; y < height; ++y)  	for (int x = 0; x < width; ++x) {  		int targetIndex = (y * width + x) * 3;  		int sourceIndex = (((height - 1) - y) * width + x) * 3;  		bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  		bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  		bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  	}  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int targetIndex = (y * width + x) * 3;  	int sourceIndex = (((height - 1) - y) * width + x) * 3;  	bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  	bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  	bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  }  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int targetIndex = (y * width + x) * 3;  	int sourceIndex = (((height - 1) - y) * width + x) * 3;  	bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  	bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  	bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  }  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int targetIndex = (y * width + x) * 3;  	int sourceIndex = (((height - 1) - y) * width + x) * 3;  	bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  	bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  	bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  }  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: for (int x = 0; x < width; ++x) {  	int targetIndex = (y * width + x) * 3;  	int sourceIndex = (((height - 1) - y) * width + x) * 3;  	bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  	bitmapPointer [targetIndex + 1] = rgbData [sourceIndex + 1];  	bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  }  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: bitmapPointer [targetIndex] = rgbData [sourceIndex + 2];  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20ScreenshotCapturer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20ScreenshotCapturer.cs,SwitchTopToBottomAndRgbToBgr,The following statement contains a magic number: bitmapPointer [targetIndex + 2] = rgbData [sourceIndex];  
Magic Number,DeltaEngine.Graphics.GLFW3,OpenGL20Image,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\OpenGL20Image.cs,FillRgbaData,The following statement contains a magic number: if (PixelSize.Width * PixelSize.Height * 4 != rgbaColors.Length)  	throw new InvalidNumberOfBytes (PixelSize);  
Missing Default,DeltaEngine.Graphics.GLFW3,GLFW3Device,C:\repos\DeltaEngine_DeltaEngine.GLFW\Graphics\GLFW3\GLFW3Device.cs,SetBlendMode,The following switch statement is missing a default case: switch (blendMode) {  case BlendMode.Opaque:  	GL.Disable (EnableCap.Blend);  	break;  case BlendMode.Normal:  	GL.Enable (EnableCap.Blend);  	GL.BlendFunc (BlendingFactorSrc.SrcAlpha' BlendingFactorDest.OneMinusSrcAlpha);  	GL.BlendEquation (BlendEquationMode.FuncAdd);  	break;  case BlendMode.AlphaTest:  	GL.Disable (EnableCap.Blend);  	GL.Enable (EnableCap.AlphaTest);  	break;  case BlendMode.Additive:  	GL.Enable (EnableCap.Blend);  	GL.BlendFunc (BlendingFactorSrc.SrcAlpha' BlendingFactorDest.One);  	GL.BlendEquation (BlendEquationMode.FuncAdd);  	break;  case BlendMode.Subtractive:  	GL.Enable (EnableCap.Blend);  	GL.BlendFunc (BlendingFactorSrc.SrcAlpha' BlendingFactorDest.One);  	GL.BlendEquation (BlendEquationMode.FuncReverseSubtract);  	break;  case BlendMode.LightEffect:  	GL.Enable (EnableCap.Blend);  	GL.BlendFunc (BlendingFactorSrc.DstColor' BlendingFactorDest.One);  	GL.BlendEquation (BlendEquationMode.FuncAdd);  	break;  }  
