Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetParticleSpawnPosition,Cyclomatic complexity of the method is 8
Long Statement,DeltaEngine.Rendering3D.Particles,Particle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle3DRenderer.cs,UpdateTransformMatrix,The length of the statement  "	lastParticleTransform *= Matrix.CreateRotationZYX (lastParticleTransform.Forward.X' lastParticleTransform.Forward.Y' lastParticleTransform.Forward.Z); " is 150.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,GetPosition,The length of the statement  "	return Rotation == 0 ? new Vector3D (halfWidth' 0' halfHeight) : new Vector3D (halfWidth' 0' halfHeight).RotateAround (Vector3D.UnitY' Rotation); " is 145.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,CalculateVarianceVector,The length of the statement  "	var delta = GetDivisionBetweenSquares (startVelocityVariance.X' xValue) + GetDivisionBetweenSquares (startVelocityVariance.Y' yValue) + GetDivisionBetweenSquares (startVelocityVariance.Z' zValue); " is 196.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,GetTopLeftVertex,The length of the statement  "	return new VertexPosition2DColorUV (ScreenSpace.Current.ToPixelSpace (topLeft.RotateAround (Position2D' Rotation))' Color' CurrentUV.TopLeft); " is 142.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,GetTopRightVertex,The length of the statement  "	return new VertexPosition2DColorUV (ScreenSpace.Current.ToPixelSpace (topRight.RotateAround (Position2D' Rotation))' Color' CurrentUV.TopRight); " is 144.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,GetBottomRightVertex,The length of the statement  "	return new VertexPosition2DColorUV (ScreenSpace.Current.ToPixelSpace (bottomRight.RotateAround (Position2D' Rotation))' Color' CurrentUV.BottomRight); " is 150.
Long Statement,DeltaEngine.Rendering3D.Particles,Particle,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle.cs,GetBottomLeftVertex,The length of the statement  "	return new VertexPosition2DColorUV (ScreenSpace.Current.ToPixelSpace (bottomLeft.RotateAround (Position2D' Rotation))' Color' CurrentUV.BottomLeft); " is 148.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitterData,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitterData.cs,LoadCustomMaterial,The length of the statement  "	var material = customImageType > 0 ? new Material (ContentLoader.Create<Shader> (new ShaderCreationData (shaderFlags))' customImage) : new Material (shaderFlags' imageOrAnimationName); " is 184.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,UpdateParticlesTracingCircularOutline,The length of the statement  "	int lastIndex = UpdateParticlesAndGetLastActive (index => particles [index].UpdateRoundingParticleIfStillActive (EmitterData' Position)); " is 137.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,UpdateParticlesRadialEscape,The length of the statement  "	int lastIndex = UpdateParticlesAndGetLastActive (index => particles [index].UpdateEscapingParticleIfStillActive (EmitterData' Position)); " is 137.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,UpdateAnimationForParticles,The length of the statement  "		particles [index].CurrentFrame = (int)(animation.Frames.Length * particles [index].ElapsedTime / duration) % animation.Frames.Length; " is 133.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,IsAnyEmitterDataNull,The length of the statement  "	return EmitterData.Acceleration == null || EmitterData.Size == null || EmitterData.StartVelocity == null || EmitterData.StartPosition == null || EmitterData.ParticleMaterial.DiffuseMap == null; " is 193.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,SpawnOneParticle,The length of the statement  "	particles [freeSpot].CurrentUV = EmitterData.ParticleMaterial.SpriteSheet == null ? Rectangle.One : EmitterData.ParticleMaterial.SpriteSheet.UVs [0]; " is 149.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,SetStartVelocityOfParticle,The length of the statement  "		particles [newParticleIndex].SetStartVelocityRandomizedFromRange (EmitterData.StartVelocity.Start' EmitterData.StartVelocity.End); " is 130.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,SetStartVelocityOfParticle,The length of the statement  "		particles [newParticleIndex].SetStartVelocityRandomizedFromRange (EmitterData.StartVelocity.Start.Transform (Rotation)' EmitterData.StartVelocity.End.Transform (Rotation)); " is 172.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionPoint,The length of the statement  "	return (Rotation.Equals (Quaternion.Identity)) ? Position + EmitterData.StartPosition.Start : Position + EmitterData.StartPosition.Start.Transform (Rotation); " is 158.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionLine,The length of the statement  "	return (Rotation.Equals (Quaternion.Identity)) ? Position + EmitterData.StartPosition.GetRandomValue () : Position + EmitterData.StartPosition.GetRandomValue ().Transform (Rotation); " is 182.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionBox,The length of the statement  "	return (Rotation.Equals (Quaternion.Identity)) ? Position + insideTheBox : Position + insideTheBox.Transform (Rotation); " is 120.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetEmitterStartPositionLerped,The length of the statement  "	return new Vector3D (EmitterData.StartPosition.Start.X.Lerp (EmitterData.StartPosition.End.X' Randomizer.Current.Get ())' EmitterData.StartPosition.Start.Y.Lerp (EmitterData.StartPosition.End.Y' Randomizer.Current.Get ())' EmitterData.StartPosition.Start.Z.Lerp (EmitterData.StartPosition.End.Z' Randomizer.Current.Get ())); " is 324.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionSphere,The length of the statement  "	insideSphere *= 0.0f.Lerp (EmitterData.StartPosition.Start.Distance (EmitterData.StartPosition.End) * 0.5f' Randomizer.Current.Get ()); " is 135.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionCircleOutline,The length of the statement  "	var onCircleOutline = new Vector3D (startPosition.Start.X + Randomizer.Current.Get (-1.0f) * startPosition.End.X' startPosition.Start.Y + Randomizer.Current.Get (-1.0f) * startPosition.End.Y' 0.0f); " is 198.
Long Statement,DeltaEngine.Rendering3D.Particles,ParticleEmitter,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitter.cs,GetSpawnPositionCircleOutline,The length of the statement  "	onCircleOutline = (Rotation.Equals (Quaternion.Identity)) ? Position + onCircleOutline : Position + onCircleOutline.Transform (Rotation); " is 137.
Magic Number,DeltaEngine.Rendering3D.Particles,Particle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle3DRenderer.cs,AddVerticesToBatch,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	if (!particles [i].IsActive)  		continue;  	//ncrunch: no coverage  	var batch = (Batch3D)renderer.FindOrCreateBatch (material' material.DiffuseMap.BlendMode);  	UpdateTransformMatrix (particles [i]' emitter.EmitterData.BillboardMode);  	var particleVertices = particles [i].GetVertices (particles [i].Size' particles [i].Color);  	for (int v = 0; v < particleVertices.Length; v++)  		particleVertices [v].Position = lastParticleTransform * particleVertices [v].Position;  	batch.AddIndices ();  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [0];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [1];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [2];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [3];  }  
Magic Number,DeltaEngine.Rendering3D.Particles,Particle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle3DRenderer.cs,AddVerticesToBatch,The following statement contains a magic number: for (int i = 0; i < length; i++) {  	if (!particles [i].IsActive)  		continue;  	//ncrunch: no coverage  	var batch = (Batch3D)renderer.FindOrCreateBatch (material' material.DiffuseMap.BlendMode);  	UpdateTransformMatrix (particles [i]' emitter.EmitterData.BillboardMode);  	var particleVertices = particles [i].GetVertices (particles [i].Size' particles [i].Color);  	for (int v = 0; v < particleVertices.Length; v++)  		particleVertices [v].Position = lastParticleTransform * particleVertices [v].Position;  	batch.AddIndices ();  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [0];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [1];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [2];  	batch.verticesColorUV [batch.verticesIndex++] = particleVertices [3];  }  
Magic Number,DeltaEngine.Rendering3D.Particles,Particle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle3DRenderer.cs,AddVerticesToBatch,The following statement contains a magic number: batch.verticesColorUV [batch.verticesIndex++] = particleVertices [2];  
Magic Number,DeltaEngine.Rendering3D.Particles,Particle3DRenderer,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\Particle3DRenderer.cs,AddVerticesToBatch,The following statement contains a magic number: batch.verticesColorUV [batch.verticesIndex++] = particleVertices [3];  
Magic Number,DeltaEngine.Rendering3D.Particles,ParticleEmitterData,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ParticleEmitterData.cs,ReadNumberMostlyBelow255,The following statement contains a magic number: if (number == 255)  	number = reader.ReadInt32 ();  
Magic Number,DeltaEngine.Rendering3D.Particles,ValueRange,C:\repos\DeltaEngine_DeltaEngine.GLFW\Rendering3D\Particles\ValueRange.cs,ValueRange,The following statement contains a magic number: if (partitions.Length != 2)  	throw new InvalidStringFormat ();  
