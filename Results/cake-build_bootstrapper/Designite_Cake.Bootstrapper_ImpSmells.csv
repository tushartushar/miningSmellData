Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,Cyclomatic complexity of the method is 13
Long Parameter List,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,InstallCommand,The method has 8 parameters. Parameters: runtime' fileSystem' environment' log' packageConfigCreator' fileCopier' downloader' gitIgnorePatcher
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: ReportProgress("Generating NuGet package configuration..."' 25);
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: ReportProgress("Copying bootstrapper script..."' 50);
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: ReportProgress("Preparing build script..."' 75);
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: if (InstallNuGet)              {                  ReportProgress("Downloading NuGet executable..."' 85);                  var nugetFilePath = toolsPath.MakeAbsolute(_environment).CombineWithFilePath("nuget.exe");                  if (!_fileSystem.Exist(nugetFilePath))                  {                      _downloader.Download(new Uri("http://nuget.org/nuget.exe")' nugetFilePath);                      _log.Information(" -> Downloaded NuGet executable.");                  }              }
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: if (AppVeyor)              {                  ReportProgress("Copying AppVeyor configuration file..."' 95);                  var appVeyorPath = new FilePath("appveyor.yml").MakeAbsolute(_environment);                  if (!_fileSystem.Exist(appVeyorPath))                  {                      _fileCopier.CopyAppVeyorConfiguration();                      _log.Information(" -> Copied AppVeyor configuration file.");                  }              }
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: if (GitIgnore)              {                  ReportProgress("Patching .gitignore..."' 100);                  var gitIgnorePath = new FilePath(".gitignore").MakeAbsolute(_environment);                  if (_fileSystem.Exist(gitIgnorePath))                  {                      if (_gitIgnorePatcher.Patch(gitIgnorePath))                      {                          _log.Information(" -> Patched .gitignore.");                      }                  }              }
Magic Number,Cake.Bootstrapper.Installer,InstallCommand,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\InstallCommand.cs,Execute,The following statement contains a magic number: ReportProgress("Done!"' 100);
Magic Number,Cake.Bootstrapper.Installer.NuGet,NuGetPackageConfigurationCreator,C:\repos\cake-build_bootstrapper\src\Bootstrapper\Cake.Bootstrapper\Installer\NuGet\NuGetPackageConfigurationCreator.cs,Generate,The following statement contains a magic number: using (var stream = file.OpenWrite())              {                  using (var streamWriter = new StreamWriter(stream))                  using (var writer = new XmlTextWriter(streamWriter))                  {                      writer.Formatting = Formatting.Indented;                      writer.Indentation = 4;                      writer.WriteStartDocument();                      {                          writer.WriteStartElement("packages");                          {                              writer.WriteStartElement("package");                              {                                  writer.WriteAttributeString("id"' "Cake");                                  writer.WriteAttributeString("version"' version);                              }                              writer.WriteEndElement();                          }                          writer.WriteEndElement();                      }                      writer.WriteEndDocument();                      writer.Flush();                  }                          }
