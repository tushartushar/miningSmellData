Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Nito.AsyncEx,AsyncCollection<T>,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\AsyncCollection.cs,DoTakeAsync,The length of the statement  "                    throw new InvalidOperationException("Take failed; the producer/consumer collection has completed adding and is empty."); " is 120.
Long Statement,Nito.AsyncEx,AsyncReaderWriterLock,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\AsyncReaderWriterLock.cs,ReleaseWaitersWhenCanceled,The length of the statement  "            }' CancellationToken.None' TaskContinuationOptions.OnlyOnCanceled | TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 137.
Long Statement,Nito.AsyncEx,AsyncReaderWriterLock,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\AsyncReaderWriterLock.cs,RequestReaderLockAsync,The length of the statement  "                // If the lock is available or in read mode and there are no waiting writers' upgradeable readers' or upgrading readers' take it immediately. " is 141.
Long Statement,Nito.AsyncEx,AsyncWaitQueueExtensions,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\AsyncWaitQueue.cs,Enqueue,The length of the statement  "            ret.ContinueWith(_ => registration.Dispose()' CancellationToken.None' TaskContinuationOptions.ExecuteSynchronously' TaskScheduler.Default); " is 139.
Long Statement,Nito.AsyncEx,IdManager<TTag>,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\IdManager.cs,GetId,The length of the statement  "            // Determine the new Id without modifying "id"' since other threads may also be determining the new Id at the same time. " is 120.
Complex Conditional,Nito.AsyncEx,AsyncCountdownEvent,D:\research\architectureSmells\repos1\StephenCleary_AsyncEx\src\Nito.AsyncEx.Coordination\AsyncCountdownEvent.cs,ModifyCount,The conditional expression  "(oldCount < 0 && _count > 0) || (oldCount > 0 && _count < 0)"  is complex.
