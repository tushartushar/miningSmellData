Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,Cyclomatic complexity of the method is 15
Complex Method,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,Cyclomatic complexity of the method is 9
Complex Method,ExtCS.Debugger,DebuggerScriptEngine,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Engines\DebuggerScriptEngineSession.cs,Execute,Cyclomatic complexity of the method is 8
Complex Method,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,ShowHelp,Cyclomatic complexity of the method is 29
Complex Method,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,Execute,Cyclomatic complexity of the method is 10
Complex Method,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParsePrototype,Cyclomatic complexity of the method is 9
Complex Method,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,AddSeparators,Cyclomatic complexity of the method is 17
Complex Method,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParseBundledValue,Cyclomatic complexity of the method is 10
Complex Method,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,GetDescription,Cyclomatic complexity of the method is 20
Complex Method,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,GetLines,Cyclomatic complexity of the method is 8
Complex Method,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,GetLineEnd,Cyclomatic complexity of the method is 11
Long Parameter List,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,GetOptionParts,The method has 5 parameters.
Long Parameter List,DotNetDbg,DebugBaseEventCallbacks,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\DebugBaseEventCallbacks.cs,CreateProcess,The method has 11 parameters.
Long Parameter List,DotNetDbg,DebugBaseEventCallbacks,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\DebugBaseEventCallbacks.cs,LoadModule,The method has 7 parameters.
Long Parameter List,DotNetDbg,DebugBaseEventCallbacksWide,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\DebugBaseEventCallbacksWide.cs,CreateProcess,The method has 11 parameters.
Long Parameter List,DotNetDbg,DebugBaseEventCallbacksWide,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\DebugBaseEventCallbacksWide.cs,LoadModule,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced2.cs,Request,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced2.cs,GetSourceFileInformation,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced2.cs,FindSourceFileAndToken,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced2.cs,GetSymbolInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced2.cs,GetSystemObjectInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,Request,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,GetSourceFileInformation,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,FindSourceFileAndToken,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,GetSymbolInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,GetSystemObjectInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,GetSourceFileInformationWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,FindSourceFileAndTokenWide,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugAdvanced3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugAdvanced3.cs,GetSymbolInformationWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient.cs,GetRunningProcessDescription,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient.cs,CreateProcessAndAttach,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient2.cs,GetRunningProcessDescription,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient2.cs,CreateProcessAndAttach,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient3.cs,GetRunningProcessDescription,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient3.cs,CreateProcessAndAttach,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient3.cs,GetRunningProcessDescriptionWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient3.cs,CreateProcessAndAttachWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,GetRunningProcessDescription,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,CreateProcessAndAttach,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,GetRunningProcessDescriptionWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,CreateProcessAndAttachWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,WriteDumpFileWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,GetDumpFile,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient4.cs,GetDumpFileWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,GetRunningProcessDescription,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcessAndAttach,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,GetRunningProcessDescriptionWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcessAndAttachWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,WriteDumpFileWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,GetDumpFile,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,GetDumpFileWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcess2,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcess2Wide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcessAndAttach2,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugClient5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugClient5.cs,CreateProcessAndAttach2Wide,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl2.cs,GetTextReplacement,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetExpressionSyntaxNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl3.cs,GetEventIndexDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetTextReplacement,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetExpressionSyntaxNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetEventIndexDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,DisassembleWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetProcessorTypeNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetLastEventInformationWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetTextReplacementWide,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetExpressionSyntaxNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetEventIndexDescriptionWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetSystemVersionValues,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetContextStackTrace,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,OutputContextStackTrace,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetStoredEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetManagedStatus,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl4.cs,GetManagedStatusWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetTextReplacement,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetExpressionSyntaxNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetEventIndexDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,DisassembleWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetProcessorTypeNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetLastEventInformationWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetTextReplacementWide,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetExpressionSyntaxNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetEventIndexDescriptionWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetSystemVersionValues,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetContextStackTrace,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,OutputContextStackTrace,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetStoredEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetManagedStatus,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetManagedStatusWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetStackTraceEx,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,GetContextStackTraceEx,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl5.cs,OutputContextStackTraceEx,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,Disassemble,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,OutputDisassemblyLines,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetStackTrace,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetSystemVersion,The method has 10 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,ReadBugCheckData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetProcessorTypeNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetLastEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetTextReplacement,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetExpressionSyntaxNames,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetEventIndexDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,DisassembleWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetProcessorTypeNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetLastEventInformationWide,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetTextReplacementWide,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetExpressionSyntaxNamesWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetEventIndexDescriptionWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetSystemVersionValues,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetContextStackTrace,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,OutputContextStackTrace,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetStoredEventInformation,The method has 9 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetManagedStatus,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetManagedStatusWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetStackTraceEx,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,GetContextStackTraceEx,The method has 8 parameters.
Long Parameter List,DotNetDbg,IDebugControl6,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugControl6.cs,OutputContextStackTraceEx,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,SearchVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,ReadControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,WriteControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,ReadIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,WriteIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,ReadBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,WriteBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces.cs,ReadProcessorSystemData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,SearchVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,ReadControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,WriteControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,ReadIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,WriteIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,ReadBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,WriteBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,ReadProcessorSystemData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,ReadHandleData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,FillVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,FillPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,SearchVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,WriteControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,WriteIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,WriteBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadProcessorSystemData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadHandleData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,FillVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,FillPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,ReadTagged,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,SearchVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,WriteControl,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,WriteIo,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,WriteBusData,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadProcessorSystemData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadHandleData,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,FillVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,FillPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadTagged,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,GetOffsetInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,SearchVirtual2,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadMultiByteStringVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadMultiByteStringVirtualWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadUnicodeStringVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadUnicodeStringVirtualWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,ReadPhysical2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,WritePhysical2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugEventCallbacks,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugEventCallbacks.cs,CreateProcess,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugEventCallbacks,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugEventCallbacks.cs,LoadModule,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugEventCallbacksWide,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugEventCallbacksWide.cs,CreateProcess,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugEventCallbacksWide,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugEventCallbacksWide.cs,LoadModule,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters.cs,GetDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetDescription,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetDescriptionWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetPseudoDescription,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetPseudoDescriptionWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetPseudoValues,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,SetPseudoValues,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,GetValues2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugRegisters2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugRegisters2.cs,SetValues2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetNameByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetNearNameByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetLineByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetModuleNames,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetTypeName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,ReadTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,WriteTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,OutputTypedDataVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,ReadTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,WriteTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,OutputTypedDataPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,GetNextSymbolMatch,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols.cs,FindSourceFile,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetNameByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetNearNameByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetLineByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetModuleNames,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetTypeName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,ReadTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,WriteTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,OutputTypedDataVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,ReadTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,WriteTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,OutputTypedDataPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetNextSymbolMatch,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,FindSourceFile,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetModuleVersionInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetModuleNameString,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetConstantName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols2.cs,GetFieldName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNameByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNearNameByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetLineByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleNames,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetTypeName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,ReadTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,WriteTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,OutputTypedDataVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,ReadTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,WriteTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,OutputTypedDataPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNextSymbolMatch,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,FindSourceFile,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleVersionInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleNameString,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetConstantName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetFieldName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNameByOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNearNameByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetLineByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetTypeNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetNextSymbolMatchWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,FindSourceFileWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleVersionInformationWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleNameStringWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetConstantNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetFieldNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleByModuleName2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleByModuleName2Wide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetModuleByOffset2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,AddSyntheticModule,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,AddSyntheticModuleWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetFunctionEntryByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetFieldTypeAndOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetFieldTypeAndOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,AddSyntheticSymbol,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,AddSyntheticSymbolWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntriesByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntriesByName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntriesByNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSymbolEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntriesByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntriesByLine,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntriesByLineWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols3.cs,GetSourceEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNameByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNearNameByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetLineByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleNames,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetTypeName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,ReadTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,WriteTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,OutputTypedDataVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,ReadTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,WriteTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,OutputTypedDataPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNextSymbolMatch,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,FindSourceFile,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleVersionInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleNameString,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetConstantName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetFieldName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNameByOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNearNameByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetLineByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetTypeNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNextSymbolMatchWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,FindSourceFileWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleVersionInformationWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleNameStringWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetConstantNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetFieldNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleByModuleName2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleByModuleName2Wide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetModuleByOffset2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,AddSyntheticModule,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,AddSyntheticModuleWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetFunctionEntryByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetFieldTypeAndOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetFieldTypeAndOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,AddSyntheticSymbol,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,AddSyntheticSymbolWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntriesByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntriesByName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntriesByNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSymbolEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntriesByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntriesByLine,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntriesByLineWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetSourceEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNameByInlineContext,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetNameByInlineContextWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetLineByInlineContext,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols4.cs,GetLineByInlineContextWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNameByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNearNameByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetLineByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleNames,The method has 11 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetTypeName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,ReadTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,WriteTypedDataVirtual,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,OutputTypedDataVirtual,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,ReadTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,WriteTypedDataPhysical,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,OutputTypedDataPhysical,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNextSymbolMatch,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,FindSourceFile,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleVersionInformation,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleNameString,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetConstantName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetFieldName,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNameByOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNearNameByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetLineByOffsetWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetTypeNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNextSymbolMatchWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,FindSourceFileWide,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleVersionInformationWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleNameStringWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetConstantNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetFieldNameWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleByModuleName2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleByModuleName2Wide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetModuleByOffset2,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,AddSyntheticModule,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,AddSyntheticModuleWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetFunctionEntryByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetFieldTypeAndOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetFieldTypeAndOffsetWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,AddSyntheticSymbol,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,AddSyntheticSymbolWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntriesByOffset,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntriesByName,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntriesByNameWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSymbolEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntriesByOffset,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntriesByLine,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntriesByLineWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntryString,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntryStringWide,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetSourceEntryOffsetRegions,The method has 5 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNameByInlineContext,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetNameByInlineContextWide,The method has 6 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetLineByInlineContext,The method has 7 parameters.
Long Parameter List,DotNetDbg,IDebugSymbols5,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugSymbols5.cs,GetLineByInlineContextWide,The method has 7 parameters.
Long Identifier,DotNetDbg,IDebugDataSpaces2,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces2.cs,QueryVirtual,The length of the parameter Info_Aligned_MEMORY_BASIC_INFORMATION64 is 39.
Long Identifier,DotNetDbg,IDebugDataSpaces3,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces3.cs,QueryVirtual,The length of the parameter Info_Aligned_MEMORY_BASIC_INFORMATION64 is 39.
Long Identifier,DotNetDbg,IDebugDataSpaces4,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\IDebugDataSpaces4.cs,QueryVirtual,The length of the parameter Info_Aligned_MEMORY_BASIC_INFORMATION64 is 39.
Long Statement,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The length of the statement  "	Regex regex = new Regex (@"File\sversion\:\s+(?<major>\d)\.(?<minor>\d)\.(?<ver>\d+)\.(" + @"?<build>\d+)"' RegexOptions.IgnoreCase | RegexOptions.Multiline | RegexOptions.Singleline | RegexOptions.IgnorePatternWhitespace | RegexOptions.Compiled); " is 247.
Long Statement,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,GetMT,The length of the statement  "	var rgMt = new System.Text.RegularExpressions.Regex (@"MethodTable:\W(?<methodtable>\S*)"' System.Text.RegularExpressions.RegexOptions.Multiline); " is 146.
Long Statement,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitIfPointer,The length of the statement  "		Debugger.Current.OutputDebugInfo ("Reading pointer of CLRObject's {2} with name: {1} and offset:{0}\n"' _offset' Type' Name); " is 125.
Long Statement,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The length of the statement  "				Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name); " is 128.
Long Statement,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,EmitParentInfo,The length of the statement  "		Debugger.Current.OutputDebugInfo ("Parent CLRObject's  Name:{0} Type:{1} MT:{2}\n"' this.Parent.Name' this.Parent.Type' this.Parent.MT); " is 136.
Long Statement,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,EmitParentInfo,The length of the statement  "			Debugger.Current.OutputDebugInfo ("GrandParent CLRObject's  Name:{0} Type:{1} MT:{2}\n"' this.Parent.Parent.Name' this.Parent.Parent.Type' this.Parent.Parent.MT); " is 162.
Long Statement,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,Execute,The length of the statement  "	//    this.OutputVerboseLine("SimpleOutputHandler.Install Failed creating a new debug client for execution: {0:x8}"' hr); " is 121.
Long Statement,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,Execute,The length of the statement  "	var hrExecution = this.DebugControl.Execute (DEBUG_OUTCTL.THIS_CLIENT' command' DEBUG_EXECUTE.DEFAULT | DEBUG_EXECUTE.NO_REPEAT); " is 129.
Long Statement,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,InstallCustomHandler,The length of the statement  "	IntPtr ThisIDebugOutputCallbacksPtr = Marshal.GetComInterfaceForObject (currentHandler' typeof(IDebugOutputCallbacks2)); " is 120.
Long Statement,ExtCS.Debugger,DebuggerScriptEngine,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Engines\DebuggerScriptEngineSession.cs,Execute,The length of the statement  "			var message = string.Format ("Exception Message: {0} {1}Stack Trace:{2}"' executeException.InnerException.Message' Environment.NewLine' executeException.InnerException.StackTrace); " is 180.
Long Statement,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,ShowHelp,The length of the statement  "	string sStartText = " ExtCS - Extend your debugger using CSharp \n================================================\nHelp for ExtCS.dll\n"; " is 138.
Long Statement,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,ShowHelp,The length of the statement  "	string sTextExecute = "<exec cmd=\"!extcs.help execute\">!execute</exec>\t\t ->execute a csharp script file e.g. <b>!execute -file c:\\scripts\\heapstat.csx </b>\n"; " is 165.
Long Statement,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,ShowHelp,The length of the statement  "	string sTextClearScriptSession = "<exec cmd=\"!extcs.help clearscriptsession\">!clearscriptsession</exec>\t\t ->Clears the current script context session .This is useful when using !execute as a REPL \n"; " is 204.
Long Statement,ExtCS.Debugger,ManagedExtCS,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ManagedExtCS.cs,ShowHelp,The length of the statement  "			outStb.Append ("if this flag is enabled' When Executing script'it will emit extra details about internal commands running\n"); " is 126.
Long Statement,ExtCS.Debugger,OptionValueCollection,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,AssertValid,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Missing required value for option '{0}'.")' c.OptionName)' c.OptionName); " is 146.
Long Statement,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,Parse,The length of the statement  "		throw new OptionException (string.Format (c.OptionSet.MessageLocalizer ("Could not convert string `{0}' to type {1} for option `{2}'.")' value' typeof(T).Name' c.OptionName)' c.OptionName' e); " is 192.
Long Statement,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParsePrototype,The length of the statement  "			throw new ArgumentException (string.Format ("Conflicting option types: '{0}' vs. '{1}'."' type' name [end])' "prototype"); " is 122.
Long Statement,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParsePrototype,The length of the statement  "		throw new ArgumentException (string.Format ("Cannot provide key/value separators for Options taking {0} value(s)."' count)' "prototype"); " is 137.
Long Statement,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParseValue,The length of the statement  "		foreach (string o in c.Option.ValueSeparators != null ? option.Split (c.Option.ValueSeparators' StringSplitOptions.None) : new string[] { " is 137.
Long Statement,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParseValue,The length of the statement  "		throw new OptionException (localizer (string.Format ("Error: Found {0} option values when expecting {1}."' c.OptionValues.Count' c.Option.MaxValueCount))' c.OptionName); " is 169.
Long Statement,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParseBool,The length of the statement  "	if (n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))) { " is 127.
Complex Conditional,ExtCS.Debugger,Option,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,Option,The conditional expression  "Array.IndexOf (names' "<>") >= 0 && ((names.Length == 1 && this.type != OptionValueType.None) || (names.Length > 1 && this.MaxValueCount > 1))"  is complex.
Complex Conditional,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,ParseBool,The conditional expression  "n.Length >= 1 && (n [n.Length - 1] == '+' || n [n.Length - 1] == '-') && Contains ((rn = n.Substring (0' n.Length - 1)))"  is complex.
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: if (ver.Major > 2 && ver.Version > 300) {  	d.Require ("sos.dll");  }  else {  	switch (ver.Major) {  	case 1:  		d.Require ("psscor.dll");  		break;  	case 2:  		d.Require ("psscor2.dll");  		break;  	case 4:  		d.Require ("psscor4.dll");  		break;  	default:  		d.Require ("sos.dll");  		break;  	}  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: if (ver.Major > 2 && ver.Version > 300) {  	d.Require ("sos.dll");  }  else {  	switch (ver.Major) {  	case 1:  		d.Require ("psscor.dll");  		break;  	case 2:  		d.Require ("psscor2.dll");  		break;  	case 4:  		d.Require ("psscor4.dll");  		break;  	default:  		d.Require ("sos.dll");  		break;  	}  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: if (ver.Major > 2 && ver.Version > 300) {  	d.Require ("sos.dll");  }  else {  	switch (ver.Major) {  	case 1:  		d.Require ("psscor.dll");  		break;  	case 2:  		d.Require ("psscor2.dll");  		break;  	case 4:  		d.Require ("psscor4.dll");  		break;  	default:  		d.Require ("sos.dll");  		break;  	}  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: if (ver.Major > 2 && ver.Version > 300) {  	d.Require ("sos.dll");  }  else {  	switch (ver.Major) {  	case 1:  		d.Require ("psscor.dll");  		break;  	case 2:  		d.Require ("psscor2.dll");  		break;  	case 4:  		d.Require ("psscor4.dll");  		break;  	default:  		d.Require ("sos.dll");  		break;  	}  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: switch (ver.Major) {  case 1:  	d.Require ("psscor.dll");  	break;  case 2:  	d.Require ("psscor2.dll");  	break;  case 4:  	d.Require ("psscor4.dll");  	break;  default:  	d.Require ("sos.dll");  	break;  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,LoadSOSorPSSCOR,The following statement contains a magic number: switch (ver.Major) {  case 1:  	d.Require ("psscor.dll");  	break;  case 2:  	d.Require ("psscor2.dll");  	break;  case 4:  	d.Require ("psscor4.dll");  	break;  default:  	d.Require ("sos.dll");  	break;  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,GetColumnPadStrings,The following statement contains a magic number: for (int cCount = 0; cCount < columnPaddings.Length; cCount++) {  	rowPaddings [cCount] = GetPaddedString (' '' (columnPaddings [cCount] - currentRow [cCount].ToString ().Length) + 2);  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,GetColumnPadStrings,The following statement contains a magic number: rowPaddings [cCount] = GetPaddedString (' '' (columnPaddings [cCount] - currentRow [cCount].ToString ().Length) + 2);  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,GetHeaderPadStrings,The following statement contains a magic number: for (int cCount = 0; cCount < columnPaddings.Length; cCount++) {  	rowPaddings [cCount] = GetPaddedString (' '' (columnPaddings [cCount] - table.Columns [cCount].ColumnName.Length) + 2);  }  
Magic Number,ExtCS.Debugger,Utilities,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\Utilities.cs,GetHeaderPadStrings,The following statement contains a magic number: rowPaddings [cCount] = GetPaddedString (' '' (columnPaddings [cCount] - table.Columns [cCount].ColumnName.Length) + 2);  
Magic Number,ExtCS.Debugger,Address,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\Address.cs,FormatAddress,The following statement contains a magic number: if (address [0] == '0' && address [1] == 'x') {  	//removing 0x from address  	return address.Substring (2);  }  
Magic Number,ExtCS.Debugger,Address,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\Address.cs,FormatAddress,The following statement contains a magic number: return address.Substring (2);  
Magic Number,ExtCS.Debugger,Address,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\Address.cs,GetManagedString,The following statement contains a magic number: if (SUCCEEDED (GetString (_address + offset' 2000' out strOut))) {  	return strOut;  }  
Magic Number,ExtCS.Debugger,Address,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\Address.cs,GetString,The following statement contains a magic number: if (SUCCEEDED (GetString (_address' 2000' out strOut))) {  	return strOut;  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (string.IsNullOrEmpty (Name) && _properties [0].Contains ("Name:"))  	Name = _properties [0].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: Name = _properties [0].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (string.IsNullOrEmpty (this.MT) && _properties [1].Contains ("MethodTable:"))  	MT = _properties [1].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: MT = _properties [1].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (_properties [2].Contains ("EEClass:"))  	EEclass = _properties [2].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (_properties [2].Contains ("EEClass:"))  	EEclass = _properties [2].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (_properties [2].Contains ("EEClass:"))  	EEclass = _properties [2].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: EEclass = _properties [2].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: EEclass = _properties [2].Substring (13);  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: for (int i = 7; i < _properties.Length; i++) {  	var strCurrentLine = _properties [i];  	//only if the filed contains instance'try to parse it.  	//we are skipping shared and static variable instances.  	if (strCurrentLine.Contains ("instance")) {  		string[] arrFields = strCurrentLine.Split (new char[] {  			' '  		}' StringSplitOptions.RemoveEmptyEntries);  		//saw that some times the type field is empty string  		//we are skipping that field as well b taking more thn or equal to 8 strings.  		//0-MT  		//1-Field  		//2-offset  		//3-Type  		//4-VT  		//5-Attr  		//6-Value  		//7 =>Name  		if (arrFields.Length >= 8) {  			CLRObject ObjCLR;  			//indexing from back to avoid problems when the type contains spaces.  			//if type contains spaces'it will cause length to be changed  			if (arrFields [arrFields.Length - 4].Trim () == "1") {  				//instantiaing value type.  				//no need to check for address and values.  				ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			else {  				string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  				//var pointer = Debugger.Current.ReadPointer(fieldAddress);  				ObjCLR = new CLRObject (true' fieldAddress);  				ObjCLR.Name = arrFields [arrFields.Length - 1];  				ObjCLR.Parent = this;  				//ObjCLR.MT = arrFields[0];  				ObjCLR.MT = arrFields [0].Trim ();  				ObjCLR.Type = arrFields [3].Trim ();  			}  			Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  			_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  		}  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (strCurrentLine.Contains ("instance")) {  	string[] arrFields = strCurrentLine.Split (new char[] {  		' '  	}' StringSplitOptions.RemoveEmptyEntries);  	//saw that some times the type field is empty string  	//we are skipping that field as well b taking more thn or equal to 8 strings.  	//0-MT  	//1-Field  	//2-offset  	//3-Type  	//4-VT  	//5-Attr  	//6-Value  	//7 =>Name  	if (arrFields.Length >= 8) {  		CLRObject ObjCLR;  		//indexing from back to avoid problems when the type contains spaces.  		//if type contains spaces'it will cause length to be changed  		if (arrFields [arrFields.Length - 4].Trim () == "1") {  			//instantiaing value type.  			//no need to check for address and values.  			ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		else {  			string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  			//var pointer = Debugger.Current.ReadPointer(fieldAddress);  			ObjCLR = new CLRObject (true' fieldAddress);  			ObjCLR.Name = arrFields [arrFields.Length - 1];  			ObjCLR.Parent = this;  			//ObjCLR.MT = arrFields[0];  			ObjCLR.MT = arrFields [0].Trim ();  			ObjCLR.Type = arrFields [3].Trim ();  		}  		Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  		_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  	}  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields.Length >= 8) {  	CLRObject ObjCLR;  	//indexing from back to avoid problems when the type contains spaces.  	//if type contains spaces'it will cause length to be changed  	if (arrFields [arrFields.Length - 4].Trim () == "1") {  		//instantiaing value type.  		//no need to check for address and values.  		ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	else {  		string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  		//var pointer = Debugger.Current.ReadPointer(fieldAddress);  		ObjCLR = new CLRObject (true' fieldAddress);  		ObjCLR.Name = arrFields [arrFields.Length - 1];  		ObjCLR.Parent = this;  		//ObjCLR.MT = arrFields[0];  		ObjCLR.MT = arrFields [0].Trim ();  		ObjCLR.Type = arrFields [3].Trim ();  	}  	Debugger.Current.OutputDebugInfo ("{0} \t\t {1} \t\t {2} \t\t {3} \n"' ObjCLR.MT' ObjCLR.Type' ObjCLR.IsValueType' ObjCLR.Name);  	_Fields.Add (arrFields [arrFields.Length - 1].Trim ().ToUpperInvariant ()' ObjCLR);  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: if (arrFields [arrFields.Length - 4].Trim () == "1") {  	//instantiaing value type.  	//no need to check for address and values.  	ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  else {  	string fieldAddress = new Address (_address.ToHex ()' arrFields [2]).ToHex ();  	//var pointer = Debugger.Current.ReadPointer(fieldAddress);  	ObjCLR = new CLRObject (true' fieldAddress);  	ObjCLR.Name = arrFields [arrFields.Length - 1];  	ObjCLR.Parent = this;  	//ObjCLR.MT = arrFields[0];  	ObjCLR.MT = arrFields [0].Trim ();  	ObjCLR.Type = arrFields [3].Trim ();  }  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: ObjCLR = new CLRObject (true' arrFields [3].Trim ()' arrFields [arrFields.Length - 2].Trim ());  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: ObjCLR.Type = arrFields [3].Trim ();  
Magic Number,ExtCS.Debugger,CLRObject,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\ScriptObjects\CLRObject.cs,InitFields,The following statement contains a magic number: ObjCLR.Type = arrFields [3].Trim ();  
Magic Number,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,GetString,The following statement contains a magic number: if (SUCCEEDED (GetString (address' 2000' out strOut))) {  	return strOut;  }  
Magic Number,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,GetUnicodeString,The following statement contains a magic number: if (SUCCEEDED (hr)) {  	if ((bytesRead / 2) > maxSize) {  		sb.Length = (int)maxSize;  	}  	output = sb.ToString ();  }  else if (ERROR_INVALID_PARAMETER == hr) {  	sb.Length = (int)maxSize;  	output = sb.ToString ();  }  else {  	output = null;  }  
Magic Number,ExtCS.Debugger,Debugger,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Debugger.cs,GetUnicodeString,The following statement contains a magic number: if ((bytesRead / 2) > maxSize) {  	sb.Length = (int)maxSize;  }  
Magic Number,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,WriteOptionDescriptions,The following statement contains a magic number: foreach (Option p in this) {  	int written = 0;  	if (!WriteOptionPrototype (o' p' ref written))  		continue;  	if (written < OptionWidth)  		o.Write (new string (' '' OptionWidth - written));  	else {  		o.WriteLine ();  		o.Write (new string (' '' OptionWidth));  	}  	List<string> lines = GetLines (localizer (GetDescription (p.Description)));  	o.WriteLine (lines [0]);  	string prefix = new string (' '' OptionWidth + 2);  	for (int i = 1; i < lines.Count; ++i) {  		o.Write (prefix);  		o.WriteLine (lines [i]);  	}  }  
Magic Number,ExtCS.Debugger,StringExtensions,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Extensions\StringExtensions.cs,FormatAddress,The following statement contains a magic number: if (address [0] == '0' && address [1] == 'x') {  	//removing 0x from address  	return address.Substring (2);  }  
Magic Number,ExtCS.Debugger,StringExtensions,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Extensions\StringExtensions.cs,FormatAddress,The following statement contains a magic number: return address.Substring (2);  
Magic Number,DotNetDbg,DEBUG_STACK_FRAME_EX,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\Structs.cs,DEBUG_STACK_FRAME_EX,The following statement contains a magic number: fixed (UInt64* pParams = Params) {  	for (int i = 0; i < 4; ++i)  		pParams [i] = dsf.Params [i];  }  
Magic Number,DotNetDbg,DEBUG_STACK_FRAME_EX,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\Structs.cs,DEBUG_STACK_FRAME_EX,The following statement contains a magic number: for (int i = 0; i < 4; ++i)  	pParams [i] = dsf.Params [i];  
Magic Number,DotNetDbg,DEBUG_STACK_FRAME_EX,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\Structs.cs,DEBUG_STACK_FRAME_EX,The following statement contains a magic number: fixed (UInt64* pReserved = Reserved) {  	for (int i = 0; i < 6; ++i)  		pReserved [i] = dsf.Reserved [i];  }  
Magic Number,DotNetDbg,DEBUG_STACK_FRAME_EX,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\DotnetDbg\Structs.cs,DEBUG_STACK_FRAME_EX,The following statement contains a magic number: for (int i = 0; i < 6; ++i)  	pReserved [i] = dsf.Reserved [i];  
Missing Default,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,Parse,The following switch statement is missing a default case: switch (p.OptionValueType) {  case OptionValueType.None:  	c.OptionValues.Add (n);  	c.Option.Invoke (c);  	break;  case OptionValueType.Optional:  case OptionValueType.Required:  	ParseValue (v' c);  	break;  }  
Missing Default,ExtCS.Debugger,OptionSet,C:\repos\rohithkrajan_ExtCS\WindbgManagedExt\Helpers\OptionSet.cs,GetLineEnd,The following switch statement is missing a default case: switch (description [i]) {  case ' ':  case '\t':  case '\v':  case '-':  case ''':  case '.':  case ';':  	sep = i;  	break;  case '\n':  	return i;  }  
