Implementation smell,Namespace,Class,File,Method,Description
Long Method,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The method has 273 lines of code.
Long Parameter List,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,CatchSlowSum3,The method has 5 parameters. Parameters: instance' method' parameters' stopwatch' e
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,Double3,The following statement contains a magic number: Result = 5;
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,Double4,The following statement contains a magic number: Result = 5;
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,SlowSum,The following statement contains a magic number: Thread.Sleep(110);
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,SlowSum2,The following statement contains a magic number: Thread.Sleep(110);
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,SlowSum3,The following statement contains a magic number: Thread.Sleep(110);
Magic Number,Afterthought.UnitTest.Target,Calculator,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\Calculator.cs,SlowSum4,The following statement contains a magic number: Thread.Sleep(110);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Methods  				.Named("Double")  				.WithParams<int[]>()  				.After((instance' set) =>  					{  						for (int i = 0; i < set.Length; i++)  							set[i] = set[i] * 2;  					});
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Methods  				.Named("Double2")  				.After((instance' methodName' parameters) =>  					{  						for (int i = 0; i < ((int[])parameters[0]).Length; i++)  							((int[])parameters[0])[i] = ((int[])parameters[0])[i] * 2;  					});
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Methods  				.Named("Double3")  				.WithParams<int[]' bool>()  				.Before(delegate(T instance' ref int[] set' ref bool condition)  				{  					for (int i = 0; i < set.Length; i++)  						set[i] = set[i]*2;  				});
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Methods  				.Named("Double4")  				.WithParams<int[]' bool>()  				.After((instance' set' condition) =>  				{  					for (int i = 0; i < set.Length; i++)  						set[i] = set[i] * 2;  				});
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Properties  				.Add<int>("InitiallyTwelve")  				.Initialize((instance' property) => 12);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Properties  				.Named("Afterthought.UnitTest.Target.ILog.e")  				.OfType<decimal>()  				.Get((instance' propertyName) => 2.71828m);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Properties  				.Named("InitiallyThirteen")  				.OfType<int>()  				.Initialize((instance' propertyName) => 13);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Implement<IMath>(    				// Pi  				Properties.Add<decimal>("Pi").Get((instance' property) => 3.14159m)'    				// Subtract(x' y)  				Methods.Add("Subtract"' (T instance' decimal x' decimal y) => x - y)  			);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Attributes.Add<TestAttribute' int>(5);
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Fields  				.Named("holding1")  				.AddAttribute<TestAttribute' Type>(typeof(string))  				.AddAttribute<TestAttribute>()  				.AddAttribute<TestAttribute' int>(5)  				.AddAttribute<TestAttribute' string[]>(new string[] { "Testing"' "Two" });
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Constructors  				.WithParams()  				.AddAttribute<TestAttribute' Type>(typeof(string))  				.AddAttribute<TestAttribute>()  				.AddAttribute<TestAttribute' int>(5)  				.AddAttribute<TestAttribute' string[]>(new string[] { "Testing"' "Two" });
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Properties  				.Named("Random1")  				.AddAttribute<TestAttribute' Type>(typeof(string))  				.AddAttribute<TestAttribute>()  				.AddAttribute<TestAttribute' int>(5)  				.AddAttribute<TestAttribute' string[]>(new string[] { "Testing"' "Two" });
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Methods  				.Named("Multiply")  				.AddAttribute<TestAttribute' Type>(typeof(string))  				.AddAttribute<TestAttribute>()  				.AddAttribute<TestAttribute' int>(5)  				.AddAttribute<TestAttribute' string[]>(new string[] { "Testing"' "Two" });
Magic Number,Afterthought.UnitTest.Target,TestAmendment<T>,D:\research\architectureSmells\repos\vc3_Afterthought\Afterthought.UnitTest.Target\TestAmendment.cs,TestAmendment,The following statement contains a magic number: Events  				.Named("Calculate")  				.AddAttribute<TestAttribute' Type>(typeof(string))  				.AddAttribute<TestAttribute>()  				.AddAttribute<TestAttribute' int>(5)  				.AddAttribute<TestAttribute' string[]>(new string[] { "Testing"' "Two" });
