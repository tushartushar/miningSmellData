Implementation smell,Namespace,Class,File,Method,Description
Complex Method,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,FilterResults,Cyclomatic complexity of the method is 9
Complex Method,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,Cyclomatic complexity of the method is 13
Complex Method,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,Cyclomatic complexity of the method is 14
Complex Method,UnityTest,DropDownControl,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\DropDownControl.cs,Draw,Cyclomatic complexity of the method is 8
Complex Method,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,Cyclomatic complexity of the method is 10
Complex Method,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,Cyclomatic complexity of the method is 12
Complex Method,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,Cyclomatic complexity of the method is 8
Complex Method,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,GetIconBasedOnResultType,Cyclomatic complexity of the method is 11
Complex Method,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,Cyclomatic complexity of the method is 11
Complex Method,UnityTest,TestManager,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\TestManager.cs,GetTestsToSelect,Cyclomatic complexity of the method is 9
Complex Method,UnityTest,UnitTestView,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\BackgroundRunner.cs,BackgroudRunner,Cyclomatic complexity of the method is 8
Complex Method,UnityTest,GuiHelper,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GuiHelper.cs,GetIconForResult,Cyclomatic complexity of the method is 9
Complex Method,UnityTest.IntegrationTests,PlatformRunnerSettingsWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\PlatformRunnerSettingsWindow.cs,OnGUI,Cyclomatic complexity of the method is 9
Long Parameter List,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,FilterResults,The method has 10 parameters.
Long Parameter List,UnityTest,GroupByExecutionMethodRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\GroupByExecutionMethodRenderer.cs,GroupResult,The method has 5 parameters.
Long Parameter List,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,Draw,The method has 6 parameters.
Long Parameter List,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawListOfMethods,The method has 6 parameters.
Long Parameter List,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,GetFieldsAndProperties,The method has 6 parameters.
Long Parameter List,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,The method has 5 parameters.
Long Parameter List,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetFieldsAndPropertiesFromGameObject,The method has 6 parameters.
Long Parameter List,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,GetIconBasedOnResultType,The method has 5 parameters.
Long Parameter List,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawContextTestMenu,The method has 7 parameters.
Long Parameter List,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldoutAndCheckIfCollapsed,The method has 6 parameters.
Long Parameter List,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldoutContextMenu,The method has 6 parameters.
Long Parameter List,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTestContextMenu,The method has 5 parameters.
Long Parameter List,UnityTest,GuiHelper,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GuiHelper.cs,GetSequencePointOfTest,The method has 5 parameters.
Long Statement,UnityTest,AssertionComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionComponentEditor.cs,OnInspectorGUI,The length of the statement  "	script.checkMethods = (AssertionComponent.CheckMethod)EditorGUILayout.EnumMaskField (script.checkMethods' EditorStyles.popup' GUILayout.ExpandWidth (false)); " is 157.
Long Statement,UnityTest,AssertionComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionComponentEditor.cs,OnInspectorGUI,The length of the statement  "		thisPathSelector.Draw (script.Action.go' script.Action' script.Action.thisPropertyPath' script.Action.GetAccepatbleTypesForA ()' go =>  { " is 137.
Long Statement,UnityTest,AssertionComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionComponentEditor.cs,DrawCompareToType,The length of the statement  "	comparer.compareToType = (ComparerBase.CompareToType)EditorGUILayout.EnumPopup ("Compare to type"' comparer.compareToType' EditorStyles.popup); " is 143.
Long Statement,UnityTest,AssertionComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionComponentEditor.cs,DrawObjectCompareField,The length of the statement  "	otherPathSelector.Draw (comparer.other' comparer' comparer.otherPropertyPath' comparer.GetAccepatbleTypesForB ()' go =>  { " is 122.
Long Statement,UnityTest,AssertionComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionComponentEditor.cs,DrawCustomFields,The length of the statement  "	foreach (var prop in script.Action.GetType ().GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)) { " is 132.
Long Statement,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,OnInspectorUpdate,The length of the statement  "		allAssertions = new List<AssertionComponent> (Resources.FindObjectsOfTypeAll (typeof(AssertionComponent)) as AssertionComponent[]); " is 131.
Long Statement,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,FilterResults,The length of the statement  "		return assertionComponents.Where (c => c.Action is ComparerBase && (c.Action as ComparerBase).otherPropertyPath.ToLower ().Contains (text)); " is 140.
Long Statement,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,FilterResults,The length of the statement  "		return assertionComponents.Where (c => c.Action is ComparerBase && (c.Action as ComparerBase).other != null && (c.Action as ComparerBase).other.name.ToLower ().Contains (text)); " is 177.
Long Statement,UnityTest,DropDownControl,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\DropDownControl.cs,Draw,The length of the statement  "	if (GUILayout.Button (new GUIContent (convertForButtonLabel (selected)' tooltip)' EditorStyles.popup' buttonLayoutOptions)) { " is 125.
Long Statement,UnityTest,DropDownControl,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\DropDownControl.cs,PrintMenu,The length of the statement  "		menu.AddItem (new GUIContent ((ignoreConvertForGUIContent (options) ? localS.ToString () : convertForGUIContent (localS)))' false' () =>  { " is 139.
Long Statement,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,GetFieldsAndProperties,The length of the statement  "	var options = propertyResolver.GetFieldsAndPropertiesFromGameObject (go' comparer.GetDepthOfSearch ()' extendPath).ToList (); " is 125.
Long Statement,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,The length of the statement  "	if (GUI.GetNameOfFocusedControl () == btnName && Event.current.type == EventType.KeyDown && Event.current.keyCode == KeyCode.DownArrow) { " is 137.
Long Statement,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,The length of the statement  "		EditorGUILayout.HelpBox ("This property or field is not attached or set. It will fail unless it will be attached before the check is perfomed."' MessageType.Warning); " is 166.
Long Statement,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetPropertiesAndFieldsFromType,The length of the statement  "		if (AllowedTypes == null || !AllowedTypes.Any () || (AllowedTypes.Contains (memberType) && !ExcludedFieldNames.Contains (memberTypeName))) { " is 140.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The length of the statement  "	if (labelRect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 0) { " is 129.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The length of the statement  "	EditorGUI.LabelField (labelRect' label' selectedTests.Contains (testInfo) ? Styles.selectedTestStyle : Styles.testStyle); " is 121.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The length of the statement  "	if (labelRect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 0) { " is 129.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The length of the statement  "	isClassFolded = !EditorGUI.Foldout (labelRect' !isClassFolded' label' selectedTests.Contains (testInfo) ? Styles.selectedTestGroupStyle : Styles.testGroupStyle); " is 161.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,GetIconBasedOnResultType,The length of the statement  "		if (childrenResults.Any (t => t.resultType == TestResult.ResultType.Failed || t.resultType == TestResult.ResultType.FailedException || t.resultType == TestResult.ResultType.Timeout)) " is 182.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The length of the statement  "	if (GUILayout.Button (guiRunAllTests' Styles.buttonLeft' layoutOptions) && !EditorApplication.isPlayingOrWillChangePlaymode) { " is 126.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The length of the statement  "	if (GUILayout.Button (guiRunSelectedTests' Styles.buttonMid' layoutOptions) && !EditorApplication.isPlayingOrWillChangePlaymode) { " is 130.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The length of the statement  "	if (GUILayout.Button (guiCreateNewTest' Styles.buttonRight' layoutOptions) && !EditorApplication.isPlayingOrWillChangePlaymode) { " is 129.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The length of the statement  "		if (selectedTests.Count == 1 && Selection.activeGameObject != null && Selection.activeGameObject.GetComponent<TestComponent> ()) { " is 130.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The length of the statement  "	if (GUILayout.Button (showOptions ? guiOptionsHideLabel : guiOptionsShowLabel' GUILayout.Height (24)' GUILayout.Width (80))) { " is 126.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The length of the statement  "			if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) { " is 176.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintOptions,The length of the statement  "	addNewGameObjectUnderSelectedTest = EditorGUILayout.Toggle (guiAddGOUderTest' addNewGameObjectUnderSelectedTest' style); " is 120.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyChange,The length of the statement  "		if (selectedTests.Count == 1 && go.transform.parent == null && go.GetComponent<TestComponent> () == null && go.GetComponent<TestRunner> () == null) { " is 149.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyChange,The length of the statement  "		if (test.gameObject.transform.parent != null && test.gameObject.transform.parent.gameObject.GetComponent<TestComponent> () == null) { " is 133.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyChange,The length of the statement  "	if (Selection.gameObjects.Count () > 1 && Selection.gameObjects.All (o => o is GameObject && o.GetComponent<TestComponent> ())) { " is 129.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,IsNotFiltered,The length of the statement  "	if (!showFailedTest && (testInfo.resultType == TestResult.ResultType.Failed || testInfo.resultType == TestResult.ResultType.FailedException || testInfo.resultType == TestResult.ResultType.Timeout)) " is 197.
Long Statement,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,GetVisibleNotIgnoredTests,The length of the statement  "	return testManager.GetAllTestsResults ().Where (tr => tr.TestComponent.ignored != true).Where (IsNotFiltered).Select (result => result.TestComponent).ToList (); " is 160.
Long Statement,UnityTest,TestComponentEditor,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\TestComponentEditor.cs,OnInspectorGUI,The length of the statement  "		component.includedPlatforms = (TestComponent.IncludedPlatforms)EditorGUILayout.EnumMaskField (guiIncludePlatforms' component.includedPlatforms' EditorStyles.popup); " is 164.
Long Statement,UnityTest,TestManager,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\TestManager.cs,GetChildrenTestsResults,The length of the statement  "		return testList.Where (t => t.GameObject != null && t.GameObject.transform.parent == tc.gameObject.transform).ToList (); " is 120.
Long Statement,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The length of the statement  "	var foldoutGUIContent = new GUIContent (printedName' test.Executed || test.IsIgnored || test.ResultState == TestResultState.NotRunnable ? GuiHelper.GetIconForResult (test.ResultState) : Icons.unknownImg' test.Test.FullName); " is 224.
Long Statement,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The length of the statement  "	var rect = GUILayoutUtility.GetRect (foldoutGUIContent' EditorStyles.label' GUILayout.ExpandWidth (true)/*' GUILayout.MaxHeight (18)*/); " is 136.
Long Statement,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The length of the statement  "	if (rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 0) { " is 124.
Long Statement,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldoutContextMenu,The length of the statement  "		m.AddItem (guiRunSelected' false' data => RunTest (selectedTests.Select (t => t.Test.FullName).Concat (selectedGroups).ToArray ())' ""); " is 136.
Long Statement,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTestContextMenu,The length of the statement  "		m.AddItem (guiRunSelected' false' data => RunTest (selectedTests.Select (t => t.Test.FullName).Concat (selectedGroups).ToArray ())' ""); " is 136.
Long Statement,UnityTest.IntegrationTests,PlatformRunner,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\PlatformRunner.cs,BuildAndRunInPlayer,The length of the statement  "	BuildPipeline.BuildPlayer (scenes' GetTempPath (buildTarget' name ?? Application.loadedLevelName)' buildTarget' BuildOptions.AutoRunPlayer | BuildOptions.Development); " is 167.
Complex Conditional,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetPropertiesAndFieldsFromType,The conditional expression  "AllowedTypes == null || !AllowedTypes.Any () || (AllowedTypes.Contains (memberType) && !ExcludedFieldNames.Contains (memberTypeName))"  is complex.
Complex Conditional,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The conditional expression  "!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1"  is complex.
Complex Conditional,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyChange,The conditional expression  "selectedTests.Count == 1 && go.transform.parent == null && go.GetComponent<TestComponent> () == null && go.GetComponent<TestRunner> () == null"  is complex.
Complex Conditional,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,IsNotFiltered,The conditional expression  "!showFailedTest && (testInfo.resultType == TestResult.ResultType.Failed || testInfo.resultType == TestResult.ResultType.FailedException || testInfo.resultType == TestResult.ResultType.Timeout)"  is complex.
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: EditorGUILayout.LabelField ("Group by"' GUILayout.MaxWidth (60));  
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: groupBy = (GroupByType)EditorGUILayout.EnumPopup (groupBy' GUILayout.MaxWidth (150));  
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: showType = (ShowType)EditorGUILayout.EnumPopup (showType' GUILayout.MaxWidth (100));  
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: EditorGUILayout.LabelField ("Filter by"' GUILayout.MaxWidth (50));  
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: filterType = (FilterType)EditorGUILayout.EnumPopup (filterType' GUILayout.MaxWidth (100));  
Magic Number,UnityTest,AssertionExplorerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionExplorerWindow.cs,DrawMenuPanel,The following statement contains a magic number: filterText = EditorGUILayout.TextField (filterText' GUILayout.MaxWidth (100));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var grouping in GroupResult (allAssertions)) {  	var key = GetStringKey (grouping.Key);  	bool isFolded = foldMarkers.Contains (key);  	if (key != "") {  		EditorGUILayout.BeginHorizontal ();  		EditorGUI.BeginChangeCheck ();  		isFolded = PrintFoldout (isFolded' grouping.Key);  		if (EditorGUI.EndChangeCheck ()) {  			if (isFolded)  				foldMarkers.Add (key);  			else  				foldMarkers.Remove (key);  		}  		EditorGUILayout.EndHorizontal ();  		if (isFolded)  			continue;  	}  	foreach (var assertionComponent in grouping) {  		EditorGUILayout.BeginVertical ();  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		var assertionKey = assertionComponent.GetHashCode ().ToString ();  		bool isDetailsFolded = foldMarkers.Contains (assertionKey);  		EditorGUI.BeginChangeCheck ();  		if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  			isDetailsFolded = !isDetailsFolded;  		}  		if (EditorGUI.EndChangeCheck ()) {  			if (isDetailsFolded)  				foldMarkers.Add (assertionKey);  			else  				foldMarkers.Remove (assertionKey);  		}  		PrintFoldedAssertionLine (assertionComponent);  		EditorGUILayout.EndHorizontal ();  		if (isDetailsFolded) {  			EditorGUILayout.BeginHorizontal ();  			if (key != "")  				GUILayout.Space (15);  			PrintAssertionLineDetails (assertionComponent);  			EditorGUILayout.EndHorizontal ();  		}  		GUILayout.Box (""' new[] {  			GUILayout.ExpandWidth (true)'  			GUILayout.Height (1)  		});  		EditorGUILayout.EndVertical ();  	}  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var grouping in GroupResult (allAssertions)) {  	var key = GetStringKey (grouping.Key);  	bool isFolded = foldMarkers.Contains (key);  	if (key != "") {  		EditorGUILayout.BeginHorizontal ();  		EditorGUI.BeginChangeCheck ();  		isFolded = PrintFoldout (isFolded' grouping.Key);  		if (EditorGUI.EndChangeCheck ()) {  			if (isFolded)  				foldMarkers.Add (key);  			else  				foldMarkers.Remove (key);  		}  		EditorGUILayout.EndHorizontal ();  		if (isFolded)  			continue;  	}  	foreach (var assertionComponent in grouping) {  		EditorGUILayout.BeginVertical ();  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		var assertionKey = assertionComponent.GetHashCode ().ToString ();  		bool isDetailsFolded = foldMarkers.Contains (assertionKey);  		EditorGUI.BeginChangeCheck ();  		if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  			isDetailsFolded = !isDetailsFolded;  		}  		if (EditorGUI.EndChangeCheck ()) {  			if (isDetailsFolded)  				foldMarkers.Add (assertionKey);  			else  				foldMarkers.Remove (assertionKey);  		}  		PrintFoldedAssertionLine (assertionComponent);  		EditorGUILayout.EndHorizontal ();  		if (isDetailsFolded) {  			EditorGUILayout.BeginHorizontal ();  			if (key != "")  				GUILayout.Space (15);  			PrintAssertionLineDetails (assertionComponent);  			EditorGUILayout.EndHorizontal ();  		}  		GUILayout.Box (""' new[] {  			GUILayout.ExpandWidth (true)'  			GUILayout.Height (1)  		});  		EditorGUILayout.EndVertical ();  	}  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var grouping in GroupResult (allAssertions)) {  	var key = GetStringKey (grouping.Key);  	bool isFolded = foldMarkers.Contains (key);  	if (key != "") {  		EditorGUILayout.BeginHorizontal ();  		EditorGUI.BeginChangeCheck ();  		isFolded = PrintFoldout (isFolded' grouping.Key);  		if (EditorGUI.EndChangeCheck ()) {  			if (isFolded)  				foldMarkers.Add (key);  			else  				foldMarkers.Remove (key);  		}  		EditorGUILayout.EndHorizontal ();  		if (isFolded)  			continue;  	}  	foreach (var assertionComponent in grouping) {  		EditorGUILayout.BeginVertical ();  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		var assertionKey = assertionComponent.GetHashCode ().ToString ();  		bool isDetailsFolded = foldMarkers.Contains (assertionKey);  		EditorGUI.BeginChangeCheck ();  		if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  			isDetailsFolded = !isDetailsFolded;  		}  		if (EditorGUI.EndChangeCheck ()) {  			if (isDetailsFolded)  				foldMarkers.Add (assertionKey);  			else  				foldMarkers.Remove (assertionKey);  		}  		PrintFoldedAssertionLine (assertionComponent);  		EditorGUILayout.EndHorizontal ();  		if (isDetailsFolded) {  			EditorGUILayout.BeginHorizontal ();  			if (key != "")  				GUILayout.Space (15);  			PrintAssertionLineDetails (assertionComponent);  			EditorGUILayout.EndHorizontal ();  		}  		GUILayout.Box (""' new[] {  			GUILayout.ExpandWidth (true)'  			GUILayout.Height (1)  		});  		EditorGUILayout.EndVertical ();  	}  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var assertionComponent in grouping) {  	EditorGUILayout.BeginVertical ();  	EditorGUILayout.BeginHorizontal ();  	if (key != "")  		GUILayout.Space (15);  	var assertionKey = assertionComponent.GetHashCode ().ToString ();  	bool isDetailsFolded = foldMarkers.Contains (assertionKey);  	EditorGUI.BeginChangeCheck ();  	if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  		isDetailsFolded = !isDetailsFolded;  	}  	if (EditorGUI.EndChangeCheck ()) {  		if (isDetailsFolded)  			foldMarkers.Add (assertionKey);  		else  			foldMarkers.Remove (assertionKey);  	}  	PrintFoldedAssertionLine (assertionComponent);  	EditorGUILayout.EndHorizontal ();  	if (isDetailsFolded) {  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		PrintAssertionLineDetails (assertionComponent);  		EditorGUILayout.EndHorizontal ();  	}  	GUILayout.Box (""' new[] {  		GUILayout.ExpandWidth (true)'  		GUILayout.Height (1)  	});  	EditorGUILayout.EndVertical ();  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var assertionComponent in grouping) {  	EditorGUILayout.BeginVertical ();  	EditorGUILayout.BeginHorizontal ();  	if (key != "")  		GUILayout.Space (15);  	var assertionKey = assertionComponent.GetHashCode ().ToString ();  	bool isDetailsFolded = foldMarkers.Contains (assertionKey);  	EditorGUI.BeginChangeCheck ();  	if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  		isDetailsFolded = !isDetailsFolded;  	}  	if (EditorGUI.EndChangeCheck ()) {  		if (isDetailsFolded)  			foldMarkers.Add (assertionKey);  		else  			foldMarkers.Remove (assertionKey);  	}  	PrintFoldedAssertionLine (assertionComponent);  	EditorGUILayout.EndHorizontal ();  	if (isDetailsFolded) {  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		PrintAssertionLineDetails (assertionComponent);  		EditorGUILayout.EndHorizontal ();  	}  	GUILayout.Box (""' new[] {  		GUILayout.ExpandWidth (true)'  		GUILayout.Height (1)  	});  	EditorGUILayout.EndVertical ();  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: foreach (var assertionComponent in grouping) {  	EditorGUILayout.BeginVertical ();  	EditorGUILayout.BeginHorizontal ();  	if (key != "")  		GUILayout.Space (15);  	var assertionKey = assertionComponent.GetHashCode ().ToString ();  	bool isDetailsFolded = foldMarkers.Contains (assertionKey);  	EditorGUI.BeginChangeCheck ();  	if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  		isDetailsFolded = !isDetailsFolded;  	}  	if (EditorGUI.EndChangeCheck ()) {  		if (isDetailsFolded)  			foldMarkers.Add (assertionKey);  		else  			foldMarkers.Remove (assertionKey);  	}  	PrintFoldedAssertionLine (assertionComponent);  	EditorGUILayout.EndHorizontal ();  	if (isDetailsFolded) {  		EditorGUILayout.BeginHorizontal ();  		if (key != "")  			GUILayout.Space (15);  		PrintAssertionLineDetails (assertionComponent);  		EditorGUILayout.EndHorizontal ();  	}  	GUILayout.Box (""' new[] {  		GUILayout.ExpandWidth (true)'  		GUILayout.Height (1)  	});  	EditorGUILayout.EndVertical ();  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: if (key != "")  	GUILayout.Space (15);  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: GUILayout.Space (15);  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: if (GUILayout.Button (""' EditorStyles.foldout' GUILayout.Width (15))) {  	isDetailsFolded = !isDetailsFolded;  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: if (isDetailsFolded) {  	EditorGUILayout.BeginHorizontal ();  	if (key != "")  		GUILayout.Space (15);  	PrintAssertionLineDetails (assertionComponent);  	EditorGUILayout.EndHorizontal ();  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: if (key != "")  	GUILayout.Space (15);  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,Render,The following statement contains a magic number: GUILayout.Space (15);  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following statement contains a magic number: EditorGUILayout.BeginVertical (GUILayout.MaxWidth (300));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following statement contains a magic number: EditorGUILayout.BeginHorizontal (GUILayout.MaxWidth (300));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following statement contains a magic number: EditorGUILayout.BeginVertical (GUILayout.MaxWidth (250));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following statement contains a magic number: if (assertionComponent.Action is ComparerBase) {  	var comparer = assertionComponent.Action as ComparerBase;  	var otherStrVal = "(no value selected)";  	EditorGUILayout.BeginVertical ();  	EditorGUILayout.BeginHorizontal (GUILayout.MaxWidth (300));  	switch (comparer.compareToType) {  	case ComparerBase.CompareToType.CompareToObject:  		if (comparer.other != null) {  			PrintPath (comparer.other' comparer.otherPropertyPath);  		}  		else {  			EditorGUILayout.LabelField (otherStrVal' Styles.redLabel);  		}  		break;  	case ComparerBase.CompareToType.CompareToConstantValue:  		otherStrVal = comparer.ConstValue.ToString ();  		EditorGUILayout.LabelField (otherStrVal);  		break;  	case ComparerBase.CompareToType.CompareToNull:  		otherStrVal = "null";  		EditorGUILayout.LabelField (otherStrVal);  		break;  	}  	EditorGUILayout.EndHorizontal ();  	EditorGUILayout.EndVertical ();  }  else {  	EditorGUILayout.LabelField ("");  }  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following statement contains a magic number: EditorGUILayout.BeginHorizontal (GUILayout.MaxWidth (300));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: EditorGUILayout.BeginVertical (GUILayout.MaxWidth (320));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: EditorGUILayout.LabelField ("Attached to"' GUILayout.Width (70));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: EditorGUILayout.BeginVertical (GUILayout.MaxWidth (250));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: EditorGUILayout.EnumMaskField (assertionComponent.checkMethods' EditorStyles.popup' GUILayout.MaxWidth (150));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: EditorGUILayout.LabelField ("Disabled"' GUILayout.Width (55));  
Magic Number,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintAssertionLineDetails,The following statement contains a magic number: assertionComponent.enabled = !EditorGUILayout.Toggle (!assertionComponent.enabled' GUILayout.Width (15));  
Magic Number,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,The following statement contains a magic number: if (GUILayout.Button ("clear"' EditorStyles.miniButton' GUILayout.Width (38))) {  	result = "";  	GUI.FocusControl (null);  	focusBackToEdit = true;  	error = DoesPropertyExist (go' result);  }  
Magic Number,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: if (idx < 0) {  	var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  	return components;  }  
Magic Number,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: if (MemberResolver.TryGetMemberType (go' propertyToSearch' out type)) {  	idx = propertPath.Length - 1;  }  else {  	propertyToSearch = propertPath.Substring (0' idx);  	if (!MemberResolver.TryGetMemberType (go' propertyToSearch' out type)) {  		var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  		return components.Where (s => s.StartsWith (propertPath.Substring (idx + 1))).ToArray ();  	}  }  
Magic Number,UnityTest,PropertyResolver,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyResolver.cs,GetFieldsAndPropertiesUnderPath,The following statement contains a magic number: if (!MemberResolver.TryGetMemberType (go' propertyToSearch' out type)) {  	var components = GetFieldsAndPropertiesFromGameObject (go' 2' null);  	return components.Where (s => s.StartsWith (propertPath.Substring (idx + 1))).ToArray ();  }  
Magic Number,UnityTest,SampleTests,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Examples\UnitTestExamples\Editor\SampleTests.cs,SlowTest,The following statement contains a magic number: Thread.Sleep (200);  
Magic Number,UnityTest,SampleTests,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Examples\UnitTestExamples\Editor\SampleTests.cs,SquareRootDefinition,The following statement contains a magic number: Assert.That (sqrt * sqrt' Is.EqualTo (num).Within (0.000001));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: GUILayout.Space (--indent * 15 + 10);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: GUILayout.Space (--indent * 15 + 10);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: if (testInfo.isRunning) {  	var frame = Mathf.Abs (Mathf.Cos (Time.realtimeSinceStartup * 4)) * 0.6f + 0.4f;  	GUI.color = new Color (1' 1' 1' frame);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: if (testInfo.resultType == TestResult.ResultType.Timeout) {  	GUILayout.Label (guiTimeoutIcon' GUILayout.Width (24));  	GUILayout.FlexibleSpace ();  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTest,The following statement contains a magic number: GUILayout.Label (guiTimeoutIcon' GUILayout.Width (24));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: GUILayout.Space (--indent * 15);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: if (testInfo.isRunning) {  	var frame = Mathf.Abs (Mathf.Cos (Time.realtimeSinceStartup * 4)) * 0.6f + 0.4f;  	GUI.color = new Color (1' 1' 1' frame);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: if (testInfo.resultType == TestResult.ResultType.Timeout) {  	GUILayout.Label (guiTimeoutIcon' GUILayout.Width (24));  	GUILayout.FlexibleSpace ();  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,DrawTestGroup,The following statement contains a magic number: GUILayout.Label (guiTimeoutIcon' GUILayout.Width (24));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The following statement contains a magic number: if (GUILayout.Button (showOptions ? guiOptionsHideLabel : guiOptionsShowLabel' GUILayout.Height (24)' GUILayout.Width (80))) {  	showOptions = !showOptions;  	SaveSettings ();  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The following statement contains a magic number: if (GUILayout.Button (showOptions ? guiOptionsHideLabel : guiOptionsShowLabel' GUILayout.Height (24)' GUILayout.Width (80))) {  	showOptions = !showOptions;  	SaveSettings ();  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The following statement contains a magic number: EditorGUILayout.LabelField ("Filter:"' GUILayout.Width (35));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The following statement contains a magic number: if (GUILayout.Button (showAdvancedFilter ? guiAdvancedFilterHide : guiAdvancedFilterShow' GUILayout.Width (80))) {  	showAdvancedFilter = !showAdvancedFilter;  	SaveSettings ();  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintHeadPanel,The following statement contains a magic number: GUILayout.Space (5);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintTestList,The following statement contains a magic number: GUILayout.Space (5);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintSelectedTestDetails,The following statement contains a magic number: EditorGUILayout.SelectableLabel (messages' EditorStyles.miniLabel' GUILayout.MaxHeight (50));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,PrintSelectedTestDetails,The following statement contains a magic number: EditorGUILayout.SelectableLabel (stacktrace' EditorStyles.miniLabel' GUILayout.MaxHeight (50));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (o is GameObject) {  	var go = o as GameObject;  	var tc = go.GetComponent<TestComponent> ();  	if (testManager.AnyTestsOnScene () && tc != null) {  		if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  			DrawContextTestMenu (testManager.GetResultFor (go));  		}  		EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  		var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  		EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  		EditorGUIUtility.SetIconSize (Vector2.zero);  	}  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (o is GameObject) {  	var go = o as GameObject;  	var tc = go.GetComponent<TestComponent> ();  	if (testManager.AnyTestsOnScene () && tc != null) {  		if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  			DrawContextTestMenu (testManager.GetResultFor (go));  		}  		EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  		var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  		EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  		EditorGUIUtility.SetIconSize (Vector2.zero);  	}  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (o is GameObject) {  	var go = o as GameObject;  	var tc = go.GetComponent<TestComponent> ();  	if (testManager.AnyTestsOnScene () && tc != null) {  		if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  			DrawContextTestMenu (testManager.GetResultFor (go));  		}  		EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  		var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  		EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  		EditorGUIUtility.SetIconSize (Vector2.zero);  	}  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (o is GameObject) {  	var go = o as GameObject;  	var tc = go.GetComponent<TestComponent> ();  	if (testManager.AnyTestsOnScene () && tc != null) {  		if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  			DrawContextTestMenu (testManager.GetResultFor (go));  		}  		EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  		var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  		EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  		EditorGUIUtility.SetIconSize (Vector2.zero);  	}  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (testManager.AnyTestsOnScene () && tc != null) {  	if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  		DrawContextTestMenu (testManager.GetResultFor (go));  	}  	EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  	var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  	EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  	EditorGUIUtility.SetIconSize (Vector2.zero);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (testManager.AnyTestsOnScene () && tc != null) {  	if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  		DrawContextTestMenu (testManager.GetResultFor (go));  	}  	EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  	var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  	EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  	EditorGUIUtility.SetIconSize (Vector2.zero);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (testManager.AnyTestsOnScene () && tc != null) {  	if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  		DrawContextTestMenu (testManager.GetResultFor (go));  	}  	EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  	var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  	EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  	EditorGUIUtility.SetIconSize (Vector2.zero);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: if (testManager.AnyTestsOnScene () && tc != null) {  	if (!EditorApplication.isPlayingOrWillChangePlaymode && rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 1) {  		DrawContextTestMenu (testManager.GetResultFor (go));  	}  	EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  	var icon = GetIconBasedOnResultType (testManager.GetResultFor (go));  	EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  	EditorGUIUtility.SetIconSize (Vector2.zero);  }  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  
Magic Number,UnityTest,IntegrationTestRunnerRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestRunnerRenderer.cs,OnHierarchyWindowItemOnGui,The following statement contains a magic number: EditorGUI.LabelField (new Rect (rect.xMax - 18' rect.yMin - 2' rect.width' rect.height)' icon);  
Magic Number,UnityTest,IntegrationTestsRunnerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestsRunnerWindow.cs,GetConsoleErrorPause,The following statement contains a magic number: return (result & (1 << 2)) != 0;  
Magic Number,UnityTest,IntegrationTestsRunnerWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\IntegrationTestsRunnerWindow.cs,SetConsoleErrorPause,The following statement contains a magic number: method.Invoke (new object ()' new object[] {  	1 << 2'  	b  });  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldout,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldout,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintFoldout,The following statement contains a magic number: GUILayout.BeginHorizontal (GUILayout.Height (18));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: EditorGUIUtility.SetIconSize (new Vector2 (15' 15));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: GUILayout.BeginHorizontal (GUILayout.Height (18));  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: GUILayout.Space (10);  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: if (rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.MouseDown && Event.current.button == 0) {  	SelectTest (test);  	GUI.FocusControl ("");  	if (Event.current.clickCount == 2 && selectedTests.Count == 1) {  		OpenFailedTestOnError ();  	}  }  else if (rect.Contains (Event.current.mousePosition) && Event.current.type == EventType.ContextClick) {  	Event.current.Use ();  	PrintTestContextMenu (test);  }  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,PrintTest,The following statement contains a magic number: if (Event.current.clickCount == 2 && selectedTests.Count == 1) {  	OpenFailedTestOnError ();  }  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,Indent,The following statement contains a magic number: GUILayout.Space (12 * indentLevel + 5);  
Magic Number,UnityTest,GroupedByHierarchyRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\UnitTesting\Editor\TestRunner\GroupedByHierarchyRenderer.cs,Indent,The following statement contains a magic number: GUILayout.Space (12 * indentLevel + 5);  
Magic Number,UnityTest.IntegrationTests,PlatformRunnerSettingsWindow,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\PlatformRunnerSettingsWindow.cs,PlatformRunnerSettingsWindow,The following statement contains a magic number: position.Set (position.xMin' position.yMin' 200' position.height);  
Missing Default,UnityTest,AssertionListRenderer,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\AssertionListRenderer.cs,PrintFoldedAssertionLine,The following switch statement is missing a default case: switch (comparer.compareToType) {  case ComparerBase.CompareToType.CompareToObject:  	if (comparer.other != null) {  		PrintPath (comparer.other' comparer.otherPropertyPath);  	}  	else {  		EditorGUILayout.LabelField (otherStrVal' Styles.redLabel);  	}  	break;  case ComparerBase.CompareToType.CompareToConstantValue:  	otherStrVal = comparer.ConstValue.ToString ();  	EditorGUILayout.LabelField (otherStrVal);  	break;  case ComparerBase.CompareToType.CompareToNull:  	otherStrVal = "null";  	EditorGUILayout.LabelField (otherStrVal);  	break;  }  
Missing Default,UnityTest,PropertyPathSelector,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\Assertions\Editor\PropertyPathSelector.cs,DrawManualPropertyEditField,The following switch statement is missing a default case: switch (error) {  case SelectedPathError.InvalidPath:  	EditorGUILayout.HelpBox ("This property does not exist"' MessageType.Error);  	break;  case SelectedPathError.MissingComponent:  	EditorGUILayout.HelpBox ("This property or field is not attached or set. It will fail unless it will be attached before the check is perfomed."' MessageType.Warning);  	break;  }  
Missing Default,UnityTest.IntegrationTests,PlatformRunner,C:\repos\warriorcns_mgr\UnityProject\Assets\UnityTestTools\IntegrationTestsFramework\TestRunner\Editor\PlatformRunner.cs,GetDefaultBuildTarget,The following switch statement is missing a default case: switch (Application.platform) {  case RuntimePlatform.WindowsPlayer:  	return BuildTarget.StandaloneWindows;  case RuntimePlatform.OSXPlayer:  	return BuildTarget.StandaloneOSXIntel;  case RuntimePlatform.LinuxPlayer:  	return BuildTarget.StandaloneLinux;  }  
