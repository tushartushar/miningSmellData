Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DotNetSmartBuild.Console,Program,C:\repos\williancarvalho_DotNetSmartBuild\src\DotNetSmartBuild.Console\Program.cs,Main,Cyclomatic complexity of the method is 21
Long Statement,DotNetSmartBuild.Console,Program,C:\repos\williancarvalho_DotNetSmartBuild\src\DotNetSmartBuild.Console\Program.cs,WriteHelp,The length of the statement  "	System.Console.WriteLine (@"DotNetSmartBuild.Console.exe RepositoryPath=""C:\RepositoryPath"" BuildMode=BuildAndPublish BuildConfiguration=Debug  IgnorePaths=""Ignore1;Ignore2\SubIgnore1"""); " is 191.
Magic Number,DotNetSmartBuild.Console,Program,C:\repos\williancarvalho_DotNetSmartBuild\src\DotNetSmartBuild.Console\Program.cs,Main,The following statement contains a magic number: foreach (var argument in args) {  	var pieces = argument.Split ('=');  	if (pieces.Length != 2) {  		throw new ArgumentException (string.Format ("Error decoding parameter: {0}"' argument));  	}  	switch (pieces [0].ToLowerInvariant ()) {  	case "repositorypath": {  		repositoryPath = pieces [1];  		if (!string.IsNullOrEmpty (repositoryPath) && !repositoryPath.EndsWith (@"\"))  			repositoryPath += @"\";  		break;  	}  	case "buildmode": {  		buildMode = pieces [1];  		break;  	}  	case "buildconfiguration": {  		buildConfiguration = pieces [1];  		break;  	}  	case "ignorepaths": {  		var paths = pieces [1].Split (';');  		foreach (var path in paths) {  			ignorePaths.Add (path);  		}  		break;  	}  	default:  		break;  	}  }  
Magic Number,DotNetSmartBuild.Console,Program,C:\repos\williancarvalho_DotNetSmartBuild\src\DotNetSmartBuild.Console\Program.cs,Main,The following statement contains a magic number: if (pieces.Length != 2) {  	throw new ArgumentException (string.Format ("Error decoding parameter: {0}"' argument));  }  
Missing Default,DotNetSmartBuild.Console,Program,C:\repos\williancarvalho_DotNetSmartBuild\src\DotNetSmartBuild.Console\Program.cs,Main,The following switch statement is missing a default case: switch (buildMode.ToLowerInvariant ()) {  case "buildonly": {  	builder.Init ().BuildAffectedSolutions (buildConfiguration);  	break;  }  case "publishonly": {  	builder.Init ().PublishAffectedProjects (buildConfiguration);  	break;  }  case "buildandpublish": {  	builder.Init ().BuildAffectedSolutions (buildConfiguration).PublishAffectedProjects (buildConfiguration);  	break;  }  }  
