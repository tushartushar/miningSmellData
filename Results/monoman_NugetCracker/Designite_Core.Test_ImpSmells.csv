Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.Test,DataServicePackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageRepositoryTest.cs,ExtractMethodNamesFromSchemaFindsMethodNamesAndProperties,The method has 5 parameters. Parameters: schema' expectedMethodCount' expectedProperties' sampleProperties' expectedMethods
Long Statement,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryIgnoresInvalidRepositoriesIfFlagIsSet,The length of the statement  "            var aggregateQuery = new AggregateQuery<string>(sources' StringComparer.Ordinal' NullLogger.Instance' ignoreFailures: true).OrderBy(c => c);" is 140.
Long Statement,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryThrowsForInvalidRepositoriesIfFlagIsSet,The length of the statement  "                () => new AggregateQuery<string>(sources' StringComparer.Ordinal' NullLogger.Instance' ignoreFailures: false).OrderBy(c => c).ToArray());" is 137.
Long Statement,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,CountDoesNotThrowIfForInvalidRepositoriesIfFlagIsSet,The length of the statement  "            var aggregateQuery = new AggregateQuery<string>(sources' StringComparer.Ordinal' NullLogger.Instance' ignoreFailures: true).OrderBy(c => c);" is 140.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesNoOrderByExpressionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => repository.GetPackages().ToList()' "Aggregate queries require at least one OrderBy.");" is 142.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetUpdates,The length of the statement  "            var updates = repository.GetUpdates(new[] { PackageUtility.CreatePackage("A"' "1.0") }' includePrerelease: false' includeAllVersions: false).ToList();" is 150.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,SupressErrorWorksForGetDependenciesForRepositoriesThatThrowWhenInvoked,The length of the statement  "            mockRepository.As<IDependencyResolver>().Setup(c => c.ResolveDependency(It.IsAny<PackageDependency>()' It.IsAny<IPackageConstraintProvider>()' false' It.IsAny<bool>()));" is 169.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,SupressErrorWorksForGetDependenciesForRepositoriesThatThrowWhenInvoked,The length of the statement  "            var package = repository.ResolveDependency(new PackageDependency("C")' null' allowPrereleaseVersions: false' preferListedPackages: false);" is 138.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,RepositoriesPropertyThrowsIfIgnoreFlagIsNotSet,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => aggregateRepository.Repositories.Select(c => c.Source).ToList()' "Repository exception");" is 145.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesSupressesExceptionForConsecutiveCalls,The length of the statement  "            repo1.Setup(r => r.GetPackages()).Returns(Enumerable.Repeat(PackageUtility.CreatePackage("Foo")' 50).AsQueryable()).Verifiable();" is 129.
Long Statement,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesSupressesExceptionForConsecutiveCalls,The length of the statement  "            var aggregateRepository = new AggregateRepository(new[] { repo1.Object' repo2.Object }) { IgnoreFailingRepositories = true };" is 125.
Long Statement,NuGet.Test,DataServicePackageTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageTest.cs,DownloadAndVerifyThrowsIfPackageHashIsNull,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => servicePackage.DownloadAndVerifyPackage(new MockPackageRepository())' "Failed to download package correctly. The contents of the package could not be verified.");" is 218.
Long Statement,NuGet.Test,ManifestSchemaUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestSchemaUtilityTest.cs,GetSchemaNamespaceThrowsIfVersionIsNotAPostiveInteger,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => ManifestSchemaUtility.GetSchemaNamespace(version)' "Unknown schema version '" + version + "'.");" is 152.
Long Statement,NuGet.Test,ManifestTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestTest.cs,ManifestValidatesManifestFiles,The length of the statement  "                "Source path '|' contains invalid characters.\r\nTarget path '<' contains invalid characters.\r\nSource path 'foo\\bar\\|>' contains invalid characters.\r\nExclude path 'Exclude|' contains invalid characters.");" is 211.
Long Statement,NuGet.Test,ManifestTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestTest.cs,ManifestEnsuresManifestReferencesDoNotContainInvalidCharacters,The length of the statement  "                "Assembly reference 'Foo?.dll' contains invalid characters.\r\nAssembly reference 'Bar*.dll' contains invalid characters.\r\nAssembly reference 'net40\\baz.dll' contains invalid characters.");" is 192.
Long Statement,NuGet.Test,PackageHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageHelperTest.cs,ResolveUnknownPackageThrows,The length of the statement  "                () => PackageHelper.ResolvePackage(new MockPackageRepository()' new MockPackageRepository()' "elmah"' null' allowPrereleaseVersions: false)'" is 140.
Long Statement,NuGet.Test,PackageHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageHelperTest.cs,ResolveSpecificVersionOfUnknownPackageThrows,The length of the statement  "                () => PackageHelper.ResolvePackage(new MockPackageRepository()' new MockPackageRepository()' "elmah"' new SemanticVersion("1.1")' allowPrereleaseVersions: false)'" is 162.
Long Statement,NuGet.Test,PackageIdValidatorTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageIdValidatorTest.cs,ValidatePackageIdInvalidIdThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => PackageIdValidator.ValidatePackageId(packageId)' "The package ID '  Invalid  . Woo   .' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.");" is 239.
Long Statement,NuGet.Test,PackageReferenceFileTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageReferenceFileTest.cs,GetPackageReferencesThrowsIfVersionIsInvalid,The length of the statement  "            ExceptionAssert.Throws<InvalidDataException>(() => values.ToList()' "Unable to parse version value '" + version + "' from 'packages.config'.");" is 143.
Long Statement,NuGet.Test,PackageReferenceFileTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageReferenceFileTest.cs,GetPackageReferencesThrowsIfVersionSpecIsInvalid,The length of the statement  "            ExceptionAssert.Throws<InvalidDataException>(() => values.ToList()' "Unable to parse version value '1.23.4$-2.0' from 'packages.config'.");" is 139.
Long Statement,NuGet.Test,PackageReferenceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageReferenceRepositoryTest.cs,GetConstraintThrowsIfConstrainInvalid,The length of the statement  "            ExceptionAssert.Throws<InvalidDataException>(() => referenceRepository.GetConstraint("A")' "Unable to parse version value '[-1.3' 3)' from 'packages.config'.");" is 160.
Long Statement,NuGet.Test,PackageReferenceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageReferenceRepositoryTest.cs,GetPackagesWithMalformedPackagesConfigThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => referenceRepository.GetPackages().ToList()' @"Error reading 'C:\MockFileSystem\packages.config'.");" is 155.
Long Statement,NuGet.Test,PackageRepositoryExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryExtensionsTest.cs,GetUpdatesReturnAllPackageVersionsWhenFlagIsSpecified,The length of the statement  "            var foundPackages = PackageRepositoryExtensions.GetUpdates(sourceRepository' packages' includePrerelease: true' includeAllVersions: true).ToList();" is 147.
Long Statement,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencySimple,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("B") });" is 126.
Long Statement,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencySimple,The length of the statement  "            var packageB = PackageUtility.CreatePackage("B"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("C") });" is 126.
Long Statement,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The length of the statement  "            var packageA = PackageUtility.CreatePackage("A"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("B") });" is 126.
Long Statement,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The length of the statement  "            var packageB = PackageUtility.CreatePackage("B"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("D") });" is 126.
Long Statement,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The length of the statement  "            var packageC = PackageUtility.CreatePackage("C"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("D") });" is 126.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnsDefaultSourcesIfSpecified,The length of the statement  "            var provider = new PackageSourceProvider(settings' defaultSources: new[] { new PackageSource("A")' new PackageSource("B") });" is 125.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,SavePackageSourcesSaveCorrectDataToSettingsWhenSomePackgeSourceIsDisabled,The length of the statement  "            var sources = new[] { new PackageSource("one")' new PackageSource("two")' new PackageSource("three"' "three"' isEnabled: false) };" is 130.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateSkipsInvalidSources,The length of the statement  "            sources.Setup(c => c.LoadPackageSources()).Returns(new[] { new PackageSource("A")' new PackageSource("B")' new PackageSource("C") });" is 133.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateSkipsDisabledSources,The length of the statement  "                new PackageSource("A")' new PackageSource("B"' "B"' isEnabled: false)' new PackageSource("C"' "C"' isEnabled: false) });" is 120.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateSetsIgnoreInvalidRepositoryProperty,The length of the statement  "            var repo = (AggregateRepository)sources.Object.GetAggregate(factory.Object' ignoreFailingRepositories: ignoreRepository);" is 121.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateWithInvalidSourcesThrows,The length of the statement  "            sources.Setup(c => c.LoadPackageSources()).Returns(new[] { new PackageSource("A")' new PackageSource("B")' new PackageSource("C") });" is 133.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateWithInvalidSourcesThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => sources.Object.GetAggregate(factory.Object' ignoreFailingRepositories: false));" is 135.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,ResolveSourceLooksUpNameAndSource,The length of the statement  "            PackageSource source1 = new PackageSource("Source"' "SourceName")' source2 = new PackageSource("http://www.test.com"' "Baz");" is 125.
Long Statement,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,ResolveSourceReturnsOriginalValueIfNotFoundInSources,The length of the statement  "            PackageSource source1 = new PackageSource("Source"' "SourceName")' source2 = new PackageSource("http://www.test.com"' "Baz");" is 125.
Long Statement,NuGet.Test,PathUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathUtilityTest.cs,GetRelativePathDirectoryWithPeriods,The length of the statement  "            string path = PathUtility.GetRelativePath(@"c:\foo\MvcApplication1\MvcApplication1.Tests\"' @"c:\foo\MvcApplication1\packages\foo.dll");" is 136.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var assemblyReference30client = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")' "client"));" is 148.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var assemblyReference40client = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")' "client"));" is 148.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference30client' assemblyReference40client' assemblyReference30' assemblyReference40 };" is 156.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfile,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("4.0"))' assemblyReferences).ToList();" is 135.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfileIfSpecified,The length of the statement  "            var assemblyReferenceSL40phone = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName("Silverlight"' new Version("4.0")' "WindowsPhone"));" is 153.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfileIfSpecified,The length of the statement  "            var assemblyReferenceSL40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName("Silverlight"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPrefersMatchingProfileIfSpecified,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName("Silverlight"' new Version("4.0")' "WindowsPhone")' assemblyReferences)" is 139.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var assemblyReference10 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("1.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var assemblyReference20 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("2.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference10' assemblyReference20' assemblyReference30' assemblyReference40 };" is 144.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesPicksHigestVersionLessThanTargetVersion,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("3.5"))' assemblyReferences)" is 125.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var assemblyReference10 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("1.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var assemblyReference20 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("2.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference10' assemblyReference20' assemblyReference30' assemblyReference40' assemblyReferenceNoVersion };" is 172.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkName,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("3.5"))' assemblyReferences).ToList();" is 135.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkNameWinsIfNoMatchingSpecificFrameworkNames,The length of the statement  "            var assemblyReference20 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("2.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkNameWinsIfNoMatchingSpecificFrameworkNames,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkNameWinsIfNoMatchingSpecificFrameworkNames,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkNameWinsIfNoMatchingSpecificFrameworkNames,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference20' assemblyReference30' assemblyReference40' assemblyReferenceNoVersion };" is 151.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceWithUnspecifiedFrameworkNameWinsIfNoMatchingSpecificFrameworkNames,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("1.1"))' assemblyReferences).ToList();" is 135.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var assemblyReference10 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("1.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var assemblyReference20 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("2.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference10' assemblyReference20' assemblyReference30' assemblyReference40' assemblyReferenceNoVersion };" is 172.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReferenceMostSpecificVersionWins,The length of the statement  "            var targetAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("4.0"))' assemblyReferences).ToList();" is 135.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var assemblyReference10 = PackageUtility.CreateAssemblyReference("foo1.dll"' new FrameworkName(".NETFramework"' new Version("1.0")));" is 133.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var assemblyReference20 = PackageUtility.CreateAssemblyReference("foo1.dll"' new FrameworkName(".NETFramework"' new Version("2.0")));" is 133.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var assemblyReference30 = PackageUtility.CreateAssemblyReference("foo2.dll"' new FrameworkName(".NETFramework"' new Version("3.0")));" is 133.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo2.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 133.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference10' assemblyReference20' assemblyReference30' assemblyReference40' assemblyReferenceNoVersion };" is 172.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesHighestSpecifiedAssemblyLessThanProjectTargetFrameworkWins,The length of the statement  "            var compatibleAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("3.5"))' assemblyReferences).ToList();" is 139.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReturnsNullIfNoBestMatchFound,The length of the statement  "            var assemblyReference = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("5.0")));" is 130.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesReturnsNullIfNoBestMatchFound,The length of the statement  "            var compatibleAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("3.5"))' assemblyReferences);" is 130.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesMostSpecificFrameworkIfProfileNameSpecified,The length of the statement  "            var assemblyReference30client = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("3.0")' "Client"));" is 148.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesMostSpecificFrameworkIfProfileNameSpecified,The length of the statement  "            var assemblyReference40 = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 132.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesMostSpecificFrameworkIfProfileNameSpecified,The length of the statement  "            var assemblyReferences = new IPackageAssemblyReference[] { assemblyReference30client' assemblyReference40' assemblyReferenceNoVersion };" is 136.
Long Statement,NuGet.Test,ProjectSystemExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectSystemExtensionsTest.cs,GetCompatibleReferencesMostSpecificFrameworkIfProfileNameSpecified,The length of the statement  "            var compatibleAssemblyReferences = GetCompatibleItems(new FrameworkName(".NETFramework"' new Version("4.0")' "Client")' assemblyReferences).ToList();" is 149.
Long Statement,NuGet.Test,SharedRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\SharedRepositoryTest.cs,IsReferencedReturnsTrueIfAnyOtherRepositoryReferencesAPackage,The length of the statement  "            var repository = new Mock<MockSharedRepository>(new DefaultPackagePathResolver(fileSystem.Object)' fileSystem.Object) { CallBase = true };" is 138.
Long Statement,NuGet.Test,AssemblyBindingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AssemblyBindingTest.cs,ParseAssemblyBindingConfigSectionPreservesContent,The length of the statement  "  <assemblyIdentity name=""myAssembly"" publicKeyToken=""32ab4ba45e0a69a1"" culture=""neutral"" processorArchitecture=""x86"" />" is 126.
Long Statement,NuGet.Test,PackageDownloaderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageDownloaderTest.cs,DownloadPackageWithUnverifiedPackageThrowsInvalidDataException,The length of the statement  "            packageFactory.Setup(f => f.CreatePackage(It.IsAny<Func<Stream>>())).Returns(new Mock<IPackage>().Object).Callback<Func<Stream>>(streamFactory => streamFactory());" is 163.
Long Statement,NuGet.Test,PackageDownloaderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageDownloaderTest.cs,DownloadPackageWithUnverifiedPackageThrowsInvalidDataException,The length of the statement  "            ExceptionAssert.Throws<InvalidDataException>(() => downloader.DownloadPackage(downloadClient.Object' new byte[0]' package));" is 124.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageWithUnknownDependencyThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(package)' "Unable to resolve dependency 'B'.");" is 130.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageResolvesDependencyUsingDependencyProvider,The length of the statement  "            dependencyProvider.Setup(c => c.ResolveDependency(It.Is<PackageDependency>(p => p.Id == "B")' It.IsAny<IPackageConstraintProvider>()' false' true))" is 147.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageResolvesDependencyWithConstraintsUsingDependencyResolver,The length of the statement  "            dependencyProvider.Setup(c => c.ResolveDependency(packageDependency' It.IsAny<IPackageConstraintProvider>()' false' true))" is 122.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallCircularReferenceThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageA)' "Circular dependency detected 'A 1.0 => B 1.0 => A 1.0'.");" is 153.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependencyForInstallCircularReferenceWithDifferentVersionOfPackageReferenceThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageA10)' "Circular dependency detected 'A 1.0 => B 1.0 => A 1.5'.");" is 155.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolvingDependencyForUpdateThatHasAnUnsatisfiedConstraint,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(A20)' "Unable to resolve dependency 'B (\u2265 2.0)'.'B' has an additional constraint (= 1.4) defined in foo.");" is 195.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependencyForInstallPackageWithDependencyThatDoesntMeetMinimumVersionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageA)' "Unable to resolve dependency 'B (\u2265 1.5)'.");" is 144.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependencyForInstallPackageWithDependencyThatDoesntMeetExactVersionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageA)' "Unable to resolve dependency 'B (= 1.5)'.");" is 139.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForUninstallPackageWithDependentThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageB)' "Unable to uninstall 'B 1.0' because 'A 1.0' depends on it.");" is 156.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForUninstallPackageWithDependentAndRemoveDependenciesThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => resolver.ResolveOperations(packageB)' "Unable to uninstall 'B 1.0' because 'A 1.0' depends on it.");" is 156.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,MetaPackageWithMixedTargetsThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => walker.Walk(metaPackage)' "Child dependencies of dependency only packages cannot mix external and project packages.");" is 174.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ExternalPackagesThatDepdendOnProjectLevelPackagesThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => walker.Walk(solutionPackage)' "External packages cannot depend on packages that target projects.");" is 155.
Long Statement,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' dependencies: new[] { PackageDependency.CreateDependency("B"' "1.0") });" is 123.
Long Statement,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,FindPackageMatchesExactVersionIfSideBySideIsDisabled,The length of the statement  "            var repository = new LocalPackageRepository(new DefaultPackagePathResolver(fileSystem' useSideBySidePaths: false)' fileSystem' enableCaching: false);" is 149.
Long Statement,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,FindPackageMatchesExactVersionIfSideBySideIsEnabled,The length of the statement  "            var repository = new LocalPackageRepository(new DefaultPackagePathResolver(fileSystem.Object' useSideBySidePaths: true)' fileSystem.Object' enableCaching: false);" is 162.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,SavingPackageWithDuplicateDependenciesThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => Manifest.Create(builder).Save(ms)' "'A' already has a dependency defined for 'B'.");" is 140.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,SavingPackageWithInvalidDependencyRangeThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => Manifest.Create(builder).Save(ms)' "Dependency 'B' has an invalid version.");" is 133.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,SavingPackageWithInvalidDependencyVersionMaxLessThanMinThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => Manifest.Create(builder).Save(ms)' "Dependency 'B' has an invalid version.");" is 133.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,SaveThrowsIfNoFilesOrDependencies,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => builder.Save(new MemoryStream())' "Cannot create a package that has no dependencies nor content.");" is 155.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfXmlIsMalformed,The length of the statement  "            ExceptionAssert.Throws<XmlException>(() => new PackageBuilder(spec1.AsStream()' null)' "Data at the root level is invalid. Line 1' position 1.");" is 145.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfXmlIsMalformed,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec3.AsStream()' null)' @"The element 'package' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 344.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfXmlIsMalformed,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec4.AsStream()' null)' @"The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'id' version' authors' description' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 370.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingIdThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingIdThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'id' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 337.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,IdExceedingMaxLengthThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,IdExceedingMaxLengthThrows,The length of the statement  "            ExceptionAssert.Throws<ArgumentException>(() => new PackageBuilder(spec.AsStream()' null)' "Id must not exceed 100 characters.");" is 129.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,SpecialVersionExceedingMaxLengthThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingVersionThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingVersionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'version' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 342.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingAuthorsThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingAuthorsThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'authors' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 342.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingDescriptionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'description' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 346.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MalformedDependenciesThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MalformedDependenciesThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The required attribute 'id' is missing.");" is 142.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingFileSrcThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingFileSrcThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The required attribute 'src' is missing.");" is 143.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MisplacedFileNodeThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MisplacedFileNodeThrows,The length of the statement  "            "The element 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has invalid child element 'files' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'. List of possible elements expected: 'frameworkAssemblies' releaseNotes' copyright' summary' iconUrl' references' owners' requireLicenseAcceptance' licenseUrl' tags' title' projectUrl' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 465.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' builder.Description);" is 142.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithSerializationNamespaceBuilderFromStreamCopiesMetadata,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithSerializationNamespaceBuilderFromStreamCopiesMetadata,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' builder.Description);" is 142.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithOldStyleXmlnsDeclaratoinsFromStreamCopiesMetadata,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithOldStyleXmlnsDeclaratoinsFromStreamCopiesMetadata,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' builder.Description);" is 142.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageManifestFromStreamCopiesMetadata,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageManifestFromStreamCopiesMetadata,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' builder.Description);" is 142.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsPresentButEmpty,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsPresentButEmpty,The length of the statement  "            ExceptionAssert.Throws<ValidationException>(() => new PackageBuilder(spec.AsStream()' null)' "LicenseUrl cannot be empty.");" is 124.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsWhiteSpace,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsWhiteSpace,The length of the statement  "            ExceptionAssert.Throws<ValidationException>(() => new PackageBuilder(spec.AsStream()' null)' "LicenseUrl cannot be empty.");" is 124.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ValidateReferencesThrowsForPartialNamesThatDoNotHaveAKnownExtension,The length of the statement  "            ExceptionAssert.Throws<InvalidDataException>(() => PackageBuilder.ValidateReferenceAssemblies(files' packageAssemblyReferences)'" is 128.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ValidateDependenciesThrowsIfAnyDependencyForAStableReleaseIsPrerelease,The length of the statement  "                    "A stable release of a package should not have on a prerelease dependency. Either modify the version spec of dependency \"{0}\" or update the version field."'" is 158.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ValidateDependenciesDoesNotThrowIfDependencyForAStableVersionIsStable,The length of the statement  "                new PackageDependency("B"' new VersionSpec { MinVersion = new SemanticVersion("1.0.1")' MaxVersion = new SemanticVersion("1.2.3") })'" is 133.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderRequireLicenseAcceptedWithoutLicenseUrlThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderRequireLicenseAcceptedWithoutLicenseUrlThrows,The length of the statement  "            ExceptionAssert.Throws<ValidationException>(() => new PackageBuilder(spec.AsStream()' null)' @"LicenseUrl cannot be empty." is 122.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsMalformed,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsWhenLicenseUrlIsMalformed,The length of the statement  "            ExceptionAssert.Throws<UriFormatException>(() => new PackageBuilder(spec.AsStream()' null)' "Invalid URI: The format of the URI could not be determined.");" is 155.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfPackageIdInvalid,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => builder.Save(new MemoryStream())' "The package ID '  a.  b' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.");" is 211.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfSpecialVersionExceedsMaxLengthLimit,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => builder.Save(new MemoryStream())' "The special version part cannot exceed 20 characters.");" is 147.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithUnknownSchemaThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithUnknownSchemaThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The schema version of 'Artem.XmlProviders' is incompatible with version " + typeof(Manifest).Assembly.GetName().Version + " of NuGet. Please upgrade NuGet to the latest version from http://go.microsoft.com/fwlink/?LinkId=213942.");" is 331.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithUnknownSchemaAndMissingIdThrows,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithUnknownSchemaAndMissingIdThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The schema version of '' is incompatible with version " + typeof(Manifest).Assembly.GetName().Version + " of NuGet. Please upgrade NuGet to the latest version from http://go.microsoft.com/fwlink/?LinkId=213942.");" is 313.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaWithOlderVersionAttribute,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaWithOlderVersionAttribute,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' packageBuilder.Description);" is 149.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaVersionAttribute,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaVersionAttribute,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' packageBuilder.Description);" is 149.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaVersionAttributeWithNamespace,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageWithSchemaVersionAttributeWithNamespace,The length of the statement  "            Assert.Equal("Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider)."' packageBuilder.Description);" is 149.
Long Statement,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,MissingMetadataNodeThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => new PackageBuilder(spec.AsStream()' null)' "The element 'package' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd' has incomplete content. List of possible elements expected: 'metadata' in namespace 'http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd'.");" is 342.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindByIdAndVersionRangeReturnsNullWhenPackageNotFound,The length of the statement  "            var package1 = repo.FindPackage("X"' VersionUtility.ParseVersionSpec("[0.9' 1.1]")' allowPrereleaseVersions: false' allowUnlisted: true);" is 137.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindByIdAndVersionRangeReturnsNullWhenPackageNotFound,The length of the statement  "            var package2 = repo.FindPackage("A"' VersionUtility.ParseVersionSpec("[1.4' 1.5]")' allowPrereleaseVersions: false' allowUnlisted: true);" is 137.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindPackageByIdVersionAndVersionRangesUsesRangeIfExactVersionIsNull,The length of the statement  "            var package = repo.FindPackage("A"' VersionUtility.ParseVersionSpec("[0.6' 1.1.5]")' allowPrereleaseVersions: false' allowUnlisted: true);" is 138.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksHighestVersionIfNotSpecified,The length of the statement  "            IPackage package = repository.ResolveDependency(dependency' allowPrereleaseVersions: false' preferListedPackages: false);" is 121.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksLowestMajorAndMinorVersionButHighestBuildAndRevision,The length of the statement  "            IPackage package1 = repository.ResolveDependency(dependency1' allowPrereleaseVersions: false' preferListedPackages: false);" is 123.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksLowestMajorAndMinorVersionButHighestBuildAndRevision,The length of the statement  "            IPackage package2 = repository.ResolveDependency(dependency2' allowPrereleaseVersions: false' preferListedPackages: false);" is 123.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksLowestMajorAndMinorVersionButHighestBuildAndRevision,The length of the statement  "            IPackage package3 = repository.ResolveDependency(dependency3' allowPrereleaseVersions: false' preferListedPackages: false);" is 123.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksLowestMajorAndMinorVersionButHighestBuildAndRevision,The length of the statement  "            IPackage package4 = repository.ResolveDependency(dependency4' allowPrereleaseVersions: false' preferListedPackages: false);" is 123.
Long Statement,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindDependencyPicksLowestMajorAndMinorVersionButHighestBuildAndRevision,The length of the statement  "            IPackage package5 = repository.ResolveDependency(dependency5' allowPrereleaseVersions: false' preferListedPackages: false);" is 123.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddingUnknownPackageReferenceThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.AddPackageReference("unknown")' "Unable to find package 'unknown'.");" is 140.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddingPackageReferenceThrowsExceptionPackageReferenceIsAdded,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' new MockPackageRepository());" is 163.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddingPackageReferenceAddsPreprocessedFileToTargetPathWithRemovedExtension,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWhenNewVersionOfPackageAlreadyReferencedThrows,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWhenNewVersionOfPackageAlreadyReferencedThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.AddPackageReference("A"' SemanticVersion.Parse("1.0"))' @"Already referencing a newer version of 'A'.");" is 175.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovingUnknownPackageReferenceThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.RemovePackageReference("foo")' "Unable to find package 'foo'.");" is 135.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovingPackageReferenceWithOtherProjectWithReferencesThatWereNotCopiedToProject,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovingPackageReferenceWithOtherProjectWithReferencesThatWereNotCopiedToProject,The length of the statement  "                                                        assemblyReferences: new[] { PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName("SP"' new Version("40.0"))) }'" is 126.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovingPackageReferenceWithNoDependents,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceAddsContentAndReferencesProjectSystem,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 135.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceAddingPackageWithDuplicateReferenceOverwritesReference,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 135.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceRaisesOnBeforeInstallAndOnAfterInstall,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 147.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageReferenceRaisesOnBeforeUninstallAndOnAfterUninstall,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' new MockPackageRepository());" is 161.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageReferenceExcludesFileIfAnotherPackageUsesThem,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' new MockPackageRepository());" is 161.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageWithUnsupportedFilesSkipsUnsupportedFiles,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' localRepository);" is 151.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageWithUnsupportedTransformFileSkipsUnsupportedFile,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' localRepository);" is 151.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFile,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' localRepository);" is 151.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFile,The length of the statement  "            IPackage packageA = PackageUtility.CreatePackage("A"' "1.0"' new[] { "a"' "b"' "packages.config.pp"' "PACKAGES.config.transform" });" is 132.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFileInNestedFolder,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' localRepository);" is 151.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFileInNestedFolder,The length of the statement  "            IPackage packageA = PackageUtility.CreatePackage("A"' "1.0"' new[] { "a"' "b"' "sub\\packages.config.pp"' "local\\PACKAGES.config.transform" });" is 144.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageWithTransformFile,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' new MockPackageRepository());" is 161.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageWithTransformFile,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' new MockPackageRepository());" is 161.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageWithTransformFileThatThrowsContinuesRemovingPackage,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' localRepository);" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageWithUnsupportedTransformFileDoesNothing,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem.Object' new MockPackageRepository());" is 168.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageRemovesDirectoriesAddedByPackageFilesIfEmpty,The length of the statement  "            var projectManager = new ProjectManager(mockRepository' new DefaultPackagePathResolver(new MockProjectSystem())' mockProjectSystem' new MockPackageRepository());" is 161.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWhenOlderVersionOfPackageInstalledDoesAnUpgrade,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithMixedDependenciesUpdatesPackageAndDependenciesIfUnused,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceIfPackageNotReferencedThrows,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceIfPackageNotReferencedThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("A")' @"C:\MockFileSystem\ does not reference 'A'.");" is 147.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceToOlderVersionThrows,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceToOlderVersionThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("A"' version: SemanticVersion.Parse("1.0"))' @"Already referencing a newer version of 'A'.");" is 187.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithUnresolvedDependencyThrows,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithUnresolvedDependencyThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("A")' "Unable to resolve dependency 'B (= 2.0)'.");" is 145.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithUpdateDependenciesSetToFalseIgnoresDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageHasNoEffectIfConstraintsDefinedDontAllowForUpdates,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdateDependencyDependentsHaveSatisfyableDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceDoesNothingIfVersionIsNotSpecifiedAndNewVersionIsLessThanOldPrereleaseVersion,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceUpdateToNewerVersionIfPrereleaseFlagIsSet,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithSatisfyableDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithDependenciesInUseThrowsConflictError,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceWithDependenciesInUseThrowsConflictError,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("A")' "Updating 'C 1.0' to 'C 2.0' failed. Unable to find a version of 'G' that is compatible with 'C 2.0'.");" is 204.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositorySuccesfullyUpdatesDependentsIfDependentsAreResolvable,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryFailsIfPackageHasUnresolvableDependents,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryFailsIfPackageHasUnresolvableDependents,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("B")' "Updating 'B 1.0' to 'B 2.0' failed. Unable to find a version of 'A' that is compatible with 'B 2.0'.");" is 204.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryFailsIfPackageHasAnyUnresolvableDependents,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryFailsIfPackageHasAnyUnresolvableDependents,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("B")' "Updating 'B 1.0' to 'B 2.0' failed. Unable to find a version of 'C' that is compatible with 'B 2.0'.");" is 204.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryOverlappingDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryChainedIncompatibleDependents,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceFromRepositoryChainedIncompatibleDependents,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.UpdatePackageReference("C")' "Updating 'C 1.0' to 'C 2.0' failed. Unable to find a version of 'B' that is compatible with 'C 2.0'.");" is 204.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceNoVersionSpecifiedShouldUpdateToLatest,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,UpdatePackageReferenceVersionSpeciedShouldUpdateToSpecifiedVersion,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovingPackageReferenceRemovesPackageButNotDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageReferenceOnlyRemovedAssembliesFromTheTargetFramework,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,RemovePackageReferenceOnlyRemovedAssembliesFromTheTargetFramework,The length of the statement  "            IPackageAssemblyReference net40Reference = PackageUtility.CreateAssemblyReference("bar.dll"' new FrameworkName(".NETFramework"' new Version("4.0")));" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,ReAddingAPackageReferenceAfterRemovingADependencyShouldReReferenceAllDependencies,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 149.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWithAnyNonCompatibleReferenceThrowsAndPackageIsNotReferenced,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(mockProjectSystem.Object)' mockProjectSystem.Object' localRepository);" is 159.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWithAnyNonCompatibleReferenceThrowsAndPackageIsNotReferenced,The length of the statement  "            var assemblyReference = PackageUtility.CreateAssemblyReference("foo.dll"' new FrameworkName(".NETFramework"' new Version("5.0")));" is 130.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWithAnyNonCompatibleReferenceThrowsAndPackageIsNotReferenced,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => projectManager.AddPackageReference("A")' "Could not install package 'A 1.0'. You are trying to install this package into a project that targets '.NETFramework'Version=v2.0'' but the package does not contain any assembly references that are compatible with that framework. For more information' contact the package author.");" is 380.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWithAnyNonCompatibleFrameworkReferenceDoesNotThrow,The length of the statement  "            var projectManager = new ProjectManager(sourceRepository' new DefaultPackagePathResolver(mockProjectSystem.Object)' mockProjectSystem.Object' localRepository);" is 159.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageReferenceWithAnyNonCompatibleFrameworkReferenceDoesNotThrow,The length of the statement  "            var frameworkReference = new FrameworkAssemblyReference("System.Web"' new[] { VersionUtility.ParseFrameworkName("net50") });" is 124.
Long Statement,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,CreateProjectManager,The length of the statement  "            return new ProjectManager(new MockPackageRepository()' new DefaultPackagePathResolver(projectSystem)' projectSystem' new MockPackageRepository());" is 146.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,CtorThrowsIfDependenciesAreNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new PackageManager(null' new DefaultPackagePathResolver("foo")' new MockProjectSystem()' new MockPackageRepository())' "sourceRepository");" is 175.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,CtorThrowsIfDependenciesAreNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new PackageManager(new MockPackageRepository()' null' new MockProjectSystem()' new MockPackageRepository())' "pathResolver");" is 161.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,CtorThrowsIfDependenciesAreNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new PackageManager(new MockPackageRepository()' new DefaultPackagePathResolver("foo")' null' new MockPackageRepository())' "fileSystem");" is 173.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,CtorThrowsIfDependenciesAreNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new PackageManager(new MockPackageRepository()' new DefaultPackagePathResolver("foo")' new MockProjectSystem()' null)' "localRepository");" is 174.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallingPackageWithUnknownDependencyAndIgnoreDepencenciesInstallsPackageWithoutDependencies,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UninstallingUnknownPackageThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UninstallPackage("foo")' "Unable to find package 'foo'.");" is 129.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UninstallingPackageWithNoDependents,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageAddsAllFilesToFileSystem,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' pathResolver' projectSystem' new LocalPackageRepository(pathResolver' projectSystem));" is 144.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UnInstallingPackageUninstallsPackageButNotDependencies,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,ReInstallingPackageAfterUninstallingDependencyShouldReinstallAllDependencies,The length of the statement  "            PackageManager packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 148.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageThrowsExceptionPackageIsNotInstalled,The length of the statement  "            PackageManager packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem.Object)' projectSystem.Object' localRepository);" is 162.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UpdatePackageUninstallsPackageAndInstallsNewPackage,The length of the statement  "            PackageManager packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 148.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UpdatePackageThrowsIfPackageNotInstalled,The length of the statement  "            PackageManager packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 148.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UpdatePackageThrowsIfPackageNotInstalled,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UpdatePackage("A"' updateDependencies: true' allowPrereleaseVersions: false)'" is 148.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,UpdatePackageDoesNothingIfNoUpdatesAvailable,The length of the statement  "            PackageManager packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 148.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageInstallsPrereleasePackages,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageInstallsPackagesWithPrereleaseDependenciesIfFlagIsSet,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageThrowsIfDependencyIsPrereleaseAndFlagIsNotSet,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageInstallsLowerReleaseVersionIfPrereleaseFlagIsNotSet,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageConsidersAlreadyInstalledPrereleasePackagesWhenResolvingDependencies,The length of the statement  "            var packageManager = new PackageManager(sourceRepository' new DefaultPackagePathResolver(projectSystem)' projectSystem' localRepository);" is 137.
Long Statement,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageConsidersAlreadyInstalledPrereleasePackagesWhenResolvingDependencies,The length of the statement  "            packageManager.InstallPackage("B"' version: new SemanticVersion("1.0.0-a")' ignoreDependencies: false' allowPrereleaseVersions: false);" is 135.
Long Statement,NuGet.Test,SecurityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\SecurityTest.cs,VerifyNuGetCoreSecurityTransparent,The length of the statement  "            var securityTransparentAttributes = typeof(IPackage).Assembly.GetCustomAttributes(inherit: true).OfType<SecurityTransparentAttribute>();" is 136.
Long Statement,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,ParseFrameworkNameWithInvalidFrameworkNameThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => VersionUtility.ParseFrameworkName("-")' "frameworkName"' "Framework name is missing.");" is 133.
Long Statement,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,ParseFrameworkNameWithInvalidFrameworkNameThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => VersionUtility.ParseFrameworkName("-client")' "frameworkName"' "Framework name is missing.");" is 139.
Long Statement,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,ParseFrameworkNameWithInvalidFrameworkNameThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => VersionUtility.ParseFrameworkName("")' "frameworkName"' "Framework name is missing.");" is 132.
Long Statement,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,ParseFrameworkNameWithInvalidFrameworkNameThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => VersionUtility.ParseFrameworkName("---")' "frameworkName"' "Invalid framework name format. Expected {framework}{version}-{profile}.");" is 180.
Long Statement,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingTagWithConflictsAddsTag,The length of the statement  "            XElement a = XElement.Parse(@"<connectionStrings><add name=""sqlce"" connectionString=""|DataDirectory|\foo.sdf"" /></connectionStrings>");" is 139.
Long Statement,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingTagWithConflictsAddsTag,The length of the statement  "            XElement b = XElement.Parse(@"<connectionStrings><add name=""sqlserver"" connectionString=""foo.bar"" /></connectionStrings>");" is 127.
Long Statement,NuGet.Test.Analysis,MisplacedAssemblyRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedAssemblyRuleTest.cs,AssemblyPlacedUnderLibHasOneIssue,The length of the statement  "                "The assembly 'lib\\abc.exe' is placed directly under 'lib' folder. It is recommended that assemblies be placed inside a framework-specific folder."'" is 149.
Long Statement,NuGet.Test.Analysis,MisplacedAssemblyRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedAssemblyRuleTest.cs,TwoAssembliesPlacedUnderLibHasTwoIssues,The length of the statement  "                "The assembly 'lib\\abc.dll' is placed directly under 'lib' folder. It is recommended that assemblies be placed inside a framework-specific folder."'" is 149.
Long Statement,NuGet.Test.Analysis,MisplacedAssemblyRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedAssemblyRuleTest.cs,TwoAssembliesPlacedUnderLibHasTwoIssues,The length of the statement  "                "The assembly 'lib\\def.winmd' is placed directly under 'lib' folder. It is recommended that assemblies be placed inside a framework-specific folder."'" is 151.
Long Statement,NuGet.Test.Analysis,MisplacedAssemblyRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedAssemblyRuleTest.cs,TwoAssembliesPlacedOutsideLibHasOneIssues,The length of the statement  "                "The assembly 'tools\\def.winmd' is not inside the 'lib' folder and hence it won't be added as reference when the package is installed into a project."'" is 152.
Long Statement,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,ScriptsOutsideToolsFolder,The length of the statement  "                "The script file 'content\\install.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package."'" is 139.
Long Statement,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,ScriptsOutsideToolsFolder,The length of the statement  "                "The script file 'init.ps1' is outside the 'tools' folder and hence will not be executed during installation of this package."'" is 127.
Long Statement,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,UnrecognizedScriptsInsideToolsFolder,The length of the statement  "                "The script file 'tools\\hello.ps1' is not recognized by NuGet and hence will not be executed during installation of this package."'" is 132.
Long Statement,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,UnrecognizedScriptsInsideToolsFolder,The length of the statement  "                "The script file 'tools\\abc.ps1' is not recognized by NuGet and hence will not be executed during installation of this package."'" is 130.
Long Statement,NuGet.Test.Analysis,MisplacedTransformFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedTransformFileRuleTest.cs,TransformFileOutsideContentFolderHasIssue,The length of the statement  "                "The transform file 'tools\\web.config.transform' is outside the 'content' folder and hence will not be transformed during installation of this package."'" is 154.
Long Statement,NuGet.Test.Analysis,MisplacedTransformFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedTransformFileRuleTest.cs,TransformFileOutsideContentFolderHasIssue,The length of the statement  "                "The transform file 'one.cs.pp' is outside the 'content' folder and hence will not be transformed during installation of this package."'" is 136.
Long Statement,NuGet.Test.Analysis,MissingSummaryRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MissingSummaryRuleTest.cs,PackageWithLongDescriptionYieldOneIssue,The length of the statement  "                "The Description text is long but the Summary text is empty. This means the Description text will be truncated in the 'Manage NuGet Packages' dialog."'" is 151.
Long Statement,NuGet.Test.Analysis,NoneAssemblyInsideLibRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\NoneAssemblyInsideLibRuleTest.cs,AssertPackageIssueWithPath,The length of the statement  "                "The file '" + target + "' is not a valid assembly. If it is an XML documentation file or a .pdb file' there is no matching assembly specified in the same folder."'" is 164.
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryIgnoresInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryIgnoresInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryThrowsForInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,AggregateQueryThrowsForInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,CountDoesNotThrowIfForInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,CountDoesNotThrowIfForInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: IEnumerable<IQueryable<string>> sources = new[] {                 Enumerable.Range(0' 3).Select(i => i + "A").AsQueryable()'                 GetInvalidSequence("B")'                 Enumerable.Range(0' 3).Select(i => i + "C").AsQueryable()'             };
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,CountDoesNotThrowIfForInvalidRepositoriesIfFlagIsSet,The following statement contains a magic number: Assert.Equal(6' aggregateQuery.Count());
Magic Number,NuGet.Test,AggregateQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateQueryTest.cs,GetInvalidSequence,The following statement contains a magic number: return from item in Enumerable.Range(0' 3).AsQueryable()                    select selector(item);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicates,The following statement contains a magic number: Assert.Equal(6' packages.Count);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicates,The following statement contains a magic number: Assert.Equal("C"' packages[2].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicates,The following statement contains a magic number: Assert.Equal("D"' packages[3].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicates,The following statement contains a magic number: Assert.Equal("E"' packages[4].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicates,The following statement contains a magic number: Assert.Equal("F"' packages[5].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesWithPagingTakesLowestNElements,The following statement contains a magic number: var packages = repository.GetPackages().OrderBy(p => p.Id).Take(5).ToList();
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesWithPagingTakesLowestNElements,The following statement contains a magic number: Assert.Equal(5' packages.Count);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesWithPagingTakesLowestNElements,The following statement contains a magic number: Assert.Equal("C"' packages[2].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesWithPagingTakesLowestNElements,The following statement contains a magic number: Assert.Equal("D"' packages[3].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesWithPagingTakesLowestNElements,The following statement contains a magic number: Assert.Equal("E"' packages[4].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicatesIfTheyAreTheSameVersion,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicatesIfTheyAreTheSameVersion,The following statement contains a magic number: Assert.Equal("A"' packages[2].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicatesIfTheyAreTheSameVersion,The following statement contains a magic number: Assert.Equal(new SemanticVersion("3.0")' packages[2].Version);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesRemoveDuplicatesIfTheyAreTheSameVersion,The following statement contains a magic number: Assert.Equal("B"' packages[3].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesComplexOrderByAndDuplicatesRemovesDuplicatesAndMaintainsOrder,The following statement contains a magic number: var r2 = new MockPackageRepository() {                 PackageUtility.CreatePackage("A"' downloadCount : 3)'             };
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesComplexOrderByAndDuplicatesRemovesDuplicatesAndMaintainsOrder,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesComplexOrderByAndDuplicatesRemovesDuplicatesAndMaintainsOrder,The following statement contains a magic number: Assert.Equal("A"' packages[2].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesComplexOrderByAndDuplicatesRemovesDuplicatesAndMaintainsOrder,The following statement contains a magic number: Assert.Equal(new SemanticVersion("3.0")' packages[2].Version);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesComplexOrderByAndDuplicatesRemovesDuplicatesAndMaintainsOrder,The following statement contains a magic number: Assert.Equal("B"' packages[3].Id);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,SupressErrorWorksForGetPackagesForRepositoriesThatThrowWhenInvoked,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,SupressErrorWorksForGetPackagesForRepositoriesThatThrowDuringEnumeration,The following statement contains a magic number: Assert.Equal(2' packages.Count());
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,RepositoriesPropertyThrowsIfIgnoreFlagIsNotSet,The following statement contains a magic number: var repositories = Enumerable.Range(0' 3).Select(e =>             {                 if (e == 1)                 {                     throw new InvalidOperationException("Repository exception");                 }                 return new MockPackageRepository();             });
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesSupressesExceptionForConsecutiveCalls,The following statement contains a magic number: repo1.Setup(r => r.GetPackages()).Returns(Enumerable.Repeat(PackageUtility.CreatePackage("Foo")' 50).AsQueryable()).Verifiable();
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesSupressesExceptionForConsecutiveCalls,The following statement contains a magic number: i < 5
Magic Number,NuGet.Test,AggregateRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\AggregateRepositoryTest.cs,GetPackagesSupressesExceptionForConsecutiveCalls,The following statement contains a magic number: repo1.Verify(r => r.GetPackages()' Times.Exactly(5));
Magic Number,NuGet.Test,DataServicePackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageRepositoryTest.cs,SearchUsesServiceMethodIfServerSupportsIt,The following statement contains a magic number: context.Setup(m => m.CreateQuery<DataServicePackage>(It.IsAny<string>()' It.IsAny<IDictionary<string' object>>()))                    .Callback<string' IDictionary<string' object>>((entitySet' parameters) =>                    {                        // Assert                        Assert.Equal("Search"' entitySet);                        Assert.Equal(2' parameters.Count);                        Assert.Equal("'old'"' parameters["searchTerm"]);                        Assert.Equal("''"' parameters["targetFramework"]);                    })                    .Returns(new Mock<IDataServiceQuery<DataServicePackage>>().Object);
Magic Number,NuGet.Test,DataServicePackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageRepositoryTest.cs,SearchEscapesSingleQuotesInParameters,The following statement contains a magic number: context.Setup(m => m.CreateQuery<DataServicePackage>(It.IsAny<string>()' It.IsAny<IDictionary<string' object>>()))                    .Callback<string' IDictionary<string' object>>((entitySet' parameters) =>                    {                        // Assert                        Assert.Equal("Search"' entitySet);                        Assert.Equal(2' parameters.Count);                        Assert.Equal("'dante''s inferno'"' parameters["searchTerm"]);                        Assert.Equal("''"' parameters["targetFramework"]);                    })                    .Returns(new Mock<IDataServiceQuery<DataServicePackage>>().Object);
Magic Number,NuGet.Test,DataServicePackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageRepositoryTest.cs,SearchSendsShortTargetFrameworkNames,The following statement contains a magic number: context.Setup(m => m.CreateQuery<DataServicePackage>(It.IsAny<string>()' It.IsAny<IDictionary<string' object>>()))                    .Callback<string' IDictionary<string' object>>((entitySet' parameters) =>                    {                        // Assert                        Assert.Equal("Search"' entitySet);                        Assert.Equal(2' parameters.Count);                        Assert.Equal("'dante''s inferno'"' parameters["searchTerm"]);                        Assert.Equal("'net40|sl40|sl30-wp|netmf11'"' parameters["targetFramework"]);                    })                    .Returns(new Mock<IDataServiceQuery<DataServicePackage>>().Object);
Magic Number,NuGet.Test,DataServicePackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageRepositoryTest.cs,SearchSendsPrereleaseFlagIfSet,The following statement contains a magic number: context.Setup(m => m.CreateQuery<DataServicePackage>(It.IsAny<string>()' It.IsAny<IDictionary<string' object>>()))                    .Callback<string' IDictionary<string' object>>((entitySet' parameters) =>                    {                        // Assert                        Assert.Equal("Search"' entitySet);                        Assert.Equal(3' parameters.Count);                        Assert.Equal("'dante''s inferno'"' parameters["searchTerm"]);                        Assert.Equal("'net40|sl40|sl30-wp|netmf11'"' parameters["targetFramework"]);                        Assert.Equal("true"' parameters["includePrerelease"]);                    })                    .Returns(new Mock<IDataServiceQuery<DataServicePackage>>().Object)                    .Verifiable();
Magic Number,NuGet.Test,DataServicePackageTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\DataServicePackageTest.cs,DependenciesStringWithExtraSpaces,The following statement contains a magic number: Assert.Equal(2' dependencies.Count);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastOneElement,The following statement contains a magic number: var items = new Item[] { new Item { Name = "John"' Age = 10 } };
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastOneElement,The following statement contains a magic number: Assert.Equal(10' result[0].Age);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastThreeSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "John"' Age = 410 }'                                      new Item { Name = "John"' Age = 550 }'                                      new Item { Name = "John"' Age = 30 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastThreeSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "John"' Age = 410 }'                                      new Item { Name = "John"' Age = 550 }'                                      new Item { Name = "John"' Age = 30 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastThreeSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "John"' Age = 410 }'                                      new Item { Name = "John"' Age = 550 }'                                      new Item { Name = "John"' Age = 30 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastThreeSimilarElements,The following statement contains a magic number: Assert.Equal(550' result[0].Age);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "Phil"' Age = 1 }'                                      new Item { Name = "John"' Age = 40 }'                                      new Item { Name = "John"' Age = 20 }'                                      new Item { Name = "John"' Age = 30 }'                                      new Item { Name = "David"' Age = 10 }'                                      new Item { Name = "David"' Age = 20 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "Phil"' Age = 1 }'                                      new Item { Name = "John"' Age = 40 }'                                      new Item { Name = "John"' Age = 20 }'                                      new Item { Name = "John"' Age = 30 }'                                      new Item { Name = "David"' Age = 10 }'                                      new Item { Name = "David"' Age = 20 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "Phil"' Age = 1 }'                                      new Item { Name = "John"' Age = 40 }'                                      new Item { Name = "John"' Age = 20 }'                                      new Item { Name = "John"' Age = 30 }'                                      new Item { Name = "David"' Age = 10 }'                                      new Item { Name = "David"' Age = 20 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "Phil"' Age = 1 }'                                      new Item { Name = "John"' Age = 40 }'                                      new Item { Name = "John"' Age = 20 }'                                      new Item { Name = "John"' Age = 30 }'                                      new Item { Name = "David"' Age = 10 }'                                      new Item { Name = "David"' Age = 20 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: var items = new Item[] { new Item { Name = "Phil"' Age = 1 }'                                      new Item { Name = "John"' Age = 40 }'                                      new Item { Name = "John"' Age = 20 }'                                      new Item { Name = "John"' Age = 30 }'                                      new Item { Name = "David"' Age = 10 }'                                      new Item { Name = "David"' Age = 20 }};
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: Assert.Equal(3' result.Count);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: Assert.Equal(40' result[1].Age);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: Assert.Equal("David"' result[2].Name);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: Assert.Equal(20' result[2].Age);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,DistinctLastMultipleSimilarElements,The following statement contains a magic number: Assert.Equal(20' result[2].Age);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeQueryableReturnsOriginalIQueryableWhenNotRewritingQueries,The following statement contains a magic number: IQueryable<int> source = Enumerable.Range(0' 4).AsQueryable();
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeQueryableWrapsIEnumerableWhenNotRewritingQueries,The following statement contains a magic number: IEnumerable<int> source = Enumerable.Range(0' 4);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeQueryableReturnsSafeEnumerableQueryWhenRewriting,The following statement contains a magic number: IEnumerable<int> source = Enumerable.Range(0' 4);
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtTheBeginningOfSequence,The following statement contains a magic number: var enumerable = Enumerable.Range(0' 4).Select(e =>             {                 if (e == 0)                 {                     throw new Exception();                 }                 return e * e;             });
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtTheBeginningOfSequence,The following statement contains a magic number: Assert.Equal(new[] { 1' 4' 9 }' result.ToArray());
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtTheBeginningOfSequence,The following statement contains a magic number: Assert.Equal(new[] { 1' 4' 9 }' result.ToArray());
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementInMiddleOfSequence,The following statement contains a magic number: var enumerable = Enumerable.Range(0' 4).Select(e =>             {                 if (e == 1 || e == 3)                 {                     throw new Exception();                 }                 return e * e;             });
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementInMiddleOfSequence,The following statement contains a magic number: var enumerable = Enumerable.Range(0' 4).Select(e =>             {                 if (e == 1 || e == 3)                 {                     throw new Exception();                 }                 return e * e;             });
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementInMiddleOfSequence,The following statement contains a magic number: Assert.Equal(new[] { 0' 4 }' result.ToArray());
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtEndOfSequence,The following statement contains a magic number: var enumerable = Enumerable.Range(0' 4).Select(e =>             {                 if (e == 3)                 {                     throw new Exception();                 }                 return e * e;             });
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtEndOfSequence,The following statement contains a magic number: var enumerable = Enumerable.Range(0' 4).Select(e =>             {                 if (e == 3)                 {                     throw new Exception();                 }                 return e * e;             });
Magic Number,NuGet.Test,EnumerableExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\EnumerableExtensionsTest.cs,SafeIterateWithFailingElementAtEndOfSequence,The following statement contains a magic number: Assert.Equal(new[] { 0' 1' 4 }' result.ToArray());
Magic Number,NuGet.Test,MachineCacheTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\MachineCacheTest.cs,AddingMoreThanPackageLimitClearsCache,The following statement contains a magic number: i < 100
Magic Number,NuGet.Test,MachineCacheTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\MachineCacheTest.cs,ClearRemovesAllPackageFilesFromCache,The following statement contains a magic number: i < 20
Magic Number,NuGet.Test,ManifestFileTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestFileTest.cs,ManifestFileReturnsValidationResultsIfSourceAndTargetContainsInvalidCharacters,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,NuGet.Test,ManifestVersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestVersionUtilityTest.cs,GetManifestVersionReturns2IfCopyrightIsSet,The following statement contains a magic number: Assert.Equal(2' version);
Magic Number,NuGet.Test,ManifestVersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestVersionUtilityTest.cs,GetManifestVersionReturns2IfFrameworkAssemblyAndReferencesAreSet,The following statement contains a magic number: Assert.Equal(2' version);
Magic Number,NuGet.Test,ManifestVersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestVersionUtilityTest.cs,GetManifestVersionConsidersEmptyLists,The following statement contains a magic number: Assert.Equal(2' version);
Magic Number,NuGet.Test,ManifestVersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestVersionUtilityTest.cs,GetManifestVersionReturns2IfReleaseNotesIsPresent,The following statement contains a magic number: Assert.Equal(2' version);
Magic Number,NuGet.Test,ManifestVersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ManifestVersionUtilityTest.cs,GetManifestVersionReturns3IfUsingSemanticVersioning,The following statement contains a magic number: Assert.Equal(3' version);
Magic Number,NuGet.Test,PackageReferenceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageReferenceRepositoryTest.cs,GetPackagesReturnsOnlyValidPackagesFromSourceRepositoryListedInPackagesConfig,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.Test,PackageRepositoryExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryExtensionsTest.cs,GetUpdatesReturnAllPackageVersionsWhenFlagIsSpecified,The following statement contains a magic number: Assert.Equal(3' foundPackages.Count);
Magic Number,NuGet.Test,PackageRepositoryExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryExtensionsTest.cs,GetUpdatesReturnAllPackageVersionsWhenFlagIsSpecified,The following statement contains a magic number: Assert.Equal("A"' foundPackages[2].Id);
Magic Number,NuGet.Test,PackageRepositoryExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryExtensionsTest.cs,GetUpdatesReturnAllPackageVersionsWhenFlagIsSpecified,The following statement contains a magic number: Assert.Equal(new SemanticVersion("3.0-alpha")' foundPackages[2].Version);
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencySimple,The following statement contains a magic number: Assert.Equal(3' sortedPackages.Count);
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencySimple,The following statement contains a magic number: Assert.Same(packageA' sortedPackages[2]);
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The following statement contains a magic number: Assert.Equal(4' sortedPackages.Count);
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The following statement contains a magic number: Assert.True((sortedPackages[1] == packageB && sortedPackages[2] == packageC) ||                           (sortedPackages[1] == packageC && sortedPackages[2] == packageB));
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The following statement contains a magic number: Assert.True((sortedPackages[1] == packageB && sortedPackages[2] == packageC) ||                           (sortedPackages[1] == packageC && sortedPackages[2] == packageB));
Magic Number,NuGet.Test,PackageSorterTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSorterTest.cs,TestSortByDependencyComplex,The following statement contains a magic number: Assert.Same(packageA' sortedPackages[3]);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnsDefaultSourcesIfSpecified,The following statement contains a magic number: Assert.Equal(2' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesPerformMigrationIfSpecified,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesPerformMigrationIfSpecified,The following statement contains a magic number: AssertPackageSource(values[2]' "awesome"' "awesomesource"' false);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesPerformMigrationIfSpecified,The following statement contains a magic number: Assert.Equal(3' savedSettingValues.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesPerformMigrationIfSpecified,The following statement contains a magic number: Assert.Equal("awesome"' savedSettingValues[2].Key);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesPerformMigrationIfSpecified,The following statement contains a magic number: Assert.Equal("awesomesource"' savedSettingValues[2].Value);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnCorrectDataFromSettings,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnCorrectDataFromSettings,The following statement contains a magic number: AssertPackageSource(values[2]' "three"' "threesource"' true);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnCorrectDataFromSettingsWhenSomePackageSourceIsDisabled,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,LoadPackageSourcesReturnCorrectDataFromSettingsWhenSomePackageSourceIsDisabled,The following statement contains a magic number: AssertPackageSource(values[2]' "three"' "threesource"' true);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,SavePackageSourcesSaveCorrectDataToSettings,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,SavePackageSourcesSaveCorrectDataToSettings,The following statement contains a magic number: Assert.Equal("three"' values[2].Key);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,SavePackageSourcesSaveCorrectDataToSettingsWhenSomePackgeSourceIsDisabled,The following statement contains a magic number: Assert.Equal(3' values.Count);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,SavePackageSourcesSaveCorrectDataToSettingsWhenSomePackgeSourceIsDisabled,The following statement contains a magic number: Assert.Equal("three"' values[2].Key);
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateReturnsAggregateRepositoryForAllSources,The following statement contains a magic number: Assert.Equal(2' repo.Repositories.Count());
Magic Number,NuGet.Test,PackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageSourceProviderTest.cs,GetAggregateSkipsInvalidSources,The following statement contains a magic number: Assert.Equal(2' repo.Repositories.Count());
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesFiltersByWildCards,The following statement contains a magic number: Assert.Equal(2' matches.Count());
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesAllowsRecursiveWildcardMatches,The following statement contains a magic number: Assert.Equal(3' matches.Count());
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesAllowsRecursiveWildcardMatches,The following statement contains a magic number: Assert.Equal(@"lib\baz.pdb"' matches.ElementAt(2).SourcePath);
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesPerformsRecursiveWildcardSearch,The following statement contains a magic number: Assert.Equal(3' matches.Count());
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesPerformsRecursiveWildcardSearch,The following statement contains a magic number: Assert.Equal(@"lib\baz.pdb"' matches.ElementAt(2).SourcePath);
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,GetMatchesPerformsExactMatches,The following statement contains a magic number: Assert.Equal(2' matches.Count());
Magic Number,NuGet.Test,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PathResolverTest.cs,FilterPathRemovesItemsThatMatchWildcard,The following statement contains a magic number: Assert.Equal(2' files.Count());
Magic Number,NuGet.Test,SharedRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\SharedRepositoryTest.cs,GetRepositoryPathsRemovesInvalidOrNonExistantPathsAndReturnsRelativePaths,The following statement contains a magic number: Assert.Equal(2' paths.Count);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,CtorThrowsIfSourceIsNull,The following statement contains a magic number: ExceptionAssert.ThrowsArgNull(() => new BufferedEnumerable<object>(null' 100)' "source");
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,TakingMoreThanBufferSizesReturnsItems,The following statement contains a magic number: var e = new BufferedEnumerable<int>(Enumerable.Range(0' 10000).AsQueryable()' 5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,TakingMoreThanBufferSizesReturnsItems,The following statement contains a magic number: var e = new BufferedEnumerable<int>(Enumerable.Range(0' 10000).AsQueryable()' 5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,TakingMoreThanBufferSizesReturnsItems,The following statement contains a magic number: var items = e.Take(20).ToList();
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,TakingMoreThanBufferSizesReturnsItems,The following statement contains a magic number: Assert.Equal(20' items.Count);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingLessThanBufferSizeOnlyQueriesSourceOnce,The following statement contains a magic number: var state = new BufferedEnumerable<int>.QueryState<int>(5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingLessThanBufferSizeOnlyQueriesSourceOnce,The following statement contains a magic number: var query = Enumerable.Range(0' 10000).AsQueryable();
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingLessThanBufferSizeOnlyQueriesSourceOnce,The following statement contains a magic number: var e = new BufferedEnumerable<int>.BufferedEnumerator<int>(state' query' 5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingLessThanBufferSizeOnlyQueriesSourceOnce,The following statement contains a magic number: i < 4
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingLessThanBufferSizeOnlyQueriesSourceOnce,The following statement contains a magic number: Assert.Equal(5' state.Cache.Count);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingMoreThanBufferSizeQueriesSourceMoreThanOnce,The following statement contains a magic number: var state = new BufferedEnumerable<int>.QueryState<int>(5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingMoreThanBufferSizeQueriesSourceMoreThanOnce,The following statement contains a magic number: var query = Enumerable.Range(0' 10000).AsQueryable();
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingMoreThanBufferSizeQueriesSourceMoreThanOnce,The following statement contains a magic number: var e = new BufferedEnumerable<int>.BufferedEnumerator<int>(state' query' 5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingMoreThanBufferSizeQueriesSourceMoreThanOnce,The following statement contains a magic number: i < 6
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,BufferedEnumeratorTakingMoreThanBufferSizeQueriesSourceMoreThanOnce,The following statement contains a magic number: Assert.Equal(10' state.Cache.Count);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,IfNoMoreItemsInSourceSetsIsEmpty,The following statement contains a magic number: var state = new BufferedEnumerable<int>.QueryState<int>(5);
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,IfNoMoreItemsInSourceSetsIsEmpty,The following statement contains a magic number: var query = Enumerable.Range(0' 5).AsQueryable();
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,IfNoMoreItemsInSourceSetsIsEmpty,The following statement contains a magic number: i < 5
Magic Number,NuGet.Test,BufferedEnumerableTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\BufferedEnumerableTest.cs,IfNoMoreItemsInSourceSetsIsEmpty,The following statement contains a magic number: Assert.Equal(5' state.Cache.Count);
Magic Number,NuGet.Test,ClosureEvaluatorQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ClosureEvaluatorTest.cs,ClosureEvaluatorReplacesClosureVariablesWithTheirValue,The following statement contains a magic number: int value = 2;
Magic Number,NuGet.Test,ClosureEvaluatorQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ClosureEvaluatorTest.cs,ClosureEvaluatorReplacesClosureVariablesWithTheirValue,The following statement contains a magic number: var query = from i in new[] { 1' 2' 3 }.AsSafeQueryable()                         where i > value                         select i;
Magic Number,NuGet.Test,ClosureEvaluatorQueryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ClosureEvaluatorTest.cs,ClosureEvaluatorReplacesClosureVariablesWithTheirValue,The following statement contains a magic number: var query = from i in new[] { 1' 2' 3 }.AsSafeQueryable()                         where i > value                         select i;
Magic Number,NuGet.Test,CryptoHashProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\CryptoHashProviderTest.cs,CryptoHashProviderIsThreadSafe,The following statement contains a magic number: Parallel.For(0' 10000' ignored =>             {                 // Act                 byte[] actualHash = hashProvider.CalculateHash(testBytes);                  // Assert                 Assert.Equal(actualHash' Convert.FromBase64String(expectedHash));             });
Magic Number,NuGet.Test,PackageDownloaderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageDownloaderTest.cs,DownloadPackageWithUnverifiedPackageThrowsInvalidDataException,The following statement contains a magic number: downloadClient.Setup(c => c.DownloadData()).Returns(new byte[] { 123 });
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageResolvesDependencyUsingDependencyProvider,The following statement contains a magic number: Assert.Equal(2' operations.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageResolvesDependencyWithConstraintsUsingDependencyResolver,The following statement contains a magic number: Assert.Equal(2' operations.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraph,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal(5' operations.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("D"' operations[2].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal(new SemanticVersion("2.0")' operations[2].Package.Version);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("C"' operations[3].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("A"' operations[4].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal(5' projectOperations.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("D"' projectOperations[2].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal(new SemanticVersion("2.0")' projectOperations[2].Package.Version);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("C"' projectOperations[3].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallDiamondDependencyGraphWithDifferntVersionOfSamePackage,The following statement contains a magic number: Assert.Equal("A"' projectOperations[4].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,UninstallWalkerIgnoresMissingDependencies,The following statement contains a magic number: Assert.Equal(3' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForUninstallDiamondDependencyGraph,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolvingDependencyForUpdateWithConflictingDependents,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolvingDependencyForUpdateWithConflictingDependents,The following statement contains a magic number: AssertOperation("A"' "2.0"' PackageAction.Install' packages[2]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolvingDependencyForUpdateWithConflictingDependents,The following statement contains a magic number: AssertOperation("B"' "1.0.1"' PackageAction.Install' packages[3]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveOperationsForInstallSameDependencyAtDifferentLevelsInGraph,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveOperationsForInstallSameDependencyAtDifferentLevelsInGraph,The following statement contains a magic number: Assert.Equal("C"' packages[2].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveOperationsForInstallSameDependencyAtDifferentLevelsInGraph,The following statement contains a magic number: Assert.Equal("A"' packages[3].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: Assert.Equal(8' operations.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("D"' "1.0"' PackageAction.Uninstall' operations[2]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("B"' "1.0"' PackageAction.Uninstall' operations[3]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("B"' "2.0"' PackageAction.Install' operations[4]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("D"' "2.0"' PackageAction.Install' operations[5]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("C"' "2.0"' PackageAction.Install' operations[6]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallSameDependencyAtDifferentLevelsInGraphDuringUpdate,The following statement contains a magic number: AssertOperation("A"' "2.0"' PackageAction.Install' operations[7]);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForInstallPackageWithDependencyReturnsPackageAndDependency,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,ResolveDependenciesForUninstallPackageWithRemoveDependenciesExcludesDependencyIfDependencyInUse,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The following statement contains a magic number: Assert.Equal(4' packages.Count);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The following statement contains a magic number: Assert.Equal("B"' packages[2].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The following statement contains a magic number: Assert.Equal(new SemanticVersion("1.0.9")' packages[2].Package.Version);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The following statement contains a magic number: Assert.Equal("A"' packages[3].Package.Id);
Magic Number,NuGet.Test,PackageWalkerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageWalkerTest.cs,InstallWalkerResolvesLowestMajorAndMinorVersionButHighestBuildAndRevisionForDependencies,The following statement contains a magic number: Assert.Equal(new SemanticVersion("1.0")' packages[3].Package.Version);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackageFilesDetectsFilesInRootOrFirstLevelOfFolders,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackageFilesDetectsFilesInRootOrFirstLevelOfFolders,The following statement contains a magic number: Assert.Equal("P1.nupkg"' files[2]);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackagesOnlyRetrievesPackageFilesWhereLastModifiedIsOutOfDate,The following statement contains a magic number: lastModified["P1.nupkg"] = GetDateTimeOffset(seconds: 30);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackagesOnlyRetrievesPackageFilesWhereLastModifiedIsOutOfDate,The following statement contains a magic number: lastModified["P2.nupkg"] = GetDateTimeOffset(seconds: 30);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackagesOnlyRetrievesPackageFilesWhereLastModifiedIsOutOfDate,The following statement contains a magic number: Assert.Equal(2' results.Count);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackagesOnlyRetrievesPackageFilesWhereLastModifiedIsOutOfDate,The following statement contains a magic number: lastModified["P1.nupkg"] = GetDateTimeOffset(seconds: 35);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetPackagesOnlyRetrievesPackageFilesWhereLastModifiedIsOutOfDate,The following statement contains a magic number: lastModified["P2.nupkg"] = GetDateTimeOffset(seconds: 30);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,RemovePackageRemovesPackageFileAndDirectoryAndRoot,The following statement contains a magic number: Assert.Equal(3' mockFileSystem.Deleted.Count);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,RemovePackageDoesNotRemovesRootIfNotEmpty,The following statement contains a magic number: Assert.Equal(2' mockFileSystem.Deleted.Count);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetDateTimeOffset,The following statement contains a magic number: return new DateTimeOffset(1000' 10' 1' 0' 0' seconds' TimeSpan.Zero);
Magic Number,NuGet.Test,LocalPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\LocalPackageRepositoryTest.cs,GetDateTimeOffset,The following statement contains a magic number: return new DateTimeOffset(1000' 10' 1' 0' 0' seconds' TimeSpan.Zero);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(3' builder.Tags.Count);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal("foo-bar"' tags[2]);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithSerializationNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithSerializationNamespaceBuilderFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithOldStyleXmlnsDeclaratoinsFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingManifestWithOldStyleXmlnsDeclaratoinsFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageManifestFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,ReadingPackageManifestFromStreamCopiesMetadata,The following statement contains a magic number: Assert.Equal(new SemanticVersion(2' 5' 0' 0)' builder.Version);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderThrowsIfPackageIdExceedsMaxLengthLimit,The following statement contains a magic number: var builder = new PackageBuilder             {                 Id = new string('c'' 101)'                 Version = new SemanticVersion("1.0")'                 Description = "Description"             };
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderWorksWithFileNamesContainingSpecialCharacters,The following statement contains a magic number: Assert.Equal(@"lib\C#\test.dll"' zipPackage.GetFiles().ElementAt(2).Path);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderWorksWithFileNamesContainingSpecialCharacters,The following statement contains a magic number: Assert.Equal(@"lib\name with spaces.dll"' zipPackage.GetFiles().ElementAt(3).Path);
Magic Number,NuGet.Test,PackageBuilderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageBuilderTest.cs,PackageBuilderWorksWithFileNamesContainingSpecialCharacters,The following statement contains a magic number: Assert.Equal(@"lib\regular.file.dll"' zipPackage.GetFiles().ElementAt(4).Path);
Magic Number,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindPackagesReturnsPackagesWithTermInPackageTagOrDescriptionOrId,The following statement contains a magic number: Assert.Equal(3' packages.Count);
Magic Number,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindPackagesReturnsPackagesWithTermInPackageTagOrDescriptionOrId,The following statement contains a magic number: Assert.Equal("TagCloud"' packages[2].Id);
Magic Number,NuGet.Test,PackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageRepositoryTest.cs,FindPackagesReturnsPackagesWithTerm,The following statement contains a magic number: Assert.Equal(packages.Count()' 2);
Magic Number,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageWithUnsupportedFilesSkipsUnsupportedFiles,The following statement contains a magic number: Assert.Equal(2' projectSystem.Object.Paths.Count);
Magic Number,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageWithUnsupportedTransformFileSkipsUnsupportedFile,The following statement contains a magic number: Assert.Equal(2' projectSystem.Object.Paths.Count);
Magic Number,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFile,The following statement contains a magic number: Assert.Equal(4' projectSystem.Object.Paths.Count);
Magic Number,NuGet.Test,ProjectManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ProjectManagerTest.cs,AddPackageDoNotTransformPackagesConfigFileInNestedFolder,The following statement contains a magic number: Assert.Equal(4' projectSystem.Object.Paths.Count);
Magic Number,NuGet.Test,PackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\PackageManagerTest.cs,InstallPackageAddsAllFilesToFileSystem,The following statement contains a magic number: Assert.Equal(5' projectSystem.Paths.Count);
Magic Number,NuGet.Test,UserSettingsTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\UserSettingsTests.cs,UserSettings_CallingGetValuesWithSectionReturnsDictionary,The following statement contains a magic number: Assert.Equal(2' result.Count);
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var net40 = new FrameworkName(".NETFramework"' new Version(4' 0));
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var net40Client = new FrameworkName(".NETFramework"' new Version(4' 0)' "Client");
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var sl3 = new FrameworkName("Silverlight"' new Version(3' 0));
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var sl4 = new FrameworkName("Silverlight"' new Version(4' 0));
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var wp7 = new FrameworkName("Silverlight"' new Version(4' 0)' "WindowsPhone");
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var wp7Mango = new FrameworkName("Silverlight"' new Version(4' 0)' "WindowsPhone71");
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var netMicro41 = new FrameworkName(".NETMicroFramework"' new Version(4' 1));
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var winrt = new FrameworkName(".NETCore"' new Version(4' 5));
Magic Number,NuGet.Test,VersionUtilityTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\VersionUtilityTest.cs,GetFrameworkStringFromFrameworkName,The following statement contains a magic number: var winrt = new FrameworkName(".NETCore"' new Version(4' 5));
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingWithSameTagDifferentAttributesWithNoConflictsMergesAttributes,The following statement contains a magic number: Assert.Equal(2' barElement.Attributes().Count());
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingWithNodeActions,The following statement contains a magic number: Assert.Equal(2' elements.Count);
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingWithoutInsertionMappingsAddsToEnd,The following statement contains a magic number: Assert.Equal(2' elements.Count);
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingElementsWithMultipleSameAttributeNamesAndValuesDoesntDuplicateEntries,The following statement contains a magic number: Assert.Equal(2' elements.Count);
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingElementsWithMultipleEntiresAddsEntryIfNotExists,The following statement contains a magic number: Assert.Equal(3' elements.Count);
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingElementsWithMultipleEntiresAddsEntryIfNotExists,The following statement contains a magic number: AssertAttributeValue(elements[2]' "name"' "three");
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingElementsWithMultipleEntiresAddsEntryIfNotExists,The following statement contains a magic number: AssertAttributeValue(elements[2]' "value"' "baz");
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,MergingTagWithConflictsAddsTag,The following statement contains a magic number: Assert.Equal(2' elements.Count);
Magic Number,NuGet.Test,XmlExtensionsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\XmlExtensionsTest.cs,ExceptWithTagsWithConflicts,The following statement contains a magic number: Assert.Equal(2' barElement.Attributes().Count());
Magic Number,NuGet.Test,ZipPackageTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\ZipPackageTest.cs,CtorWithStream,The following statement contains a magic number: Assert.Equal(2' files.Count);
Magic Number,NuGet.Test.Analysis,MisplacedAssemblyRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedAssemblyRuleTest.cs,TwoAssembliesPlacedUnderLibHasTwoIssues,The following statement contains a magic number: Assert.Equal(2' issues.Count);
Magic Number,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,ScriptsOutsideToolsFolder,The following statement contains a magic number: Assert.Equal(2' issues.Count);
Magic Number,NuGet.Test.Analysis,MisplacedScriptFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedScriptFileRuleTest.cs,UnrecognizedScriptsInsideToolsFolder,The following statement contains a magic number: Assert.Equal(2' issues.Count);
Magic Number,NuGet.Test.Analysis,MisplacedTransformFileRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MisplacedTransformFileRuleTest.cs,TransformFileOutsideContentFolderHasIssue,The following statement contains a magic number: Assert.Equal(2' issues.Count);
Magic Number,NuGet.Test.Analysis,MissingSummaryRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MissingSummaryRuleTest.cs,PackageWithShortDescriptionHasNoIssue,The following statement contains a magic number: var package = PackageUtility.CreatePackage("A"' description: new string('a'' 300));
Magic Number,NuGet.Test.Analysis,MissingSummaryRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MissingSummaryRuleTest.cs,PackageWithLongDescriptionYieldOneIssue,The following statement contains a magic number: var package = PackageUtility.CreatePackage("A"' description: new string('a'' 301));
Magic Number,NuGet.Test.Analysis,MissingSummaryRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\MissingSummaryRuleTest.cs,PackageWithLongDescriptionAndSummaryHasNoIssue,The following statement contains a magic number: var package = PackageUtility.CreatePackage("A"' description: new string('a'' 301)' summary: "summary");
Magic Number,NuGet.Test.Analysis,NoneAssemblyInsideLibRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\NoneAssemblyInsideLibRuleTest.cs,NonAssemblyInsideLibHasIssue,The following statement contains a magic number: Assert.Equal(3' issues.Count);
Magic Number,NuGet.Test.Analysis,NoneAssemblyInsideLibRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Core.Test\Analysis\NoneAssemblyInsideLibRuleTest.cs,NonAssemblyInsideLibHasIssue,The following statement contains a magic number: AssertPackageIssueWithPath(issues[2]' "lib\\net\\4.0\\kac.txt");
