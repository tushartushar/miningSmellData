Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,GetProjectContent,The method has 5 parameters. Parameters: projectName' targetFrameworkVersion' compile' content' links
Long Parameter List,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,WriteAssemblyInfo,The method has 5 parameters. Parameters: assemblyName' version' author' description' title
Long Parameter List,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,GetAssemblyInfoContent,The method has 5 parameters. Parameters: assemblyName' version' author' description' title
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID1,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID1,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nThe package ID 'test\\id' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.\r\n"));" is 239.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID2,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID2,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nThe package ID 'test:id' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.\r\n"));" is 238.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID3,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID3,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nThe package ID 'test|id' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.\r\n"));" is 238.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID4,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasInvalidID4,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nThe package ID 'test/id' contains invalid characters. Examples of valid package IDs include 'MyPackage' and 'MyPackage.Sample'.\r\n"));" is 238.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasIDExceedingMaxLength,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasIDExceedingMaxLength,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nId must not exceed 100 characters.\r\n"));" is 145.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasVersionExceedingMaxLength,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_ShowConsistentErrorMessageWhenNuspecHasVersionExceedingMaxLength,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("Attempting to build package from 'InvalidId.nuspec'.\r\nThe special version part cannot exceed 20 characters.\r\n"));" is 164.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingFilesInNuspecOnlyPackagesSpecifiedFiles,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingEmptyFilesElementInNuspecPackagesNoFiles,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_AcceptEmptyDependenciesElement,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_AcceptEmptyFrameworkAssemblyElement,The length of the statement  "    <description>ANother Tool for Language Recognition' is a language tool that provides a framework for constructing recognizers' interpreters' compilers' and translators from grammatical descriptions containing actions in a variety of target languages.</description>" is 264.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingProjectFileAndHaveDependenciesSkipContentFromDependencies,The length of the statement  "            WriteProjectFile("Scripts/jQuery-1.6.4.js"' @"This is a file that is changed in this project. Therefore this file should be included in this package!");" is 152.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingProjectFileAndHaveDependenciesSkipContentFromDependencies,The length of the statement  "                          content: new[] { "foo.aspx"' "packages.config"' "Scripts/jquery-1.6.4.min.js"' "Scripts/jquery-1.6.4.js"' "Scripts/jquery-1.6.4-vsdoc.js" }'" is 140.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingProjectFileAndHaveDependenciesSkipContentFromDependencies,The length of the statement  "            int result = Program.Main(new[] { "install"' "packages.config"' "-OutputDirectory"' "packages"' "-source"' DefaultRepoUrl });" is 125.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,PackageCommand_SpecifyingProjectFileAndHaveDependenciesSkipContentFromDependencies,The length of the statement  "            var package = VerifyPackageContents(expectedPackage' new[] { @"content\foo.aspx"' @"content\Scripts\jquery-1.6.4.js"' @"lib\net40\ProjectWithDependenciesWithContent.dll" });" is 173.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,UpdateCommandThrowsWithNoArguments,The length of the statement  "            Assert.True(consoleOutput.ToString().Contains("No packages.config or solution file specified. Use the -self switch to update NuGet.exe."));" is 139.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,GetProjectContent,The length of the statement  "            string compileItemGroup = String.Join(Environment.NewLine' compile.Select(path => String.Format(@"<Compile Include=""{0}"" />"' path)));" is 136.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,GetProjectContent,The length of the statement  "            string contentItemGroup = String.Join(Environment.NewLine' content.Select(path => String.Format(@"<Content Include=""{0}"" />"' path)));" is 136.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,GetProjectContent,The length of the statement  "            string linkItemGroup = String.Join(Environment.NewLine' links.Select(link => String.Format(@"<Compile Include=""{0}""><Link>{1}</Link></Compile>"' link.Item1' link.Item2)));" is 173.
Long Statement,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,WriteAssemblyInfo,The length of the statement  "            WriteProjectFile(@"Properties\AssemblyInfo.cs"' GetAssemblyInfoContent(assemblyName' version' author' description' title));" is 123.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MissingFileThrowsAnException,The length of the statement  "            ExceptionAssert.Throws<FileNotFoundException>(() => new PackageBuilder(manifest' root)' @"File not found: 'style\main.css'.");" is 126.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MissingFileAtRootThrowsAnException,The length of the statement  "            ExceptionAssert.Throws<FileNotFoundException>(() => new PackageBuilder(manifest' root)' @"File not found: 'main.css'.");" is 120.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,AbsolutePathWithNoWildCards,The length of the statement  "            var package = new PackageBuilder(manifest' @"x:\nuget-files\some-dir"); //This basePath would never be used' so we're ok." is 121.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,AbsolutePathWithFileRename,The length of the statement  "            var package = new PackageBuilder(manifest' @"x:\nuget-files\some-dir"); //This basePath would never be used' so we're ok." is 121.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,AbsolutePathWithWildcard,The length of the statement  "            var package = new PackageBuilder(manifest' @"x:\nuget-files\some-dir"); //This basePath would never be used' so we're ok." is 121.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,PackageBuilderThrowsIfAnyOneItemOfSemiColonSeparatedListIsNotFound,The length of the statement  "            ExceptionAssert.Throws<FileNotFoundException>(() => new PackageBuilder(manifest' root)' @"File not found: 'bin\release\bar.dll'.");" is 131.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,AbsolutePathWithRecursiveWildcard,The length of the statement  "            var package = new PackageBuilder(manifest' @"x:\nuget-files\some-dir"); //This basePath would never be used' so we're ok." is 121.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,GetExclusionManifest,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,GetExclusionManifest,The length of the statement  "  </metadata><files><file src=""{0}"" target=""{1}"" exclude=""{2}"" /></files></package>"' search' target' exclusion).AsStream();" is 128.
Long Statement,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,GetManifest,The length of the statement  "    <description>Implementation of XML ASP.NET Providers (XmlRoleProvider' XmlMembershipProvider and XmlProfileProvider).</description>" is 131.
Empty Catch Block,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,DeleteDir,The method has an empty catch block.
Empty Catch Block,NuGet.Test.Integration.NuGetCommandLine,NuGetCommandLineTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\NuGetCommandLine\NuGetCommandLineTest.cs,DeleteDir,The method has an empty catch block.
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,SetOfDllsFromBinTest,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.Count' 2);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,DllFromDifferenFrameworkTest,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.Count' 2);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ContentFilesTest,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.Count' 2);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ContentFilesWithDirectoryStructureTest,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.Count' 3);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ContentFilesWithDirectoryStructureTest,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.ElementAt(2).Path' @"content\css\mobile\wp7\style.css");
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,DirectoryStructureWithRepeatingTerms,The following statement contains a magic number: Assert.Equal(packageBuilder.Files.Count' 2);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,RelativePathWithWildCards,The following statement contains a magic number: Assert.Equal(2' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MultipleFileSourcesCanBeSpecifiedUsingSemiColonSeparator,The following statement contains a magic number: Assert.Equal(3' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MultipleFileSourcesCanBeSpecifiedUsingSemiColonSeparator,The following statement contains a magic number: Assert.Equal(package.Files.ElementAt(2).Path' @"lib\test.dll");
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,AbsolutePathWithRecursiveWildcard,The following statement contains a magic number: Assert.Equal(2' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,WildCardInMiddleOfPathAndExtension,The following statement contains a magic number: Assert.Equal(2' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,RecursiveSearchForPathNotInBaseDirectory,The following statement contains a magic number: Assert.Equal(2' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,RelativePathWithRecursiveWildCard,The following statement contains a magic number: Assert.Equal(2' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithSimpleExtensions,The following statement contains a magic number: Assert.Equal(6' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithSimpleExtensions,The following statement contains a magic number: Assert.Equal("MyProject.csproj"' package.Files[2].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithSimpleExtensions,The following statement contains a magic number: Assert.Equal(@"bin\debug\MyProject.dll"' package.Files[3].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithSimpleExtensions,The following statement contains a magic number: Assert.Equal(@"bin\release\MyProject.dll"' package.Files[4].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithSimpleExtensions,The following statement contains a magic number: Assert.Equal(@"Properties\AssemblyInfo.cs"' package.Files[5].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithPath,The following statement contains a magic number: Assert.Equal(4' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithPath,The following statement contains a magic number: Assert.Equal("MyProject.csproj"' package.Files[2].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,ExclusionWithPath,The following statement contains a magic number: Assert.Equal(@"Properties\AssemblyInfo.cs"' package.Files[3].Path);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MultipleExclusionsForSearchPath,The following statement contains a magic number: Assert.Equal(3' package.Files.Count);
Magic Number,NuGet.Test.Integration.PathResolver,PathResolverTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\Test.Integration\Core\PathResolverTest.cs,MultipleExclusionsForSearchPath,The following statement contains a magic number: Assert.Equal(@"bin\release\MyProject.dll"' package.Files[2].Path);
