Design smell,Namespace,Class,File,Cause
Unnecessary Abstraction,NuGet,NuGetConstants,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\Common\NuGetConstants.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' DefaultFeedUrl' V1FeedUrl' DefaultGalleryServerUrl' DefaultSymbolServerUrl' ReadmeFileName
Imperative Abstraction,NuGet.Commands,SourcesCommand,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\SourcesCommand.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ExecuteCommand
Imperative Abstraction,NuGet.Commands,SpecCommand,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\SpecCommand.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ExecuteCommand
Feature Envy,NuGet.Commands,HelpCommand,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\HelpCommand.cs,The tool detected the smell because a method in this type accesses members from another type more than the members from its own type. The method causing this smell is: ViewMarkdownHelp which is more interested in members of the type: ICommandManager
Imperative Abstraction,NuGet.Commands,PushCommand,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\PushCommand.cs,The tool detected the smell in this class because it looks like that an operation is turned into a class. This class contains only the following public method: ExecuteCommand
Unnecessary Abstraction,NuGet.Commands,ProjectPair,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\UpdateCommand.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: PackagesConfigPath' Project
Unnecessary Abstraction,NuGet.Common,CommandLineConstants,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Common\CommandLineConstants.cs,The tool detected the smell in this class because the class contains only a few data members without any method implementation' that indicates that the abstraction might not be required. Following fields and properties are declared in this class: ' UserAgent' NuGetDocs' NuGetDocsCommandLineReference
Unutilized Abstraction,NuGet.Common,PackageSourceProviderExtensions,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Common\PackageSourceProviderExtensions.cs,The tool detected the smell in this class because this class is potentially unused.   (Please ignore the smell if the reported class is auto-generated and/or used to serve a specific known purpose.)
Broken Modularization,NuGet,NuGetConstants,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\Common\NuGetConstants.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ' DefaultFeedUrl' V1FeedUrl' DefaultGalleryServerUrl' DefaultSymbolServerUrl' ReadmeFileName
Insufficient Modularization,NuGet.Commands,ProjectFactory,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\ProjectFactory.cs,The tool detected the smell in this class because the class contains large number of methods. Total methods in the class: 30 methods
Broken Modularization,Microsoft.Internal.Web.Utils,CommonResources,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\Common\CommonResources.cs,The tool detected the smell in this class because it contains only data members without any method implementation. Following fields and properties are declared in this class: ResourceManager' Culture' Argument_Cannot_Be_Null_Or_Empty' Argument_Must_Be_Between' Argument_Must_Be_Enum_Member' Argument_Must_Be_GreaterThan' Argument_Must_Be_GreaterThanOrEqualTo' Argument_Must_Be_LessThan' Argument_Must_Be_LessThanOrEqualTo' Argument_Must_Be_Null_Or_Non_Empty' resourceMan' resourceCulture
Cyclically-dependent Modularization,NuGet.Commands,Command,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\Command.cs,The tool detected the smell in this class because this class participates in a cyclic dependency. The participating classes in the cycle are: NuGet.Commands.Command' NuGet.Commands.HelpCommand
Wide Hierarchy,NuGet.Commands,Command,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\Command.cs,The tool detected the smell in this class because the number of children for the class is large. This class has following sub-classes: NuGet.Commands.InstallCommand' NuGet.Commands.SetApiKeyCommand' NuGet.Commands.SourcesCommand' NuGet.Commands.SpecCommand' NuGet.Commands.PublishCommand' NuGet.Commands.DeleteCommand' NuGet.Commands.HelpCommand' NuGet.Commands.ListCommand' NuGet.Commands.PackCommand' NuGet.Commands.PushCommand' NuGet.Commands.UpdateCommand' NuGet.Test.NuGetCommandLine.MockCommandWithMultiple' NuGet.Test.NuGetCommandLine.CommandWithBadName' NuGet.Test.NuGetCommandLine.MockWithoutCommandAttributesCommand' NuGet.Test.NuGetCommandLine.MockCommandWithCommandAttributes
Cyclic Hierarchy,NuGet.Commands,Command,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Commands\Command.cs,The tool detected the smell in this class because the class depends on one of its subclasses (creating cycle in the hierarchy). The class is dependent on the following subclass: HelpCommand
Multipath Hierarchy,NuGet.Common,MSBuildProjectSystem,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\src\CommandLine\Common\MSBuildProjectSystem.cs,The tool detected the smell in this class because the class inherits another class directly as well as indirectly. The redundant inherited supertype is: IProjectSystem
