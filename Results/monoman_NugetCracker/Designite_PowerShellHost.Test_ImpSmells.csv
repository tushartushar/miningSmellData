Implementation smell,Namespace,Class,File,Method,Description
Long Statement,PowerShellHost.Test,CommandParserTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\CommandParserTest.cs,CommandWithQuotedArgument,The length of the statement  "            var command = CommandParser.Parse("Install-Package \"This quoted value\" -Value \"Another `n one\" -Name \"John`\"s value\"");" is 126.
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,SimplePostKeyWaitKey,The following statement contains a magic number: bool cancelWasQueued = InteractiveHelper.TryQueueCancelWaitKey(dispatcher' timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfaceReadkey,The following statement contains a magic number: var postedKey = VsKeyInfo.Create(Key.Z' 'z'' 90);
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfaceReadkey,The following statement contains a magic number: var cancelWasQueued = InteractiveHelper.TryQueueCancelWaitKey(dispatcher' TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfaceReadkey,The following statement contains a magic number: Assert.Equal(keyInfo.VirtualKeyCode' 90);
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfaceReadLine,The following statement contains a magic number: InteractiveHelper.PostKeys(dispatcher' "nuget"' appendCarriageReturn: true' timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfaceReadLineAsSecureString,The following statement contains a magic number: InteractiveHelper.PostKeys(dispatcher' "nuget"' appendCarriageReturn: true' timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForChoice,The following statement contains a magic number: InteractiveHelper.PostKeys(dispatcher' "n"' appendCarriageReturn: true'                 timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForConfirm,The following statement contains a magic number: InteractiveHelper.PostKeys(dispatcher' "y"' appendCarriageReturn: true'                     timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForConfirm,The following statement contains a magic number: InteractiveHelper.PostKeys(dispatcher' "n"' appendCarriageReturn: true'                     timeout: TimeSpan.FromSeconds(5));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForMissingMandatoryParameters,The following statement contains a magic number: Assert.Equal(result["Count"]' 42);
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForMissingMandatoryParameters,The following statement contains a magic number: Assert.True(                     ((int[])result["Numbers"])                         .SequenceEqual(new[] { 1' 2' 3 }));
Magic Number,PowerShellHost.Test,KeyProcessingTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\KeyProcessingTest.cs,HostUserInterfacePromptForMissingMandatoryParameters,The following statement contains a magic number: Assert.True(                     ((int[])result["Numbers"])                         .SequenceEqual(new[] { 1' 2' 3 }));
Magic Number,PowerShellHost.Test,CommandParserTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\CommandParserTest.cs,CommandWithSingleQuotedArgument,The following statement contains a magic number: Assert.Equal(3' command.Arguments.Count);
Magic Number,PowerShellHost.Test,CommandParserTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\CommandParserTest.cs,CommandWithQuotedArgument,The following statement contains a magic number: Assert.Equal(3' command.Arguments.Count);
Magic Number,PowerShellHost.Test,CommandParserTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\CommandParserTest.cs,CommandWithNoArgumentValueAndValidArgumentValue,The following statement contains a magic number: Assert.Equal(2' command.Arguments.Count);
Magic Number,PowerShellHost.Test,CommandParserTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\PowerShellHost.Test\CommandParserTest.cs,MultipleCommandsOnlyParsesLastCommand,The following statement contains a magic number: Assert.Equal(2' command.Arguments.Count);
