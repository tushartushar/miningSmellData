Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CreateInstance,The method has 6 parameters. Parameters: dte' solutionManager' fileSystemProvider' packageRepositoryFactory' waitDialogFactory' packageManagerFactory
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesPrimaryRepositoryAsdependencyResolverIfUseFallbackIsFalse,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' mockFileSystemProvider.Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 272.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesFallbackRepositoryyAsdependencyResolverIfUseFallbackIsTrue,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' mockFileSystemProvider.Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 272.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,ResolveDependencyReturnsPackagesFromAggregateSources,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 281.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,ResolveDependencyReturnsPackagesFromAggregateSources,The length of the statement  "            IPackage dependency = dependencyResolver.ResolveDependency(new PackageDependency("A"' new VersionSpec { MinVersion = new SemanticVersion("1.0.0.0") })' null' allowPrereleaseVersions: false' preferListedPackages: false);" is 219.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryReturnsCurrentIfCurrentIsAggregateRepository,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 281.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryUsesResolvedSourceNameWhenEnsuringRepositoryIsNotAlreadyListedInAggregate,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 281.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryDoesNotThrowWhenIteratingOverFailingRepositories,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 281.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryIncludesRepositoryOnceInAggregateDependencyResolver,The length of the statement  "            var packageManagerFactory = new VsPackageManagerFactory(new Mock<ISolutionManager>().Object' mockRepositoryFactory.Object' mockSourceProvider.Object' new Mock<IFileSystemProvider>().Object' new Mock<IRepositorySettings>().Object' null' new Mock<VsPackageInstallerEvents>().Object);" is 281.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryDoesNotQueryDependencyResolverIfPrimaryRepositoryContainsRequiredDependency,The length of the statement  "                              .Setup(c => c.ResolveDependency(It.IsAny<PackageDependency>()' It.IsAny<IPackageConstraintProvider>()' false' It.IsAny<bool>()))" is 128.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "                              .Setup(c => c.ResolveDependency(It.IsAny<PackageDependency>()' It.IsAny<IPackageConstraintProvider>()' false' It.IsAny<bool>()))" is 128.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "            var aggregateRepository = new AggregateRepository(new[] { dependencyResolver.Object }) { IgnoreFailingRepositories = true };" is 124.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryRetursNullIfPrimaryRepositoryDoesNotHaveDependencyAndDependencyResolverThrows,The length of the statement  "            var resolvedPackage = fallbackRepository.ResolveDependency(new PackageDependency("M2"' new VersionSpec { MinVersion = new SemanticVersion("1.0.1") })' false' false);" is 165.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryUsesDependencyResolverIfPrimaryRepositoryDoesNotHaveRequiredDependency,The length of the statement  "            IPackage packageA10 = PackageUtility.CreatePackage("M1"' "1.0")' packageA11 = PackageUtility.CreatePackage("M2"' "1.1");" is 120.
Long Statement,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,FallbackRepositoryUsesDependencyResolverIfPrimaryRepositoryDoesNotHaveRequiredDependency,The length of the statement  "            var resolvedPackage = fallbackRepository.ResolveDependency(new PackageDependency("M2"' new VersionSpec { MinVersion = new SemanticVersion("1.0.1") })' false' false);" is 165.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsFalseIfNuGetFolderDoesNotExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object);" is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsFalseIfNuGetTargetsDoesNotExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object);" is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,IsCurrentSolutionEnabledReturnsTrueIfFilesAndFoldersExist,The length of the statement  "            var packageRestore = CreateInstance(solutionManager: solutionManager.Object' fileSystemProvider: fileSystemProvider.Object);" is 124.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingEnableCurrentSolutionThrowsIfSolutionIsNotOpen,The length of the statement  "            Exception exception = Assert.Throws<InvalidOperationException>(() => packageRestore.EnableCurrentSolutionForRestore(quietMode: true));" is 134.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithTrueValue,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object);" is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithTrueValueIfPackagesFolderIsMissing,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object);" is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingCheckForMissingPackagesRaisesThePackagesMissingStatusChangedEventWithFalseValue,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object);" is 128.
Long Statement,NuGet.VisualStudio.Test,PackageRestoreManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PackageRestoreManagerTest.cs,CallingRestoreMissingPackagesMethodInstallMissingPackages,The length of the statement  "            var packageReferenceRepository = new PackageReferenceRepository(projectFileSystem' new Mock<ISharedPackageRepository>().Object);" is 128.
Long Statement,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreDisabled,The length of the statement  "            var sources = new List<PackageSource> { new PackageSource("Source1")' new PackageSource("Source2"' "Source2"' isEnabled: false) };" is 130.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RepositorySettingsTest.cs,CtorWithNullSolutionManagerThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new RepositorySettings(null' new Mock<IFileSystemProvider>().Object)' "solutionManager");" is 125.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathThrowsIfSolutionDirectoryIsNull,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => { string s = repositorySettings.RepositoryPath; }' "Unable to locate the solution directory. Please ensure that the solution has been saved.");" is 199.
Long Statement,NuGet.VisualStudio.Test,RepositorySettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RepositorySettingsTest.cs,RepositoryPathMalformedConfigThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => { string s = repositorySettings.RepositoryPath; }' @"Error reading 'bar\nuget.config'.");" is 145.
Long Statement,NuGet.VisualStudio.Test,UriHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\UriHelperTest.cs,TestInvalidSources,The length of the statement  "            string[] testValues = new[] { null' ""' "link"' "c:\\dir"' "\\username\folder"' "127.0.0.1"' "localhost"' "crash;\\_andBurn"' "ftp://bing.com"' "gopher://kill.it"' "http://" };" is 176.
Long Statement,NuGet.VisualStudio.Test,VsFileSystemProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsFileSystemProviderTest.cs,VsFileSystemProviderThrowsIfComponentModelIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsFileSystemProvider(dte: new Mock<DTE>().Object' componentModel: null' settings: null)' "componentModel");" is 147.
Long Statement,NuGet.VisualStudio.Test,VsFileSystemProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsFileSystemProviderTest.cs,VsFileSystemProviderThrowsIfSettingsIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsFileSystemProvider(dte: new Mock<DTE>().Object' componentModel: new Mock<IComponentModel>().Object' settings: null)' "settings");" is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository' new Mock<IRecentPackageRepository>().Object' " is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false' false)).Returns(packageManager.Object);" is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" });" is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' packageRepositoryFactory.Object);" is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Init' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<ILogger>())' Times.Once());" is 160.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageConvertsVersionToSemanticVersion,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Install' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<ILogger>())' Times.Once());" is 163.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository' new Mock<IRecentPackageRepository>().Object' " is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false' false)).Returns(packageManager.Object);" is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" });" is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object);" is 138.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Init' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<ILogger>())' Times.Once());" is 160.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageRunsInitAndInstallScripts,The length of the statement  "            scriptExecutor.Verify(e => e.Execute(It.IsAny<string>()' PowerShellScripts.Install' It.IsAny<IPackage>()' It.IsAny<Project>()' It.IsAny<ILogger>())' Times.Once());" is 163.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository' new Mock<IRecentPackageRepository>().Object' " is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false' false)).Returns(packageManager.Object);" is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' true' It.IsAny<bool>())).Throws(new Exception("B"));" is 140.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" });" is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object);" is 138.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotUseFallbackRepository,The length of the statement  "            packageManagerFactory.Verify(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' true' It.IsAny<bool>())' Times.Never());" is 129.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository' new Mock<IRecentPackageRepository>().Object' " is 171.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' false' false)).Returns(packageManager.Object);" is 134.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' true' It.IsAny<bool>())).Throws(new Exception("B"));" is 140.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            var package = NuGet.Test.PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' tools: new[] { "init.ps1"' "install.ps1" });" is 131.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            var installer = new VsPackageInstaller(packageManagerFactory.Object' scriptExecutor.Object' new Mock<IPackageRepositoryFactory>().Object);" is 138.
Long Statement,NuGet.VisualStudio.Test,VsPackageInstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsInstallerTest.cs,InstallPackageDoesNotAddToRecentRepository,The length of the statement  "            packageManagerFactory.Verify(m => m.CreatePackageManager(It.IsAny<IPackageRepository>()' It.IsAny<bool>()' true)' Times.Never());" is 129.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,MigrateActivePackageSourceToV2,The length of the statement  "            AssertPackageSource(activePackageSource' "NuGet official package source"' "https://go.microsoft.com/fwlink/?LinkID=230477");" is 124.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SetActivePackageSourcePersistsItToSettingsManager,The length of the statement  "            packageSourceProvider.SavePackageSources(new[] { new PackageSource("source"' "name")' new PackageSource("source1"' "name1") });" is 127.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SetActivePackageSourcePersistsItToSettingsManager,The length of the statement  "            var invalidActiveValue = userSettingsManager.GetValue(VsPackageSourceProvider.ActivePackageSourceSectionName' "invalidName");" is 125.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,SettingActivePackageSourceToNonExistantSourceThrows,The length of the statement  "            ExceptionAssert.ThrowsArgumentException(() => provider.ActivePackageSource = new PackageSource("a"' "a")' "value"' "The package source does not belong to the collection of available sources.");" is 193.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,CtorNullSourceProviderOrRepositoryFactoryThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsPackageSourceRepository(new Mock<IPackageRepositoryFactory>().Object' null)' "packageSourceProvider");" is 144.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,CtorNullSourceProviderOrRepositoryFactoryThrows,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsPackageSourceRepository(null' new Mock<IVsPackageSourceProvider>().Object)' "repositoryFactory");" is 139.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,NullActivePackageSourceThrowsForAddPackageAndRemovePackage,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => repository.AddPackage(null)' "Unable to retrieve package list because no source was specified.");" is 153.
Long Statement,NuGet.VisualStudio.Test,VsPackageSourceRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceRepositoryTest.cs,NullActivePackageSourceThrowsForAddPackageAndRemovePackage,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => repository.RemovePackage(null)' "Unable to retrieve package list because no source was specified.");" is 156.
Long Statement,NuGet.VisualStudio.Test,TestUtils,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\TestUtils.cs,GetSolutionManagerWithProjects,The length of the statement  "            return GetSolutionManager(isSolutionOpen: true' defaultProjectName: null' projects: projects.Select(p => GetProject(p)));" is 121.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingsThrowsIfDefaultSettingsIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new VsSettings(solutionManager: new Mock<ISolutionManager>().Object' defaultSettings: null' fileSystemProvider: null)' "defaultSettings");" is 174.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingsThrowsIfFileSystemProviderIsNull,The length of the statement  "                () => new VsSettings(solutionManager: new Mock<ISolutionManager>().Object' defaultSettings: NullSettings.Instance' fileSystemProvider: null)' "fileSystemProvider");" is 164.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesNullSettingsIfSolutionIsUnavailable,The length of the statement  "            fileSystemProvider.Setup(f => f.GetFileSystem(It.IsAny<string>())).Throws(new Exception("This method should not be called"));" is 125.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesNullSettingsIfSolutionDirectoryDoesNotExist,The length of the statement  "            fileSystemProvider.Setup(f => f.GetFileSystem(It.IsAny<string>())).Throws(new Exception("This method should not be called"));" is 125.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesSettingsFileFromSolutionRootIfExists,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""bar"" /></solution></configuration>");" is 149.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingUsesValuesFromDefaultSettingsForNonSolutionProperties,The length of the statement  "            fileSystem.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""bar"" /></solution></configuration>");" is 149.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingSwitchesSettingsIfSolutionChanges,The length of the statement  "            fileSystemA.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""barA"" /></solution></configuration>");" is 151.
Long Statement,NuGet.VisualStudio.Test,VsSettingsTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsSettingsTest.cs,VsSettingSwitchesSettingsIfSolutionChanges,The length of the statement  "            fileSystemB.AddFile("nuget.config"' @"<?xml version=""1.0"" ?><configuration><solution><add key=""foo"" value=""barB"" /></solution></configuration>");" is 151.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_WorksWithExtensionRepository,The length of the statement  "            var result = wizard.GetConfigurationFromXmlDocument(document' @"C:\Some\file.vstemplate"' vsExtensionManager: extensionManagerMock.Object);" is 139.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowErrorForMissingRepositoryIdAttributeWhenInExtensionRepositoryMode,The length of the statement  "                "The project template is configured to use an Extension-specific package repository but the Extension ID has not been specified. Use the \"repositoryId\" attribute to specify the Extension ID."'" is 194.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,GetConfigurationFromXmlDocument_ShowsErrorForInvalidCacheAttributeValue,The length of the statement  "                "The \"repository\" attribute of the package element has an invalid value: '__invalid__'. Valid values are: 'template' or 'extension'."'" is 136.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,InvalidPackageElementHelper,The length of the statement  "            Assert.Equal("The project template lists one or more packages with missing' empty' or invalid values for the \"id\" or \"version\" attributes. Both attributes are required and must have valid values."' wizard.ErrorMessages.Single());" is 233.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForProject_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyPackage"' new SemanticVersion(1' 0' 0' 0)' true));" is 121.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForProject_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 0' 0)' true));" is 126.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyPackage"' new SemanticVersion(1' 0' 0' 0)' true));" is 121.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 0' 0)' true));" is 126.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyPackage"' new SemanticVersion(1' 0' 0' "ctp-1")' true));" is 127.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 3' 4)' true));" is 126.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "            installerMock.Setup(i => i.InstallPackage(@"C:\Some"' mockProject' "MyPackage"' new SemanticVersion(1' 0' 0' 0)' true))." is 120.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "            installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyPackage"' new SemanticVersion(1' 0' 0' 0)' true));" is 121.
Long Statement,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The length of the statement  "                "Could not add all required packages to the project. The following packages failed to install from 'C:\\Some':\r\n\r\nMyPackage.1.0"'" is 133.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository);" is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' package' project' NullLogger.Instance)).Returns(true).Verifiable();" is 148.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new MockFileSystem()' localRepository.Object'" is 143.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(activeRepository' false' false)).Returns(packageManager.Object);" is 120.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageExecutesUninstallScript,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object);" is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository);" is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' NullLogger.Instance)).Returns(true).Verifiable();" is 149.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new MockFileSystem()' localRepository.Object'" is 143.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(activeRepository' false' false)).Returns(packageManager.Object);" is 120.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotRemoveDependenciesIfFlagIsFalse,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object);" is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository);" is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' NullLogger.Instance)).Returns(true).Verifiable();" is 149.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\B.1.0"' "uninstall.ps1"' packageB' project' NullLogger.Instance)).Returns(true).Verifiable();" is 149.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new MockFileSystem()' localRepository.Object'" is 143.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(activeRepository' false' false)).Returns(packageManager.Object);" is 120.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageRemovesDependenciesIfFlagIsTrue,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object);" is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var projectManager = new ProjectManager(activeRepository' new DefaultPackagePathResolver(new MockFileSystem())' projectSystem' projectRepository);" is 146.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            scriptExecutor.Setup(s => s.Execute(@"C:\MockFileSystem\A.1.0"' "uninstall.ps1"' packageA' project' NullLogger.Instance)).Returns(true).Verifiable();" is 149.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var packageManager = new Mock<VsPackageManager>(TestUtils.GetSolutionManager()' activeRepository' new MockFileSystem()' localRepository.Object'" is 143.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            packageManagerFactory.Setup(m => m.CreatePackageManager(activeRepository' false' false)).Returns(packageManager.Object);" is 120.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            var packageUninstaller = new VsPackageUninstaller(packageManagerFactory.Object' activeRepository' scriptExecutor.Object);" is 121.
Long Statement,NuGet.VisualStudio.Test,VsUninstallerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsUninstallerTest.cs,UninstallPackageDoesNotForceRemovesPackages,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageUninstaller.UninstallPackage(project' "B"' removeDependencies: true)'" is 132.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            var projectManager = new ProjectManager(localRepository' pathResolver' new MockProjectSystem()' new MockPackageRepository());" is 125.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIntoProjectAndPackageManager,The length of the statement  "            packageManager.InstallPackage(projectManager' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 169.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var projectManager = new ProjectManager(localRepository' pathResolver' new MockProjectSystem()' new MockPackageRepository());" is 125.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            var package = PackageUtility.CreatePackage("foo"' "1.0"' new[] { "hello" }' dependencies: new PackageDependency[] { new PackageDependency("bar") });" is 148.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageWithOperationsExecuteAllOperations,The length of the statement  "            packageManager.InstallPackage(projectManager' package' operations' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 155.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackgeWithNullProjectManagerOnlyInstallsIntoPackageManager,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackgeWithNullProjectManagerOnlyInstallsIntoPackageManager,The length of the statement  "            packageManager.InstallPackage((IProjectManager)null' "foo"' new SemanticVersion("1.0")' ignoreDependencies: false' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 176.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' new MockPackageRepository());" is 132.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageThrowsIfPackageIsReferenced,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UninstallPackage(projectManager' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance)' @"Unable to find package 'foo' in 'C:\MockFileSystem\'.");" is 261.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageWithNoProjectManagerThrows,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallProjectLevelPackageWithNoProjectManagerThrows,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.UninstallPackage(null' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance)' "No project was specified.");" is 222.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UninstallPackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            packageManager.UninstallPackage(null' "foo"' version: null' forceRemove: false' removeDependencies: false' logger: NullLogger.Instance);" is 136.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository);" is 122.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageRemovesPackageIfPackageIsNotReferenced,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository);" is 122.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageDoesNotRemovesPackageIfPackageIsReferenced,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) });" is 162.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var A20 = PackageUtility.CreatePackage("A"' "2.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("2.0")) });" is 162.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var F10 = PackageUtility.CreatePackage("F"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("G"' VersionUtility.ParseVersionSpec("1.0")) });" is 162.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var G10 = PackageUtility.CreatePackage("G"' "1.0"' new[] { "hello" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) });" is 162.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            var projectManager = new ProjectManager(localRepository.Object' pathResolver' new MockProjectSystem()' projectRepository);" is 122.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSharedDependency,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' assemblyReferences: new[] { "A1.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) });" is 183.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var A20 = PackageUtility.CreatePackage("A"' "2.0"' assemblyReferences: new[] { "A2.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) });" is 183.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithSameDependency,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            var A10 = PackageUtility.CreatePackage("A"' "1.0"' assemblyReferences: new[] { "A1.dll" }' dependencies: new[] { new PackageDependency("B"' VersionUtility.ParseVersionSpec("1.0")) });" is 183.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageNewVersionOfPackageHasLessDependencies,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithMultipleSharedDependencies,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' fileSystem' localRepository.Object' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 218.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithMultipleSharedDependencies,The length of the statement  "            packageManager.UpdatePackage(projectManager' "A"' version: null' updateDependencies: true' allowPrereleaseVersions: false' logger: NullLogger.Instance);" is 152.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithNoProjectsInstallsAtSolutionLevel,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageWithNoProjectsInstallsAtSolutionLevel,The length of the statement  "            var package = PackageUtility.CreatePackage("foo"' "1.0"' dependencies: new PackageDependency[] { new PackageDependency("bar") });" is 129.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            var package2 = PackageUtility.CreatePackage("bar"' "2.0.0"' dependencies: new[] { new PackageDependency("qux"' versionSpec) });" is 127.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageDoesNotInstallPackageWithIndirectDependencyThatIsPrerelease,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => packageManager.InstallPackage(package' ignoreDependencies: false' allowPrereleaseVersions: false)'" is 154.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIndirectPrereleaseDependency,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,InstallPackageInstallsIndirectPrereleaseDependency,The length of the statement  "            var package2 = PackageUtility.CreatePackage("bar"' "2.0.0"' dependencies: new[] { new PackageDependency("qux"' versionSpec) });" is 127.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageUpdatesToTheHighestReleasePackageIfPrereleaseFlagIsSetToFalse,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Long Statement,NuGet.Test.VisualStudio,VsPackageManagerTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageManagerTest.cs,UpdatePackageUpdatesToTheHighestPackageIfPrereleaseFlagIsSetToTrue,The length of the statement  "            var packageManager = new VsPackageManager(TestUtils.GetSolutionManager()' sourceRepository' projectSystem' localRepository' new Mock<IRecentPackageRepository>().Object' new Mock<VsPackageInstallerEvents>().Object);" is 214.
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreatePackageManagerUsesFallbackRepositoryyAsdependencyResolverIfUseFallbackIsTrue,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryUsesResolvedSourceNameWhenEnsuringRepositoryIsNotAlreadyListedInAggregate,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryDoesNotThrowWhenIteratingOverFailingRepositories,The following statement contains a magic number: Assert.Equal(2' dependencyResolver.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,FallbackRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\FallbackRepositoryTest.cs,CreateFallbackRepositoryIncludesRepositoryOnceInAggregateDependencyResolver,The following statement contains a magic number: Assert.Equal(2' aggregateRepo.Repositories.Count());
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfInputIsNull,The following statement contains a magic number: ExceptionAssert.ThrowsArgNull(() => PathHelper.SmartTruncate(null' 10)' "path");
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' 5)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' 5)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' -4)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ThrowsIfMaxLengthIsLessThan6,The following statement contains a magic number: ExceptionAssert.ThrowsArgOutOfRange(() => PathHelper.SmartTruncate(""' -4)' "maxWidth"' 6' null' true);
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ReturnsTheSameStringIfItIsEqualToMaxWidthValue,The following statement contains a magic number: int maxWidth = 6;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,ReturnsTheSameStringIfItIsShorterThanMaxWidthValue,The following statement contains a magic number: int maxWidth = 30;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,TruncateIfInputIsLongerThanMaxWidth,The following statement contains a magic number: int maxWidth = 20;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,TruncateIfInputIsLongerThanMaxWidth2,The following statement contains a magic number: int maxWidth = 26;
Magic Number,NuGet.VisualStudio.Test,PathHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\PathHelperTest.cs,TruncateFolderNameIfItIsTooLong,The following statement contains a magic number: int maxWidth = 10;
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,TestGetPackagesReturnPackagesSortedByDateByDefault,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,TestGetPackagesReturnCorrectNumberOfPackagesAfterAddingPackage,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,TestGetPackagesReturnCorrectNumberOfPackagesAfterAddingPackageThatAlreadyExists,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,TestGetPackagesReturnCorrectNumberOfPackagesAfterAddingPackageThatAlreadyExists,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,GetPackagesReturnCorrectPackagesAfterAddingManyPackages,The following statement contains a magic number: Assert.Equal(3' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,GetPackagesReturnCorrectPackagesAfterAddingManyPackages,The following statement contains a magic number: AssertPackage(packages[2]' "B"' "2.0");
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryStoresLatestPackageVersions,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryUsesLatestVersionFromStore,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: var storePackages = new[] {                 new PersistencePackageMetadata("A"' "1.0"' new DateTime(2037' 01' 01))'                 new PersistencePackageMetadata("C"' "2.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("A"' "2.5"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("C"' "1.7"' new DateTime(2010' 01' 01))'                 new PersistencePackageMetadata("C"' "1.9"' new DateTime(2011' 02' 01))'             };
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: Assert.Equal(2' packages.Count);
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: Assert.Equal(packages[0].LastUsedDate' new DateTime(2037' 01' 01));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: Assert.Equal(packages[1].LastUsedDate' new DateTime(2011' 02' 01));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryCollapsesVersionsInStore,The following statement contains a magic number: Assert.Equal(packages[1].LastUsedDate' new DateTime(2011' 02' 01));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreRemoved,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreRemoved,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreRemoved,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreRemoved,The following statement contains a magic number: Assert.Equal(2' packages.Count());
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreDisabled,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreDisabled,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreDisabled,The following statement contains a magic number: settingsManager.SavePackageMetadata(new[] {                 new PersistencePackageMetadata("Pack1"' "1.0"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack2"' "1.1"' new DateTime(2011' 01' 01))'                 new PersistencePackageMetadata("Pack3"' "1.0"' new DateTime(2011' 01' 01))'             });
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var A = new PersistencePackageMetadata("A"' "1.0"' new DateTime(2010' 8' 12));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var A = new PersistencePackageMetadata("A"' "1.0"' new DateTime(2010' 8' 12));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var A = new PersistencePackageMetadata("A"' "1.0"' new DateTime(2010' 8' 12));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var B = new PersistencePackageMetadata("B"' "2.0"' new DateTime(2011' 3' 2));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var B = new PersistencePackageMetadata("B"' "2.0"' new DateTime(2011' 3' 2));
Magic Number,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,CreateRecentPackageRepository,The following statement contains a magic number: var B = new PersistencePackageMetadata("B"' "2.0"' new DateTime(2011' 3' 2));
Magic Number,NuGet.VisualStudio.Test,RecentPackageTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageTest.cs,TestTheFirstConstructor,The following statement contains a magic number: Assert.Equal(2' contents.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,AddSourceSetsPersistsSourcesToSettingsManager,The following statement contains a magic number: i < 10
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,AddSourceSetsPersistsSourcesToSettingsManager,The following statement contains a magic number: Assert.Equal(11' values.Count);
Magic Number,NuGet.VisualStudio.Test,VsPackageSourceProviderTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsPackageSourceProviderTest.cs,AddSourceSetsPersistsSourcesToSettingsManager,The following statement contains a magic number: i < 10
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForProject_InstallsPackages,The following statement contains a magic number: installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 0' 0)' true));
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPackages,The following statement contains a magic number: installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 0' 0)' true));
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The following statement contains a magic number: installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 3' 4)' true));
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The following statement contains a magic number: installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 3' 4)' true));
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_ForItem_InstallsPrereleasePackages,The following statement contains a magic number: installerMock.Verify(i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 3' 4)' true));
Magic Number,NuGet.VisualStudio.Test,VsTemplateWizardTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\VsTemplateWizardTest.cs,RunFinished_InstallsValidPackages_ReportsInstallationErrors,The following statement contains a magic number: installerMock.Verify(                 i => i.InstallPackage(@"C:\Some"' mockProject' "MyOtherPackage"' new SemanticVersion(2' 0' 0' 0)' true));
Missing Default,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreRemoved,The following switch statement is missing a default case: switch (c)                 {                     case "Source1":                         var repo1 = new MockPackageRepository();                         repo1.AddRange(new[] { PackageUtility.CreatePackage("Pack1") });                         return repo1;                     case "Source2":                         var repo2 = new MockPackageRepository();                         repo2.AddRange(new[] { PackageUtility.CreatePackage("Pack2"' "1.1") });                         return repo2;                 }
Missing Default,NuGet.VisualStudio.Test,RecentPackageRepositoryTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\VisualStudio.Test\RecentPackageRepositoryTest.cs,RecentPackageRepositoryDoesNotReturnPackagesFromSourcesThatAreDisabled,The following switch statement is missing a default case: switch (c)                 {                     case "Source1":                         var repo1 = new MockPackageRepository();                         repo1.AddRange(new[] { PackageUtility.CreatePackage("Pack1") });                         return repo1;                     case "Source2":                         var repo2 = new MockPackageRepository();                         repo2.AddRange(new[] { PackageUtility.CreatePackage("Pack2"' "1.1") });                         return repo2;                 }
