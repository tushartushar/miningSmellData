Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,NuGet.Test.NuGetCommandLine.Commands,TestInstallCommand,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,TestInstallCommand,The method has 5 parameters. Parameters: factory' sourceProvider' fileSystem' packageManager' machineCacheRepository
Long Statement,NuGet.Test,DefaultSpecValuesRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DefaultSpecValuesRuleTest.cs,RuleReturnsIssueIfProjectUrlIsSampleValue,The length of the statement  "            Assert.Equal("The value \"http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE\" for ProjectUrl is a sample value and should be removed."' result.First().Description);" is 158.
Long Statement,NuGet.Test,DefaultSpecValuesRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DefaultSpecValuesRuleTest.cs,RuleReturnsIssueIfIconUrlIsSampleValue,The length of the statement  "            Assert.Equal("The value \"http://ICON_URL_HERE_OR_DELETE_THIS_LINE\" for IconUrl is a sample value and should be removed."' result.First().Description);" is 152.
Long Statement,NuGet.Test,DefaultSpecValuesRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DefaultSpecValuesRuleTest.cs,RuleReturnsIssueIfLicenseUrlIsSampleValue,The length of the statement  "            Assert.Equal("The value \"http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE\" for LicenseUrl is a sample value and should be removed."' result.First().Description);" is 158.
Long Statement,NuGet.Test,DefaultSpecValuesRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DefaultSpecValuesRuleTest.cs,RuleReturnsIssueIfReleaseNotesIsSampleValue,The length of the statement  "            Assert.Equal("The value \"Summary of changes made in this release of the package.\" for ReleaseNotes is a sample value and should be removed."' result.First().Description);" is 172.
Long Statement,NuGet.Test,DefaultSpecValuesRuleTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DefaultSpecValuesRuleTest.cs,RuleReturnsIssueIfDescriptionIsSampleValue,The length of the statement  "            Assert.Equal("The value \"Package description\" for Description is a sample value and should be removed."' result.First().Description);" is 135.
Long Statement,NuGet.Test,DeleteCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DeleteCommandTest.cs,DeleteCommandUsesUpApiKeyIfSpecifiedAsAnUnnammedArgument,The length of the statement  "            var deleteCommand = new DeleteCommand(new Mock<IPackageSourceProvider>(MockBehavior.Strict).Object' new Mock<ISettings>(MockBehavior.Strict).Object);" is 149.
Long Statement,NuGet.Test,DeleteCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\DeleteCommandTest.cs,DeleteCommandPrefersApiKeySpecifiedAsANamedArgument,The length of the statement  "            var deleteCommand = new DeleteCommand(new Mock<IPackageSourceProvider>(MockBehavior.Strict).Object' new Mock<ISettings>(MockBehavior.Strict).Object)" is 148.
Long Statement,NuGet.Test,ProgramTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ProgramTest.cs,GetCommandLineSettingsReturnsSettingsFromLocalFileIfExists,The length of the statement  "            var fileContent = @"<?xml version=""1.0""?><configuration><fooSection><add key=""barValue"" value=""qux"" /></fooSection></configuration>";" is 139.
Long Statement,NuGet.Test,SetApiKeyCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SetApiKeyCommandTest.cs,SetApiKeyThrowsIfPackageSourceProviderIsNull,The length of the statement  "            ExceptionAssert.ThrowsArgNull(() => new SetApiKeyCommand(packageSourceProvider: null' settings: null)' "packageSourceProvider");" is 128.
Long Statement,NuGet.Test,SetApiKeyCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SetApiKeyCommandTest.cs,SetApiKeyCommandUsesSettingsFile,The length of the statement  "            settingsFile.Setup(c => c.SetValue("apikeys"' NuGetConstants.DefaultGalleryServerUrl' It.IsAny<string>())).Verifiable();" is 120.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsCommandLineExpectionWhenOptionUnknow,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsWhenOptionHasNoValue,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsIfUnableToConvertType,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsIfCommandHasNoProperties,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsIfCommandOptionIsAmbigious,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_ThrowsIfCommandOptionDoesNotExist,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => parser.ExtractOptions(ExpectedCommand' argsEnumerator)' expectedErrorMessage);" is 129.
Long Statement,NuGet.Test.NuGetCommandLine,CommandManagerTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandManagerTests.cs,GetCommand_ThrowsIfNoCommandFound,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => cm.GetCommand("NoCommandByThisName")' "Unknown command: 'NoCommandByThisName'");" is 131.
Long Statement,NuGet.Test.NuGetCommandLine,CommandManagerTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandManagerTests.cs,GetCommandOptions_ThrowsWhenOptionHasNoSetter,The length of the statement  "            string expectedErrorText = "[option] on 'NuGet.Test.NuGetCommandLine.CommandManagerTests+MockCommandBadOption.Message' is invalid without a setter.";" is 149.
Long Statement,NuGet.Test.NuGetCommandLine,CommandManagerTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandManagerTests.cs,RegisterCommand_ThrowsIfCommandNamesAreAmbigious,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => cm.GetCommand("f")' "Ambiguous command 'f'. Possible values: Foo FooBar.");" is 126.
Long Statement,NuGet.Test.NuGetCommandLine,ResourceHelperTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ResourceHelperTests.cs,GetLocalizedString_ThrowsIfNoPropteryByResourceName,The length of the statement  "                "The resource type 'NuGet.Test.NuGetCommandLine.ResourceHelperTests+MockResourceType' does not have an accessible static property named 'DoesntExist'.");" is 153.
Long Statement,NuGet.Test.NuGetCommandLine,ResourceHelperTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ResourceHelperTests.cs,GetLocalizedString_ThrowsIfPropertyIsNotOfStringType,The length of the statement  "                "The property 'NotValid' on resource type 'NuGet.Test.NuGetCommandLine.ResourceHelperTests+MockResourceType' is not a string type.");" is 133.
Long Statement,NuGet.Test.NuGetCommandLine,ResourceHelperTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ResourceHelperTests.cs,GetLocalizedString_ThrowsIfGetPropertyIsNotAvalible,The length of the statement  "                "The resource type 'NuGet.Test.NuGetCommandLine.ResourceHelperTests+MockResourceType' does not have an accessible get for the 'NoGet' property.");" is 146.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandLogsWarningsForFailingRepositoriesIfNoSourcesAreSpecified,The length of the statement  "            console.Setup(c => c.Log(It.IsAny<MessageLevel>()' It.IsAny<string>()' It.IsAny<object[]>())).Callback((MessageLevel a' string b' object[] c) =>" is 144.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandUpdatesPackageIfAlreadyPresentAndNotUsingSideBySide,The length of the statement  "            var packageManager = new PackageManager(GetFactory().CreateRepository("Some source")' new DefaultPackagePathResolver(fileSystem)' fileSystem' repository.Object);" is 161.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandUpdatesPackagesFromPackagesConfigIfAlreadyPresentAndNotUsingSideBySide,The length of the statement  "            var packageManager = new PackageManager(GetFactory().CreateRepository("Some source")' new DefaultPackagePathResolver(fileSystem)' fileSystem' repository.Object);" is 161.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandWorksIfExcludedVersionsAndPackageIsNotFoundInRemoteRepository,The length of the statement  "            var packageManager = new PackageManager(GetFactory().CreateRepository("Some source")' new DefaultPackagePathResolver(fileSystem)' fileSystem' repository.Object);" is 161.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandWorksIfExcludedVersionsAndPackageIsNotFoundInRemoteRepository,The length of the statement  "            ExceptionAssert.Throws<InvalidOperationException>(() => installCommand.ExecuteCommand()' "Unable to find package 'A'.");" is 120.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandFromConfigIgnoresDependencies,The length of the statement  "            var installCommand = new TestInstallCommand(repositoryFactory.Object' packageSourceProvider.Object' fileSystem' packageManager.Object);" is 135.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,GetFactory,The length of the statement  "            var repositoryA = new MockPackageRepository { PackageUtility.CreatePackage("Foo")' PackageUtility.CreatePackage("Baz"' "0.4")' PackageUtility.CreatePackage("Baz"' "0.7") };" is 172.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,GetFactory,The length of the statement  "            var repositoryB = new MockPackageRepository { PackageUtility.CreatePackage("Bar"' "0.5")' PackageUtility.CreatePackage("Baz"' "0.8.1-alpha") };" is 143.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,GetSourceProvider,The length of the statement  "            sources = sources ?? new[] { new PackageSource("Some source"' "Some source name")' new PackageSource("Some other source") };" is 124.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,GetInputFileThrowsIfNoFiles,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => PackCommand.GetInputFile(Enumerable.Empty<string>())' "Please specify a nuspec or project file to use.");" is 156.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,GetInputFileMultipleProjectFilesThrows,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => PackCommand.GetInputFile(new[] { "a.csproj"' "b.fsproj" })' "Please specify a nuspec or project file to use.");" is 162.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,GetInputFileMultipleNuSpecFilesThrows,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => PackCommand.GetInputFile(new[] { "a.nuspec"' "b.NuspeC" })' "Please specify a nuspec or project file to use.");" is 162.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandWarnsIfVersionContainsSpecialVersionButDoesNotConformToSemVer,The length of the statement  "            console.Setup(c => c.WriteWarning(It.IsAny<string>()' It.IsAny<object[]>())).Callback<string' object[]>((text' p) => builder.AppendFormat(text' p));" is 148.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandWarnsIfVersionContainsSpecialVersionButDoesNotConformToSemVer,The length of the statement  "            console.Setup(c => c.WriteWarning(It.IsAny<bool>()' It.IsAny<string>()' It.IsAny<object[]>())).Callback<bool' string' object[]>((b' text' p) => builder.AppendFormat(text' p));" is 175.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandWarnsIfVersionContainsSpecialVersionButDoesNotConformToSemVer,The length of the statement  "            Assert.Equal(@"1 issue(s) found with package 'A'.Issue: Use semantic versioningDescription: Version ""1.0-alpha"" does not follow semantic versioning guidelines.Solution: Update your nuspec file or use the AssemblyInformationalVersion assembly attribute to specify a semantic version as described at http://semver.org. "'" is 321.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,UpdateCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\UpdateCommandTest.cs,SelfUpdateNoCommandLinePackageOnServerThrows,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => updateCmd.SelfUpdate("c:\foo.exe"' new SemanticVersion("2.0"))' "Unable to find 'NuGet.CommandLine' package.");" is 162.
Long Statement,NuGet.Test.NuGetCommandLine.Commands,UpdateCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\UpdateCommandTest.cs,SelfUpdateNoNuGetExeInNuGetExePackageThrows,The length of the statement  "            ExceptionAssert.Throws<CommandLineException>(() => updateCmd.SelfUpdate("c:\foo.exe"' new SemanticVersion("2.0"))' "Invalid NuGet.CommandLine package. Unable to locate NuGet.exe within the package.");" is 200.
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptions_AddsArgumentsWhenItemsDoNotStartWithSlashOrDash,The following statement contains a magic number: Assert.Equal(2' actualCommand.Arguments.Count);
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionAddsValuesToListCommand,The following statement contains a magic number: Assert.Equal(command.ListProperty.Count' 3);
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionAddsValuesToListCommand,The following statement contains a magic number: Assert.Equal(command.ListProperty[2]' "Val3");
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionsSplitsValueBySemiColorForCollectionOption,The following statement contains a magic number: Assert.Equal(command.ListProperty.Count' 5);
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionsSplitsValueBySemiColorForCollectionOption,The following statement contains a magic number: Assert.Equal(command.ListProperty[2]' "Val3");
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionsSplitsValueBySemiColorForCollectionOption,The following statement contains a magic number: Assert.Equal(command.ListProperty[3]' "Val4");
Magic Number,NuGet.Test.NuGetCommandLine,CommandLinePaserTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandLinePaserTests.cs,ExtractOptionsSplitsValueBySemiColorForCollectionOption,The following statement contains a magic number: Assert.Equal(command.ListProperty[4]' "Val5");
Magic Number,NuGet.Test.NuGetCommandLine,CommandManagerTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\CommandManagerTests.cs,GetCommandOptions_ReturnsCorrectOpionAttributeAndPropertyInfo,The following statement contains a magic number: Assert.Equal(2' actual.Count);
Magic Number,NuGet.Test.NuGetCommandLine,TypeHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\TypeHelperTest.cs,ChangeType_ReturnsValueIfTypesMatch,The following statement contains a magic number: var actual = TypeHelper.ChangeType(3' typeof(int));
Magic Number,NuGet.Test.NuGetCommandLine,TypeHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\TypeHelperTest.cs,ChangeType_ReturnsValueIfTypesMatch,The following statement contains a magic number: Assert.Equal(3' actual);
Magic Number,NuGet.Test.NuGetCommandLine,TypeHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\TypeHelperTest.cs,ChangeType_ReturnsConvertedTypeWhenThereIsAConverterFromTheType,The following statement contains a magic number: Assert.Equal(3' actual);
Magic Number,NuGet.Test.NuGetCommandLine,TypeHelperTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\TypeHelperTest.cs,ChangeType_ReturnsConvertedTypeWhenThereIsAConverterFromTheValue,The following statement contains a magic number: var actual = TypeHelper.ChangeType(3' typeof(string));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandInstallsAllPackagesFromConfigFileIfSpecifiedAsArgument,The following statement contains a magic number: Assert.Equal(3' fileSystem.Paths.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,InstallCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\InstallCommandTest.cs,InstallCommandInstallsAllPackagesFromConfigFileIfSpecifiedAsArgument,The following statement contains a magic number: Assert.Equal(@"Baz.0.7\Baz.0.7.nupkg"' fileSystem.Paths.ElementAt(2).Key);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackagesUsesAggregateSourceIfNoSourceDefined,The following statement contains a magic number: Assert.Equal(6' packages.Count());
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackagesUsesAggregateSourceIfNoSourceDefined,The following statement contains a magic number: AssertPackage(new { Id = "DefaultUrlUsed"' Ver = "1.0" }' packages.ElementAt(2));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackagesUsesAggregateSourceIfNoSourceDefined,The following statement contains a magic number: AssertPackage(new { Id = "jQuery"' Ver = "1.50" }' packages.ElementAt(3));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackagesUsesAggregateSourceIfNoSourceDefined,The following statement contains a magic number: AssertPackage(new { Id = "NHibernate"' Ver = "1.2" }' packages.ElementAt(4));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackagesUsesAggregateSourceIfNoSourceDefined,The following statement contains a magic number: AssertPackage(new { Id = "SearchPackage"' Ver = "1.0" }' packages.ElementAt(5));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageCollapsesVersionsByDefault,The following statement contains a magic number: Assert.Equal(2' packages.Count());
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageReturnsAllVersionsIfAllVersionsFlagIsSet,The following statement contains a magic number: Assert.Equal(5' packages.Count());
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageReturnsAllVersionsIfAllVersionsFlagIsSet,The following statement contains a magic number: AssertPackage(new { Id = "NHibernate"' Ver = "1.0" }' packages.ElementAt(2));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageReturnsAllVersionsIfAllVersionsFlagIsSet,The following statement contains a magic number: AssertPackage(new { Id = "NHibernate"' Ver = "1.1" }' packages.ElementAt(3));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageReturnsAllVersionsIfAllVersionsFlagIsSet,The following statement contains a magic number: AssertPackage(new { Id = "NHibernate"' Ver = "1.2" }' packages.ElementAt(4));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageDoesNotShowUnlistedPackagesOrPackagesWithLegacyDates,The following statement contains a magic number: packageC.SetupGet(p => p.Published).Returns(new DateTime(1900' 1' 1' 0' 0' 0));
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageDoesNotShowUnlistedPackagesOrPackagesWithLegacyDates,The following statement contains a magic number: Assert.Equal(2' packages.Count());
Magic Number,NuGet.Test.NuGetCommandLine.Commands,ListCommandTests,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\ListCommandTests.cs,GetPackageUsesIsAbsoluteLatestVersionIfPrereleaseIfSpecifiedAndRespositoriesSupportsPrerelease,The following statement contains a magic number: Assert.Equal(2' packages.Count());
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandDefaultFiltersRemovesManifestAndPackageFiles,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandDefaultFiltersRemovesManifestAndPackageFiles,The following statement contains a magic number: Assert.Equal(files[2].Path' @"x:\packagefiles\test.nuspec.bkp");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,PackCommandDefaultFiltersRemovesRepoFiles,The following statement contains a magic number: Assert.Equal(2' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesUsesWildCardExtension,The following statement contains a magic number: Assert.Equal(2' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesExcludesWildCardPaths,The following statement contains a magic number: Assert.Equal(2' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesDoesNotExcludeDefaultFilesIfExcludeSpecialPathsIsDisabled,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesDoesNotExcludeDefaultFilesIfExcludeSpecialPathsIsDisabled,The following statement contains a magic number: Assert.Equal(files[2].Path' @"p:\some-file\should-not-be-removed\test.ext\sample3.jpg");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesPerformsCaseInsensitiveSearch,The following statement contains a magic number: Assert.Equal(2' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesDoesNotUseDefaultExcludesIfDisabled,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesDoesNotUseDefaultExcludesIfDisabled,The following statement contains a magic number: Assert.Equal(files[2].Path' @"p:\some-file\should-not-be-removed\.hgignore");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForLibPackageRemovesAllPDBs,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForLibPackageRemovesAllPDBs,The following statement contains a magic number: Assert.Equal(files[2].Path' @"tools\mycmd.exe");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForLibPackageRemovesAllFilesFromSrcTargetFolder,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForLibPackageRemovesAllFilesFromSrcTargetFolder,The following statement contains a magic number: Assert.Equal(files[2].Path' @"content\default.aspx.cs");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForSymbolPackageRemovesAllContentFiles,The following statement contains a magic number: Assert.Equal(3' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForSymbolPackageRemovesAllContentFiles,The following statement contains a magic number: Assert.Equal(files[2].Path' @"src\mylib.cs");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForSymbolPackageRemovesScripts,The following statement contains a magic number: Assert.Equal(4' files.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForSymbolPackageRemovesScripts,The following statement contains a magic number: Assert.Equal(files[2].Path' @"tools\mycmd.exe");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,PackCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\PackCommandTest.cs,ExcludeFilesForSymbolPackageRemovesScripts,The following statement contains a magic number: Assert.Equal(files[3].Path' @"src\mylib.cs");
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,EnableCommandEnableDisabledSourcesCorrectly,The following statement contains a magic number: Assert.Equal(3' packageSources.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,EnableCommandEnableDisabledSourcesCorrectly,The following statement contains a magic number: Assert.True(packageSources[2].IsEnabled);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,EnableCommandDoNotAffectPackageSourcesThatAreAlreadyEnabled,The following statement contains a magic number: Assert.Equal(3' packageSources.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,EnableCommandDoNotAffectPackageSourcesThatAreAlreadyEnabled,The following statement contains a magic number: Assert.True(packageSources[2].IsEnabled);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,DisableCommandDisablePackageSourcesCorrectly,The following statement contains a magic number: Assert.Equal(3' packageSources.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,DisableCommandDisablePackageSourcesCorrectly,The following statement contains a magic number: Assert.False(packageSources[2].IsEnabled);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,DisableCommandDoNotAffectPackageSourcesThatAreAlreadyDisabled,The following statement contains a magic number: Assert.Equal(3' packageSources.Count);
Magic Number,NuGet.Test.NuGetCommandLine.Commands,SourcesCommandTest,C:\research\architectureSmells\repos\monoman_NugetCracker\Nuget\test\CommandLine.Test\SourcesCommandTest.cs,DisableCommandDoNotAffectPackageSourcesThatAreAlreadyDisabled,The following statement contains a magic number: Assert.True(packageSources[2].IsEnabled);
