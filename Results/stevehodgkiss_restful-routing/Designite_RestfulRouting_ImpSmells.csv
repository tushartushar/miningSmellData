Implementation smell,Namespace,Class,File,Method,Description
Complex Method,RestfulRouting.Format,FormatResult,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\FormatResult.cs,GetResult,Cyclomatic complexity of the method is 8
Complex Method,RestfulRouting.RouteDebug,RouteDebugController,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\RouteDebug\RouteDebugController.cs,Index,Cyclomatic complexity of the method is 8
Long Parameter List,RestfulRouting,NamedRoute,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\NamedRoute.cs,NamedRoute,The method has 5 parameters. Parameters: name' url' defaults' constraints' routeHandler
Long Parameter List,RestfulRouting,NamedRoute,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\NamedRoute.cs,NamedRoute,The method has 6 parameters. Parameters: name' url' defaults' constraints' dataTokens' routeHandler
Long Parameter List,RestfulRouting,RestfulHttpMethodConstraint,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\RestfulHttpMethodConstraint.cs,Match,The method has 5 parameters. Parameters: httpContext' route' parameterName' values' routeDirection
Long Parameter List,RestfulRouting.Mappers,ResourcesMapperBase<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourcesMapperBase.cs,GenerateNamedRoute,The method has 5 parameters. Parameters: name' path' controller' action' httpMethods
Long Statement,RestfulRouting,Mapper,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\Mapper.cs,MoveNextMapper,The length of the statement  "@"The mappers were modified during enumeration. Did you accidentally use a parent mapper inside of a scoped mapping block? " is 122.
Long Statement,RestfulRouting.Format,AcceptList,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\AcceptList.cs,Parse,The length of the statement  "            return this.Where(x => _types.HasType(x.Type)).Select(acceptType => _types.Lookup(acceptType.Type)).Distinct().ToList();" is 120.
Long Statement,RestfulRouting.Format.ActionResultExposal,ActionResultExposer,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\ActionResultExposal\ActionResultExposer.cs,ExecuteAction,The length of the statement  "                string message = string.Format("Format you are trying to get is not registered. Requested format is {0}. Registered formats are {1}"' " is 133.
Long Statement,RestfulRouting.Mappers,ResourceMapper<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourceMapper.cs,MemberRoute,The length of the statement  "            return GenerateRoute(ResourcePath + "/" + resource' ControllerName' action' methods.Select(x => x.ToString().ToUpperInvariant()).ToArray()); " is 140.
Long Statement,RestfulRouting.Mappers,ResourcesMapper<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourcesMapper.cs,MemberRoute,The length of the statement  "            return GenerateRoute(ResourcePath + "/{" + IdParameterName + "}/" + resource' ControllerName' action' methods.Select(x => x.ToString().ToUpperInvariant()).ToArray()); " is 166.
Long Statement,RestfulRouting.Mappers,ResourcesMapper<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourcesMapper.cs,CollectionRoute,The length of the statement  "            return GenerateRoute(ResourcePath + "/" + resource' ControllerName' action' methods.Select(x => x.ToString().ToUpperInvariant()).ToArray()); " is 140.
Long Statement,RestfulRouting.Mappers,ResourcesMapper<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourcesMapper.cs,RegisterRoutes,The length of the statement  "            var routes = collections.Select(collection => CollectionRoute(collection.Key' collection.Value.Key' collection.Value.Value)).ToList(); " is 134.
Long Statement,RestfulRouting.Mappers,ResourcesMapperBase<TController>,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\ResourcesMapperBase.cs,WithFormatExtension,The length of the statement  "                var explicitRoute = new NamedRoute("formatted_" + namedRoute.Name' implicitRoute.Url + ".{format}"' implicitRoute.RouteHandler)" is 127.
Long Statement,RestfulRouting.Mappers,StandardMapper,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\StandardMapper.cs,Allow,The length of the statement  "            Route.Constraints["httpMethod"] = new RestfulHttpMethodConstraint(methods.Select(x => x.ToString().ToUpperInvariant()).ToArray()); " is 130.
Virtual Method Call from Constructor,RestfulRouting.Mappers,RoutePaths,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Mappers\RoutePaths.cs,RoutePaths,The constructor "RoutePaths" calls a virtual method "InitializeDefaults".
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: int nMod100 = n % 100;
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return number + "th";              }
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: if (nMod100 >= 11 && nMod100 <= 13)              {                  return number + "th";              }
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
Magic Number,RestfulRouting,Inflector,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Inflector.cs,Ordinalize,The following statement contains a magic number: switch (n % 10)              {                  case 1:                      return number + "st";                  case 2:                      return number + "nd";                  case 3:                      return number + "rd";                  default:                      return number + "th";              }
Magic Number,RestfulRouting.Format,AcceptList,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\AcceptList.cs,Add,The following statement contains a magic number: if (acceptType.Contains(";"))             {                 var typeAndQuality = acceptType.Split(';');                 type = typeAndQuality.First();                 var attributes = typeAndQuality.Last().Trim().Split('=');                 if (attributes.Length == 2)                 {                     float.TryParse(attributes.Last()' NumberStyles.Float' NumberFormatInfo.InvariantInfo'  out quality);                 }             }
Magic Number,RestfulRouting.Format,FormatResult,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\FormatResult.cs,GetResult,The following statement contains a magic number: if (routeValues["format"] == null)             {                 if (acceptTypes.Any())                 {                     format = GetFormat(formatCollection' acceptTypes);                     if (string.IsNullOrEmpty(format))                     {                         if (formatCollection.Default != null)                             return formatCollection.Default;                         if (formatCollection["html"] != null && acceptTypes.Length == 1 && acceptTypes.First() == "*/*")                             return formatCollection["html"].Invoke();                         return new HttpStatusCodeResult(406);                     }                 }                 else if (!formatCollection.Any())                 {                     return new HttpStatusCodeResult(406);                 }             }             else             {                 format = routeValues["format"].ToString();             }
Magic Number,RestfulRouting.Format,FormatResult,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\Format\FormatResult.cs,GetResult,The following statement contains a magic number: if (routeValues["format"] == null)             {                 if (acceptTypes.Any())                 {                     format = GetFormat(formatCollection' acceptTypes);                     if (string.IsNullOrEmpty(format))                     {                         if (formatCollection.Default != null)                             return formatCollection.Default;                         if (formatCollection["html"] != null && acceptTypes.Length == 1 && acceptTypes.First() == "*/*")                             return formatCollection["html"].Invoke();                         return new HttpStatusCodeResult(406);                     }                 }                 else if (!formatCollection.Any())                 {                     return new HttpStatusCodeResult(406);                 }             }             else             {                 format = routeValues["format"].ToString();             }
Missing Default,RestfulRouting,RestfulHttpMethodConstraint,C:\repos\stevehodgkiss_restful-routing\src\RestfulRouting\RestfulHttpMethodConstraint.cs,Match,The following switch statement is missing a default case: switch (routeDirection)             {                 case RouteDirection.IncomingRequest:                     foreach (var method in AllowedMethods)                     {                         if (String.Equals(method' httpContext.Request.HttpMethod' StringComparison.OrdinalIgnoreCase))                             return true;                            // fixes issues #62 and #63                          NameValueCollection form;                          try {                              // first try to get the unvalidated form first                              form = httpContext.Request.Unvalidated().Form;                          }                          catch (Exception e) {                              form = httpContext.Request.Form;                          }                            if (form == null)                              continue;                          var overridden = form["_method"] ?? form["X-HTTP-Method-Override"];                         if (String.Equals(method' overridden' StringComparison.OrdinalIgnoreCase))                         {                             return true;                         }                      }                     break;             }
