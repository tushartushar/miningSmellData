Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,GeneticSharp.Extensions.Tsp,TspFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Tsp\TspFitness.cs,TspFitness,The method has 5 parameters. Parameters: numberOfCities' minX' maxX' minY' maxY
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,GetMoveKind,The length of the statement  "            if (currentSquareState == CheckersSquareState.OccupiedByPlayerOne || currentSquareState == CheckersSquareState.OccupiedByPlayerTwo) " is 131.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,GetMoveKind,The length of the statement  "                        && (to.ColumnIndex == from.ColumnIndex - (1 * indexModifier) || to.ColumnIndex == from.ColumnIndex + (1 * indexModifier))) " is 122.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountCatchableByPiece,The length of the statement  "                    capturableCount += GetMoveKind(new CheckersMove(piece' GetSquare(newColumnToLeftIndex' newRowIndex))) == CheckersMoveKind.Capture ? 1 : 0; " is 138.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountCatchableByPiece,The length of the statement  "                    capturableCount += GetMoveKind(new CheckersMove(piece' GetSquare(newColumnToRightIndex' newRowIndex))) == CheckersMoveKind.Capture ? 1 : 0; " is 139.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountPieceChancesToBeCaptured,The length of the statement  "                    capturedCount += CountIfEnemyPiece(enemyPieceRowIndex' enemyToSquareRowIndex' enemyLeftColumnIndex' enemyRightColumnIndex); " is 123.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountPieceChancesToBeCaptured,The length of the statement  "                    capturedCount += CountIfEnemyPiece(enemyPieceRowIndex' enemyToSquareRowIndex' enemyRightColumnIndex' enemyLeftColumnIndex); " is 123.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountIfEnemyPiece,The length of the statement  "                return GetMoveKind(new CheckersMove(enemyPiece' GetSquare(enemyToColumnIndex' enemyToRowIndex))) == CheckersMoveKind.Capture ? 1 : 0;" is 133.
Long Statement,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,PutPiece,The length of the statement  "                State = piece.Player == CheckersPlayer.PlayerOne ? CheckersSquareState.OccupiedByPlayerOne : CheckersSquareState.OccupiedByPlayerTwo;" is 133.
Long Statement,GeneticSharp.Extensions.Multiple,MultipleChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Multiple\MultipleChromosome.cs,UpdateSubGenes,The length of the statement  "                Chromosomes[i / Chromosomes[0].Length].ReplaceGene(i - ((i / Chromosomes[0].Length) * Chromosomes[0].Length)' GetGene(i)); " is 122.
Long Statement,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The length of the statement  "            toReturn -= cells.Count(x => _targetSudokuBoard.Cells[x.index] > 0 && _targetSudokuBoard.Cells[x.index] != x.cell); // Mask " is 123.
Virtual Method Call from Constructor,GeneticSharp.Extensions.AutoConfig,AutoConfigChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\AutoConfig\AutoConfigChromosome.cs,AutoConfigChromosome,The constructor "AutoConfigChromosome" calls a virtual method "CreateGenes".
Magic Number,GeneticSharp.Extensions.AutoConfig,AutoConfigChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\AutoConfig\AutoConfigChromosome.cs,GenerateGene,The following statement contains a magic number: switch (geneIndex)              {                  // Selection.                  case 0:                      return CreateRandomGene<ISelection>(s_availableSelections);                    // Crossover.                  case 1:                      return CreateRandomGene<ICrossover>(s_availableCrossovers);                    // Mutation.                  case 2:                      return CreateRandomGene<IMutation>(s_availableMutations);                    default:                      throw new InvalidOperationException("Invalid AutoConfigChromosome gene index.");              }
Magic Number,GeneticSharp.Extensions.AutoConfig,AutoConfigFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\AutoConfig\AutoConfigFitness.cs,AutoConfigFitness,The following statement contains a magic number: PopulationMinSize = 100;
Magic Number,GeneticSharp.Extensions.AutoConfig,AutoConfigFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\AutoConfig\AutoConfigFitness.cs,AutoConfigFitness,The following statement contains a magic number: PopulationMaxSize = 100;
Magic Number,GeneticSharp.Extensions.AutoConfig,AutoConfigFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\AutoConfig\AutoConfigFitness.cs,AutoConfigFitness,The following statement contains a magic number: Termination = new TimeEvolvingTermination(TimeSpan.FromSeconds(30));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CheckersBoard,The following statement contains a magic number: size < 8
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,Reset,The following statement contains a magic number: r < 3
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,MovePiece,The following statement contains a magic number: to.ColumnIndex == from.ColumnIndex + (2 * indexModifier)
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountCatchableByPiece,The following statement contains a magic number: var newRowIndex = square.RowIndex + (2 * GetIndexModifier(piece.Player));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountCatchableByPiece,The following statement contains a magic number: var newColumnToLeftIndex = columnIndex - 2;
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CountCatchableByPiece,The following statement contains a magic number: var newColumnToRightIndex = columnIndex + 2;
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CanCapture,The following statement contains a magic number: to.ColumnIndex == from.ColumnIndex + (2 * indexModifier)                  && GetSquare(from.ColumnIndex + (1 * indexModifier)' from.RowIndex + (1 * indexModifier)).State == opponentState
Magic Number,GeneticSharp.Extensions.Checkers,CheckersBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersBoard.cs,CanCapture,The following statement contains a magic number: to.RowIndex == from.RowIndex + (2 * indexModifier)
Magic Number,GeneticSharp.Extensions.Checkers,CheckersChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersChromosome.cs,FindPlayableSquare,The following statement contains a magic number: var rowIndex = columnIndex % 2 == 0 ? rnd.GetOddInt(0' m_boardSize) : rnd.GetEvenInt(0' m_boardSize);
Magic Number,GeneticSharp.Extensions.Checkers,CheckersFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersFitness.cs,EvaluateMove,The following statement contains a magic number: switch (moveKind)              {                  case CheckersMoveKind.Forward:                      moveFitness = 0.5;                      break;                    case CheckersMoveKind.Capture:                      moveFitness = 1;                      break;                    case CheckersMoveKind.Invalid:                      moveFitness = 0;                      break;              }
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,IsNotPlayableSquare,The following statement contains a magic number: return !((columnIndex % 2 == 0 && rowIndex % 2 != 0) || (columnIndex % 2 != 0 && rowIndex % 2 == 0));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,IsNotPlayableSquare,The following statement contains a magic number: return !((columnIndex % 2 == 0 && rowIndex % 2 != 0) || (columnIndex % 2 != 0 && rowIndex % 2 == 0));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,IsNotPlayableSquare,The following statement contains a magic number: return !((columnIndex % 2 == 0 && rowIndex % 2 != 0) || (columnIndex % 2 != 0 && rowIndex % 2 == 0));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,IsNotPlayableSquare,The following statement contains a magic number: return !((columnIndex % 2 == 0 && rowIndex % 2 != 0) || (columnIndex % 2 != 0 && rowIndex % 2 == 0));
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,GetHashCode,The following statement contains a magic number: int hash = 17;
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + ColumnIndex.GetHashCode();
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + RowIndex.GetHashCode();
Magic Number,GeneticSharp.Extensions.Checkers,CheckersSquare,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersSquare.cs,GetHashCode,The following statement contains a magic number: hash = (hash * 23) + State.GetHashCode();
Magic Number,GeneticSharp.Extensions.Drawing,BitmapChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Drawing\BitmapChromosome.cs,GenerateGene,The following statement contains a magic number: return new Gene(Color.FromArgb(rnd.GetInt(0' 256)' rnd.GetInt(0' 256)' rnd.GetInt(0' 256)));
Magic Number,GeneticSharp.Extensions.Drawing,BitmapChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Drawing\BitmapChromosome.cs,GenerateGene,The following statement contains a magic number: return new Gene(Color.FromArgb(rnd.GetInt(0' 256)' rnd.GetInt(0' 256)' rnd.GetInt(0' 256)));
Magic Number,GeneticSharp.Extensions.Drawing,BitmapChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Drawing\BitmapChromosome.cs,GenerateGene,The following statement contains a magic number: return new Gene(Color.FromArgb(rnd.GetInt(0' 256)' rnd.GetInt(0' 256)' rnd.GetInt(0' 256)));
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,GetEquationResult,The following statement contains a magic number: var c = (int)genes[2].Value;
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,GetEquationResult,The following statement contains a magic number: var d = (int)genes[3].Value;
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,GetEquationResult,The following statement contains a magic number: return a + (2 * b) + (3 * c) + (4 * d);
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,GetEquationResult,The following statement contains a magic number: return a + (2 * b) + (3 * c) + (4 * d);
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,GetEquationResult,The following statement contains a magic number: return a + (2 * b) + (3 * c) + (4 * d);
Magic Number,GeneticSharp.Extensions.Mathematic,EqualityFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EqualityFitness.cs,Evaluate,The following statement contains a magic number: var fitness = Math.Abs(GetEquationResult(equalityChromosome) - 30);
Magic Number,GeneticSharp.Extensions.Mathematic,EquationChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EquationChromosome.cs,EquationChromosome,The following statement contains a magic number: expectedResult >= int.MaxValue / 2
Magic Number,GeneticSharp.Extensions.Mathematic,EquationChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EquationChromosome.cs,EquationChromosome,The following statement contains a magic number: ResultRange = expectedResult * 2;
Magic Number,GeneticSharp.Extensions.Mathematic,EquationChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\EquationChromosome.cs,CreateNew,The following statement contains a magic number: return new EquationChromosome(ResultRange / 2' Length);
Magic Number,GeneticSharp.Extensions.Mathematic,FunctionBuilderChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Mathematic\FunctionBuilderChromosome.cs,GetParameterNames,The following statement contains a magic number: parameterNames[i] = ((char)(i + 65)).ToString();
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,SudokuBoard,The following statement contains a magic number: enumerable.Count != 81
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,GetCell,The following statement contains a magic number: return Cells[(9 * x) + y];
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,SetCell,The following statement contains a magic number: Cells[(9 * x) + y] = value;
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: var lineSep = new string('-'' 31);
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: var value = Cells[(row - 1) * 9 + (column - 1)];
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: output.Append(column % 3 == 0 ? " | " : "  ");
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: column <= 9
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: row % 3 == 0
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ToString,The following statement contains a magic number: row <= 9
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ParseMulti,The following statement contains a magic number: var cells = new List<int>(81);
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuBoard,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuBoard.cs,ParseMulti,The following statement contains a magic number: cells.Count == 81
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuCellsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuCellsChromosome.cs,GenerateGene,The following statement contains a magic number: return new Gene(rnd.GetInt(1' 10));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuFitness.cs,Evaluate,The following statement contains a magic number: var toTest = cells.GroupBy(x => x.index / 9).Select(g => g.Select(c => c.cell)) // rows                .Concat(cells.GroupBy(x => x.index % 9).Select(g => g.Select(c => c.cell))) //columns                .Concat(cells.GroupBy(x => x.index / 27 * 27 + x.index % 9 / 3 * 3).Select(g => g.Select(c => c.cell)));
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuPermutationsChromosome.cs,GetSudokus,The following statement contains a magic number: var listInt = new List<int>(81);
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuPermutationsChromosome.cs,GetSudokus,The following statement contains a magic number: i < 9
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuPermutationsChromosome.cs,GetRowsPermutationsUncached,The following statement contains a magic number: var toReturn = new List<IList<IList<int>>>(9);
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuPermutationsChromosome.cs,GetRowsPermutationsUncached,The following statement contains a magic number: i < 9
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuRandomPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuRandomPermutationsChromosome.cs,GenerateGene,The following statement contains a magic number: var rowIndex = geneIndex % 9;
Magic Number,GeneticSharp.Extensions.Sudoku,SudokuRandomPermutationsChromosome,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Sudoku\SudokuRandomPermutationsChromosome.cs,GetPermutationIndex,The following statement contains a magic number: var permGeneIdx = switchIdx * 9 + rowIndex;
Magic Number,GeneticSharp.Extensions.Tsp,TspFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Tsp\TspFitness.cs,Evaluate,The following statement contains a magic number: var fitness = 1.0 - (distanceSum / (Cities.Count * 1000.0));
Magic Number,GeneticSharp.Extensions.Tsp,TspFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Tsp\TspFitness.cs,CalcDistanceTwoCities,The following statement contains a magic number: return Math.Sqrt(Math.Pow(two.X - one.X' 2) + Math.Pow(two.Y - one.Y' 2));
Magic Number,GeneticSharp.Extensions.Tsp,TspFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Tsp\TspFitness.cs,CalcDistanceTwoCities,The following statement contains a magic number: return Math.Sqrt(Math.Pow(two.X - one.X' 2) + Math.Pow(two.Y - one.Y' 2));
Missing Default,GeneticSharp.Extensions.Checkers,CheckersFitness,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Extensions\Checkers\CheckersFitness.cs,EvaluateMove,The following switch statement is missing a default case: switch (moveKind)              {                  case CheckersMoveKind.Forward:                      moveFitness = 0.5;                      break;                    case CheckersMoveKind.Capture:                      moveFitness = 1;                      break;                    case CheckersMoveKind.Invalid:                      moveFitness = 0;                      break;              }
