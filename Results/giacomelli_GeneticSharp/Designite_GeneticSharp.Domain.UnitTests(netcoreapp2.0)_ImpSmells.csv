Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,Cyclomatic complexity of the method is 8
Long Statement,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The length of the statement  "            }' "The number of genes to be replaced is greater than available space' there is 3 genes between the index 0 and the end of chromosome' but there is 4 genes to be replaced."); " is 175.
Long Statement,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The length of the statement  "            }' "The number of genes to be replaced is greater than available space' there is 2 genes between the index 1 and the end of chromosome' but there is 3 genes to be replaced."); " is 175.
Long Statement,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The length of the statement  "			var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 }); " is 142.
Long Statement,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The length of the statement  "            Assert.Less(target.TimeEvolving.TotalMilliseconds' lastTimeEvolving' "Time evolving 50 generations should be less than 100-199 generations"); " is 141.
Long Statement,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The length of the statement  "            }' "Attempt to resume a genetic algorithm with a termination (GenerationNumberTermination (HasReached: True)) already reached. Please' specify a new termination or extend the current one."); " is 190.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The length of the statement  "            }' "The Alternating-position (AP) can be only used with ordered chromosomes. The specified chromosome has repeated genes."); " is 124.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The length of the statement  "            }' "The Order-based Crossover (OX2) can be only used with ordered chromosomes. The specified chromosome has repeated genes."); " is 126.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The length of the statement  "            }' "The Ordered Crossover (OX1) can be only used with ordered chromosomes. The specified chromosome has repeated genes."); " is 122.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The length of the statement  "            }' "The Partially Mapped Crossover (PMX) can be only used with ordered chromosomes. The specified chromosome has repeated genes."); " is 131.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The length of the statement  "            }' "The Position-based Crossover (POS) can be only used with ordered chromosomes. The specified chromosome has repeated genes."); " is 129.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_LessGenesThenSecondSwapPoint_Exception,The length of the statement  "            }' "The swap point two index is 3' but there is only 3 genes. The swap should result at least one gene to each sides."); " is 120.
Long Statement,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_LessGenesThenSecondSwapPoint_Exception,The length of the statement  "            }' "The swap point two index is 3' but there is only 4 genes. The swap should result at least one gene to each sides."); " is 120.
Long Statement,GeneticSharp.Domain.UnitTests.Populations,PopulationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationServiceTest.cs,CreateGenerationStrategyByName_ValidNameButInvalidConstructorArgs_Exception,The length of the statement  "            }' "A IGenerationStrategy's implementation with name 'Tracking' was found' but seems the constructor args were invalid."); " is 122.
Long Statement,GeneticSharp.Domain.UnitTests.Populations,PopulationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationServiceTest.cs,CreateGenerationStrategyByName_ValidName_GenerationStrategyCreated,The length of the statement  "            IGenerationStrategy actual = PopulationService.CreateGenerationStrategyByName("Performance"' 1) as PerformanceGenerationStrategy; " is 129.
Long Statement,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The length of the statement  "            }' "The Adam chromosome's 'CreateNew' method generated a null chromosome. This is a invalid behavior' please' check your chromosome code."); " is 140.
Long Statement,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The length of the statement  "            }' "The Adam chromosome's 'CreateNew' method generated a null chromosome. This is a invalid behavior' please' check your chromosome code."); " is 140.
Long Statement,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,CreateSelectionByName_ValidName_SelectionCreated,The length of the statement  "            actual = SelectionService.CreateSelectionByName("Stochastic Universal Sampling") as StochasticUniversalSamplingSelection; " is 121.
Long Statement,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The length of the statement  "            }' "The tournament size is greater than available chromosomes. Tournament size is 3 and generation 1 available chromosomes are 2."); " is 132.
Long Statement,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,CreateTerminationByName_ValidNameButInvalidConstructorArgs_Exception,The length of the statement  "            }' "A ITermination's implementation with name 'Generation Number' was found' but seems the constructor args were invalid."); " is 124.
Virtual Method Call from Constructor,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The constructor "ChromosomeStub" calls a virtual method "CreateGene".
Virtual Method Call from Constructor,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The constructor "ChromosomeStub" calls a virtual method "CreateGene".
Virtual Method Call from Constructor,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The constructor "ChromosomeStub" calls a virtual method "CreateGene".
Virtual Method Call from Constructor,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The constructor "ChromosomeStub" calls a virtual method "CreateGene".
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,BinaryChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\BinaryChromosomeBaseTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: var target = new BinaryChromosomeStub (2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,BinaryChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\BinaryChromosomeBaseTest.cs,GenerateGene_Index_ZeroOrOne,The following statement contains a magic number: var target = new BinaryChromosomeStub (2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,BinaryChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\BinaryChromosomeBaseTest.cs,GenerateGene_Index_ZeroOrOne,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: var other = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: other.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: other.Fitness = 0.4;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,CompareTo_Others_DiffResults,The following statement contains a magic number: other.Fitness = 0.6;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Fitness_AnyChange_Null,The following statement contains a magic number: target.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_InvalidIndex_Exception,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_InvalidIndex_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.ReplaceGene(2' new Gene(0));              }' "There is no Gene on index 2 to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_InvalidIndex_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.ReplaceGene(3' new Gene(0));              }' "There is no Gene on index 3 to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGene(0' new Gene(2));
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGene(1' new Gene(6));
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(2' actual[0].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGene_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(6' actual[1].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_InvalidIndex_Exception,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_InvalidIndex_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.ReplaceGenes(2' new Gene[] { new Gene() });              }' "There is no Gene on index 2 to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_InvalidIndex_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.ReplaceGenes(3' new Gene[] { new Gene() });              }' "There is no Gene on index 3 to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_NullGenes_Exception,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  target.ReplaceGenes(0' new Gene[] { new Gene(1)' new Gene(2)' new Gene(3)' new Gene(4) });              }' "The number of genes to be replaced is greater than available space' there is 3 genes between the index 0 and the end of chromosome' but there is 4 genes to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  target.ReplaceGenes(0' new Gene[] { new Gene(1)' new Gene(2)' new Gene(3)' new Gene(4) });              }' "The number of genes to be replaced is greater than available space' there is 3 genes between the index 0 and the end of chromosome' but there is 4 genes to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  target.ReplaceGenes(0' new Gene[] { new Gene(1)' new Gene(2)' new Gene(3)' new Gene(4) });              }' "The number of genes to be replaced is greater than available space' there is 3 genes between the index 0 and the end of chromosome' but there is 4 genes to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  target.ReplaceGenes(1' new Gene[] { new Gene(1)' new Gene(2)' new Gene(3) });              }' "The number of genes to be replaced is greater than available space' there is 2 genes between the index 1 and the end of chromosome' but there is 3 genes to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_GenesExceedChromosomeLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  target.ReplaceGenes(1' new Gene[] { new Gene(1)' new Gene(2)' new Gene(3) });              }' "The number of genes to be replaced is greater than available space' there is 2 genes between the index 1 and the end of chromosome' but there is 3 genes to be replaced.");
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(0' new Gene[] { new Gene(1)' new Gene(2) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(4' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(2' new Gene[] { new Gene(3)' new Gene(4) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(2' new Gene[] { new Gene(3)' new Gene(4) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(2' new Gene[] { new Gene(3)' new Gene(4) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(4' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(3' actual[2].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(3' actual[2].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(4' actual[3].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(4' actual[3].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(3' new Gene[] { new Gene(5) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: target.ReplaceGenes(3' new Gene[] { new Gene(5) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(4' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(3' actual[2].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(3' actual[2].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(5' actual[3].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,ReplaceGenes_ValidIndex_Replaced,The following statement contains a magic number: Assert.AreEqual(5' actual[3].Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_InvalidLength_Exception,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: target.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: target.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: target.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: target.Resize(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: Assert.AreEqual(2' target.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToLowerLength_TruncateGenes,The following statement contains a magic number: Assert.AreEqual(2' target.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: var target = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: target.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: target.Resize(4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: Assert.AreEqual(4' target.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: Assert.AreEqual(2' target.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: Assert.IsNull(target.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,Resize_ToGreaterLength_KeepOldGenesAndNullValueNewOnes,The following statement contains a magic number: Assert.IsNull(target.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,GetHashCode_Fitness_EqualsFitnessHashCode,The following statement contains a magic number: target.Fitness = 123;
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorEquals_Diff_False,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorDiff_Diff_True,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorLowerThan_FirstNull_True,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorLowerThan_SecondNull_False,The following statement contains a magic number: var first = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorLowerThan_FitnessGreater_False,The following statement contains a magic number: var first = new ChromosomeStub(3.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorLowerThan_FitnessGreater_False,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorLowerThan_FitnessLower_True,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorGreaterThan_DiffAndFitnessGreater_True,The following statement contains a magic number: var first = new ChromosomeStub(3.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeBaseTest.cs,OperatorGreaterThan_DiffAndFitnessGreater_True,The following statement contains a magic number: var second = new ChromosomeStub(2.0);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_NonRepeatedGene_False,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(5)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(5)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,AnyChromosomeHasRepeatedGene_RepeatedGene_True,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(5)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_GenesWithNullValue_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_AllGenesWithValue_NoException,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_AllGenesWithValue_NoException,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_AllGenesWithValue_NoException,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithGenesWithNullValue_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithGenesWithNullValue_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithGenesWithNullValue_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithGenesWithNullValue_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: chromosome1.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: chromosome2.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,ChromosomeExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\ChromosomeExtensionsTest.cs,ValidateGenes_ChromosomesWithAllGenesWithValue_NoException,The following statement contains a magic number: chromosome2.ReplaceGenes (0' new Gene[] { new Gene (1)' new Gene (2)' new Gene (3) });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_PositiveValue_Double,The following statement contains a magic number: Assert.AreEqual(1.1' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(-2.5' 0.5).Returns(-1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(-2.5' 0.5).Returns(-1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(-2.5' 0.5).Returns(-1.1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(-2.5' 0.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(-2.5' 0.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(-2.5' 0.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(-2.5' 0.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_NegativeValue_Double,The following statement contains a magic number: Assert.AreEqual(-1.1' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0' 10).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(1' 11).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(1' 11).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(2' 12).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(2' 12).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(2' 12).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(new double[] { 0' 1' 2 }' new double[] { 10' 11' 12 }' new int[] { 8' 8' 8 }' new int[] { 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: Assert.AreEqual(3' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: Assert.AreEqual(2' actual[1]);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: Assert.AreEqual(3' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoints_NoArgs_Double,The following statement contains a magic number: Assert.AreEqual(3' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(0.4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(0.4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(0.4);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_LowerMinValue_MinValue,The following statement contains a magic number: Assert.AreEqual(0.5' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(2.6);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(2.6);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: RandomizationProvider.Current.GetDouble(0.5' 2.5).Returns(2.6);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: var target = new FloatingPointChromosome(0.5' 2.5' 64' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,ToFloatingPoint_GreaterMaxValue_MaxValue,The following statement contains a magic number: Assert.AreEqual(2.5' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,Constructor_FromZeroToZero_Double,The following statement contains a magic number: var target = new FloatingPointChromosome(0' 0' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: var target = new FloatingPointChromosome(0' 0' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: target.FlipGene(31);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,FloatingPointChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\FloatingPointChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: target.FlipGene(30);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,GeneTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\GeneTest.cs,Equals_OtherAsObjectOtherValue_False,The following statement contains a magic number: var other = new Gene(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,GeneTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\GeneTest.cs,Equals_OtherValue_False,The following statement contains a magic number: var other = new Gene(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,GeneTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\GeneTest.cs,OperatorEquals_DiffValue_False,The following statement contains a magic number: var other = new Gene(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,GeneTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\GeneTest.cs,OperatorDiff_Diff_True,The following statement contains a magic number: var other = new Gene(2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_PositiveValue_Integer,The following statement contains a magic number: RandomizationProvider.Current.GetInt (0' 3).Returns (2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_PositiveValue_Integer,The following statement contains a magic number: RandomizationProvider.Current.GetInt (0' 3).Returns (2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_PositiveValue_Integer,The following statement contains a magic number: var target = new IntegerChromosome (0' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_PositiveValue_Integer,The following statement contains a magic number: Assert.AreEqual (2' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_NegativeValue_Integer,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_NegativeValue_Integer,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_NegativeValue_Integer,The following statement contains a magic number: var target = new IntegerChromosome(0' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,ToInteger_NegativeValue_Integer,The following statement contains a magic number: Assert.AreEqual(-2' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,CreateNew_NoArgs_NewInstance,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,CreateNew_NoArgs_NewInstance,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,CreateNew_NoArgs_NewInstance,The following statement contains a magic number: var old = new IntegerChromosome(0' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,CreateNew_NoArgs_NewInstance,The following statement contains a magic number: Assert.AreEqual(-2' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(-2);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: var target = new IntegerChromosome(0' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: target.FlipGene(10);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: target.FlipGene(31);
Magic Number,GeneticSharp.Domain.UnitTests.Chromosomes,IntegerChromosomeTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Chromosomes\IntegerChromosomeTest.cs,FlipGene_Index_ValueFlip,The following statement contains a magic number: target.FlipGene(30);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullFitness_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())' null' null' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullFitness_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())' null' null' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullSelection_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())' Substitute.For<IFitness>()' null' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullSelection_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())' Substitute.For<IFitness>()' null' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullCrossover_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())'  							   Substitute.For<IFitness>()'  							   Substitute.For<ISelection>()' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullCrossover_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())'  							   Substitute.For<IFitness>()'  							   Substitute.For<ISelection>()' null' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullMutation_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())'  							   Substitute.For<IFitness>()'  							   Substitute.For<ISelection>()'  							   Substitute.For<ICrossover>()' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Constructor_NullMutation_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>  			{  				new GeneticAlgorithm(new Population(2' 2' new ChromosomeStub())'  							   Substitute.For<IFitness>()'  							   Substitute.For<ISelection>()'  							   Substitute.For<ICrossover>()' null);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(50' 50' chromosome)'  				new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(50' 50' chromosome)'  				new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(25);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: Assert.AreEqual(25' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Optimization,The following statement contains a magic number: Assert.GreaterOrEqual(lastFitness' 0.8);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: taskExecutor.MinThreads = 100;
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: taskExecutor.MaxThreads = 100;
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;    				Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);  				Assert.IsFalse(target.IsRunning);    				target.Start();    				Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);  				Assert.IsFalse(target.IsRunning);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>  			{  				var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);  				target.TaskExecutor = taskExecutor;  				target.Start();  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);  				Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);  				Assert.IsNotNull(target.Population.BestChromosome);  				Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);  				Assert.IsTrue(target.Population.Generations.Count > 0);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: taskExecutor.MinThreads = 100;
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: taskExecutor.MaxThreads = 100;
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: taskExecutor.Timeout = TimeSpan.FromMilliseconds(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 150' chromosome)'  				new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FitnessEvaluationFailed_FitnessException,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 150' chromosome)' fitness' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FitnessEvaluationFailed_FitnessException,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 150' chromosome)' fitness' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Fast,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Fast,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 100' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Fast,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 100' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Fast,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_NotParallelManyGenerations_Fast,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Faster,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Faster,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 100' chromosome)'                      new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Faster,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 100' chromosome)'                      new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Faster,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelManyGenerations_Faster,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var crossover1 = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var ga1 = new GeneticAlgorithm(new Population(100' 199' chromosome1)'  					new FitnessStub() { SupportsParallel = false }' selection1' crossover1' mutation1);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var ga1 = new GeneticAlgorithm(new Population(100' 199' chromosome1)'  					new FitnessStub() { SupportsParallel = false }' selection1' crossover1' mutation1);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: ga1.Termination = new GenerationNumberTermination(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var crossover2 = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var ga2 = new GeneticAlgorithm(new Population(100' 199' chromosome2)'  					new FitnessStub() { SupportsParallel = false }' selection2' crossover2' mutation2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: var ga2 = new GeneticAlgorithm(new Population(100' 199' chromosome2)'  					new FitnessStub() { SupportsParallel = false }' selection2' crossover2' mutation2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: ga2.Termination = new GenerationNumberTermination(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: Assert.AreEqual(1000' ga1.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ParallelGAs_Fast,The following statement contains a magic number: Assert.AreEqual(1000' ga2.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                    Assert.AreEqual(GeneticAlgorithmState.NotStarted' target.State);                  Assert.IsFalse(target.IsRunning);                    target.Start();                    Assert.AreEqual(GeneticAlgorithmState.TerminationReached' target.State);                  Assert.IsFalse(target.IsRunning);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Optimization,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(20' () =>              {                  var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);                  target.OperatorsStrategy = new TplOperatorsStrategy();                  target.TaskExecutor = taskExecutor;                  target.Start();                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count >= 100);                  Assert.IsTrue(target.Population.CurrentGeneration.Chromosomes.Count <= 150);                  Assert.IsNotNull(target.Population.BestChromosome);                  Assert.IsTrue(target.Population.BestChromosome.Fitness >= 0.9);                  Assert.IsTrue(target.Population.Generations.Count > 0);              });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManySlowFitness_Timeout,The following statement contains a magic number: taskExecutor.Timeout = TimeSpan.FromMilliseconds(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManySlowFitness_Timeout,The following statement contains a magic number: var target = new GeneticAlgorithm(new TplPopulation(100' 150' chromosome)'                  new FitnessStub() { SupportsParallel = true' ParallelSleep = 1500 }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Faster,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Faster,The following statement contains a magic number: var target = new GeneticAlgorithm(new TplPopulation(100' 100' chromosome)'                      new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Faster,The following statement contains a magic number: var target = new GeneticAlgorithm(new TplPopulation(100' 100' chromosome)'                      new FitnessStub() { SupportsParallel = true }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Faster,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplManyGenerations_Faster,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var crossover1 = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var ga1 = new GeneticAlgorithm(new TplPopulation(100' 199' chromosome1)'                      new FitnessStub() { SupportsParallel = false }' selection1' crossover1' mutation1);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var ga1 = new GeneticAlgorithm(new TplPopulation(100' 199' chromosome1)'                      new FitnessStub() { SupportsParallel = false }' selection1' crossover1' mutation1);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: ga1.Termination = new GenerationNumberTermination(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var crossover2 = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var ga2 = new GeneticAlgorithm(new TplPopulation(100' 199' chromosome2)'                      new FitnessStub() { SupportsParallel = false }' selection2' crossover2' mutation2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: var ga2 = new GeneticAlgorithm(new TplPopulation(100' 199' chromosome2)'                      new FitnessStub() { SupportsParallel = false }' selection2' crossover2' mutation2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: ga2.Termination = new GenerationNumberTermination(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: Assert.AreEqual(1000' ga1.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TplGAs_Fast,The following statement contains a magic number: Assert.AreEqual(1000' ga2.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TerminationReached_TerminationReachedEventRaised,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TerminationReached_TerminationReachedEventRaised,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_TerminationReached_TerminationReachedEventRaised,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ThreeParentCrossover_KeepsMinSizePopulation,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ThreeParentCrossover_KeepsMinSizePopulation,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ThreeParentCrossover_KeepsMinSizePopulation,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ThreeParentCrossover_KeepsMinSizePopulation,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ThreeParentCrossover_KeepsMinSizePopulation,The following statement contains a magic number: Assert.IsTrue(target.Population.Generations.All(g => g.Chromosomes.Count >= 100));
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,The following statement contains a magic number: var target = new GeneticAlgorithm(  								 new Population(50' 50' chromosome.Clone())  								 {  									 GenerationStrategy = new TrackingGenerationStrategy()  								 }'  								 new FitnessStub() { SupportsParallel = false }'  								 selection'  								 crossover'  								 mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,The following statement contains a magic number: var target = new GeneticAlgorithm(  								 new Population(50' 50' chromosome.Clone())  								 {  									 GenerationStrategy = new TrackingGenerationStrategy()  								 }'  								 new FitnessStub() { SupportsParallel = false }'  								 selection'  								 crossover'  								 mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(25);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,The following statement contains a magic number: target.CrossoverProbability = reinsertion.CanExpand ? 0.75f : 1f;
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_UsingAllConfigurationCombinationsAvailable_AllRun,The following statement contains a magic number: Assert.AreEqual(25' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(1000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(1000' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(1000' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCalls_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(1000' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(500);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(500' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: Assert.Less(target.TimeEvolving.TotalMilliseconds' 1000' "Time evolving should be less than 1000ms");
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(25);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_ManyCallsTerminationChanged_NewEvolutions,The following statement contains a magic number: Assert.AreEqual(25' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var chromosome = new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { 1000' 1000' 1000' 1000 }'  				new int[] { 10' 10' 10' 10 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var population = new Population(25' 25' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var population = new Population(25' 25' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var fitness = new FuncFitness((c) =>  			{  				var f = c as FloatingPointChromosome;    				var values = f.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var fitness = new FuncFitness((c) =>  			{  				var f = c as FloatingPointChromosome;    				var values = f.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var fitness = new FuncFitness((c) =>  			{  				var f = c as FloatingPointChromosome;    				var values = f.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var fitness = new FuncFitness((c) =>  			{  				var f = c as FloatingPointChromosome;    				var values = f.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: var termination = new FitnessStagnationTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: Assert.AreEqual(4' points.Length);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: Assert.AreEqual(1414.2135623730951' bc.Fitness);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Start_FloatingPoingChromosome_Evolved,The following statement contains a magic number: Assert.GreaterOrEqual(ga.GenerationsNumber' 100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_NotStarted_Exception,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_NotStarted_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_NotStarted_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(10000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: Parallel.Invoke(  			() => target.Start()'  			() =>  			{  				Thread.Sleep(10);  				Assert.AreEqual(GeneticAlgorithmState.Started' target.State);  				Assert.IsTrue(target.IsRunning);  				target.Stop();  				Thread.Sleep(30);    				Assert.AreEqual(GeneticAlgorithmState.Stopped' target.State);  				Assert.IsFalse(target.IsRunning);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: Parallel.Invoke(  			() => target.Start()'  			() =>  			{  				Thread.Sleep(10);  				Assert.AreEqual(GeneticAlgorithmState.Started' target.State);  				Assert.IsTrue(target.IsRunning);  				target.Stop();  				Thread.Sleep(30);    				Assert.AreEqual(GeneticAlgorithmState.Stopped' target.State);  				Assert.IsFalse(target.IsRunning);  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: Assert.Less(target.Population.Generations.Count' 10000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Stop_Started_Stopped,The following statement contains a magic number: Assert.Greater(target.TimeEvolving.TotalMilliseconds' 8.8);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_NotStarted_Exception,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_NotStarted_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_NotStarted_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: target.Termination = new TimeEvolvingTermination(TimeSpan.FromMilliseconds(10000));
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: Parallel.Invoke(  			() => target.Start()'  			() =>  			{  				Thread.Sleep(500);  				target.Stop();  			});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_Stopped_Resumed,The following statement contains a magic number: Parallel.Invoke(  				() => target.Resume()'  				() =>  				{  					Thread.Sleep(2000);  					Assert.AreEqual(GeneticAlgorithmState.Resumed' target.State);  					Assert.IsTrue(target.IsRunning);  				});
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(10);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationNotChanged_Exception,The following statement contains a magic number: Assert.AreEqual(10' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: var crossover = new OnePointCrossover(2);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: var target = new GeneticAlgorithm(new Population(100' 199' chromosome)'  					new FitnessStub() { SupportsParallel = false }' selection' crossover' mutation);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(100);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: Assert.AreEqual(100' target.Population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(200);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: Assert.AreEqual(target.Population.Generations.Count' 200);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: target.Termination = new GenerationNumberTermination(300);
Magic Number,GeneticSharp.Domain.UnitTests,GeneticAlgorithmTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\GeneticAlgorithmTest.cs,Resume_TerminationReachedAndTerminationExtend_Resumed,The following statement contains a magic number: Assert.AreEqual(target.Population.Generations.Count' 300);
Magic Number,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The following statement contains a magic number: CreateGene(2);
Magic Number,GeneticSharp.Domain.UnitTests,ChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\ChromosomeStub.cs,ChromosomeStub,The following statement contains a magic number: CreateGene(3);
Magic Number,GeneticSharp.Domain.UnitTests,FitnessStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\FitnessStub.cs,FitnessStub,The following statement contains a magic number: ParallelSleep = 500;
Magic Number,GeneticSharp.Domain.UnitTests,FitnessStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\FitnessStub.cs,Evaluate,The following statement contains a magic number: double f = genes.Sum(g => (int)g.Value) / 20f;
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: var values = RandomizationProvider.Current.GetUniqueInts(6' 0' 6);
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: var values = RandomizationProvider.Current.GetUniqueInts(6' 0' 6);
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(2' new Gene(values[2]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(2' new Gene(values[2]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(3' new Gene(values[3]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(3' new Gene(values[3]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(4' new Gene(values[4]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(4' new Gene(values[4]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(5' new Gene(values[5]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,OrderedChromosomeStub,The following statement contains a magic number: ReplaceGene(5' new Gene(values[5]));
Magic Number,GeneticSharp.Domain.UnitTests,OrderedChromosomeStub,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\OrderedChromosomeStub.cs,GenerateGene,The following statement contains a magic number: return new Gene(RandomizationProvider.Current.GetInt(0' 6));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(6)'                  new Gene(5)'                  new Gene(7)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var child1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[] {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var child2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(3' actualChild.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(7' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(7' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(5' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(5' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(4' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(4' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(3' actualChild.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(7' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(7' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(5' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(5' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(4' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(4' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(8' actualChild.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_TspChromosome_Child,The following statement contains a magic number: var chromosome1 = new TspChromosome(100);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_TspChromosome_Child,The following statement contains a magic number: var chromosome2 = new TspChromosome(100);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,Cross_TspChromosome_Child,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var chromosome = new TspChromosome(50);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var population = new Population(50' 50' chromosome)             {                 GenerationStrategy = new TrackingGenerationStrategy()             };
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var population = new Population(50' 50' chromosome)             {                 GenerationStrategy = new TrackingGenerationStrategy()             };
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var fitness = new TspFitness(chromosome.Length' 0' 1000' 0' 1000);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var fitness = new TspFitness(chromosome.Length' 0' 1000' 0' 1000);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_WithAlternatingPositionCrossover_Evolve,The following statement contains a magic number: var ga = new GeneticAlgorithm(population' fitness' new EliteSelection()' crossover' new ReverseSequenceMutation())             {                 Termination = new GenerationNumberTermination(100)              };
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: const Int32 FinalAns = 4567213;
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: var population = new Population(1000' 5000' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: var population = new Population(1000' 5000' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: ga.MutationProbability = 0.2f;
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: ga.CrossoverProbability = 0.75f;
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: ga.Termination = new OrTermination(                  new FitnessThresholdTermination(1.0)'                  new FitnessStagnationTermination(200)'                  new GenerationNumberTermination(1000));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,AlternatingPositionCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\AlternatingPositionCrossoverTest.cs,GA_Issue61_Solved,The following statement contains a magic number: ga.Termination = new OrTermination(                  new FitnessThresholdTermination(1.0)'                  new FitnessStagnationTermination(200)'                  new GenerationNumberTermination(1000));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverBaseTest.cs,Cross_Null_Exception,The following statement contains a magic number: var target = Substitute.ForPartsOf<CrossoverBase>(2' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverBaseTest.cs,Cross_Null_Exception,The following statement contains a magic number: var target = Substitute.ForPartsOf<CrossoverBase>(2' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverBaseTest.cs,Cross_InvalidNumberOfParents_Exception,The following statement contains a magic number: var target = Substitute.ForPartsOf<CrossoverBase>(2' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverBaseTest.cs,Cross_InvalidNumberOfParents_Exception,The following statement contains a magic number: var target = Substitute.ForPartsOf<CrossoverBase>(2' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverServiceTest.cs,GetCrossoverTypes_NoArgs_AllAvailableCrossovers,The following statement contains a magic number: Assert.AreEqual(12' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverServiceTest.cs,GetCrossoverNames_NoArgs_AllAvailableCrossoversNames,The following statement contains a magic number: Assert.AreEqual(12' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverServiceTest.cs,CreateCrossoverByName_ValidNameButInvalidConstructorArgs_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  CrossoverService.CreateCrossoverByName("One-Point"' 1' 2' 3);              }' "A ICrossover's implementation with name 'One-Point' was found' but seems the constructor args were invalid");
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverServiceTest.cs,CreateCrossoverByName_ValidNameButInvalidConstructorArgs_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  CrossoverService.CreateCrossoverByName("One-Point"' 1' 2' 3);              }' "A ICrossover's implementation with name 'One-Point' was found' but seems the constructor args were invalid");
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CrossoverServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CrossoverServiceTest.cs,CreateCrossoverByName_ValidName_CrossoverCreated,The following statement contains a magic number: actual = CrossoverService.CreateCrossoverByName("Two-Point"' 1' 2) as TwoPointCrossover;
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 4).Returns(1' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 4).Returns(1' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithSameLength_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: var chromosome1 = Substitute.ForPartsOf<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.ForPartsOf<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: var chromosome2 = Substitute.ForPartsOf<ChromosomeBase>(5);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.ForPartsOf<ChromosomeBase>(5));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 5).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: rnd.GetInt(1' 5).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CutAndSpliceCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CutAndSpliceCrossoverTest.cs,Cross_ParentsWithDiffLength_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[0].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[1].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(0' actual[0].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' actual[1].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[1].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[1].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(5);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(5));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(5);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(5));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5OneCycleGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(5);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(6)'                  new Gene(7)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(6)'                  new Gene(7)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(6)'                  new Gene(7)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(6)'                  new Gene(7)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(6)'                  new Gene(7)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(5));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(5);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(4)'                  new Gene(3)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(5));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,CycleCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\CycleCrossoverTest.cs,Cross_ParentsWith5ThreeCyclesGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_LessGenesThenSwapPoint_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_LessGenesThenSwapPoint_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                 new Gene(2)             });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                 new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                 new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OnePointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OnePointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 7).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 7).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childOne.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childOne.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childOne.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childOne.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childOne.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childTwo.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childTwo.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childTwo.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childTwo.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' childTwo.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 10).Returns(new int[] { 7' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[0].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(10' actual[1].GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' actual[0].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[0].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[1].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(9' actual[1].GetGene(8).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,OrderedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\OrderedCrossoverTest.cs,Cross_ParentsWith10Genes_Cross,The following statement contains a magic number: Assert.AreEqual(0' actual[1].GetGene(9).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]                                       {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(1)'                  new Gene(8)'                  new Gene(2)'                  new Gene(3)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(7)'                  new Gene(5)'                  new Gene(1)'                  new Gene(6)'                  new Gene(8)'                  new Gene(2)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 5' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 5' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 5' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 5' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[0].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PartiallyMappedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PartiallyMappedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' actual[1].GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(8)'                  new Gene(4)'                  new Gene(7)'                  new Gene(3)'                  new Gene(6)'                  new Gene(2)'                  new Gene(5)'                  new Gene(1)'                  new Gene(9)'                  new Gene(0)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(10);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(0)'                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'                  new Gene(9)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentWithNoOrderedGenes_Exception,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(10));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)            });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(4)'                  new Gene(6)'                  new Gene(8)'                  new Gene(7)'                  new Gene(5)'                  new Gene(3)'                  new Gene(1)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(8));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 7).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 7).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 8).Returns(new int[] { 1' 2' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childOne.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childOne.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childOne.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childOne.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childOne.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childOne.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childOne.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childOne.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childTwo.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childTwo.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(8' childTwo.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(7' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childTwo.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childTwo.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith8Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' childTwo.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(0)'                  new Gene(3)'                  new Gene(2)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(0)'                  new Gene(3)'                  new Gene(2)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(0)'                  new Gene(3)'                  new Gene(2)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(0)'                  new Gene(3)'                  new Gene(2)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(6));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(0)'                  new Gene(1)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(0)'                  new Gene(1)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(0)'                  new Gene(1)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(2)'                  new Gene(3)'                  new Gene(5)'                  new Gene(0)'                  new Gene(1)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(6));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 5).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetInt(1' 5).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 2' 4' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 2' 4' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 2' 4' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 2' 4' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 2' 4' 3 });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childOne.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(6' childTwo.GetGenes().Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childOne.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childOne.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childOne.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(0' childOne.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' childOne.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childOne.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(2' childTwo.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(5' childTwo.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(4' childTwo.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(0' childTwo.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(3' childTwo.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,PositionBasedCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\PositionBasedCrossoverTest.cs,Cross_ParentsWith6Genes_Cross,The following statement contains a magic number: Assert.AreEqual(1' childTwo.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(5)'                  new Gene(6)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(5)'                  new Gene(6)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(5)'                  new Gene(6)'                  new Gene(4)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: var chromosome3 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(10)'                  new Gene(11)'                  new Gene(12)'                  new Gene(13)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(10)'                  new Gene(11)'                  new Gene(12)'                  new Gene(13)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(10)'                  new Gene(11)'                  new Gene(12)'                  new Gene(13)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(10)'                  new Gene(11)'                  new Gene(12)'                  new Gene(13)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: chromosome3.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(11' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(12' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(12' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,ThreeParentCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\ThreeParentCrossoverTest.cs,Cross_ThreeParents_OneChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ChromosomeLengthLowerThan3_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_LessGenesThenSecondSwapPoint_Exception,The following statement contains a magic number: var target = new TwoPointCrossover(1' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_LessGenesThenSecondSwapPoint_Exception,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_LessGenesThenSecondSwapPoint_Exception,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(6' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(4' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(2' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,TwoPointCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\TwoPointCrossoverTest.cs,Cross_ParentsWithTwoGenes_Cross,The following statement contains a magic number: Assert.AreEqual(8' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome1.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: chromosome2.CreateNew().Returns(Substitute.For<ChromosomeBase>(4));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: rnd.GetDouble().Returns(0' 0.49' 0.5' 1);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: rnd.GetDouble().Returns(0' 0.49' 0.5' 1);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: var target = new UniformCrossover(0.5f);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(7' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(3' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: rnd.GetDouble().Returns(0' 0.49' 0.5' 1);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: rnd.GetDouble().Returns(0' 0.49' 0.5' 1);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: target = new UniformCrossover(0.7f);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(2' actual[0].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(3' actual[0].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(8' actual[0].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(5' actual[1].GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(6' actual[1].GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(7' actual[1].GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,UniformCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\UniformCrossoverTest.cs,Cross_ParentsWithTwoGenesProbabilityDiffPercents_DiffChildren,The following statement contains a magic number: Assert.AreEqual(4' actual[1].GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Constructor_ThresholdGreaterThanParentsNumber_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentOutOfRangeException>(() =>             {                 new VotingRecombinationCrossover(2' 3);             });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Constructor_ThresholdGreaterThanParentsNumber_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentOutOfRangeException>(() =>             {                 new VotingRecombinationCrossover(2' 3);             });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var target = new VotingRecombinationCrossover(4' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var target = new VotingRecombinationCrossover(4' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome1 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(2)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(2)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(2)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(2)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome1.ReplaceGenes(0' new Gene[] {                  new Gene(1)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(2)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var child = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(2).Returns(new Gene(22));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(2).Returns(new Gene(22));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(3).Returns(new Gene(33));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(3).Returns(new Gene(33));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(4).Returns(new Gene(44));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: child.GenerateGene(4).Returns(new Gene(44));
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome2 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome2.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(4)'                  new Gene(3)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome3 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(2)'                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(2)'                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(2)'                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(2)'                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome3.ReplaceGenes(0' new Gene[]              {                  new Gene(3)'                  new Gene(2)'                  new Gene(1)'                  new Gene(5)'                  new Gene(4)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: var chromosome4 = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome4.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome4.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome4.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome4.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: chromosome4.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)              });
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(2' actualChild.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(22' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(22' actualChild.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(33' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(33' actualChild.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(44' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(44' actualChild.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Crossovers,VotingRecombinationCrossoverTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Crossovers\VotingRecombinationCrossoverTest.cs,Cross_DocumentationSample_Child,The following statement contains a magic number: Assert.AreEqual(6' actualChild.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Fitnesses,FuncFitnessTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Fitnesses\FuncFitnessTest.cs,Evaluate_Func_CallFunc,The following statement contains a magic number: Assert.AreEqual(3' target.Evaluate(new ChromosomeStub(2d)));
Magic Number,GeneticSharp.Domain.UnitTests.Fitnesses,FuncFitnessTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Fitnesses\FuncFitnessTest.cs,Evaluate_Func_CallFunc,The following statement contains a magic number: Assert.AreEqual(3' target.Evaluate(new ChromosomeStub(2d)));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_LessThanThreeGenes_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: rnd.GetDouble().Returns(0.1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_NoProbality_NoDisplacement,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,DisplacementMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\DisplacementMutationTest.cs,Mutate_ValidChromosome_Displacement_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,FlipBitMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\FlipBitMutationTest.cs,Mutate_NotBinaryChromosome_Exception,The following statement contains a magic number: var chromosome =  Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,FlipBitMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\FlipBitMutationTest.cs,Mutate_NoArgs_BitMutated,The following statement contains a magic number: RandomizationProvider.Current.GetInt(0' 3).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,FlipBitMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\FlipBitMutationTest.cs,Mutate_NoArgs_BitMutated,The following statement contains a magic number: var chromosome = new BinaryChromosomeStub(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,FlipBitMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\FlipBitMutationTest.cs,Mutate_NoArgs_BitMutated,The following statement contains a magic number: Assert.AreEqual(0' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_LessThanThreeGenes_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: rnd.GetDouble().Returns(0.1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_NoProbality_NoInsertion,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Left,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(8);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'                  new Gene(7)'                  new Gene(8)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 8).Returns(new int[] { 1' 6 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(7' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(6).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,InsertionMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\InsertionMutationTest.cs,Mutate_ValidChromosome_Insertion_To_Right,The following statement contains a magic number: Assert.AreEqual(8' chromosome.GetGene(7).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(7' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(typeof(InsertionMutation)' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(typeof(PartialShuffleMutation)' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(typeof(ReverseSequenceMutation)' actual[4]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(typeof(TworsMutation)' actual[5]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationTypes_NoArgs_AllAvailableMutations,The following statement contains a magic number: Assert.AreEqual(typeof(UniformMutation)' actual[6]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual(7' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual("Insertion"' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual("Partial Shuffle (PSM)"' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual("Reverse Sequence (RSM)"' actual[4]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual("Twors"' actual[5]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,GetMutationNames_NoArgs_AllAvailableMutationsNames,The following statement contains a magic number: Assert.AreEqual("Uniform"' actual[6]);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 3).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 3).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: rnd.GetInt(0' 2).Returns(0);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.Shuffle(rnd);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.Shuffle(rnd);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.Shuffle(rnd);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.Shuffle(rnd);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 5' 3' 4' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 5' 3' 4' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 5' 3' 4' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,Shuffle_Source_Shuffled,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 5' 3' 4' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.LeftShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.LeftShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.LeftShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.LeftShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.LeftShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 3' 4' 5' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 3' 4' 5' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 3' 4' 5' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,LeftShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 3' 4' 5' 1' 2 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.RightShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.RightShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.RightShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.RightShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: var actual = new int[] { 1' 2' 3' 4' 5 }.RightShift(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 4' 5' 1' 2' 3 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 4' 5' 1' 2' 3 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 4' 5' 1' 2' 3 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,MutationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\MutationServiceTest.cs,RightShift_ValueToShift_Shifted,The following statement contains a magic number: CollectionAssert.AreEqual(new int[] { 4' 5' 1' 2' 3 }' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_LessThanThreeGenes_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: rnd.GetDouble().Returns(0.1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_NoProbality_NoPartialShuffle,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetInt(0' 3).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: rnd.GetInt(0' 2).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(6' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_ValidChromosome_PartialShuffle,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetInt(0' 3).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: rnd.GetInt(0' 2).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: Assert.AreEqual(6' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,PartialShuffleMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\PartialShuffleMutationTest.cs,Mutate_AllGenesAreEqual_NoShuffle,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_LessThanThreeGenes_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: rnd.GetDouble().Returns(0.1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_NoProbality_NoReverseSequence,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(6);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                      {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'                  new Gene(5)'                  new Gene(6)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 6).Returns(new int[] { 1' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(6' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(5' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(4).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,ReverseSequenceMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\ReverseSequenceMutationTest.cs,Mutate_ValidChromosome_ReverseSequence,The following statement contains a magic number: Assert.AreEqual(6' chromosome.GetGene(5).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]              {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: rnd.GetDouble().Returns(0.1);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_NoProbality_NoExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: chromosome.ReplaceGenes(0' new Gene[]                                                       {                  new Gene(1)'                  new Gene(2)'                  new Gene(3)'                  new Gene(4)'              });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 4).Returns(new int[] { 0' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 4).Returns(new int[] { 0' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: rnd.GetUniqueInts(2' 0' 4).Returns(new int[] { 0' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(3' chromosome.GetGene(0).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(2' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,TworsMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\TworsMutationTest.cs,Mutate_ValidChromosome_ExchangeGenes,The following statement contains a magic number: Assert.AreEqual(4' chromosome.GetGene(3).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_NoIndexes_RandomOneIndex,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_NoIndexes_RandomOneIndex,The following statement contains a magic number: RandomizationProvider.Current.GetInts(1' 0' 3).Returns(new int[] { 1 });
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_NoIndexes_RandomOneIndex,The following statement contains a magic number: Assert.AreEqual(1' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_InvalidIndexes_Exception,The following statement contains a magic number: var target = new UniformMutation(0' 3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_InvalidIndexes_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: var target = new UniformMutation(0' 2);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: chromosome.GenerateGene(2).Returns(new Gene(10));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: chromosome.GenerateGene(2).Returns(new Gene(10));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: Assert.AreEqual(10' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_Indexes_RandomIndexes,The following statement contains a magic number: Assert.AreEqual(10' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(3);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: chromosome.GenerateGene(1).Returns(new Gene(10));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: chromosome.GenerateGene(2).Returns(new Gene(20));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: chromosome.GenerateGene(2).Returns(new Gene(20));
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: Assert.AreEqual(10' chromosome.GetGene(1).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: Assert.AreEqual(20' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Mutations,UniformMutationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Mutations\UniformMutationTest.cs,Mutate_AllGenesMutablesTrue_AllGenesMutaed,The following statement contains a magic number: Assert.AreEqual(20' chromosome.GetGene(2).Value);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,Constructor_OkArguments_Instanced,The following statement contains a magic number: Assert.AreEqual(2' target.Chromosomes.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_AnyChromosomeWithoutFitness_Exception,The following statement contains a magic number: var target = new Generation(1' new List<IChromosome>() {                  new ChromosomeStub() { Fitness = 0.2 }'                  new ChromosomeStub() { Fitness = null}'                  new ChromosomeStub() { Fitness = 0.1 }              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_AnyChromosomeWithoutFitness_Exception,The following statement contains a magic number: var target = new Generation(1' new List<IChromosome>() {                  new ChromosomeStub() { Fitness = 0.2 }'                  new ChromosomeStub() { Fitness = null}'                  new ChromosomeStub() { Fitness = 0.1 }              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_AnyChromosomeWithoutFitness_Exception,The following statement contains a magic number: Assert.Catch<InvalidOperationException>(() =>              {                  target.End(2);              }' "There is unknown problem in current generation' because a chromosome has no fitness value.");
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: var target = new Generation(1' new List<IChromosome>() {                  new ChromosomeStub() { Fitness = 0.2 }'                  new ChromosomeStub() { Fitness = 0.3 }'                  new ChromosomeStub() { Fitness = 0.1 }              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: var target = new Generation(1' new List<IChromosome>() {                  new ChromosomeStub() { Fitness = 0.2 }'                  new ChromosomeStub() { Fitness = 0.3 }'                  new ChromosomeStub() { Fitness = 0.1 }              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: var target = new Generation(1' new List<IChromosome>() {                  new ChromosomeStub() { Fitness = 0.2 }'                  new ChromosomeStub() { Fitness = 0.3 }'                  new ChromosomeStub() { Fitness = 0.1 }              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: target.End(2);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: Assert.AreEqual(2' target.Chromosomes.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: Assert.AreEqual(0.3' target.Chromosomes[0].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,GenerationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\GenerationTest.cs,End_ChromosomeNumberGreaterThan_Take,The following statement contains a magic number: Assert.AreEqual(0.2' target.Chromosomes[1].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: var target = new PerformanceGenerationStrategy(4);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: Assert.AreEqual(2' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: Assert.AreEqual(3' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationDoesNotExceedGenerationsNumber_DoNothing,The following statement contains a magic number: Assert.AreEqual(4' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationExceedGenerationsNumber_RemoveOldOne,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PerformanceGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PerformanceGenerationStrategyTest.cs,RegisterNewGeneration_GenerationExceedGenerationsNumber_RemoveOldOne,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationServiceTest.cs,GetGenerationStrategyTypes_NoArgs_AllAvailableIGenerationStrategy,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationServiceTest.cs,GetGenerationStrategyNames_NoArgs_AllAvailableGenerationStrategiesNames,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,Constructor_InvalidMaxSize_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  new Population(2' 1' null);              }' "The maximum size for a population should be equal or greater than minimum size.");
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,Constructor_NullAdamChromosome_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  new Population(2' 2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,Constructor_NullAdamChromosome_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  new Population(2' 2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var c = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var population = new Population(2' 2' c);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var population = new Population(2' 2' c);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,EndCurrentGeneration_BestChromosomeChanged_ChangeEventRaise,The following statement contains a magic number: var target = new Population(2' 2' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,PopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\PopulationTest.cs,EndCurrentGeneration_BestChromosomeChanged_ChangeEventRaise,The following statement contains a magic number: var target = new Population(2' 2' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,Constructor_NullAdamChromosome_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  new TplPopulation(2' 2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,Constructor_NullAdamChromosome_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  new TplPopulation(2' 2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var c = Substitute.For<ChromosomeBase>(4);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var population = new TplPopulation(2' 2' c);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,CreateInitialGeneration_AdamChromosomeCreateNewNull_Exception,The following statement contains a magic number: var population = new TplPopulation(2' 2' c);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,EndCurrentGeneration_BestChromosomeChanged_ChangeEventRaise,The following statement contains a magic number: var target = new TplPopulation(2' 2' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TplPopulationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TplPopulationTest.cs,EndCurrentGeneration_BestChromosomeChanged_ChangeEventRaise,The following statement contains a magic number: var target = new TplPopulation(2' 2' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TrackingGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TrackingGenerationStrategyTest.cs,RegisterNewGeneration_AnyGeneration_DoNothing,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TrackingGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TrackingGenerationStrategyTest.cs,RegisterNewGeneration_AnyGeneration_DoNothing,The following statement contains a magic number: var population = new Population(2' 6' new ChromosomeStub());
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TrackingGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TrackingGenerationStrategyTest.cs,RegisterNewGeneration_AnyGeneration_DoNothing,The following statement contains a magic number: Assert.AreEqual(2' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TrackingGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TrackingGenerationStrategyTest.cs,RegisterNewGeneration_AnyGeneration_DoNothing,The following statement contains a magic number: Assert.AreEqual(3' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Populations,TrackingGenerationStrategyTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Populations\TrackingGenerationStrategyTest.cs,RegisterNewGeneration_AnyGeneration_DoNothing,The following statement contains a magic number: Assert.AreEqual(4' population.Generations.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.IsTrue(target.GetFloat(0' 2.2f) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.IsTrue(target.GetFloat(0' 2.2f) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetFloat(0' 2.2f));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetFloat(0' 2.2f));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.IsTrue(target.GetDouble(0' 2.2) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.IsTrue(target.GetDouble(0' 2.2) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetDouble(0' 2.2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetDouble(0' 2.2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Parallel.For(0' 1000' (i) =>              {                  actual.Add(target.GetInt(0' int.MaxValue));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Assert.AreEqual(1000' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Assert.AreEqual(1000' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.AreEqual(0' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.AreEqual(0' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.AreEqual(1' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  Assert.AreEqual(1' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2' target.GetInt(0' 2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2' target.GetInt(0' 2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: var actual = target.GetInts(1' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(2' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(2' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[1] >= 0 && actual[1] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(3' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(3' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.AreEqual(3' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[1] >= 0 && actual[1] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_RangeLowerThanLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.GetUniqueInts(5' 0' 4);              }' "The length is 5' but the possible unique values between 0 (inclusive) and 4 (exclusive) are 4.");
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_RangeLowerThanLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                  target.GetUniqueInts(5' 0' 4);              }' "The length is 5' but the possible unique values between 0 (inclusive) and 4 (exclusive) are 4.");
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: var actual = target.GetUniqueInts(10' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: var actual = target.GetUniqueInts(10' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 0 && actual[i] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 10 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 10 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(2' 0' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(2' 0' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(2' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 0 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 2
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,BasicRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\BasicRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  actual = target.GetUniqueInts(2' 0' 20);                  Assert.AreEqual(2' actual.Length);                  Assert.AreEqual(2' actual.Distinct().Count());                    Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>             {                 Assert.IsTrue(target.GetFloat(0' 2.2f) < 1);             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>             {                 Assert.IsTrue(target.GetFloat(0' 2.2f) < 1);             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>             {                 Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>             {                 Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>             {                 Assert.IsTrue(target.GetFloat(0' 2.2f) > 2.1);             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetFloat(0' 2.2f));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetFloat(0' 2.2f));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetFloat_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.IsTrue(target.GetDouble(0' 2.2) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.IsTrue(target.GetDouble(0' 2.2) < 1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                 Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                 Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                 Assert.IsTrue(target.GetDouble(0' 2.2) > 2.1);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetDouble(0' 2.2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2.3' target.GetDouble(0' 2.2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Parallel.For(0' 1000' (i) =>             {                 actual.Add(target.GetInt(0' int.MaxValue));             });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Assert.AreEqual(1000' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetDouble_ManyThreads_DiffRandomResult,The following statement contains a magic number: Assert.AreEqual(1000' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.AreEqual(0' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.AreEqual(0' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.AreEqual(1' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 Assert.AreEqual(1' target.GetInt(0' 2));              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2' target.GetInt(0' 2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: Assert.AreNotEqual(2' target.GetInt(0' 2));
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_Range_RandomInRangeResult,The following statement contains a magic number: i < 100
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: var actual = target.GetInts(1' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(2' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(2' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[1] >= 0 && actual[1] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(3' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: actual = target.GetInts(3' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.AreEqual(3' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[0] >= 0 && actual[0] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[1] >= 0 && actual[1] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInts_Length_ArrayWithLength,The following statement contains a magic number: Assert.IsTrue(actual[2] >= 0 && actual[2] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_RangeLowerThanLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>             {                 target.GetUniqueInts(5' 0' 4);             }' "The length is 5' but the possible unique values between 0 (inclusive) and 4 (exclusive) are 4.");
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_RangeLowerThanLength_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>             {                 target.GetUniqueInts(5' 0' 4);             }' "The length is 5' but the possible unique values between 0 (inclusive) and 4 (exclusive) are 4.");
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: var actual = target.GetUniqueInts(10' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: var actual = target.GetUniqueInts(10' 0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 0 && actual[i] < 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(10' 10' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(10' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 10 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 10 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(2' 0' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: actual = target.GetUniqueInts(2' 0' 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(2' actual.Length);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.AreEqual(2' actual.Distinct().Count());
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: Assert.IsTrue(actual[i] >= 0 && actual[i] < 20);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: i < 2
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetUniqueInts_Length_ArrayWithUniqueInts,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                 actual = target.GetUniqueInts(2' 0' 20);                 Assert.AreEqual(2' actual.Length);                 Assert.AreEqual(2' actual.Distinct().Count());                  Assert.IsTrue(actual[0] >= 2);              });
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_MinGreaterThanMaxEquals_Exception,The following statement contains a magic number: Assert.Catch<ArgumentOutOfRangeException>(() =>              {                 target.GetInt(2' 1);              }' "upperBound must be >=lowerBound");
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_NegativeValues_Negative,The following statement contains a magic number: var actual = target.GetInt(-10' -9);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_NegativeValues_Negative,The following statement contains a magic number: var actual = target.GetInt(-10' -9);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,FastRandomRandomizationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\FastRandomRandomizationTest.cs,GetInt_NegativeValues_Negative,The following statement contains a magic number: Assert.AreEqual(-10' actual);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetEvenInt_MinMax_OnlyEven,The following statement contains a magic number: var actual = rnd.GetEvenInt(0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetEvenInt_MinMax_OnlyEven,The following statement contains a magic number: Assert.IsTrue(actual % 2 == 0);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetEvenInt_MinMax_OnlyEven,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetOddInt_MinMax_OnlyOdd,The following statement contains a magic number: var actual = rnd.GetOddInt(0' 10);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetOddInt_MinMax_OnlyOdd,The following statement contains a magic number: Assert.IsTrue(actual % 2 != 0);
Magic Number,GeneticSharp.Domain.UnitTests.Randomizations,RandomizationExtensionsTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Randomizations\RandomizationExtensionsTest.cs,GetOddInt_MinMax_OnlyOdd,The following statement contains a magic number: i < 10
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[0].Fitness = 0.2;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[1].Fitness = 0.3;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[2].Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[2].Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[3].Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: parents[3].Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(6' selected.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(8' selected[4].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(8' selected[4].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(7' selected[5].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ElitistReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ElitistReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(7' selected[5].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var population = new Population(2' 3' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var population = new Population(2' 3' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var population = new Population(2' 3' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[0].Fitness = 0.2;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[1].Fitness = 0.3;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[2].Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[2].Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[3].Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: offspring[3].Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,FitnessBasedReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\FitnessBasedReinsertionTest.cs,SelectChromosomes_offspringSizeGreaterThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var population = new Population(2' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var population = new Population(2' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,PureReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\PureReinsertionTest.cs,SelectChromosomes_offspringSizeEqualsParentsSizeAndGreaterThanMinSizeAndLowerThanMaxSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_PopulationNull_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_PopulationNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_PopulationNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_PopulationNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_PopulationNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_offspringNull_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_ParentsNull_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_ParentsNull_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_ParentsNull_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var population = new Population(5' 6' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanExpandFalseWithoffspringSizeLowerThanMinSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var population = new Population(2' 3' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var population = new Population(2' 3' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseFalseWithoffspringSizeGreaterThanMaxSize_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var chromosome = Substitute.For<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var population = new Population(2' 5' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var population = new Population(2' 5' chromosome);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionBaseTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionBaseTest.cs,SelectChromosomes_CanCollapseAndExpandFalseWithoffspringSizeBetweenMinOrMaxSize_ChromosomesSelected,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionTypes_NoArgs_AllAvailableReinsertions,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionTypes_NoArgs_AllAvailableReinsertions,The following statement contains a magic number: Assert.AreEqual(typeof(PureReinsertion)' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionTypes_NoArgs_AllAvailableReinsertions,The following statement contains a magic number: Assert.AreEqual(typeof(UniformReinsertion)' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionNames_NoArgs_AllAvailableReinsertionsNames,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionNames_NoArgs_AllAvailableReinsertionsNames,The following statement contains a magic number: Assert.AreEqual("Pure"' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,GetReinsertionNames_NoArgs_AllAvailableReinsertionsNames,The following statement contains a magic number: Assert.AreEqual("Uniform"' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,CreateReinsertionByName_ValidNameButInvalidConstructorArgs_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  ReinsertionService.CreateReinsertionByName("Elitist"' 1' 2' 3);              }' "A IReinsertion's implementation with name 'Elitist' was found' but seems the constructor args were invalid.");
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,ReinsertionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\ReinsertionServiceTest.cs,CreateReinsertionByName_ValidNameButInvalidConstructorArgs_Exception,The following statement contains a magic number: Assert.Catch<ArgumentException>(() =>              {                  ReinsertionService.CreateReinsertionByName("Elitist"' 1' 2' 3);              }' "A IReinsertion's implementation with name 'Elitist' was found' but seems the constructor args were invalid.");
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_OffspringSizeEqualsZero_Exception,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var population = new Population(6' 8' Substitute.For<ChromosomeBase>(2));
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var offspring = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (2)'                  Substitute.For<ChromosomeBase> (3)'                  Substitute.For<ChromosomeBase> (4)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: var parents = new List<IChromosome>() {                  Substitute.For<ChromosomeBase> (5)'                  Substitute.For<ChromosomeBase> (6)'                  Substitute.For<ChromosomeBase> (7)'                  Substitute.For<ChromosomeBase> (8)              };
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: rnd.GetInt(0' 4).Returns(1);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: rnd.GetInt(0' 5).Returns(3);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(6' selected.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[0].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[1].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(3' selected[2].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[3].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[4].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(2' selected[4].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[5].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Reinsertions,UniformReinsertionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Reinsertions\UniformReinsertionTest.cs,SelectChromosomes_offspringSizeLowerThanMinSize_Selectoffspring,The following statement contains a magic number: Assert.AreEqual(4' selected[5].Length);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_NullGeneration_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                 target.SelectChromosomes(2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c1.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c2 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c2.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c3 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c4 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c4.Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var actual = target.SelectChromosomes(2' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.7' actual[0].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.5' actual[1].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: actual = target.SelectChromosomes(3' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(3' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.7' actual[0].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.5' actual[1].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.1' actual[2].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,EliteSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\EliteSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(0.1' actual[2].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullGeneration_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  target.SelectChromosomes(2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c1.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c2 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c2.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c3 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var c4 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c4.Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.1));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.5));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(0' actual.Count(c => c.Fitness == 0.0));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(0' actual.Count(c => c.Fitness == 0.0));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(0' actual.Count(c => c.Fitness == 0.0));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(100' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.AreEqual(1' actual.Count(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: FlowAssert.IsAtLeastOneAttemptOk(1000' () =>              {                  var actual = target.SelectChromosomes(2' generation);                  Assert.AreEqual(2' actual.Count);                  Assert.IsTrue(actual.All(c => c.Fitness == 0.7));              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var generation = new Generation(1' new List<IChromosome>              {                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var generation = new Generation(1' new List<IChromosome>              {                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var generation = new Generation(1' new List<IChromosome>              {                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var generation = new Generation(1' new List<IChromosome>              {                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var generation = new Generation(1' new List<IChromosome>              {                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)'                  new TspChromosome(10)              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_NullFitness_Exception,The following statement contains a magic number: var actual = Assert.Catch<SelectionException>(() =>             {                 target.SelectChromosomes(2' generation);             });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesZeroFitness,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesZeroFitness,The following statement contains a magic number: var c2 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesZeroFitness,The following statement contains a magic number: var c3 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesZeroFitness,The following statement contains a magic number: var c4 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,RouletteWheelSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\RouletteWheelSelectionTest.cs,SelectChromosomes_Generation_ChromosomesZeroFitness,The following statement contains a magic number: var actual = target.SelectChromosomes(2' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionTypes_NoArgs_AllAvailableSelections,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionTypes_NoArgs_AllAvailableSelections,The following statement contains a magic number: Assert.AreEqual(typeof(StochasticUniversalSamplingSelection)' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionTypes_NoArgs_AllAvailableSelections,The following statement contains a magic number: Assert.AreEqual(typeof(TournamentSelection)' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionNames_NoArgs_AllAvailableSelectionsNames,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionNames_NoArgs_AllAvailableSelectionsNames,The following statement contains a magic number: Assert.AreEqual("Stochastic Universal Sampling"' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,SelectionServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\SelectionServiceTest.cs,GetSelectionNames_NoArgs_AllAvailableSelectionsNames,The following statement contains a magic number: Assert.AreEqual("Tournament"' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_NullGeneration_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  target.SelectChromosomes(2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c1.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c2.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: c4.Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: rnd.GetDouble().Returns(0.3);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: var actual = target.SelectChromosomes(2' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(2' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: actual = target.SelectChromosomes(3' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(3' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4.Fitness' actual[2].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: actual = target.SelectChromosomes(4' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4.Fitness' actual[2].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c1.Fitness' actual[3].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: actual = target.SelectChromosomes(5' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(5' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4.Fitness' actual[2].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4.Fitness' actual[3].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,StochasticUniversalSamplingSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\StochasticUniversalSamplingSelectionTest.cs,SelectChromosomes_Generation_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c2.Fitness' actual[4].Fitness);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_NullGeneration_Exception,The following statement contains a magic number: var actual = Assert.Catch<ArgumentNullException>(() =>              {                  target.SelectChromosomes(2' null);              });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: var target = new TournamentSelection(3' true);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: var c0 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: c0.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: c1.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSizeGreaterThanAvailableChromosomes_Exception,The following statement contains a magic number: Assert.Catch<SelectionException>(() =>              {                  target.SelectChromosomes(2' generation);              }' "The tournament size is greater than available chromosomes. Tournament size is 3 and generation 1 available chromosomes are 2.");
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var target = new TournamentSelection(3' true);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c0 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: c0.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: c1.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c2 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c3 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: c3.Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c4 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: c4.Fitness = 0.3;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var c5 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: c5.Fitness = 0.2;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(                  new int[] { 0' 1' 2 }'                  new int[] { 3' 4' 5 }'                  new int[] { 0' 2' 4 }'                  new int[] { 1' 3' 5 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: var actual = target.SelectChromosomes(4' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentTrue_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c3' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var target = new TournamentSelection(3' false);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c0 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: c0.Fitness = 0.1;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c1 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: c1.Fitness = 0.5;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c2 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c3 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: c3.Fitness = 0.7;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c4 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: c4.Fitness = 0.3;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var c5 = Substitute.ForPartsOf<ChromosomeBase>(2);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: c5.Fitness = 0.2;
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 6).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 5).Returns(new int[] { 2' 3' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 5).Returns(new int[] { 2' 3' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 5).Returns(new int[] { 2' 3' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 5).Returns(new int[] { 2' 3' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 5).Returns(new int[] { 2' 3' 4 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 4).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 4).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 4).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 3).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 3).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: rnd.GetUniqueInts(3' 0' 3).Returns(new int[] { 0' 1' 2 });
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: var actual = target.SelectChromosomes(4' generation);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(4' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c4' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Selections,TournamentSelectionTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Selections\TournamentSelectionTest.cs,SelectChromosomes_TournamentSize3AllowWinnerCompeteNextTournamentFalse_ChromosomesSelected,The following statement contains a magic number: Assert.AreEqual(c5' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_NoStagnation_False,The following statement contains a magic number: var target = new FitnessStagnationTermination(3);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_NoStagnation_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.2 }'                 new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_NoStagnation_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.2 }'                 new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_NoStagnation_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.2 }'                 new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantButNotReachTheGenerationsNumber_False,The following statement contains a magic number: var target = new FitnessStagnationTermination(4);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantButNotReachTheGenerationsNumber_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantButNotReachTheGenerationsNumber_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantButNotReachTheGenerationsNumber_False,The following statement contains a magic number: ga.BestChromosome.Returns(                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 }'                 new ChromosomeStub() { Fitness = 0.1 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: var target = new FitnessStagnationTermination(3);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessStagnationTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessStagnationTerminationTest.cs,HasReached_StagnantAndReachGenerationNumber_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.2 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 }'                                       new ChromosomeStub() { Fitness = 0.3 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasLowerFitness_False,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.4 }'                                       new ChromosomeStub() { Fitness = 0.499 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasLowerFitness_False,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.4 }'                                       new ChromosomeStub() { Fitness = 0.499 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasLowerFitness_False,The following statement contains a magic number: var target = new FitnessThresholdTermination(0.5);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasGreaterOrEqualFitness_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.4 }'                                       new ChromosomeStub() { Fitness = 0.8 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasGreaterOrEqualFitness_True,The following statement contains a magic number: ga.BestChromosome.Returns(new ChromosomeStub() { Fitness = 0.4 }'                                       new ChromosomeStub() { Fitness = 0.8 });
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,FitnessThresholdTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\FitnessThresholdTerminationTest.cs,HasReached_BestChromosomeHasGreaterOrEqualFitness_True,The following statement contains a magic number: var target = new FitnessThresholdTermination(0.8);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: ga.GenerationsNumber.Returns(1' 2' 3' 4' 5' 6' 7' 8' 0);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: var target = new GenerationNumberTermination(10);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberLowerThanCondition_False,The following statement contains a magic number: i < 8
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberGreaterOrEqualThanCondition_True,The following statement contains a magic number: ga.GenerationsNumber.Returns(10' 11);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberGreaterOrEqualThanCondition_True,The following statement contains a magic number: ga.GenerationsNumber.Returns(10' 11);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,GenerationNumberTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\GenerationNumberTerminationTest.cs,HasReached_GenerationNumberGreaterOrEqualThanCondition_True,The following statement contains a magic number: var target = new GenerationNumberTermination(10);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationTypes_NoArgs_AllAvailableTerminations,The following statement contains a magic number: Assert.AreEqual(6' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationTypes_NoArgs_AllAvailableTerminations,The following statement contains a magic number: Assert.AreEqual(typeof(FitnessThresholdTermination)' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationTypes_NoArgs_AllAvailableTerminations,The following statement contains a magic number: Assert.AreEqual(typeof(GenerationNumberTermination)' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationTypes_NoArgs_AllAvailableTerminations,The following statement contains a magic number: Assert.AreEqual(typeof(OrTermination)' actual[4]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationTypes_NoArgs_AllAvailableTerminations,The following statement contains a magic number: Assert.AreEqual(typeof(TimeEvolvingTermination)' actual[5]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationNames_NoArgs_AllAvailableTerminationsNames,The following statement contains a magic number: Assert.AreEqual(6' actual.Count);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationNames_NoArgs_AllAvailableTerminationsNames,The following statement contains a magic number: Assert.AreEqual("Fitness Threshold"' actual[2]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationNames_NoArgs_AllAvailableTerminationsNames,The following statement contains a magic number: Assert.AreEqual("Generation Number"' actual[3]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationNames_NoArgs_AllAvailableTerminationsNames,The following statement contains a magic number: Assert.AreEqual("Or"' actual[4]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TerminationServiceTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TerminationServiceTest.cs,GetTerminationNames_NoArgs_AllAvailableTerminationsNames,The following statement contains a magic number: Assert.AreEqual("Time Evolving"' actual[5]);
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TimeEvolvingTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TimeEvolvingTerminationTest.cs,HasReached_TimeLowerThanMaxTime_False,The following statement contains a magic number: ga.TimeEvolving.Returns(TimeSpan.FromSeconds(0.1)'                                     TimeSpan.FromSeconds(00.9));
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TimeEvolvingTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TimeEvolvingTerminationTest.cs,HasReached_TimeLowerThanMaxTime_False,The following statement contains a magic number: ga.TimeEvolving.Returns(TimeSpan.FromSeconds(0.1)'                                     TimeSpan.FromSeconds(00.9));
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TimeEvolvingTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TimeEvolvingTerminationTest.cs,HasReached_TimeGreaterOrEqualMaxTime_True,The following statement contains a magic number: ga.TimeEvolving.Returns(TimeSpan.FromSeconds(0.1)'                                     TimeSpan.FromSeconds(0.9)'                                     TimeSpan.FromSeconds(1)'                                     TimeSpan.FromSeconds(1.1));
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TimeEvolvingTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TimeEvolvingTerminationTest.cs,HasReached_TimeGreaterOrEqualMaxTime_True,The following statement contains a magic number: ga.TimeEvolving.Returns(TimeSpan.FromSeconds(0.1)'                                     TimeSpan.FromSeconds(0.9)'                                     TimeSpan.FromSeconds(1)'                                     TimeSpan.FromSeconds(1.1));
Magic Number,GeneticSharp.Domain.UnitTests.Terminations,TimeEvolvingTerminationTest,D:\research\architectureSmells\repos\giacomelli_GeneticSharp\src\GeneticSharp.Domain.UnitTests\Terminations\TimeEvolvingTerminationTest.cs,HasReached_TimeGreaterOrEqualMaxTime_True,The following statement contains a magic number: ga.TimeEvolving.Returns(TimeSpan.FromSeconds(0.1)'                                     TimeSpan.FromSeconds(0.9)'                                     TimeSpan.FromSeconds(1)'                                     TimeSpan.FromSeconds(1.1));
