Implementation smell,Namespace,Class,File,Method,Description
Long Statement,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,GetObjectProperties,The length of the statement  "            return objectType.GetProperties(BindingFlags.Instance | BindingFlags.Public | BindingFlags.DeclaredOnly).Where(p => p.CanWrite).ToArray();" is 138.
Long Statement,GeneticSharp.Runner.GtkApp.Samples,BitmapEqualitySampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\BitmapEqualitySampleController.cs,InitializeFitness,The length of the statement  "                var resolutionSize = new Size(Convert.ToInt32(m_targetBitmap.Width * m_resolution)' Convert.ToInt32(m_targetBitmap.Height * m_resolution)); " is 139.
Virtual Method Call from Constructor,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,PropertyEditor,The constructor "PropertyEditor" calls a virtual method "Build".
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,BindToWidget,The following statement contains a magic number: foreach (var p in GetObjectProperties(m_objectType))              {                 var hbox = new HBox();                  var label = new Label(p.Name);                 hbox.Add(label);                 var value = p.GetValue(ObjectInstance' null);                 Widget input = null;                  if (p.PropertyType == typeof(int))                  {                      var spinButton = new SpinButton(0' int.MaxValue' 1);                      spinButton.Value = Convert.ToDouble(value);                      input = spinButton;                 }                  if (p.PropertyType == typeof(bool))                  {                      var toggle = new ToggleButton();                      toggle.Active = Convert.ToBoolean(value);                      input = toggle;                 }                 else if (p.PropertyType == typeof(float) || p.PropertyType == typeof(double))                  {                      var horizontalScale = new HScale(0' 1' 0.05);                        if (ObjectInstance != null)                      {                         horizontalScale.Value = Convert.ToDouble(value);                      }                        input = horizontalScale;                 }                 else if (p.PropertyType == typeof(TimeSpan))                  {                      var secondsHBox = new HBox();                      var seconds = new SpinButton(0' int.MaxValue' 1);                      seconds.Value = ((TimeSpan)value).TotalSeconds;                      secondsHBox.Add(seconds);                        var secondsLabel = new Label("seconds");                      secondsHBox.Add(secondsLabel);                        input = secondsHBox;                 }                  if (input != null)                  {                      m_widgetMap.Add(p' input);                      hbox.Add(input);                 }                    VBox.Add(hbox);              }
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: this.WindowPosition = ((global::Gtk.WindowPosition)(2));
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: this.DefaultWidth = 100;
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: this.DefaultHeight = 50;
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: w1.BorderWidth = ((uint)(2));
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: w2.Spacing = 10;
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: w2.BorderWidth = ((uint)(5));
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: w2.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: this.AddActionWidget(this.buttonCancel' -6);
Magic Number,GeneticSharp.Runner.GtkApp,PropertyEditor,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\PropertyEditor.cs,Build,The following statement contains a magic number: this.AddActionWidget(this.buttonOk' -5);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateFitness,The following statement contains a magic number: return new FuncFitness((chromosome) =>  			{  				var c = chromosome as FloatingPointChromosome;    				var values = c.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateFitness,The following statement contains a magic number: return new FuncFitness((chromosome) =>  			{  				var c = chromosome as FloatingPointChromosome;    				var values = c.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateFitness,The following statement contains a magic number: return new FuncFitness((chromosome) =>  			{  				var c = chromosome as FloatingPointChromosome;    				var values = c.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateFitness,The following statement contains a magic number: return new FuncFitness((chromosome) =>  			{  				var c = chromosome as FloatingPointChromosome;    				var values = c.ToFloatingPoints();  				var x1 = values[0];  				var y1 = values[1];  				var x2 = values[2];  				var y2 = values[3];    				// Euclidean distance: https://en.wikipedia.org/wiki/Euclidean_distance  				return Math.Sqrt(Math.Pow(x2 - x1' 2) + Math.Pow(y2 - y1' 2));  			});
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateChromosome,The following statement contains a magic number: return new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { w' h' w' h }'  				new int[] { 16' 16' 16' 16 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateChromosome,The following statement contains a magic number: return new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { w' h' w' h }'  				new int[] { 16' 16' 16' 16 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateChromosome,The following statement contains a magic number: return new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { w' h' w' h }'  				new int[] { 16' 16' 16' 16 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateChromosome,The following statement contains a magic number: return new FloatingPointChromosome(  				new double[] { 0' 0' 0' 0 }'  				new double[] { w' h' w' h }'  				new int[] { 16' 16' 16' 16 }'  				new int[] { 0' 0' 0' 0 });
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,CreateTermination,The following statement contains a magic number: return new FitnessStagnationTermination(100);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,ConfigGA,The following statement contains a magic number: Context.GA.GenerationRan += (object sender' EventArgs e) =>  			{  				m_bestChromosome = Context.GA.BestChromosome as FloatingPointChromosome;    				if (m_bestChromosome != null)  				{  					lock (m_positions)  					{  						var fitness = m_bestChromosome.Fitness.Value;  						var points = m_bestChromosome.ToFloatingPoints();    						m_positions.Add(new KeyValuePair<double' double[]>(fitness' points));      						if (fitness != latestFitness)  						{  							latestFitness = fitness;  							var phenotype = m_bestChromosome.ToFloatingPoints();    							Console.WriteLine(  								"Generation {0'2}: ({1}'{2})'({3}'{4}) = {5}"'  								ga.GenerationsNumber'  								phenotype[0]'  								phenotype[1]'  								phenotype[2]'  								phenotype[3]'  								fitness  							);  						}  					}  				}  			};
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,ConfigGA,The following statement contains a magic number: Context.GA.GenerationRan += (object sender' EventArgs e) =>  			{  				m_bestChromosome = Context.GA.BestChromosome as FloatingPointChromosome;    				if (m_bestChromosome != null)  				{  					lock (m_positions)  					{  						var fitness = m_bestChromosome.Fitness.Value;  						var points = m_bestChromosome.ToFloatingPoints();    						m_positions.Add(new KeyValuePair<double' double[]>(fitness' points));      						if (fitness != latestFitness)  						{  							latestFitness = fitness;  							var phenotype = m_bestChromosome.ToFloatingPoints();    							Console.WriteLine(  								"Generation {0'2}: ({1}'{2})'({3}'{4}) = {5}"'  								ga.GenerationsNumber'  								phenotype[0]'  								phenotype[1]'  								phenotype[2]'  								phenotype[3]'  								fitness  							);  						}  					}  				}  			};
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: var plotMargin = 10;
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: var plotMinY = 60;
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: buffer.DrawLayout(gc' plotWidth - plotMinX - 100' plotMinY + plotHeight' layout);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: var maxX2 = positions.Max(p => p.Value[2]);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: var maxY2 = positions.Max(p => p.Value[3]);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: for (int i = 0; i < positions.Count; i++)  			{  				var p = positions[i];    				var x1 = plotMinX + Convert.ToInt32((plotWidth * p.Value[0]) / maxX1);  				var y1 = plotMinY + Convert.ToInt32((plotHeight * p.Value[1]) / maxY1);  				var point = new Gdk.Point(x1' y1);  				buffer.DrawRectangle(gc' true' point.X' point.Y' 1' 1);  				points.Add(point);    				var x2 = plotMinX + Convert.ToInt32((plotWidth * p.Value[2]) / maxX2);  				var y2 = plotMinY + Convert.ToInt32((plotHeight * p.Value[3]) / maxY2);  				point = new Gdk.Point(x2' y2);  				buffer.DrawRectangle(gc' true' point.X' point.Y' 1' 1);  				points.Add(point);  			}
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: for (int i = 0; i < positions.Count; i++)  			{  				var p = positions[i];    				var x1 = plotMinX + Convert.ToInt32((plotWidth * p.Value[0]) / maxX1);  				var y1 = plotMinY + Convert.ToInt32((plotHeight * p.Value[1]) / maxY1);  				var point = new Gdk.Point(x1' y1);  				buffer.DrawRectangle(gc' true' point.X' point.Y' 1' 1);  				points.Add(point);    				var x2 = plotMinX + Convert.ToInt32((plotWidth * p.Value[2]) / maxX2);  				var y2 = plotMinY + Convert.ToInt32((plotHeight * p.Value[3]) / maxY2);  				point = new Gdk.Point(x2' y2);  				buffer.DrawRectangle(gc' true' point.X' point.Y' 1' 1);  				points.Add(point);  			}
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color(255' 0' 0);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: gc.SetLineAttributes(2' Gdk.LineStyle.Solid' Gdk.CapStyle.Butt' Gdk.JoinStyle.Round);
Magic Number,GeneticSharp.Runner.GtkApp,FunctionOptimizationSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\FunctionOptimizationSampleController.cs,Plot,The following statement contains a magic number: buffer.DrawLines(gc' points.Skip(points.Count - 2).ToArray());
Magic Number,GeneticSharp.Runner.GtkApp.Samples,BitmapEqualitySampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\BitmapEqualitySampleController.cs,CreateConfigWidget,The following statement contains a magic number: var resolutionButton = new SpinButton(0.01' 1' 0.01);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,BitmapEqualitySampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\BitmapEqualitySampleController.cs,CreateConfigWidget,The following statement contains a magic number: var resolutionButton = new SpinButton(0.01' 1' 0.01);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,BitmapEqualitySampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\BitmapEqualitySampleController.cs,CreateConfigWidget,The following statement contains a magic number: resolutionButton.Value = 100;
Magic Number,GeneticSharp.Runner.GtkApp.Samples,BitmapEqualitySampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\BitmapEqualitySampleController.cs,Draw,The following statement contains a magic number: if (ga != null)              {                  var generationsNumber = ga.GenerationsNumber;                  var bestChromosome = ga.BestChromosome;                    //// if (generationsNumber == 1 || (generationsNumber % 200 == 0 && m_lastBest.Fitness != bestChromosome.Fitness))                  if (bestChromosome != null)                  {                      var best = bestChromosome as BitmapChromosome;                      var buffer = Context.Buffer;                      var gc = Context.GC;                      var layout = Context.Layout;                        using (var bitmap = best.BuildBitmap())                      {                          //// bitmap.Save("{0}/{1}_{2}.png".With(m_destFolder' generationsNumber.ToString("D10")' best.Fitness));                            using (var ms = new MemoryStream())                          {                              var converter = new ImageConverter();                                var imageBytes = (byte[])converter.ConvertTo(bitmap' typeof(byte[]));                              var pb = new Gdk.Pixbuf(imageBytes);                              var width = Context.DrawingArea.Width;                              var height = Context.DrawingArea.Height;                                pb = pb.ScaleSimple(width' height' Gdk.InterpType.Nearest);                              buffer.DrawPixbuf(gc' pb' 0' 0' 0' 100' width' height' Gdk.RgbDither.None' 0' 0);                          }                      }                        //// m_lastBest = best;                  }              }
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleControllerBase,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleControllerBase.cs,CreateTermination,The following statement contains a magic number: return new FitnessStagnationTermination(1000);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,WriteText,The following statement contains a magic number: m_lastTextY += 20;
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.RgbBgColor = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.RgbBgColor = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.RgbBgColor = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.Background = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.Background = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,SampleContext,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\SampleContext.cs,CreateGC,The following statement contains a magic number: gc.Background = new Gdk.Color(255' 255' 255);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,CreateConfigWidget,The following statement contains a magic number: var citiesNumber = new SpinButton(2' 10000' 2);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,CreateConfigWidget,The following statement contains a magic number: var citiesNumber = new SpinButton(2' 10000' 2);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,CreateConfigWidget,The following statement contains a magic number: var citiesNumber = new SpinButton(2' 10000' 2);
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,CreateConfigWidget,The following statement contains a magic number: citiesNumber.ValueChanged += delegate              {                  m_numberOfCities = citiesNumber.ValueAsInt - (citiesNumber.ValueAsInt % 2);                  citiesNumber.Value = m_numberOfCities;                  OnReconfigured();              };
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,Draw,The following statement contains a magic number: foreach (var c in m_fitness.Cities)              {                  buffer.DrawRectangle(gc' true' c.X - 2' c.Y - 2' 4' 4);              }
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,Draw,The following statement contains a magic number: foreach (var c in m_fitness.Cities)              {                  buffer.DrawRectangle(gc' true' c.X - 2' c.Y - 2' 4' 4);              }
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,Draw,The following statement contains a magic number: foreach (var c in m_fitness.Cities)              {                  buffer.DrawRectangle(gc' true' c.X - 2' c.Y - 2' 4' 4);              }
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,Draw,The following statement contains a magic number: foreach (var c in m_fitness.Cities)              {                  buffer.DrawRectangle(gc' true' c.X - 2' c.Y - 2' 4' 4);              }
Magic Number,GeneticSharp.Runner.GtkApp.Samples,TspSampleController,C:\repos\giacomelli_GeneticSharp\src\GeneticSharp.Runner.GtkApp\Samples\TspSampleController.cs,Draw,The following statement contains a magic number: if (m_bestChromosome != null)              {                  var genes = m_bestChromosome.GetGenes();                    for (int i = 0; i < genes.Length; i += 2)                  {                      var cityOneIndex = Convert.ToInt32(genes[i].Value);                      var cityTwoIndex = Convert.ToInt32(genes[i + 1].Value);                      var cityOne = m_fitness.Cities[cityOneIndex];                      var cityTwo = m_fitness.Cities[cityTwoIndex];                        if (i > 0)                      {                          var previousCity = m_fitness.Cities[Convert.ToInt32(genes[i - 1].Value)];                          buffer.DrawLine(gc' previousCity.X' previousCity.Y' cityOne.X' cityOne.Y);                      }                        buffer.DrawLine(gc' cityOne.X' cityOne.Y' cityTwo.X' cityTwo.Y);                        if (m_showIndexes)                      {                          layout.SetMarkup("<span color='black'>{0}</span>".With(i));                          buffer.DrawLayout(gc' cityOne.X' cityOne.Y' layout);                            layout.SetMarkup("<span color='black'>{0}</span>".With(i + 1));                          buffer.DrawLayout(gc' cityTwo.X' cityTwo.Y' layout);                      }                  }                    var lastCity = m_fitness.Cities[Convert.ToInt32(genes[genes.Length - 1].Value)];                  var firstCity = m_fitness.Cities[Convert.ToInt32(genes[0].Value)];                  buffer.DrawLine(gc' lastCity.X' lastCity.Y' firstCity.X' firstCity.Y);                    Context.WriteText("Distance: {0:n2}"' m_bestChromosome.Distance);              }
