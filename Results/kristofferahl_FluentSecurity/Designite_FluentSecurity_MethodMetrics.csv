Method,LOC,CC,PC
PolicyResultCacheStrategy:PolicyResultCacheStrategy,7,1,5
ICacheKeyProvider:Get,0,1,1
PolicyResultCacheKeyBuilder:CreateFromStrategy,5,1,3
PolicyResultCacheKeyBuilder:BuildPolicyCacheKey,16,5,3
PolicyResultCacheKeyBuilder:BuildCacheKey,16,2,2
ISecurityCache:Get,0,1,2
ISecurityCache:Store,0,1,3
ISecurityCache:Clear,0,1,1
PolicyResultCacheExtensions:ToLifecycle,11,2,1
SecurityCache:ClearCache,3,1,1
SecurityCache:Get,4,1,2
SecurityCache:Store,4,1,3
SecurityCache:Clear,4,1,1
AdvancedConfiguration:AdvancedConfiguration,12,3,1
AdvancedConfiguration:IgnoreMissingConfiguration,3,1,0
AdvancedConfiguration:ModifySecurityContext,3,1,1
AdvancedConfiguration:SetDefaultResultsCacheLifecycle,3,1,1
AdvancedConfiguration:Violations,4,2,1
AdvancedConfiguration:Conventions,4,2,1
SecurityProfile:Configure,0,1,0
SecurityProfile:ForAllControllers,7,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:PolicyContainerConfigurationWrapper,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:AddPolicy,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:AddPolicy,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:RemovePolicy,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:Cache,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:Cache,3,1,2
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:ClearCacheStrategies,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:ClearCacheStrategyFor,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:DoNotCache,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:DoNotCache,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:CachePerHttpRequest,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:CachePerHttpRequest,3,1,1
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:CachePerHttpSession,3,1,0
PolicyContainerConfigurationWrapper<TCurrentSecurityPolicy>:CachePerHttpSession,3,1,1
ViolationHandlerConfiguration<TSecurityPolicy>:ViolationHandlerConfiguration,1,1,1
ViolationHandlerConfiguration<TSecurityPolicy>:IsHandledBy,3,1,0
ViolationHandlerConfiguration<TSecurityPolicy>:IsHandledBy,3,1,1
ViolationHandlerConfiguration:ViolationHandlerConfiguration,4,2,2
ViolationHandlerConfiguration:IsHandledBy,3,1,0
ViolationHandlerConfiguration:IsHandledBy,3,1,1
ViolationHandlerConfigurationBase:ViolationHandlerConfigurationBase,4,2,1
ViolationConfiguration:ViolationConfiguration,4,2,1
ViolationConfiguration:AddConvention,4,2,1
ViolationConfiguration:RemoveConventions,3,1,0
ViolationConfiguration:RemoveConventions,8,2,1
ViolationConfiguration:Of,3,1,0
ViolationConfiguration:Of,3,1,1
ConventionConfiguration:ConventionConfiguration,3,1,1
ConventionConfiguration:Add,3,1,1
ConventionConfiguration:Remove,3,1,1
ConventionConfiguration:RemoveAll,3,1,1
ConventionConfiguration:Insert,3,1,2
IPolicyContainerConfiguration:AddPolicy,0,1,1
IPolicyContainerConfiguration:AddPolicy,0,1,0
IPolicyContainerConfiguration:RemovePolicy,0,1,1
IPolicyContainerConfiguration:Cache,0,1,1
IPolicyContainerConfiguration:Cache,0,1,2
IPolicyContainerConfiguration:ClearCacheStrategies,0,1,0
IPolicyContainerConfiguration:ClearCacheStrategyFor,0,1,0
IPolicyContainerConfiguration:DoNotCache,0,1,0
IPolicyContainerConfiguration:DoNotCache,0,1,1
IPolicyContainerConfiguration:CachePerHttpRequest,0,1,0
IPolicyContainerConfiguration:CachePerHttpRequest,0,1,1
IPolicyContainerConfiguration:CachePerHttpSession,0,1,0
IPolicyContainerConfiguration:CachePerHttpSession,0,1,1
ProfileImport:ProfileImport,3,1,1
ProfileImport:MarkCompleted,3,1,0
RootConfiguration:RootConfiguration,3,1,0
DefaultPolicyAppender:UpdatePolicies,16,4,2
AnonymousSecurityEventListener:AnonymousSecurityEventListener,5,2,1
AnonymousSecurityEventListener:Handle,7,1,1
ISecurityEventListener:Handle,0,1,1
Publish:RuntimeEvent,3,1,2
Publish:RuntimeEvent,3,1,3
Publish:RuntimePolicyEvent,3,1,2
Publish:RuntimePolicyEvent,3,1,3
Publish:ConfigurationEvent,3,1,1
Publish:ConfigurationEvent,3,1,2
Publish:PublishEvent,9,3,1
Publish:PublishEventWithTiming,14,3,2
SecurityDoctor:SecurityDoctor,3,1,0
SecurityDoctor:Register,3,1,1
SecurityDoctor:Register,3,1,1
SecurityDoctor:Reset,3,1,0
SecurityDoctor:SecurityDoctor,5,1,0
SecurityDoctor:ScanForEventListeners,17,3,0
SecurityDoctor:RegisterListener,3,1,1
SecurityDoctor:RegisterListener,4,2,1
SecurityEventListenerScanner:Scan,3,1,1
SecurityEventListenerScanner:TypeIsExternalListener,7,1,1
IWhatDoIHaveBuilder:WhatDoIHave,0,1,1
DefaultWhatDoIHaveBuilder:WhatDoIHave,17,2,1
SecurityEvent:SecurityEvent,4,1,2
RuntimePolicyEvent:RuntimePolicyEvent,1,1,2
ConfigurationEvent:ConfigurationEvent,1,1,2
RuntimeEvent:RuntimeEvent,1,1,2
AssemblyExtensions:AssemblyExtensions,3,1,0
AssemblyExtensions:Reset,3,1,0
AssemblyExtensions:GetLoadableTypes,11,2,1
AssemblyExtensions:GetLoadableExportedTypes,11,2,1
ControllerActionInfo:ControllerActionInfo,5,1,2
ExceptionFactory:ExceptionFactory,3,1,0
ExceptionFactory:CreateConfigurationErrorsException,5,1,1
ExceptionFactory:CreateRequestDescriptionString,9,1,1
ExceptionFactory:Reset,3,1,0
HttpContextRequestDescription:HttpContextRequestDescription,6,1,0
HttpContextRequestDescription:GetRoute,5,1,0
TypeExtensions:HasEmptyConstructor,5,1,1
TypeExtensions:IsMatchForGenericType,6,3,2
TypeExtensions:IsAssignableFromGenericType,12,5,2
TypeExtensions:HasSameGenericSignature,14,4,2
ConfigurationExpression:Initialize,5,1,1
ConfigurationExpression:For,5,1,1
ConfigurationExpression:For,5,1,1
ConfigurationExpression:For,5,1,0
ConfigurationExpression:ForAllControllers,7,1,0
ConfigurationExpression:ForAllControllersInAssembly,7,1,1
ConfigurationExpression:ForAllControllersInAssemblyContainingType,4,1,0
ConfigurationExpression:ForAllControllersInheriting,5,2,2
ConfigurationExpression:ForAllControllersInheriting,4,1,1
ConfigurationExpression:ForAllControllersInheriting,12,2,2
ConfigurationExpression:ForAllControllersInNamespaceContainingType,9,1,0
ConfigurationExpression:ForActionsMatching,12,2,2
ConfigurationExpression:Scan,7,1,1
ConfigurationExpression:ApplyProfile,5,1,0
ConfigurationExpression:ApplyProfile,8,2,1
ConfigurationExpression:CreateConventionPolicyContainerFor,12,2,3
ConfigurationExpression:AddPolicyContainerFor,3,1,2
ConfigurationExpression:GetAuthenticationStatusFrom,5,2,1
ConfigurationExpression:GetRolesFrom,7,3,1
ConfigurationExpression:SetPolicyAppender,6,2,1
ConfigurationExpression:ResolveServicesUsing,5,2,2
ConfigurationExpression:ResolveServicesUsing,5,2,1
ConfigurationExpression:DefaultPolicyViolationHandlerIs,6,1,0
ConfigurationExpression:DefaultPolicyViolationHandlerIs,6,1,1
ConfigurationExpression:RemoveDefaultPolicyViolationHandlerConventions,8,1,0
ConventionPolicyContainer:ConventionPolicyContainer,7,2,2
ConventionPolicyContainer:AddPolicy,6,2,1
ConventionPolicyContainer:AddPolicy,3,1,0
ConventionPolicyContainer:RemovePolicy,5,2,1
ConventionPolicyContainer:Cache,3,1,1
ConventionPolicyContainer:Cache,5,2,2
ConventionPolicyContainer:ClearCacheStrategies,5,2,0
ConventionPolicyContainer:ClearCacheStrategyFor,5,2,0
Extensions:GetContainerFor,3,1,3
Extensions:GetControllerName,3,1,1
Extensions:GetActionName,4,1,1
Extensions:GetActionName,8,2,1
Extensions:GetPolicyType,6,1,1
Extensions:GetActionMethods,12,2,2
Extensions:IsValidActionMethod,6,1,1
Extensions:IsDeclaredBy,5,1,1
Extensions:IsControllerActionReturnType,8,1,1
Extensions:GetAreaName,8,2,1
Extensions:GetAreaName,13,3,1
Extensions:EnsureNonLazyPolicy,6,1,1
Extensions:EnsureNonLazyPolicyOf,3,1,1
Extensions:IsPolicyOf,5,2,1
Extensions:IsCacheKeyProvider,3,1,1
Extensions:Each,4,2,2
Extensions:EnsureIsList,5,1,1
Extensions:IsNullOrEmpty,3,1,1
Extensions:FormatWith,3,1,2
Extensions:ToText,8,2,1
SecurityRuntime:SecurityRuntime,4,1,0
SecurityRuntime:ApplyConfiguration,5,2,1
SecurityRuntime:ApplyConfiguration,6,2,1
SecurityRuntime:ApplyConfiguration,12,3,1
SecurityRuntime:AddPolicyContainer,7,3,1
IPolicyViolationHandlerSelector:FindHandlerFor,0,1,1
ISecurityConfiguration:AssertAllActionsAreConfigured,0,1,0
ISecurityConfiguration:AssertAllActionsAreConfigured,0,1,1
ISecurityConfiguration:WhatDoIHave,0,1,0
IPolicyAppender:UpdatePolicies,0,1,2
ISecurityContext:CurrentUserIsAuthenticated,0,1,0
ISecurityContext:CurrentUserRoles,0,1,0
ISecurityHandler:HandleSecurityFor,0,1,3
IPolicyViolationHandler:Handle,0,1,1
PolicyResult:PolicyResult,1,1,0
PolicyResult:PolicyResult,5,1,3
PolicyResult:PolicyResult,1,1,3
PolicyResult:CreateSuccessResult,8,1,1
PolicyResult:CreateFailureResult,11,3,2
PolicyViolationException:PolicyViolationException,5,1,2
SecurityConfiguration:SecurityConfiguration,9,2,1
SecurityConfiguration:WhatDoIHave,3,1,0
SecurityConfiguration:AssertAllActionsAreConfigured,25,2,1
SecurityConfiguration:AssertAllActionsAreConfigured,12,1,0
SecurityConfiguration:SetConfiguration,8,2,1
SecurityConfiguration:Reset,6,1,0
SecurityConfiguration:EnsureConfigured,3,2,0
HandleSecurityAttribute:HandleSecurityAttribute,1,1,0
HandleSecurityAttribute:HandleSecurityAttribute,3,1,1
HandleSecurityAttribute:OnAuthorization,8,2,1
IPolicyContainer:GetPolicies,0,1,0
IPolicyContainer:EnforcePolicies,0,1,1
SecurityConfigurator:SecurityConfigurator,3,1,0
SecurityConfigurator:Configure,17,3,1
SecurityConfigurator:SetConfiguration,9,2,1
SecurityConfigurator:Reset,8,1,0
SecurityContext:SecurityContext,7,2,1
SecurityContext:CurrentUserIsAuthenticated,3,1,0
SecurityContext:CurrentUserRoles,3,1,0
SecurityContext:CreateFrom,22,5,1
SecurityHandler:HandleSecurityFor,31,6,3
PolicyContainer:PolicyContainer,14,4,3
PolicyContainer:EnforcePolicies,29,4,1
PolicyContainer:CreateMessageForResult,10,1,3
PolicyContainer:NonLazyIfPolicyHasCacheKeyProvider,3,1,0
PolicyContainer:AddPolicy,11,1,1
PolicyContainer:AddPolicy,3,1,0
PolicyContainer:RemovePolicy,21,3,1
PolicyContainer:Cache,3,1,1
PolicyContainer:Cache,7,2,2
PolicyContainer:ClearCacheStrategies,4,1,0
PolicyContainer:ClearCacheStrategyFor,5,1,0
PolicyContainer:GetPolicies,3,1,0
PolicyContainer:GetExecutionCacheStrategyForPolicy,4,1,2
PolicyContainer:GetExistingCacheStrategyForPolicy,3,1,1
PolicyContainer:ToString,3,1,0
PolicyContainerExtensions:AllowAny,4,1,1
PolicyContainerExtensions:DelegatePolicy,4,1,4
PolicyContainerExtensions:DelegatePolicy,8,1,5
PolicyContainerExtensions:DenyAnonymousAccess,4,1,1
PolicyContainerExtensions:DenyAuthenticatedAccess,4,1,1
PolicyContainerExtensions:Ignore,4,1,1
PolicyContainerExtensions:RequireRole,4,1,2
PolicyContainerExtensions:RequireAnyRole,4,1,2
PolicyContainerExtensions:RequireAllRoles,4,1,2
ILazySecurityPolicy:Load,0,1,0
LazySecurityPolicy<TSecurityPolicy>:Load,11,3,0
LazySecurityPolicy<TSecurityPolicy>:Enforce,9,2,1
RequireAllRolesPolicy:RequireAllRolesPolicy,7,3,1
RequireAllRolesPolicy:Enforce,14,4,1
RequireAllRolesPolicy:Equals,3,1,1
RequireAllRolesPolicy:Equals,5,3,1
RequireAllRolesPolicy:GetHashCode,14,1,0
RequireAllRolesPolicy:ToString,5,1,0
RequireAllRolesPolicy:GetRoles,6,2,0
DelegatePolicy:DelegatePolicy,9,3,3
DelegatePolicy:Enforce,5,1,1
RequireAnyRolePolicy:RequireAnyRolePolicy,7,3,1
RequireAnyRolePolicy:Enforce,14,4,1
RequireAnyRolePolicy:Equals,3,1,1
RequireAnyRolePolicy:Equals,5,3,1
RequireAnyRolePolicy:GetHashCode,14,1,0
RequireAnyRolePolicy:ToString,5,1,0
RequireAnyRolePolicy:GetRoles,7,2,0
SecurityPolicyBase<TSecurityContext>:Enforce,0,1,1
SecurityPolicyBase<TSecurityContext>:Enforce,9,2,1
SecurityPolicyBase<TSecurityContext>:TryGetFromContainer,3,1,0
SecurityPolicyBase<TSecurityContext>:TryCreateEmptyConstructorContext,8,2,0
SecurityPolicyBase<TSecurityContext>:TryCreateSingleArgumentContext,9,2,1
DenyAuthenticatedAccessPolicy:Enforce,7,2,1
IgnorePolicy:Enforce,3,1,1
ISecurityPolicy:Enforce,0,1,1
DenyAnonymousAccessPolicy:Enforce,7,2,1
RequireRolePolicy:RequireRolePolicy,1,1,1
MvcSecurityContext:MvcSecurityContext,3,1,1
DelegateSecurityContext:DelegateSecurityContext,3,1,2
SecurityContextWrapper:SecurityContextWrapper,6,2,1
SecurityContextWrapper:CurrentUserIsAuthenticated,3,1,0
SecurityContextWrapper:CurrentUserRoles,3,1,0
DelegatePolicyResult:DelegatePolicyResult,6,2,3
DefaultPolicyViolationHandlerIsInstanceConvention<TPolicyViolationHandler>:DefaultPolicyViolationHandlerIsInstanceConvention,1,1,1
FindByPolicyNameConvention:GetHandlerFor,4,1,2
FindByPolicyNameConvention:HandlerIsMatchForPolicyName,5,1,2
FindDefaultPolicyViolationHandlerByNameConvention:GetHandlerFor,4,1,2
FindDefaultPolicyViolationHandlerByNameConvention:HandlerIsDefaultPolicyViolationHandler,4,1,1
IPolicyViolationHandlerConvention:GetHandlerFor,0,1,1
LazyInstancePolicyViolationHandlerConvention<TPolicyViolationHandler>:LazyInstancePolicyViolationHandlerConvention,1,1,1
LazyInstancePolicyViolationHandlerConvention<TPolicyViolationHandler>:LazyInstancePolicyViolationHandlerConvention,6,3,2
LazyInstancePolicyViolationHandlerConvention<TPolicyViolationHandler>:GetHandlerFor,3,1,1
LazyTypePolicyViolationHandlerConvention<TPolicyViolationHandler>:LazyTypePolicyViolationHandlerConvention,1,1,0
LazyTypePolicyViolationHandlerConvention<TPolicyViolationHandler>:LazyTypePolicyViolationHandlerConvention,4,2,1
LazyTypePolicyViolationHandlerConvention<TPolicyViolationHandler>:GetHandlerTypeFor,3,1,1
PolicyTypeToPolicyViolationHandlerInstanceConvention<TSecurityPolicy;TPolicyViolationHandler>:PolicyTypeToPolicyViolationHandlerInstanceConvention,1,1,1
PolicyTypeToPolicyViolationHandlerTypeConvention<TSecurityPolicy;TPolicyViolationHandler>:PolicyTypeToPolicyViolationHandlerTypeConvention,1,1,0
PolicyViolationHandlerFilterConvention:GetHandlerFor,0,1,2
PolicyViolationHandlerFilterConvention:GetHandlerFor,4,1,1
PolicyViolationHandlerTypeConvention:GetHandlerTypeFor,0,1,1
PolicyViolationHandlerTypeConvention:GetHandlerFor,9,3,1
PredicateToPolicyViolationHandlerInstanceConvention<TPolicyViolationHandler>:PredicateToPolicyViolationHandlerInstanceConvention,1,1,2
PredicateToPolicyViolationHandlerTypeConvention<TPolicyViolationHandler>:PredicateToPolicyViolationHandlerTypeConvention,1,1,1
DelegatePolicyViolationHandler:DelegatePolicyViolationHandler,3,1,1
DelegatePolicyViolationHandler:Handle,10,3,1
DelegatePolicyViolationHandler:HandlerIsMatchForException,5,1,2
PolicyViolationHandlerSelector:PolicyViolationHandlerSelector,4,2,1
PolicyViolationHandlerSelector:FindHandlerFor,20,3,1
ExceptionPolicyViolationHandler:Handle,3,1,1
HttpUnauthorizedPolicyViolationHandler:Handle,5,2,1
AssemblyScanner:AssemblyScanner,3,1,0
AssemblyScanner:Assembly,3,1,1
AssemblyScanner:Assemblies,6,3,1
AssemblyScanner:TheCallingAssembly,4,2,0
AssemblyScanner:FindCallingAssembly,16,3,0
AssemblyScanner:AssembliesFromApplicationBaseDirectory,3,1,0
AssemblyScanner:AssembliesFromApplicationBaseDirectory,6,1,1
AssemblyScanner:AssembliesFromPath,10,4,2
AssemblyScanner:IncludeAssembly,4,1,1
AssemblyScanner:ExcludeAssembly,4,1,1
AssemblyScanner:With,3,1,1
AssemblyScanner:With,3,1,0
AssemblyScanner:IncludeNamespaceContainingType,9,1,0
AssemblyScanner:ExcludeNamespaceContainingType,9,1,0
AssemblyScanner:Scan,9,1,0
ScannerContext:AddAssembly,5,3,1
ScannerContext:AddTypeScanner,5,3,1
ScannerContext:AddMatchOneTypeFilter,4,2,1
ScannerContext:AddMatchAllTypeFilter,4,2,1
ScannerContext:AddMatchOneFileFilter,4,2,1
ScannerContext:AddMatchAllFileFilter,4,2,1
ScannerContext:FiltersMatchFile,12,2,1
ScannerContext:FiltersMatchType,5,1,1
ProfileScanner:LookForProfiles,3,1,0
ControllerTypeScanner:ControllerTypeScanner,1,1,0
ControllerTypeScanner:ControllerTypeScanner,5,2,1
ControllerTypeScanner:Scan,12,2,1
ITypeScanner:Scan,0,1,1
ProfileTypeScanner:Scan,11,2,1
ExternalServiceLocator:ExternalServiceLocator,5,2,2
ExternalServiceLocator:Resolve,5,2,1
ExternalServiceLocator:ResolveAll,3,1,1
Container:Register,4,1,2
Container:Resolve,3,1,0
Container:Resolve,3,1,1
Container:ResolveAll,3,1,0
Container:ResolveAll,3,1,1
Container:SetPrimarySource,3,1,1
Container:ResolveObjects,16,5,1
Container:ResolveObject,13,4,1
Container:GetInstance,11,2,1
IContainer:Register,0,1,2
IContainer:Resolve,0,1,0
IContainer:Resolve,0,1,1
IContainer:ResolveAll,0,1,0
IContainer:ResolveAll,0,1,1
IContainer:SetPrimarySource,0,1,1
IContainerSource:Resolve,0,1,1
IContainerSource:ResolveAll,0,1,1
Lifecycle<TLifecycle>:Lifecycle,3,1,0
LifecycleExtensions:Get,13,2,1
RegisteredObject:RegisteredObject,6,1,3
RegisteredObject:CreateInstance,3,1,1
ServiceLocator:ServiceLocator,16,1,0
ServiceLocator:Reset,6,1,0
ServiceLocator:Resolve,3,1,1
ServiceLocator:Resolve,3,1,0
ServiceLocator:ResolveAll,3,1,1
ServiceLocator:ResolveAll,3,1,0
TypeNotRegisteredException:TypeNotRegisteredException,1,1,1
HttpContextLifecycle:HttpContextLifecycle,4,1,0
HttpContextLifecycle:FindCache,16,2,0
HttpContextLifecycle:HasContext,3,1,0
HttpContextLifecycle:FindHttpDictionary,4,2,0
HttpSessionLifecycle:HttpSessionLifecycle,4,1,0
HttpSessionLifecycle:FindCache,16,2,0
HttpSessionLifecycle:HasSession,3,1,0
HttpSessionLifecycle:FindHttpDictionary,4,2,0
SessionWrapper:SessionWrapper,3,1,1
SessionWrapper:GetEnumerator,3,1,0
SessionWrapper:CopyTo,3,1,2
SessionWrapper:Contains,3,1,1
SessionWrapper:Add,3,1,2
SessionWrapper:Clear,3,1,0
SessionWrapper:GetEnumerator,3,1,0
SessionWrapper:Remove,3,1,1
HybridHttpContextLifecycle:HybridHttpContextLifecycle,4,1,0
HybridHttpContextLifecycle:FindCache,5,1,0
HybridHttpSessionLifecycle:HybridHttpSessionLifecycle,4,1,0
HybridHttpSessionLifecycle:FindCache,5,1,0
ILifecycle:FindCache,0,1,0
IObjectCache:Get,0,1,1
IObjectCache:Set,0,1,2
IObjectCache:Clear,0,1,0
NullObjectCache:Get,3,1,1
NullObjectCache:Set,1,1,2
NullObjectCache:Clear,1,1,0
ObjectCache:Get,4,1,1
ObjectCache:Set,10,3,2
ObjectCache:Clear,4,1,0
ObjectCache:TryDispose,4,2,1
ObjectCache:Has,4,1,1
ThreadLocalStorageLifecycle:FindCache,4,1,0
ThreadLocalStorageLifecycle:EnusreCacheExists,8,2,0
SingletonLifecycle:FindCache,3,1,0
TransientLifecycle:FindCache,3,1,0
