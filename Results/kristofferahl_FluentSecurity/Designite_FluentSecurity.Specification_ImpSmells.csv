Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,FluentSecurity.Specification,When_I_set_external_servicelocators,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_resolve_all_instances_from_services_locator_and_resolve_single_instance_from_single_service_locator,The length of the parameter concreteTypesInServiceLocator1 is 30.
Long Identifier,FluentSecurity.Specification,When_I_set_external_servicelocators,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_resolve_all_instances_from_services_locator_and_resolve_single_instance_from_single_service_locator,The length of the parameter concreteTypesInServiceLocator2 is 30.
Long Identifier,FluentSecurity.Specification.Configuration,When_updating_policies_with_a_DenyAnonymousAccessPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\DefaultPolicyAppenderSpec.cs,,The length of the parameter _denyAuthenticatedAccessPolicy is 30.
Long Identifier,FluentSecurity.Specification.Configuration,When_updating_policies_with_a_DenyAuthenticatedAccessPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\DefaultPolicyAppenderSpec.cs,,The length of the parameter _denyAuthenticatedAccessPolicy is 30.
Long Identifier,FluentSecurity.Specification.Policy.ViolationHandlers,When_handling_a_policy_violation_with_DelegatePolicyViolationHandler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\DelegatePolicyViolationHandlerSpec.cs,Should_return_action_result_from_violation_handler_that_match_name,The length of the parameter nonMatchingNameViolationHandler is 31.
Long Statement,FluentSecurity.Specification,When_adding_a_policycontainter_for_Blog_Index,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainer_for_Blog_Index,The length of the statement  "			var policyContainer = _configurationExpression.Runtime.PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' "Index"); " is 138.
Long Statement,FluentSecurity.Specification,When_adding_a_policycontainter_for_Blog_Index,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_PolicyAppender_set_to_PolicyAppender,The length of the statement  "			var policyContainer = (PolicyContainer) _configurationExpression.Runtime.PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' "Index"); " is 156.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_base_and_inheriting_controllers_and_all_actions_in_specified_assemblies,The length of the statement  "				configurationExpression.ForAllControllersInheriting<BaseController>(GetType().Assembly' typeof(SecurityConfigurator).Assembly) " is 126.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_and_all_actions_in_specified_assemblies,The length of the statement  "				configurationExpression.ForAllControllersInheriting<AbstractBaseController>(GetType().Assembly' typeof(SecurityConfigurator).Assembly) " is 134.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_of_generic_base_controller_of_FirstInheritingEntity_FirstInheritingBaseViewModel,The length of the statement  "				configurationExpression.ForAllControllersInheriting<GenericBaseController<FirstInheritingEntity' FirstInheritingBaseViewModel>>() " is 129.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_of_generic_base_controller_of_SecondInheritingEntity_SecondInheritingBaseViewModel,The length of the statement  "				configurationExpression.ForAllControllersInheriting<GenericBaseController<SecondInheritingEntity' SecondInheritingBaseViewModel>>() " is 131.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_throw_when_assemblies_is_null,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => expression.ForAllControllersInheriting<AbstractBaseController>(x => x.InheritedAction()' null)); " is 139.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_throw_when_assemblies_contains_null,The length of the statement  "			Assert.Throws<ArgumentException>(() => expression.ForAllControllersInheriting<AbstractBaseController>(x => x.InheritedAction()' null' null)); " is 141.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_actions_matching,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_all_Delete_actions_in_calling_assembly,The length of the statement  "			Assert.That(PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' expectedActionName)' Is.Not.Null); " is 120.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_actions_matching,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_all_actions_starting_with_Edit_in_the_specified_assembly,The length of the statement  "			Assert.That(PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' expectedActionName)' Is.Not.Null); " is 120.
Long Statement,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_actions_matching,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_all_Index_actions_where_controller_is_BlogController,The length of the statement  "			Assert.That(PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' expectedActionName)' Is.Not.Null); " is 120.
Long Statement,FluentSecurity.Specification,When_I_add_policies_before_specifying_a_function_returning_roles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_throw_ConfigurationErrorsException,The length of the statement  "			Assert.Throws<ConfigurationErrorsException>(() => configurationExpression.GetRolesFrom(StaticHelper.GetRolesExcludingOwner)); " is 125.
Long Statement,FluentSecurity.Specification,When_I_set_policyappender_to_instance_of_DefaultPolicyAppender,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policyappender_set_to_instance_of_DefaultPolicyAppender,The length of the statement  "			var policyContainer = (PolicyContainer) configurationExpression.Runtime.PolicyContainers.GetContainerFor(NameHelper.Controller<BlogController>()' "Index"); " is 155.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler,The length of the statement  "				conventions.Add(new DefaultPolicyViolationHandlerIsInstanceConvention<AnyPolicyViolationHandler>(() => new AnyPolicyViolationHandler())); " is 137.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler,The length of the statement  "			var appliedConventions = configurationExpression.Runtime.Conventions.OfType<IPolicyViolationHandlerConvention>().ToList(); " is 122.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler,The length of the statement  "			Assert.That(appliedConventions.Last()' Is.TypeOf<DefaultPolicyViolationHandlerIsOfTypeConvention<CustomDefaultPolicyViolationHandler>>()); " is 138.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler_instance,The length of the statement  "				conventions.Add(new DefaultPolicyViolationHandlerIsInstanceConvention<AnyPolicyViolationHandler>(() => new AnyPolicyViolationHandler())); " is 137.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler_instance,The length of the statement  "			var appliedConventions = configurationExpression.Runtime.Conventions.OfType<IPolicyViolationHandlerConvention>().ToList(); " is 122.
Long Statement,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler_instance,The length of the statement  "			Assert.That(appliedConventions.Last()' Is.TypeOf<DefaultPolicyViolationHandlerIsInstanceConvention<CustomDefaultPolicyViolationHandler>>()); " is 140.
Long Statement,FluentSecurity.Specification,When_I_set_external_servicelocators,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_resolve_all_instances_from_services_locator_and_resolve_single_instance_from_single_service_locator,The length of the statement  "			var concreteTypesInServiceLocator1 = new List<object> { new ConcreteType1()' new ConcreteType1()' new ConcreteType1() }; " is 120.
Long Statement,FluentSecurity.Specification,When_I_set_external_servicelocators,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_throw_when_serviceslocator_is_null,The length of the statement  "			var exception = Assert.Throws<ArgumentNullException>(() => configurationExpression.ResolveServicesUsing(servicesLocator' singleServiceLocator)); " is 144.
Long Statement,FluentSecurity.Specification,When_adding_a_policy_to_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policy_to_policycontainers,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()); " is 127.
Long Statement,FluentSecurity.Specification,When_adding_a_policy_to_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_lazy_policy_to_policycontainers,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()); " is 127.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()' By.Controller); " is 142.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle_and_cache_level_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()); " is 127.
Long Statement,FluentSecurity.Specification,When_clearing_the_cache_strategies_of_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_clear_all_cache_strategies,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()); " is 127.
Long Statement,FluentSecurity.Specification,When_clearing_the_cache_strategies_of_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_clear_all_cache_strategies_for_policy,The length of the statement  "			var conventionPolicyContainer = new ConventionPolicyContainer(policyContainers.Cast<IPolicyContainerConfiguration>().ToList()); " is 127.
Long Statement,FluentSecurity.Specification,When_I_configure_fluent_security_for_Blog_Index_and_Blog_AddPost,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfiguratorSpec.cs,SetUp,The length of the statement  "				configuration.For<BlogController>(x => x.AddPost()).RequireAnyRole(UserRole.Writer' UserRole.Publisher' UserRole.Owner); " is 120.
Long Statement,FluentSecurity.Specification,When_adding_two_containers_with_the_same_controller_and_action_name,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfiguratorSpec.cs,Should_have_1_policycontainer,The length of the statement  "			Assert.That(SecurityConfiguration.Current.PolicyContainers.First().ControllerName' Is.EqualTo(NameHelper.Controller<BlogController>())); " is 136.
Long Statement,FluentSecurity.Specification,When_adding_a_DelegatePolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_complex_DelegatePolicy,The length of the statement  "			Func<DelegateSecurityContext' PolicyResult> policyDelegate = context => PolicyResult.CreateSuccessResult(context.Policy); " is 121.
Long Statement,FluentSecurity.Specification,When_adding_a_DelegatePolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_complex_DelegatePolicy,The length of the statement  "			var securityPolicy = policyContainer.GetPolicies().Single(x => x.GetType() == typeof(DelegatePolicy)) as DelegatePolicy; " is 120.
Long Statement,FluentSecurity.Specification,When_adding_a_DelegatePolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_simple_DelegatePolicy,The length of the statement  "			var securityContext = new DelegateSecurityContext(new Mock<ISecurityPolicy>().Object' new Mock<ISecurityContext>().Object); " is 123.
Long Statement,FluentSecurity.Specification,When_adding_a_DelegatePolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_simple_DelegatePolicy,The length of the statement  "			var securityPolicy = policyContainer.GetPolicies().Where(x => x.GetType().Equals(typeof(DelegatePolicy))).Single() as DelegatePolicy; " is 133.
Long Statement,FluentSecurity.Specification,When_adding_a_DenyAnonymousAccessPolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_DenyAnonymousAccessPolicy,The length of the statement  "			var securityPolicy = policyContainer.GetPolicies().Where(x => x.GetType().Equals(typeof(DenyAnonymousAccessPolicy))).Single(); " is 126.
Long Statement,FluentSecurity.Specification,When_adding_a_DenyAuthenticatedAccessPolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_DenyAuthenticatedAccessPolicy,The length of the statement  "			var securityPolicy = policyContainer.GetPolicies().Where(x => x.GetType().Equals(typeof(DenyAuthenticatedAccessPolicy))).Single(); " is 130.
Long Statement,FluentSecurity.Specification,When_adding_a_RequireAllRolesPolicy_to_a_policycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerExtensionsSpec.cs,Should_have_a_RequireAllRolesPolicy,The length of the statement  "			var securityPolicy = policyContainer.GetPolicies().Where(x => x.GetType().Equals(typeof(RequireAllRolesPolicy))).Single(); " is 122.
Long Statement,FluentSecurity.Specification,When_I_check_what_I_have,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfigurationSpec.cs,Should_return_the_current_configuration,The length of the statement  "				configuration.For<BlogController>(x => x.DeletePost(0)).DenyAnonymousAccess().RequireAnyRole(UserRole.Owner' UserRole.Publisher); " is 129.
Long Statement,FluentSecurity.Specification,When_setting_the_configuration_to_null,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfigurationSpec.cs,Should_throw,The length of the statement  "			var setConfigurationMethod = typeof(SecurityConfiguration).GetMethod("SetConfiguration"' BindingFlags.Static | BindingFlags.NonPublic); " is 135.
Long Statement,FluentSecurity.Specification,When_calling_assert_all_actions_on_configuration_passing_assemblies_as_argument,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfigurationSpec.cs,Should_throw_exception_when_all_actions_are_not_configured,The length of the statement  "			Assert.Throws<ConfigurationErrorsException>(() => securityConfiguration.AssertAllActionsAreConfigured(new [] { GetType().Assembly })); " is 134.
Long Statement,FluentSecurity.Specification,When_executing_OnActionExecuting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\HandleSecurityAttributeSpec.cs,Should_call_HandleSecurityFor_with_the_controllername_Blog_and_actionname_Index_passing_the_current_security_context,The length of the statement  "			securityHandler.Verify(x => x.HandleSecurityFor(typeof(BlogController).FullName' "Index"' _securityContext)' Times.Exactly(1)); " is 127.
Long Statement,FluentSecurity.Specification,When_executing_OnActionExecuting_and_the_security_handler_returns_an_action_result,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\HandleSecurityAttributeSpec.cs,Should_set_the_result_of_the_filtercontext,The length of the statement  "			securityHandler.Setup(x => x.HandleSecurityFor(typeof(BlogController).FullName' "Index"' It.IsAny<ISecurityContext>())).Returns(expectedResult); " is 144.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_invoke_the_isautheticated_and_roles_functions,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_policies_with_context,The length of the statement  "			policy.Setup(x => x.Enforce(It.Is<ISecurityContext>(c => c.CurrentUserIsAuthenticated() == isAuthenticated && c.CurrentUserRoles() == roles))).Returns(PolicyResult.CreateSuccessResult(policy.Object)); " is 200.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_policies_with_context,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_return_results,The length of the statement  "			policy.Setup(x => x.Enforce(It.IsAny<ISecurityContext>())).Returns(PolicyResult.CreateFailureResult(policy.Object' failureOccured)); " is 132.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_return_results,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_1_result,The length of the statement  "			firstPolicy.Setup(x => x.Enforce(It.IsAny<ISecurityContext>())).Returns(PolicyResult.CreateFailureResult(firstPolicy.Object' "Failure occured")); " is 145.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_1_result,The length of the statement  "			secondPolicy.Setup(x => x.Enforce(It.IsAny<ISecurityContext>())).Returns(PolicyResult.CreateSuccessResult(secondPolicy.Object)); " is 128.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_1_result,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_2_results,The length of the statement  "			secondPolicy.Setup(x => x.Enforce(It.IsAny<ISecurityContext>())).Returns(PolicyResult.CreateFailureResult(secondPolicy.Object' "Failure occured")); " is 147.
Long Statement,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_2_results,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_exactly_twice_during_execution_with_caching_off,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_exactly_once_during_execution_and_caching_on,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_off,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies_with_default_cache_lifecycle_set_to_DoNotCache,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_return_unique_results,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies_with_default_cache_lifecycle_set_to_PerHttpRequest,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_return_the_same_results,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_enforcing_policies_with_default_cache_lifecycle_set_to_PerHttpSession,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_return_the_same_results,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_RequireAnyRolePolicy_with_lifecycle_set_to_DoNotCache,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_Policy_T_with_lifecycle_set_to_DoNotCache,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_RequireAnyRolePolicy_with_lifecycle_set_to_PerHttpRequest,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_Policy_T_with_lifecycle_set_to_PerHttpRequest,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_RequireAnyRolePolicy_with_lifecycle_set_to_PerHttpSession,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_Policy_T_with_lifecycle_set_to_PerHttpSession,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_for_DenyAnonymousAccessPolicy_with_lifecycle_set_to_PerHttpRequest,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategies_for_each_policy_type,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_update_existing_policyresult_cache_strategies,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_setting_the_cache_lifecycle_and_cache_level,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_update_existing_policyresult_cache_strategies,The length of the statement  "			var policyContainer = new PolicyContainer(expectedControllerName' expectedActionName' TestDataFactory.CreateValidPolicyAppender()); " is 131.
Long Statement,FluentSecurity.Specification,When_enforcing_policies_with_default_cache_lifecycle_set,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_use_cache_lifecycle_specified_when_adding_a_policy,The length of the statement  "			var policyContainer = new PolicyContainer(TestDataFactory.ValidControllerName' TestDataFactory.ValidActionName' TestDataFactory.CreateValidPolicyAppender()); " is 157.
Long Statement,FluentSecurity.Specification,When_handling_security,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_not_throw_when_when_controllername_is_Blog_and_actionname_is_Index,The length of the statement  "			Assert.DoesNotThrow(() => securityHandler.HandleSecurityFor(NameHelper.Controller<BlogController>()' "Index"' SecurityContext.Current)); " is 136.
Long Statement,FluentSecurity.Specification,When_handling_security,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_resolve_policy_violation_handler_for_exception_from_container,The length of the statement  "			Assert.That(events.Any(e => e.Message == "Handling security for {0} action {1}.".FormatWith(controllerName' actionName))); " is 122.
Long Statement,FluentSecurity.Specification,When_handling_security,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_resolve_policy_violation_handler_for_exception_from_container,The length of the statement  "			Assert.That(events.Any(e => e.Message == "Finding policy violation handler using convention {0}.".FormatWith(typeof(FindByPolicyNameConvention)))); " is 147.
Long Statement,FluentSecurity.Specification,When_handling_security,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_resolve_policy_violation_handler_for_exception_from_container,The length of the statement  "			Assert.That(events.Any(e => e.Message == "Found policy violation handler {0}.".FormatWith(violationHandler.GetType().FullName))); " is 129.
Long Statement,FluentSecurity.Specification,When_handling_security,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_resolve_policy_violation_handler_for_exception_from_container,The length of the statement  "			Assert.That(events.Any(e => e.Message == "Handling violation with {0}.".FormatWith(violationHandler.GetType().FullName))); " is 122.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controlleraction_with_DenyAnonymousAccess,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_not_throw_exception_when_the_user_is_authenticated,The length of the statement  "			Assert.That(events.Any(e => e.Message == "Handling security for {0} action {1}.".FormatWith(controllerName' actionName))); " is 122.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controlleraction_with_DenyAnonymousAccess,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_throw_when_the_user_is_anonymous,The length of the statement  "			var exception = Assert.Throws<PolicyViolationException>(() => securityHandler.HandleSecurityFor(NameHelper.Controller<BlogController>()' "Index"' SecurityContext.Current)); " is 172.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controlleraction_with_RequireAnyRole_Owner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_not_throw_exception_when_the_user_is_authenticated_with_role_Owner,The length of the statement  "			Assert.DoesNotThrow(() => securityHandler.HandleSecurityFor(NameHelper.Controller<BlogController>()' "DeletePost"' SecurityContext.Current)); " is 141.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controlleraction_with_RequireAnyRole_Owner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_throw_when_the_user_is_anonymous,The length of the statement  "			var exception = Assert.Throws<PolicyViolationException>(() => securityHandler.HandleSecurityFor(NameHelper.Controller<BlogController>()' "DeletePost"' SecurityContext.Current)); " is 177.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controlleraction_with_RequireAnyRole_Owner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_throw_when_the_user_does_not_have_the_role_Owner,The length of the statement  "			var exception = Assert.Throws<PolicyViolationException>(() => securityHandler.HandleSecurityFor(NameHelper.Controller<BlogController>()' "DeletePost"' SecurityContext.Current)); " is 177.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controller_and_action_that_has_no_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_throw_ConfigurationErrorsException_when_IgnoreMissingConfigurations_is_false,The length of the statement  "			Assert.Throws<ConfigurationErrorsException>(() => securityHandler.HandleSecurityFor("NonConfiguredController"' "Action"' SecurityContext.Current)); " is 147.
Long Statement,FluentSecurity.Specification,When_handling_security_for_a_controller_and_action_that_has_no_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityHandlerSpec.cs,Should_not_throw_ConfigurationErrorsException_when_IgnoreMissingConfigurations_is_true,The length of the statement  "			Assert.DoesNotThrow(() => securityHandler.HandleSecurityFor("NonConfiguredController"' "Action"' SecurityContext.Current)); " is 123.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_a_security_context_modifyer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_not_throw_when_setting_the_modifyer_to_null,The length of the statement  "			Assert.DoesNotThrow(() => SecurityConfigurator.Configure(configuration => configuration.Advanced.ModifySecurityContext(null))); " is 127.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_how_violations_are_handled,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_add_convention_for_IgnorePolicy_and_Handler1,The length of the statement  "			Assert.That(_runtime.Conventions.First()' Is.InstanceOf<PolicyTypeToPolicyViolationHandlerTypeConvention<IgnorePolicy' Handler1>>()); " is 133.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_how_violations_are_handled,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_add_convention_for_IgnorePolicy_and_Handler2,The length of the statement  "			Assert.That(_runtime.Conventions.First()' Is.InstanceOf<PolicyTypeToPolicyViolationHandlerInstanceConvention<IgnorePolicy' Handler2>>()); " is 137.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_a_handler_factory_for_a_ViolationHandlerConfiguration,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\ViolationHandlerConfigurationSpec.cs,Should_add_convention_for_predicate_to_type,The length of the statement  "			Assert.That(conventions.Single().As<PredicateToPolicyViolationHandlerTypeConvention<DefaultPolicyViolationHandler>>().Predicate' Is.EqualTo(expectedPredicate)); " is 160.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_a_handler_factory_for_a_ViolationHandlerConfiguration,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\ViolationHandlerConfigurationSpec.cs,Should_add_convention_for_predicate_to_instance,The length of the statement  "			Assert.That(conventions.Single().As<PredicateToPolicyViolationHandlerInstanceConvention<DefaultPolicyViolationHandler>>().Predicate' Is.EqualTo(expectedPredicate)); " is 164.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_a_handler_factory_for_a_ViolationHandlerConfiguration_of_T,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\ViolationHandlerConfigurationSpec.cs,Should_add_convention_for_predicate_to_type,The length of the statement  "			Assert.That(conventions.Single()' Is.InstanceOf<PolicyTypeToPolicyViolationHandlerTypeConvention<IgnorePolicy' DefaultPolicyViolationHandler>>()); " is 146.
Long Statement,FluentSecurity.Specification.Configuration,When_specifying_a_handler_factory_for_a_ViolationHandlerConfiguration_of_T,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\ViolationHandlerConfigurationSpec.cs,Should_add_convention_for_predicate_to_instance,The length of the statement  "			Assert.That(conventions.Single()' Is.InstanceOf<PolicyTypeToPolicyViolationHandlerInstanceConvention<IgnorePolicy' DefaultPolicyViolationHandler>>()); " is 150.
Long Statement,FluentSecurity.Specification.Diagnostics,When_registering_event_listeners,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\SecurityDoctorSpecs.cs,Should_register_anonymous_event_listener_using_the_static_method,The length of the statement  "			Assert.That(SecurityDoctor.Current.Listeners.Cast<AnonymousSecurityEventListener>().Single().EventListener' Is.EqualTo(eventListener)); " is 135.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,FeatureSetup,The length of the statement  "            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "Caching of PolicyResults"' "In order to improve performance of applications using FluentSecurity\r\nAs a develo" + " is 240.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,CacheResultsOfPolicyForAllControllers,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cache results of policy for all controllers"' ((string[])(null))); " is 148.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,CacheResultsOfPolicyForSpecificController,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cache results of policy for specific controller"' ((string[])(null))); " is 152.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,CacheResultsOfPolicyForSpecificControllerAndAction,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cache results of policy for specific controller and action"' ((string[])(null))); " is 163.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,OverrideCacheLifecycleOfPolicyForSpecificControllerAndAction,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override cache lifecycle of policy for specific controller and action"' ((string[])(null))); " is 174.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,OverrideCacheLifecyleOfPolicyForSpecificController,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override cache lifecyle of policy for specific controller"' ((string[])(null))); " is 162.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,OverrideCacheLevelOfPolicyForAllControllers,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override cache level of policy for all controllers"' ((string[])(null))); " is 155.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,OverrideCacheLevelOfPolicyForSpecificController,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override cache level of policy for specific controller"' ((string[])(null))); " is 159.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,OverrideCacheLevelOfPolicyForSpecificControllerAction,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Override cache level of policy for specific controller action"' ((string[])(null))); " is 166.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,ClearCacheStrategiesForSpecificController,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Clear cache strategies for specific controller"' ((string[])(null))); " is 151.
Long Statement,FluentSecurity.Specification.Features,CachingOfPolicyResultsFeature,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\PolicyResultsCachingFeature.feature.cs,ClearCacheStrategiesForSpecificControllerAction,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Clear cache strategies for specific controller action"' ((string[])(null))); " is 158.
Long Statement,FluentSecurity.Specification.Features.Steps,PolicyResultsCachingSteps,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\Steps\PolicyResultsCachingSteps.cs,ThenItShouldCacheResultX,The length of the statement  "			var strategy = GetPolicyContainer().CacheStrategies.SingleOrDefault(x => x.CacheLifecycle == expectedLifecycle && x.PolicyType == policyType); " is 142.
Long Statement,FluentSecurity.Specification.Features.Steps,PolicyResultsCachingSteps,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Features\Steps\PolicyResultsCachingSteps.cs,ThenItShouldNotCacheResult,The length of the statement  "			var strategy = GetPolicyContainer().CacheStrategies.SingleOrDefault(x => x.CacheLifecycle == Cache.DoNotCache && x.PolicyType == policyType); " is 141.
Long Statement,FluentSecurity.Specification.Caching,When_creating_a_cache_key_for_AdminController_Login_TestPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Caching\PolicyResultCacheKeyBuilderSpec.cs,Should_be_PolicyResult_AdminController_star_TestPolicy,The length of the statement  "			var strategy = new PolicyResultCacheStrategy("AdminController"' "Login"' policy.GetType()' Cache.DoNotCache' By.Controller); " is 124.
Long Statement,FluentSecurity.Specification.Caching,When_creating_a_cache_key_for_AdminController_Login_TestPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Caching\PolicyResultCacheKeyBuilderSpec.cs,Should_be_PolicyResult_star_star_TestPolicy,The length of the statement  "			var strategy = new PolicyResultCacheStrategy("AdminController"' "Login"' policy.GetType()' Cache.DoNotCache' By.Policy); " is 120.
Long Statement,FluentSecurity.Specification.Caching,When_creating_a_cache_key_for_BlogController_Post_BlogAdminPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Caching\PolicyResultCacheKeyBuilderSpec.cs,Should_be_PolicyResult_BlogController_star_TestPolicy,The length of the statement  "			var strategy = new PolicyResultCacheStrategy("BlogController"' "Login"' policy.GetType()' Cache.DoNotCache' By.Controller); " is 123.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_security_for_a_RequireAnyRolePolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\RequireAnyRolePolicySpec.cs,Should_resolve_authentication_status_and_roles_exactly_once,The length of the statement  "			context.Verify(x => x.CurrentUserIsAuthenticated()' Times.Exactly(1)' "The authentication status should be resolved at most once."); " is 132.
Long Statement,FluentSecurity.Specification.Policy,When_creating_a_LazySecurityPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\LazySecurityPolicySpec.cs,Should_expose_the_actual_type,The length of the statement  "			Assert.That(new LazySecurityPolicy<DenyAnonymousAccessPolicy>().PolicyType' Is.EqualTo(typeof(DenyAnonymousAccessPolicy))); " is 123.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_a_LazySecurityPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\LazySecurityPolicySpec.cs,Should_throw_when_no_policy_was_loaded,The length of the statement  "			Assert.That(exception.Message' Is.EqualTo("A policy of type FluentSecurity.Specification.Policy.PolicyWithConstructorArguments could not be loaded! Make sure the policy has an empty constructor or is registered in your IoC-container.")); " is 237.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_security_for_a_RequireAllRolesPolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\RequireAllRolesPolicySpec.cs,Should_resolve_authentication_status_and_roles_exactly_once,The length of the statement  "			context.Verify(x => x.CurrentUserIsAuthenticated()' Times.Exactly(1)' "The authentication status should be resolved at most once."); " is 132.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_security_for_a_DelegatePolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\DelegatePolicySpec.cs,Should_not_be_successful_when_delegate_returns_failure,The length of the statement  "			Func<DelegateSecurityContext' PolicyResult> failureDelegate = c => PolicyResult.CreateFailureResult(c.Policy' "Access denied"); " is 127.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_polciy_using_SecurityPolicyBase,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\SecurityPolicyBaseSpec.cs,Should_throw_when_context_can_not_be_created_or_resolved,The length of the statement  "			Assert.That(exception.Message' Is.EqualTo("The generic argument ContextWithConstructorArgs could not be created or resolved from the container.")); " is 147.
Long Statement,FluentSecurity.Specification.Policy,When_enforcing_security_for_a_RequireRolePolicy,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\RequireRolePolicySpec.cs,Should_resolve_authentication_status_and_roles_exactly_once,The length of the statement  "			context.Verify(x => x.CurrentUserIsAuthenticated()' Times.Exactly(1)' "The authentication status should be resolved at most once."); " is 132.
Long Statement,FluentSecurity.Specification.Policy.ViolationHandlers.Conventions,When_getting_a_handler_using_PolicyTypeToPolicyViolationHandlerInstanceConvention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\Conventions\PolicyTypeToPolicyViolationHandlerInstanceConventionSpec.cs,Should_return_handler_when_policy_type_is_match,The length of the statement  "			var convention = new PolicyTypeToPolicyViolationHandlerInstanceConvention<DenyAnonymousAccessPolicy' DefaultPolicyViolationHandler>(() => new DefaultPolicyViolationHandler()); " is 175.
Long Statement,FluentSecurity.Specification.Policy.ViolationHandlers.Conventions,When_getting_a_handler_using_PolicyTypeToPolicyViolationHandlerInstanceConvention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\Conventions\PolicyTypeToPolicyViolationHandlerInstanceConventionSpec.cs,Should_return_handler_when_policy_type_is_not_match,The length of the statement  "			var convention = new PolicyTypeToPolicyViolationHandlerInstanceConvention<DenyAnonymousAccessPolicy' DefaultPolicyViolationHandler>(() => new DefaultPolicyViolationHandler()); " is 175.
Long Statement,FluentSecurity.Specification.Policy.ViolationHandlers.Conventions,When_getting_a_handler_using_PolicyTypeToPolicyViolationHandlerTypeConvention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\Conventions\PolicyTypeToPolicyViolationHandlerTypeConventionSpec.cs,Should_return_handler_when_policy_type_is_match,The length of the statement  "			var convention = new PolicyTypeToPolicyViolationHandlerTypeConvention<DenyAnonymousAccessPolicy' DefaultPolicyViolationHandler>(); " is 130.
Long Statement,FluentSecurity.Specification.Policy.ViolationHandlers.Conventions,When_getting_a_handler_using_PolicyTypeToPolicyViolationHandlerTypeConvention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\Conventions\PolicyTypeToPolicyViolationHandlerTypeConventionSpec.cs,Should_return_handler_when_policy_type_is_not_match,The length of the statement  "			var convention = new PolicyTypeToPolicyViolationHandlerTypeConvention<DenyAnonymousAccessPolicy' DefaultPolicyViolationHandler>(); " is 130.
Long Statement,FluentSecurity.Specification.Policy.ViolationHandlers.Conventions,When_creating_a_DefaultPolicyViolationHandlerIsInstanceConvention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Policy\ViolationHandlers\Conventions\DefaultPolicyViolationHandlerIsInstanceConventionSpec.cs,Should_throw_when_factory_method_is_null,The length of the statement  "			Assert.Throws<ArgumentNullException>(() => new DefaultPolicyViolationHandlerIsInstanceConvention<DefaultPolicyViolationHandler>(null)); " is 135.
Long Statement,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_exluding_assemblies_matching_predicate,The length of the statement  "			Assert.That(scanner.Context.AssembliesToScan.Last().GetName().Name' Is.EqualTo("FluentSecurity.TestHelper.Specification")); " is 123.
Long Statement,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_including_assemblies_matching_predicate,The length of the statement  "			scanner.IncludeAssembly(assembly => Path.GetFileNameWithoutExtension(assembly).StartsWith("FluentSecurity.TestHelper")); " is 120.
Long Statement,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_including_assemblies_matching_predicate,The length of the statement  "			Assert.That(scanner.Context.AssembliesToScan.Last().GetName().Name' Is.EqualTo("FluentSecurity.TestHelper.Specification")); " is 123.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_using_the_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ContainerSpec.cs,Should_resolve_transient_object_with_context,The length of the statement  "			container.Register<ITypeToResolveWithConstructorParams>(ctx => new ConcreteTypeWithConstructorParams(ctx.Resolve<ITypeToResolve>())); " is 133.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_using_the_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ContainerSpec.cs,Should_resolve_singleton_object_with_context,The length of the statement  "			container.Register<ITypeToResolveWithConstructorParams>(ctx => new ConcreteTypeWithConstructorParams(ctx.Resolve<ITypeToResolve>())' Lifecycle.Singleton); " is 154.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_using_the_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ContainerSpec.cs,Should_resolve_singleton_and_transient_object,The length of the statement  "			container.Register<ITypeToResolveWithConstructorParams>(ctx => new ConcreteTypeWithConstructorParams(ctx.Resolve<ITypeToResolve>())); " is 133.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_resolving_an_instance_of_ISecurityContext,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ServiceLocatorSpec.cs,Should_not_throw_when_instance_is_registered_in_an_external_IoC_container,The length of the statement  "			SecurityConfigurator.Configure(configuration => configuration.ResolveServicesUsing(FakeIoC.GetAllInstances' FakeIoC.GetInstance)); " is 130.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_resolving_an_instance_of_ISecurityContext,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ServiceLocatorSpec.cs,Should_resolve_single_instance_using_Resolve_with_generic_type,The length of the statement  "			SecurityConfigurator.Configure(configuration => configuration.ResolveServicesUsing(FakeIoC.GetAllInstances' FakeIoC.GetInstance)); " is 130.
Long Statement,FluentSecurity.Specification.ServiceLocation,When_resolving_an_instance_of_ISecurityContext,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ServiceLocatorSpec.cs,Should_resolve_single_instance_using_Resolve_with_type,The length of the statement  "			SecurityConfigurator.Configure(configuration => configuration.ResolveServicesUsing(FakeIoC.GetAllInstances' FakeIoC.GetInstance)); " is 130.
Magic Number,FluentSecurity.Specification,AssemblyScannerAssemblySpecification,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\AssemblyScannerAssemblySpecification.cs,AssertAllControllerActionsHasContainer,The following statement contains a magic number: Assert.That(policyContainers.Count()' Is.EqualTo(21));
Magic Number,FluentSecurity.Specification,When_adding_a_policycontainter_using_ByController_convention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainer_for_all_actions_including_void_actions,The following statement contains a magic number: Assert.That(configurationExpression.Runtime.PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_policycontainter_using_ByController_convention,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainer_for_all_actions_including_inherited_void_actions,The following statement contains a magic number: Assert.That(configurationExpression.Runtime.PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_policycontainter_for_Blog_Index_and_AddPost,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainer_for_Blog_Index_and_AddPost,The following statement contains a magic number: Assert.That(policyContainers.Count' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_the_Blog_controller,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_6_policycontainers,The following statement contains a magic number: Assert.That(_configurationExpression.Runtime.PolicyContainers.Count()' Is.EqualTo(6));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_base_and_inheriting_controllers_and_all_actions,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_base_and_inheriting_controllers_and_specific_action,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_and_all_actions,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_base_and_inheriting_controllers_and_all_actions_in_specified_assemblies,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_and_all_actions_in_specified_assemblies,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_of_generic_base_controller_of_FirstInheritingEntity_FirstInheritingBaseViewModel,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_of_generic_base_controller_of_SecondInheritingEntity_SecondInheritingBaseViewModel,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_inheriting,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_inheriting_controllers_of_generic_base_controller_of_BaseEntity_BaseViewModel,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(4));
Magic Number,FluentSecurity.Specification,When_adding_a_conventionpolicycontainter_for_all_controllers_in_namespace_containing_type,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_have_policycontainers_for_all_controllers_and_all_actions_in_namespace_of_ClassInRootNamespace,The following statement contains a magic number: Assert.That(PolicyContainers.Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_scan_for_profiles_avoiding_infinite_loop,The following statement contains a magic number: Assert.That(configurationExpression.Runtime.Profiles.Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler,The following statement contains a magic number: Assert.That(appliedConventions.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_I_specify_a_default_policy_violation_handler,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConfigurationExpressionSpec.cs,Should_clear_conflicting_conventions_and_add_convention_for_lazy_default_PolicyViolationHandler_instance,The following statement contains a magic number: Assert.That(appliedConventions.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_adding_a_policy_to_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policy_to_policycontainers,The following statement contains a magic number: Assert.That(policyContainers[2].GetPolicies().First()' Is.EqualTo(policy));
Magic Number,FluentSecurity.Specification,When_adding_a_policy_to_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_lazy_policy_to_policycontainers,The following statement contains a magic number: Assert.That(policyContainers[2].GetPolicies().First()' Is.TypeOf<LazySecurityPolicy<DenyAnonymousAccessPolicy>>());
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().PolicyType' Is.EqualTo(expectedType));
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().CacheLifecycle' Is.EqualTo(expectedLifecycle));
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().CacheLevel' Is.EqualTo(By.Controller));
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_and_cache_level_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().PolicyType' Is.EqualTo(expectedType));
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_and_cache_level_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().CacheLifecycle' Is.EqualTo(expectedLifecycle));
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle_and_cache_level_for_a_policy_on_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_add_policyresult_cache_strategy_to_policycontainers,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().CacheLevel' Is.EqualTo(expectedLevel));
Magic Number,FluentSecurity.Specification,When_clearing_the_cache_strategies_of_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_clear_all_cache_strategies,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Any()' Is.False);
Magic Number,FluentSecurity.Specification,When_clearing_the_cache_strategies_of_a_conventionpolicycontainer,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ConventionPolicyContainerSpec.cs,Should_clear_all_cache_strategies_for_policy,The following statement contains a magic number: Assert.That(containers[2].CacheStrategies.Single().PolicyType' Is.EqualTo(typeof(RequireAllRolesPolicy)));
Magic Number,FluentSecurity.Specification,When_creating_a_security_context,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityContextSpec.cs,Should_create_security_context_from_configuration,The following statement contains a magic number: var roles = new object[3];
Magic Number,FluentSecurity.Specification,When_creating_a_security_context,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityContextSpec.cs,Should_create_security_context_from_external_ioc,The following statement contains a magic number: var roles = new object[4];
Magic Number,FluentSecurity.Specification,When_I_configure_fluent_security_for_Blog_Index_and_Blog_AddPost,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\SecurityConfiguratorSpec.cs,Should_have_two_policycontainers,The following statement contains a magic number: Assert.That(_policyContainers.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_remove_lazy_policy,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_remove_lazy_policy_matching_predicate,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_not_remove_policies_not_matching_predicate,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_not_remove_lazy_policy_not_matching_predicate,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().ElementAt(2).GetPolicyType()' Is.EqualTo(typeof(Policy3)));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_not_remove_lazy_policy_not_matching_predicate,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification,When_removing_policies_from_a_policy_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_not_remove_any_policies,The following statement contains a magic number: Assert.That(_policyContainer.GetPolicies().Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_enforcing_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_stop_on_first_violation_and_return_2_results,The following statement contains a magic number: Assert.That(results.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_exactly_twice_during_execution_with_caching_off,The following statement contains a magic number: Assert.That(callsToContainer' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_exactly_twice_during_execution_with_caching_off,The following statement contains a magic number: Assert.That(policy.EnforceCallCount' Is.EqualTo(2)' "Did not call enforce the expected amount of times");
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_off,The following statement contains a magic number: Assert.That(callsToContainer' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_off,The following statement contains a magic number: Assert.That(policy.CacheKeyCallCount' Is.EqualTo(2)' "Did not get the custom cache key the expected amount of times");
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_off,The following statement contains a magic number: Assert.That(policy.EnforceCallCount' Is.EqualTo(2)' "Did not call enforce the expected amount of times");
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The following statement contains a magic number: Assert.That(callsToContainer' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_load_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The following statement contains a magic number: Assert.That(policy.CacheKeyCallCount' Is.EqualTo(2)' "Did not get the custom cache key the expected amount of times");
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The following statement contains a magic number: Assert.That(callsToContainer' Is.EqualTo(5));
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The following statement contains a magic number: Assert.That(policy.CacheKeyCallCount' Is.EqualTo(5)' "Did not get the custom cache key the expected amount of times");
Magic Number,FluentSecurity.Specification,When_enforcing_lazy_policies,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_enforce_lazy_policy_with_cache_key_exactly_twice_during_execution_with_caching_on,The following statement contains a magic number: Assert.That(policy.EnforceCallCount' Is.EqualTo(2)' "Did not call enforce the expected amount of times");
Magic Number,FluentSecurity.Specification,When_setting_the_cache_lifecycle,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\PolicyContainerSpec.cs,Should_add_policyresult_cache_strategies_for_each_policy_type,The following statement contains a magic number: Assert.That(policyContainer.CacheStrategies.Count' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Configuration,When_creating_a_new_advanced_configuration,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_have_conventions_for_default_PolicyViolationHandler_applied,The following statement contains a magic number: Assert.That(conventions.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Configuration,When_creating_a_new_advanced_configuration,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_not_add_duplicate_conventions,The following statement contains a magic number: Assert.That(conventions.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Configuration,When_specifying_how_violations_are_handled,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_always_add_conventions_at_the_first_position_to_support_cascading_overrides,The following statement contains a magic number: _advancedConfiguration.Violations(violations =>  			{  				violations.AddConvention(new Convention(expectedIndex: 2));  				violations.AddConvention(new Convention(expectedIndex: 1));  				violations.AddConvention(new Convention(expectedIndex: 0));  			});
Magic Number,FluentSecurity.Specification.Configuration,When_specifying_how_violations_are_handled,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_always_add_conventions_at_the_first_position_to_support_cascading_overrides,The following statement contains a magic number: Assert.That(_runtime.Conventions.ElementAt(2).As<Convention>().ExpectedIndex' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Configuration,When_specifying_how_violations_are_handled,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Configuration\AdvancedConfigurationSpec.cs,Should_always_add_conventions_at_the_first_position_to_support_cascading_overrides,The following statement contains a magic number: Assert.That(_runtime.Conventions.ElementAt(2).As<Convention>().ExpectedIndex' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Diagnostics,When_registering_event_listeners,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\SecurityDoctorSpecs.cs,Should_register_multiple_anonymous_event_listener,The following statement contains a magic number: Assert.That(doctor.Listeners.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Diagnostics,When_registering_event_listeners,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\SecurityDoctorSpecs.cs,Should_register_multiple_event_listener,The following statement contains a magic number: Assert.That(doctor.Listeners.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_runtime_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: const int expectedMilliseconds = 13;
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_runtime_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: var result = Publish.RuntimeEvent(() =>  			{  				Thread.Sleep(expectedMilliseconds + 5);  				return expectedResult;  			}' r => expectedMessage' context);
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_runtime_policy_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: const int expectedMilliseconds = 9;
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_runtime_policy_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: var result = Publish.RuntimePolicyEvent(() =>  			{  				Thread.Sleep(expectedMilliseconds + 5);  				return expectedResult;  			}' r => expectedMessage' context);
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_configuration_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: const int expectedMilliseconds = 9;
Magic Number,FluentSecurity.Specification.Diagnostics,When_publishing_event,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\PublishSpec.cs,Should_produce_configuration_event_with_timing_when_event_listener_is_registered,The following statement contains a magic number: var result = Publish.ConfigurationEvent(() =>  			{  				Thread.Sleep(expectedMilliseconds + 5);  				return expectedResult;  			}' r => expectedMessage);
Magic Number,FluentSecurity.Specification.Diagnostics,When_scanning_for_security_event_listeners,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Diagnostics\SecurityEventListenerScannerSpec.cs,Should_find_2_event_listeners,The following statement contains a magic number: Assert.That(types.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Internals,When_getting_the_types_of_an_assembly,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Internals\AssemblyExtensionsSpec.cs,Should_return_types_successfully_loaded,The following statement contains a magic number: Assert.That(types.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Internals,When_getting_the_exported_types_of_an_assembly,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Internals\AssemblyExtensionsSpec.cs,Should_return_types_successfully_loaded,The following statement contains a magic number: Assert.That(types.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_matching_predicate,The following statement contains a magic number: const int expectedAssembliesCount = 3;
Magic Number,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_exluding_assemblies_matching_predicate,The following statement contains a magic number: const int expectedAssembliesCount = 2;
Magic Number,FluentSecurity.Specification.Scanning,When_adding_assemblies_from_base_directory_to_assembly_scanner,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\AssemblyScannerSpec.cs,Should_scan_assemblies_from_application_base_directory_including_assemblies_matching_predicate,The following statement contains a magic number: const int expectedAssembliesCount = 2;
Magic Number,FluentSecurity.Specification.Scanning,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_all_profiles,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(3));
Magic Number,FluentSecurity.Specification.Scanning,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_profiles_in_namespace,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.Scanning.TypeScanners,When_scanning_for_controllers,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\TypeScanners\ControllerTypeScannerSpec.cs,Should_find_all_controllers,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(10));
Magic Number,FluentSecurity.Specification.Scanning.TypeScanners,When_scanning_for_controllers,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\TypeScanners\ControllerTypeScannerSpec.cs,Should_find_all_controllers_inheriting_from_base_controller_including_base_controller,The following statement contains a magic number: Assert.That(result.Count()' Is.EqualTo(2));
Magic Number,Level1,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_all_profiles,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(3));
Magic Number,Level1,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_profiles_in_namespace,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(2));
Magic Number,Level2,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_all_profiles,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(3));
Magic Number,Level2,When_scanning_for_profiles,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\Scanning\ProfileScannerSpec.cs,Should_locate_profiles_in_namespace,The following statement contains a magic number: Assert.That(profiles.Count()' Is.EqualTo(2));
Magic Number,FluentSecurity.Specification.ServiceLocation,When_using_the_container,C:\repos\kristofferahl_FluentSecurity\FluentSecurity.Specification\ServiceLocation\ContainerSpec.cs,Should_resolve_all_instances,The following statement contains a magic number: Assert.That(instancesAfter.Count()' Is.EqualTo(3));
