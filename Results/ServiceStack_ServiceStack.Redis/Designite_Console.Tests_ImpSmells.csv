Implementation smell,Namespace,Class,File,Method,Description
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultConnectTimeout = 1 * 1000;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultSendTimeout = 1 * 1000;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultReceiveTimeout = 1 * 1000;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultIdleTimeOutSecs = 240;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.BackOffMultiplier = 10;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.BufferPoolMaxSize = 500000;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.HostLookupTimeoutMs = 1000;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: RedisConfig.DeactivatedClientsExpiry = TimeSpan.FromSeconds(15);
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: var items = 5;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: var waitForSeconds = 30;
Magic Number,ConsoleTests,BlockingPop,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingPop.cs,Execute,The following statement contains a magic number: System.Threading.Thread.Sleep(1000);
Magic Number,ConsoleTests,BlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultConnectTimeout = 20 * 1000;
Magic Number,ConsoleTests,BlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultConnectTimeout = 20 * 1000;
Magic Number,ConsoleTests,BlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultRetryTimeout = 20 * 1000;
Magic Number,ConsoleTests,BlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultRetryTimeout = 20 * 1000;
Magic Number,ConsoleTests,BlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: var fromList = client.BlockingRemoveStartFromList("AnyQueue"' TimeSpan.FromMinutes(20));
Magic Number,ConsoleTests,BrPopAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BrPopAfterReconnection.cs,Execute,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ConsoleTests,BrPopAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BrPopAfterReconnection.cs,Execute,The following statement contains a magic number: Thread.Sleep(1000);
Magic Number,ConsoleTests,BrPopAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\BrPopAfterReconnection.cs,BlockingReceive,The following statement contains a magic number: var fromList = client.BlockingPopItemFromList(queue' TimeSpan.FromSeconds(60));
Magic Number,ConsoleTests,MasterFailoverWithPassword,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MasterFailoverWithPassword.cs,Execute,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultConnectTimeout = 20 * 1000;
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultConnectTimeout = 20 * 1000;
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultRetryTimeout = 20 * 1000;
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultRetryTimeout = 20 * 1000;
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,Execute,The following statement contains a magic number: MultipleBlocking(3);
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,BlockingRemoveStartFromList,The following statement contains a magic number: var fromList = client.BlockingRemoveStartFromList(queue' TimeSpan.FromHours(10));
Magic Number,ConsoleTests,MultiBlockingRemoveAfterReconnection,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\MultiBlockingRemoveAfterReconnection.cs,RunTask,The following statement contains a magic number: Task.Run(() =>              {                    while (true)                  {                      try                      {                          Console.WriteLine($"Invoking {name}");                          action.Invoke();                      }                      catch (Exception exception)                      {                          Console.WriteLine($"Exception in {name}: {exception}");                          //Thread.Sleep(5000);// Give redis some time to wake up!                      }                        Thread.Sleep(100);                  }              });
Magic Number,ConsoleTests,HashCollectionStressTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\HashCollectionStressTests.cs,Execute,The following statement contains a magic number: redisCollection = new RedisCachedCollection<string' string>(                  clientsManager' "Threads: " + 64);
Magic Number,ConsoleTests,LongRunningRedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LongRunningRedisPubSubServer.cs,Execute,The following statement contains a magic number: var q = new Timer { Interval = 1000 };
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,StartRedisServersAndSentinels,The following statement contains a magic number: Thread.Sleep(1500);
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,StartRedisServersAndSentinels,The following statement contains a magic number: Thread.Sleep(1500);
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,ShutdownRedisSentinelsAndServers,The following statement contains a magic number: var client = new RedisClient(host)                      {                          ConnectTimeout = 100'                          ReceiveTimeout = 100'                      };
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,ShutdownRedisSentinelsAndServers,The following statement contains a magic number: var client = new RedisClient(host)                      {                          ConnectTimeout = 100'                          ReceiveTimeout = 100'                      };
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,ShutdownRedisSentinelsAndServers,The following statement contains a magic number: var client = new RedisClient("127.0.0.1"' port)                      {                          ConnectTimeout = 100'                          ReceiveTimeout = 100'                      };
Magic Number,ConsoleTests,LocalRedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\LocalRedisSentinelFailoverTests.cs,ShutdownRedisSentinelsAndServers,The following statement contains a magic number: var client = new RedisClient("127.0.0.1"' port)                      {                          ConnectTimeout = 100'                          ReceiveTimeout = 100'                      };
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: RedisConfig.DefaultReceiveTimeout = 10000;
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: clientTimer.Elapsed += (sender' args) =>                  {                      log.Debug("clientTimer.Elapsed: " + (i++));                        try                      {                          string key = null;                          using (var master = (RedisClient)redisManager.GetClient())                          {                              var counter = master.Increment("key"' 1);                              key = "key" + counter;                              log.DebugFormat("Set key {0} in read/write client #{1}@{2}"' key' master.Id' master.GetHostString());                              master.SetValue(key' "value" + 1);                          }                          using (var readOnly = (RedisClient)redisManager.GetReadOnlyClient())                          {                              log.DebugFormat("Get key {0} in read-only client #{1}@{2}"' key' readOnly.Id' readOnly.GetHostString());                              var value = readOnly.GetValue(key);                              log.DebugFormat("{0} = {1}"' key' value);                          }                      }                      catch (ObjectDisposedException)                      {                          log.DebugFormat("ObjectDisposedException detected' disposing timer...");                          clientTimer.Dispose();                      }                      catch (Exception ex)                      {                          log.Error("Error in Timer"' ex);                      }                        if (i % 10 == 0)                          log.Debug(RedisStats.ToDictionary().Dump());                  };
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: Thread.Sleep(20000);
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: master.DebugSleep(35);
Magic Number,ConsoleTests,RedisSentinelFailoverTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\RedisSentinelFailoverTests.cs,Execute,The following statement contains a magic number: Thread.Sleep(5000);
Duplicate Code,ConsoleTests,ForceFailover,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\Console.Tests\ForceFailover.cs,Execute,The method contains a code clone-set at the following line numbers (starting from the method definition): ((25' 49)' (37' 61))
