Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.Redis.Tests.Examples.BestPractice,BlogPostBestPractice,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,Show_a_list_of_recent_posts_and_comments,The method has 135 lines of code.
Long Method,ServiceStack.Redis.Tests.Examples.BestPractice,BlogPostMigrations,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostMigrations.cs,Automatically_migrate_to_new_Schema,The method has 103 lines of code.
Long Method,ServiceStack.Redis.Tests.Examples.BestPractice,BlogPostMigrations,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostMigrations.cs,Manually_migrate_to_new_Schema_using_a_custom_tranlation,The method has 140 lines of code.
Long Method,ServiceStack.Redis.Tests.Examples,BlogPostExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The method has 120 lines of code.
Complex Method,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,AssertIsEqual,Cyclomatic complexity of the method is 8
Long Parameter List,ServiceStack.Redis.Tests,CachedUserSessionManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\UserSessionRedisClientTests.cs,StoreClientSession,The method has 6 parameters. Parameters: userId' userName' shardId' ipAddress' base64ClientModulus' userClientGlobalId
Long Parameter List,ServiceStack.Redis.Tests,UserClientSession,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\UserSessionRedisClientTests.cs,UserClientSession,The method has 5 parameters. Parameters: sessionId' userId' ipAddress' base64ClientModulus' userClientGlobalId
Long Parameter List,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,CompareRuns,The method has 5 parameters. Parameters: iterations' run1Name' run1Action' run2Name' run2Action
Long Statement,ServiceStack.Redis.Tests,ConfigTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ConfigTests.cs,Does_set_all_properties_on_Client_using_ClientsManagers,The length of the statement  "            var connStr = "redis://nunit:pass@host:1?ssl=true&sslprotocols=Tls12&db=0&connectTimeout=2&sendtimeout=3&receiveTimeout=4&idletimeoutsecs=5&NamespacePrefix=prefix."; " is 165.
Long Statement,ServiceStack.Redis.Tests,ConfigTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ConfigTests.cs,Does_set_all_properties_on_Client_using_ClientsManagers,The length of the statement  "            var expected = "{Host:host'Port:1'Ssl:True'SslProtocols:Tls12'Client:nunit'Password:pass'Db:0'ConnectTimeout:2'SendTimeout:3'ReceiveTimeout:4'IdleTimeOutSecs:5'NamespacePrefix:prefix.}" " is 185.
Long Statement,ServiceStack.Redis.Tests,RedisBenchmarkTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Measure_pipeline_speedup,The length of the statement  "            Debug.WriteLine(String.Format("Time for pipelining {0} Set(key'value) operations: {1} ms"' total' sw.ElapsedMilliseconds)); " is 123.
Long Statement,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The length of the statement  "            var members = Redis.GetSortedItemsFromList(ListId' new SortOptions { SortAlpha = true' SortDesc = true' Skip = 1' Take = 2 }); " is 126.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetValues_JSON_strings,The length of the statement  "            var val = "{\"AuthorId\":0'\"Created\":\"\\/Date(1345961754013)\\/\"'\"Name\":\"test\"'\"Base64\":\"BQELAAEBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP8BWAFYAViA/wFYAVgBWID/AVgBWAFYgP8BWAFYAViA/4D/gP+A/4D/AVgBWID/gP8BWID/gP8BWID/gP+A/wFYgP+A/4D/gP8BWID/gP+A/4D/gP+A/wFYAViA/4D/AViA/4D/AVgBWAFYgP8BWAFYAViA/4D/AViA/4D/gP+A/4D/gP8BWAFYgP+A/wFYgP+A/wFYgP+A/4D/gP+A/wFYgP+A/wFYgP+A/4D/gP+A/4D/AVgBWID/gP8BWID/gP8BWAFYAViA/wFYAVgBWID/gP8BWID/gP+A/4D/gP+A/wFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/AVgBWID/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/wFYAViA/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP8BWAFYgP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/AVgBWID/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/4D/gP+A/wFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAFYAVgBWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"}"; " is 1185.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The length of the statement  "                IncrementKeyInsideLock(key' lockKey' i' new RedisClient(TestConfig.SingleHost) { NamespacePrefix = Redis.NamespacePrefix })); " is 125.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_ACQUIRED); " is 123.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_NOT_ACQUIRED); " is 127.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_RECOVERED); " is 124.
Long Statement,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The length of the statement  "            Assert.AreEqual(distributedLock.Lock(key' lockTimeout' lockTimeout' out lockExpire' Redis)' DistributedLock.LOCK_ACQUIRED); " is 123.
Long Statement,ServiceStack.Redis.Tests,RedisPasswordTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPasswordTests.cs,Passwords_are_not_leaked_in_exception_messages,The length of the statement  "                    var factory = new PooledRedisClientManager(password + "@" + TestConfig.SingleHost); // redis will throw when using password and it's not configured " is 147.
Long Statement,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The length of the statement  "            Assert.That(Redis.GetAllItemsFromSortedSet(SortedSetKey)' Is.EquivalentTo(new List<string> { "sortedsetitem1"' "sortedsetitem2"' "sortedsetitem3" })); " is 150.
Long Statement,ServiceStack.Redis.Tests,RedisTemplateTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTemplateTests.cs,Does_build_connection_string,The length of the statement  "            Assert.That(context.EvaluateScript("{{ { host: 'host'' port: 7000' db: 1' password:'secret' } | redisToConnectionString | raw }}")' " is 131.
Long Statement,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The length of the statement  "            Assert.That(Redis.GetAllItemsFromSortedSet(SortedSetKey)' Is.EquivalentTo(new List<string> { "sortedsetitem1"' "sortedsetitem2"' "sortedsetitem3" })); " is 150.
Long Statement,ServiceStack.Redis.Tests,RedisUtilTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisUtilTests.cs,Can_Calculate_Lexical_Score,The length of the statement  "            Debug.WriteLine(String.Format("Lexical Score of '{0}' is: {1}"' nextMinScore' RedisClient.GetLexicalScore(nextMinScore))); " is 122.
Long Statement,ServiceStack.Redis.Tests.Examples.BestPractice,BlogPostMigrations,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostMigrations.cs,Manually_migrate_to_new_Schema_using_a_custom_tranlation,The length of the statement  "                Comments = old.Comments.ConvertAll(x => new Dictionary<string' string> { { "Content"' x.Content }' { "CreatedDate"' x.CreatedDate.ToString() }' })' " is 147.
Long Statement,ServiceStack.Redis.Tests.Examples,SimpleExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleExamples.cs,Store_and_retrieve_some_blogs,The length of the statement  "            //Recursively print the values of the POCO (For T.Dump() Extension method see: http://mono.servicestack.net/mythz_blog/?p=202) " is 126.
Long Statement,ServiceStack.Redis.Tests.Generic,Answer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Equals,The length of the statement  "            return other.Id == Id && other.QuestionId == QuestionId && Equals(other.UserId' UserId) && Equals(other.Content' Content); " is 122.
Long Statement,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,AssertIsEqual,The length of the statement  "                Assert.That(actual.NDateTime.Value.ToUniversalTime().RoundToSecond()' Is.EqualTo(expected.NDateTime.Value.ToUniversalTime().RoundToSecond())); " is 142.
Long Statement,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,Equals,The length of the statement  "            return Equals(other.Id' Id) && Equals(other.Title' Title) && other.Rating == Rating && Equals(other.Director' Director) && other.ReleaseDate.Equals(ReleaseDate) && Equals(other.TagLine' TagLine) && Genres.EquivalentTo(other.Genres); " is 232.
Long Statement,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,RunAction,The length of the statement  "            Log("{0} took {1}ms ({2} ticks)' avg: {3} ticks"' actionName' timeSpan.TotalMilliseconds' timeSpan.Ticks' (timeSpan.Ticks / iterations)); " is 137.
Empty Catch Block,ServiceStack.Redis.Tests.Issues,PipelineIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PipelineIssueTests.cs,Disposing_Client_Clears_Pipeline,The method has an empty catch block.
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Can_infer_utf8_bytes,The following statement contains a magic number: var cmd = "GET" + 2 + "\r\n";
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Convert_int,The following statement contains a magic number: Debug.WriteLine(BitConverter.ToString(1234.ToString().ToUtf8Bytes()));
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,GetCmdBytes2,The following statement contains a magic number: var cmdBytes = new byte[1 + strLines.Length + 2];
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,GetCmdBytes2,The following statement contains a magic number: cmdBytes[cmdBytes.Length - 2] = 0x0D;
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var res1 = GetCmdBytes1('$'' 1234);
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var res2 = GetCmdBytes2('$'' 1234);
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks1 = PerfUtils.Measure(() => GetCmdBytes1('$'' 2));
Magic Number,ServiceStack.Redis.Tests,AdhocClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\AdhocClientTests.cs,Compare_GetCmdBytes,The following statement contains a magic number: var ticks2 = PerfUtils.Measure(() => GetCmdBytes2('$'' 2));
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: client.Db = 2;
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: client.Set("db"' 2);
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: client.Db = 3;
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: client.Set("db"' 3);
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: client.Db = 2;
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: Assert.That(db' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,BasicRediscClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\BasicRediscClientManagerTests.cs,Can_select_db,The following statement contains a magic number: Assert.That(db' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,CultureInfoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\CultureInfoTests.cs,Can_AddItemToSortedSet_in_different_Culture,The following statement contains a magic number: Redis.AddItemToSortedSet("somekey1"' "somevalue"' 66121.202);
Magic Number,ServiceStack.Redis.Tests,CultureInfoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\CultureInfoTests.cs,Can_AddItemToSortedSet_in_different_Culture,The following statement contains a magic number: Assert.That(score' Is.EqualTo(66121.202));
Magic Number,ServiceStack.Redis.Tests,DiagnosticTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\DiagnosticTests.cs,RandomBytes,The following statement contains a magic number: bytes[i] = (byte)rnd.Next(254);
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_ZRangeByLex_all_entries,The following statement contains a magic number: results = Redis.ZRangeByLex("zset"' "-"' "+"' 1' 3);
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_ZlexCount,The following statement contains a magic number: Assert.That(Redis.ZLexCount("zset"' "-"' "[c")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_ZlexCount,The following statement contains a magic number: Assert.That(Redis.ZLexCount("zset"' "-"' "(c")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_ZRemRangeByLex,The following statement contains a magic number: Assert.That(removed' Is.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSet,The following statement contains a magic number: Assert.That(Redis.SearchSortedSet("zset"' "[aaa"' "(g").Count' Is.EqualTo(values.Length - 2));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSet,The following statement contains a magic number: Assert.That(Redis.SearchSortedSet("zset"' "a"' "c").Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSet,The following statement contains a magic number: Assert.That(Redis.SearchSortedSet("zset"' "[a"' "[c").Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSet,The following statement contains a magic number: Assert.That(Redis.SearchSortedSet("zset"' "a"' "(c").Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSetCount,The following statement contains a magic number: Assert.That(Redis.SearchSortedSetCount("zset"' "[aaa"' "(g")' Is.EqualTo(values.Length - 2));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSetCount,The following statement contains a magic number: Assert.That(Redis.SearchSortedSetCount("zset"' "a"' "c")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSetCount,The following statement contains a magic number: Assert.That(Redis.SearchSortedSetCount("zset"' "[a"' "[c")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_SearchSortedSetCount,The following statement contains a magic number: Assert.That(Redis.SearchSortedSetCount("zset"' "a"' "(c")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,LexTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LexTests.cs,Can_RemoveRangeFromSortedSetBySearch,The following statement contains a magic number: Assert.That(removed' Is.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests,FreeLicenseUsageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LicenseUsageTests.cs,Allows_access_of_6000_operations,The following statement contains a magic number: 6000.Times(() => client.Get("any key"));
Magic Number,ServiceStack.Redis.Tests,FreeLicenseUsageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LicenseUsageTests.cs,Throws_on_access_of_6100_operations,The following statement contains a magic number: Assert.Throws<LicenseException>(() =>                      6100.Times(() => client.Get("any key")));
Magic Number,ServiceStack.Redis.Tests,RegisteredLicenseUsageTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LicenseUsageTests.cs,Allows_access_of_6100_operations,The following statement contains a magic number: 6100.Times(() => client.Get("any key"));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_repeated_scans_in_LUA,The following statement contains a magic number: AddTestKeys(redis' 20);
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_repeated_scans_in_LUA,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_repeated_scans_in_LUA,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(20));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_Cached_Lua,The following statement contains a magic number: AddTestKeys(redis' 20);
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_Cached_Lua,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_Cached_Lua,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_Cached_Lua_even_after_script_is_flushed,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_Cached_Lua_even_after_script_is_flushed,The following statement contains a magic number: Assert.That(r.Children.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_call_script_with_complex_response,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_merge_multiple_SearchResults,The following statement contains a magic number: var limit = 10;
Magic Number,ServiceStack.Redis.Tests,ObjectSerializerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ObjectSerializerTests.cs,Can_serialize_object_with_optimized_serializer,The following statement contains a magic number: float testFloat = 320.0f;
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client3' testReadWriteHosts[2]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client4' testReadWriteHosts[3]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_loop_through_ReadOnly_hosts,The following statement contains a magic number: AssertClientHasHost(client3' testReadOnlyHosts[2]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Can_have_different_pool_size_and_host_configurations,The following statement contains a magic number: const int poolSizeMultiplier = 4;
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: Action func = delegate                  {                      Thread.Sleep(delay + TimeSpan.FromSeconds(0.5));                      client4.Dispose();                  };
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client3' testReadWriteHosts[2]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client4' testReadWriteHosts[3]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client5' testReadWriteHosts[3]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: Action func = delegate                  {                      Thread.Sleep(delay + TimeSpan.FromSeconds(0.5));                      client3.Dispose();                  };
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: AssertClientHasHost(client3' testReadOnlyHosts[2]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_block_ReadOnly_clients_pool,The following statement contains a magic number: AssertClientHasHost(client4' testReadOnlyHosts[2]);
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_throw_TimeoutException_when_PoolTimeout_exceeded,The following statement contains a magic number: manager.PoolTimeout = 100;
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_throw_TimeoutException_when_PoolTimeout_exceeded,The following statement contains a magic number: var masters = 4.Times(i => manager.GetClient());
Magic Number,ServiceStack.Redis.Tests,PooledRedisClientManagerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\PooledRedisClientManagerTests.cs,Does_throw_TimeoutException_when_PoolTimeout_exceeded,The following statement contains a magic number: var slaves = 4.Times(i => manager.GetReadOnlyClient());
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: i < numMessages / 2
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: var batch = queue.Dequeue(numMessages / 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueueUpdate,The following statement contains a magic number: i < numMessages / 2
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(numMessages / 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: i < numMessages / 2
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Assert.AreEqual(numMessages / 2' batch.DequeueItems.Count);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(2 * numMessages);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSequentialWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch.DequeueItems.Count' numMessages / 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: const int numMessages = 6;
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(0' numMessages' numMessages / 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: i < numMessages / 2
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(0' numMessages' 2 * numMessages);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch.Count' numMessages / 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: Assert.AreEqual(batch[i].Value' messages[i + numMessages / 2]);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestChronologicalWorkQueue,The following statement contains a magic number: i < numMessages / 2
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: int numMessages = 6;
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: var batch = queue.Dequeue(numMessages * 2);
Magic Number,ServiceStack.Redis.Tests,QueueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\QueueTests.cs,TestSimpleWorkQueue,The following statement contains a magic number: batch = queue.Dequeue(numMessages * 2);
Magic Number,ServiceStack.Redis.Tests,RedisBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,OnBeforeEachTest,The following statement contains a magic number: 5.Times(i => testModels.Add(                  new TestModel { Id = Guid.NewGuid()' Name = "Name" + i' Age = 20 + i }));
Magic Number,ServiceStack.Redis.Tests,RedisBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,OnBeforeEachTest,The following statement contains a magic number: 5.Times(i => testModels.Add(                  new TestModel { Id = Guid.NewGuid()' Name = "Name" + i' Age = 20 + i }));
Magic Number,ServiceStack.Redis.Tests,RedisBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,Can_GetByIds,The following statement contains a magic number: var evenTestModels = testModels.Where(x => x.Age % 2 == 0)                  .OrderBy(x => x.Id).ToList();
Magic Number,ServiceStack.Redis.Tests,RedisBasicPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,Can_DeleteByIds,The following statement contains a magic number: var evenTestModels = testModels.Where(x => x.Age % 2 == 0)                  .OrderBy(x => x.Id).ToList();
Magic Number,ServiceStack.Redis.Tests,TestModel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.Redis.Tests,TestModel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBasicPersistenceProviderTests.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Age;
Magic Number,ServiceStack.Redis.Tests,RedisBatchTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBatchTests.cs,Store_batch_items_in_List,The following statement contains a magic number: const int batchSize = 500;
Magic Number,ServiceStack.Redis.Tests,RedisBatchTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBatchTests.cs,Store_batch_items_in_List,The following statement contains a magic number: Assert.That(msgs.Last().Id' Is.EqualTo(500));
Magic Number,ServiceStack.Redis.Tests,RedisBenchmarkTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Measure_pipeline_speedup,The following statement contains a magic number: int total = 500;
Magic Number,ServiceStack.Redis.Tests,RedisBenchmarkTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: int total = 25;
Magic Number,ServiceStack.Redis.Tests,RedisBenchmarkTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: int count = 20;
Magic Number,ServiceStack.Redis.Tests,RedisBenchmarkTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Compare_sort_nosort_to_smembers_mget,The following statement contains a magic number: byte fixedValue = 124;
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Run,The following statement contains a magic number: int nMaxIterations = 5;
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Run,The following statement contains a magic number: double dMBPerSEc = nBytesHandled / 1024.0 / 1024.0 / (interval / 1000.0);
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Run,The following statement contains a magic number: double dMBPerSEc = nBytesHandled / 1024.0 / 1024.0 / (interval / 1000.0);
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Run,The following statement contains a magic number: double dMBPerSEc = nBytesHandled / 1024.0 / 1024.0 / (interval / 1000.0);
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Benchmark_SET_raw_bytes_8MB_ServiceStack,The following statement contains a magic number: Run("ServiceStack.Redis 8MB"' 8000000'                  (i' bytes) => redis.Set("eitan" + i.ToString()' bytes));
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Benchmark_SET_raw_bytes_1MB_ServiceStack,The following statement contains a magic number: Run("ServiceStack.Redis 1MB"' 1000000'                  (i' bytes) => redis.Set("eitan" + i.ToString()' bytes));
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Benchmark_SET_raw_bytes_100k_ServiceStack,The following statement contains a magic number: Run("ServiceStack.Redis 100K"' 100000'                  (i' bytes) => redis.Set("eitan" + i.ToString()' bytes));
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Benchmark_SET_raw_bytes_10k_ServiceStack,The following statement contains a magic number: Run("ServiceStack.Redis 10K"' 10000'                  (i' bytes) => redis.Set("eitan" + i.ToString()' bytes));
Magic Number,ServiceStack.Redis.Tests,RawBytesSetBenchmark,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisBenchmarkTests.cs,Benchmark_SET_raw_bytes_1k_ServiceStack,The following statement contains a magic number: Run("ServiceStack.Redis 1K"' 1000'                  (i' bytes) => redis.Set("eitan" + i.ToString()' bytes));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_Replace_By_Pattern,The following statement contains a magic number: model = ModelWithIdAndName.Create(2);
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: cacheClient.Set(key' model' expiresIn: TimeSpan.FromSeconds(10));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.Value' Is.GreaterThanOrEqualTo(TimeSpan.FromSeconds(9)));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.Value' Is.LessThanOrEqualTo(TimeSpan.FromSeconds(10)));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_increment_and_reset_values,The following statement contains a magic number: Assert.That(client.Increment("incr:counter"' 10)' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_increment_and_reset_values,The following statement contains a magic number: Assert.That(client.Increment("incr:counter"' 10)' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_increment_and_reset_values,The following statement contains a magic number: Assert.That(client.Increment("incr:counter"' 10)' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisCacheClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisCacheClientTests.cs,Can_increment_and_reset_values,The following statement contains a magic number: Assert.That(client.Increment("incr:counter"' 10)' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_EvalSha_int,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int_with_args,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(3141591));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int_with_keys_and_args,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(50));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_Eval_int2,The following statement contains a magic number: Assert.That(intVal' Is.EqualTo(30));
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_create_ZPop_with_lua,The following statement contains a magic number: var alphabet = 26.Times(c => ((char)('A' + c)).ToString());
Magic Number,ServiceStack.Redis.Tests,RedisClientEvalTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientEvalTests.cs,Can_create_ZRevPop_with_lua,The following statement contains a magic number: var alphabet = 26.Times(c => ((char)('A' + c)).ToString());
Magic Number,ServiceStack.Redis.Tests,RedisClientHashTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientHashTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientHashTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientHashTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringIntMap = new Dictionary<string' int> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientHashTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientHashTests.cs,Can_increment_Hash_field,The following statement contains a magic number: stringIntMap["two"] += 10;
Magic Number,ServiceStack.Redis.Tests,RedisClientHashTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientHashTests.cs,Can_increment_Hash_field,The following statement contains a magic number: Redis.IncrementValueInHash(HashId' "two"' 10);
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_GetItemFromList,The following statement contains a magic number: var storeMember3 = storeMembers[2];
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_GetItemFromList,The following statement contains a magic number: var item3 = Redis.GetItemFromList(ListId' 2);
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_SetItemInList,The following statement contains a magic number: storeMembers[2] = "five";
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_SetItemInList,The following statement contains a magic number: Redis.SetItemInList(ListId' 2' "five");
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_enumerate_large_list,The following statement contains a magic number: const int listSize = 2500;
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: storeMembers.RemoveAt(2);
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: list.RemoveAt(2);
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The following statement contains a magic number: var members = Redis.GetSortedItemsFromList(ListId' new SortOptions { SortAlpha = true' SortDesc = true' Skip = 1' Take = 2 });
Magic Number,ServiceStack.Redis.Tests,RedisClientListTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientListTests.cs,Can_AddRangeToList_and_GetSortedItems,The following statement contains a magic number: AssertAreEqual(members' storeMembers.OrderByDescending(s => s).Skip(1).Take(2).ToList());
Magic Number,ServiceStack.Redis.Tests,RedisClientSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSetTests.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_Exec_Func_double,The following statement contains a magic number: double value = redisManager.Exec(r =>              {                  r.AddItemToSortedSet("zset"' "value"' 1.1d);                  return r.GetItemScoreInSortedSet("zset"' "value");              });
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_Exec_Func_double,The following statement contains a magic number: Assert.That(value' Is.EqualTo(1.1d));
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_IList,The following statement contains a magic number: var expected = new[] {                     ModelWithIdAndName.Create(1)'                     ModelWithIdAndName.Create(2)'                     ModelWithIdAndName.Create(3)'                 };
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_IList,The following statement contains a magic number: var expected = new[] {                     ModelWithIdAndName.Create(1)'                     ModelWithIdAndName.Create(2)'                     ModelWithIdAndName.Create(3)'                 };
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_List,The following statement contains a magic number: var expected = new[] {                     ModelWithIdAndName.Create(1)'                     ModelWithIdAndName.Create(2)'                     ModelWithIdAndName.Create(3)'                 };
Magic Number,ServiceStack.Redis.Tests,RedisClientsManagerExtensionsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientsManagerExtensionsTests.cs,Can_ExecAs_ModelWithIdAndName_Func_List,The following statement contains a magic number: var expected = new[] {                     ModelWithIdAndName.Create(1)'                     ModelWithIdAndName.Create(2)'                     ModelWithIdAndName.Create(3)'                 };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,OnBeforeEachTest,The following statement contains a magic number: stringDoubleMap = new Dictionary<string' double> {                   {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}               };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_RemoveItemsFromSortedSet,The following statement contains a magic number: Assert.That(removeCount' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: var i = 10;
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSet(SetId' "three")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSet(SetId' "four")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSetDesc(SetId' "one")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_GetItemIndexInSortedSet_in_Asc_and_Desc,The following statement contains a magic number: Assert.That(Redis.GetItemIndexInSortedSetDesc(SetId' "two")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: var currentScore = Redis.IncrementItemInSortedSet(SetId' "one"' 3);
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: stringDoubleMap["one"] = stringDoubleMap["one"] + 3;
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: currentScore = Redis.IncrementItemInSortedSet(SetId' "four"' -3);
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_IncrementItemInSortedSet,The following statement contains a magic number: stringDoubleMap["four"] = stringDoubleMap["four"] - 3;
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_WorkInSortedSetUnderDifferentCulture,The following statement contains a magic number: Redis.AddItemToSortedSet(SetId' "key"' 123.22);
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_WorkInSortedSetUnderDifferentCulture,The following statement contains a magic number: Assert.AreEqual(123.22' map["key"]);
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_get_index_and_score_from_SortedSet,The following statement contains a magic number: const double initialScore = 10d;
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_add_large_score_to_sortedset,The following statement contains a magic number: Redis.AddItemToSortedSet(SetId' "value"' 12345678901234567890d);
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_add_large_score_to_sortedset,The following statement contains a magic number: Assert.That(score' Is.EqualTo(12345678901234567890d));
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientSortedSetTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientSortedSetTests.cs,Can_use_SortedIndex_to_store_articles_by_Date,The following statement contains a magic number: var articles = new[]              {                  new Article { Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02) }'                  new Article { Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01) }'                  new Article { Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03) }'              };
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,GetKeys_returns_matching_collection,The following statement contains a magic number: Assert.That(matchingKeys.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => keysMap.Add("key" + i' "val" + i));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => Assert.That(Redis.ContainsKey("key" + i)' Is.True));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_delete_keys,The following statement contains a magic number: 10.Times(i => Assert.That(Redis.ContainsKey("key" + i)' Is.False));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_RandomKey,The following statement contains a magic number: Redis.Db = 15;
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_RandomKey,The following statement contains a magic number: 10.Times(i => keysMap.Add(Redis.NamespacePrefix + "key" + i' "val" + i));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Expire,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Expire_Ms,The following statement contains a magic number: Redis.ExpireEntryIn("key"' TimeSpan.FromMilliseconds(100));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Expire_Ms,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_ExpireAt,The following statement contains a magic number: var in2Secs = unixNow + 2;
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_ExpireAt,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Redis.Expire("key"' 10);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.Value.TotalSeconds' Is.GreaterThanOrEqualTo(9));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Thread.Sleep(1700);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetTimeToLive,The following statement contains a magic number: Assert.That(ttl.Value.TotalSeconds' Is.LessThanOrEqualTo(9));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: 5.Times(i => Redis.SetValue("k1:" + i' "val"));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: 5.Times(i => Redis.SetValue("k2:" + i' "val"));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: Assert.That(keys.Length' Is.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_Keys_with_pattern,The following statement contains a magic number: Assert.That(scanKeys.Length' Is.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_GetAll,The following statement contains a magic number: 10.Times(i => keysMap.Add("key" + i' "val" + i));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: var asyncResults = 5.TimesAsync(i =>                  IncrementKeyInsideLock(key' lockKey' i' new RedisClient(TestConfig.SingleHost) { NamespacePrefix = Redis.NamespacePrefix }));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: asyncResults.WaitAll(TimeSpan.FromSeconds(5));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_AcquireLock,The following statement contains a magic number: Assert.That(val' Is.EqualTo(1 + 5));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,IncrementKeyInsideLock,The following statement contains a magic number: Thread.Sleep(200);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_AcquireLock_TimeOut,The following statement contains a magic number: var waitFor = TimeSpan.FromMilliseconds(1000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: int lockTimeout = 2;
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: Thread.Sleep(lockTimeout * 1000 + 1000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_create_distributed_lock,The following statement contains a magic number: Thread.Sleep(lockTimeout * 1000 + 1000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_store_multiple_keys,The following statement contains a magic number: var keys = 5.Times(x => "key" + x);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_store_multiple_keys,The following statement contains a magic number: var vals = 5.Times(x => "val" + x);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_store_Dictionary,The following statement contains a magic number: var keys = 5.Times(x => "key" + x);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_store_Dictionary,The following statement contains a magic number: var vals = 5.Times(x => "val" + x);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_get_showlog,The following statement contains a magic number: var log = redis.GetSlowlog(10);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_change_db_at_runtime,The following statement contains a magic number: redis.ChangeDb(2);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_MilliSeconds,The following statement contains a magic number: Redis.SetValue("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_MilliSeconds,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Assert.That(Redis.SetValueIfExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1500))'                  Is.False);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Assert.That(Redis.SetValueIfExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000))'                  Is.True);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_exists,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Assert.That(Redis.SetValueIfNotExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000))'                  Is.True);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Assert.That(Redis.SetValueIfNotExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000))'                  Is.False);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisClientTests.cs,Can_Set_Expire_Seconds_if_not_exists,The following statement contains a magic number: Redis.SetValueIfNotExists("key"' "val"' expireIn: TimeSpan.FromMilliseconds(1000));
Magic Number,ServiceStack.Redis.Tests,RedisExtensionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisExtensionTests.cs,Can_Parse_Host,The following statement contains a magic number: Assert.AreEqual(6123' ep.Port);
Magic Number,ServiceStack.Redis.Tests,RedisExtensionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisExtensionTests.cs,Host_May_Contain_AtChar,The following statement contains a magic number: Assert.AreEqual(6123' ep.Port);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoPos_on_NonExistingMember_returns_no_results,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoPos_on_NonExistingMember_returns_no_results,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: var count = redis.GeoAdd("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoAdd_and_GeoPos_multiple,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(166274.15156960039).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoDist,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(166274.15156960039).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoDist_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoDist_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoDist_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,GeoDist_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoHash,The following statement contains a magic number: Assert.That(hashes[2]' Is.EqualTo("sqdtr74hyu0"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_default,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: var results = redis.GeoRadiusByMember("Sicily"' "Agrigento"' 100' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_default,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withCoords: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withCoords: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withCoords: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withDist: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withDist: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers' withDist: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithDist,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Hash' Is.EqualTo(3479447370796909));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: var results = redis.GeoRadiusByMember("Sicily"' "Agrigento"' 100' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.583333).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.583333).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.316667).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.316667).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479030013248308));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(90.9778).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(90.9778).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadiusByMember_WithCoord_WithDist_WithHash,The following statement contains a magic number: Assert.That(results[1].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count:1' asc:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count:1' asc:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count:1' asc:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count: 1' asc: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count: 1' asc: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.GeoRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                  withCoords: true' withDist: true' withHash: true' count: 1' asc: true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoNativeClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoNativeClientTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479447370796909));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: var count = redis.AddGeoMember("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: var count = redis.AddGeoMember("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMember_and_GetGeoCoordinates,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,GetGeoCoordinates_on_NonExistingMember_returns_no_results,The following statement contains a magic number: var count = redis.AddGeoMember("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,GetGeoCoordinates_on_NonExistingMember_returns_no_results,The following statement contains a magic number: var count = redis.AddGeoMember("Sicily"' 13.361389' 38.115556' "Palermo");
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: var count = redis.AddGeoMembers("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: var count = redis.AddGeoMembers("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: var count = redis.AddGeoMembers("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: var count = redis.AddGeoMembers("Sicily"'                   new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_AddGeoMembers_and_GetGeoCoordinates_multiple,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(166274.15156960039).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_CalculateDistanceBetweenGeoMembers,The following statement contains a magic number: Assert.That(distance' Is.EqualTo(166274.15156960039).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,CalculateDistanceBetweenGeoMembers_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,CalculateDistanceBetweenGeoMembers_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,CalculateDistanceBetweenGeoMembers_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,CalculateDistanceBetweenGeoMembers_on_NonExistingMember_returns_NaN,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GetGeohashes,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GetGeohashes,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GetGeohashes,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GetGeohashes,The following statement contains a magic number: redis.AddGeoMembers("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GetGeohashes,The following statement contains a magic number: Assert.That(hashes[2]' Is.EqualTo("sqdtr74hyu0"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: var results = redis.FindGeoMembersInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: var results = redis.FindGeoMembersInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: var results = redis.FindGeoMembersInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoMembersInRadius,The following statement contains a magic number: Assert.That(results.Length' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: var results = redis.GeoRadiusByMember("Sicily"' "Agrigento"' 100' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadiusByMember,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius,The following statement contains a magic number: Assert.That(results[1].Hash' Is.EqualTo(3479447370796909));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.583333' 37.316667' "Agrigento")'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' "Agrigento"' 100' RedisGeoUnit.Kilometers);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results.Count' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.583333).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.583333).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.316667).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.316667).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479030013248308));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(90.9778).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Distance' Is.EqualTo(90.9778).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_FindGeoResultsInRadius_by_Member,The following statement contains a magic number: Assert.That(results[1].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: redis.GeoAdd("Sicily"'                  new RedisGeo(13.361389' 38.115556' "Palermo")'                  new RedisGeo(15.087269' 37.502669' "Catania"));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count:1' sortByNearest:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count:1' sortByNearest:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: var results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count:1' sortByNearest:false);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(13.361389).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(38.115556).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(190.4424).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479099956230698));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count: 1' sortByNearest:true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count: 1' sortByNearest:true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: results = redis.FindGeoResultsInRadius("Sicily"' 15' 37' 200' RedisGeoUnit.Kilometers'                   count: 1' sortByNearest:true);
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Longitude' Is.EqualTo(15.087269).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Latitude' Is.EqualTo(37.502669).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Distance' Is.EqualTo(56.4413).Within(.1));
Magic Number,ServiceStack.Redis.Tests,RedisGeoTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisGeoTests.cs,Can_GeoRadius_WithCoord_WithDist_WithHash_Count_and_Asc,The following statement contains a magic number: Assert.That(results[0].Hash' Is.EqualTo(3479447370796909));
Magic Number,ServiceStack.Redis.Tests,RedisHyperLogTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisHyperLogTests.cs,Can_Add_to_Hyperlog,The following statement contains a magic number: Assert.That(count' Is.EqualTo(4));
Magic Number,ServiceStack.Redis.Tests,RedisHyperLogTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisHyperLogTests.cs,Can_Add_to_Hyperlog,The following statement contains a magic number: Assert.That(mergeCount' Is.EqualTo(6));
Magic Number,ServiceStack.Redis.Tests,RedisHyperLogTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisHyperLogTests.cs,Test_on_old_redisserver,The following statement contains a magic number: redis.Set("key"' "value"' TimeSpan.FromDays(14));
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client3' hosts[2]);
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Does_loop_through_ReadWrite_hosts,The following statement contains a magic number: AssertClientHasHost(client4' hosts[3]);
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Does_not_block_ReadWrite_clients_pool,The following statement contains a magic number: Action func = delegate                  {                      Thread.Sleep(delay + TimeSpan.FromSeconds(0.5));                      client4.Dispose();                  };
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Does_not_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client3' hosts[2]);
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Does_not_block_ReadWrite_clients_pool,The following statement contains a magic number: AssertClientHasHost(client4' hosts[3]);
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Assert.That(entry.Value' Is.GreaterThanOrEqualTo(5)' "Host has unproportianate distrobution: " + entry.Value);
Magic Number,ServiceStack.Redis.Tests,RedisManagerPoolTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisManagerPoolTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Assert.That(entry.Value' Is.LessThanOrEqualTo(30)' "Host has unproportianate distrobution: " + entry.Value);
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_StoreAll_and_GetByIds_ModelWithIdAndName,The following statement contains a magic number: var ids = new[] { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var ids = new List<int> { 1' 2' 3' 4' 5 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.Redis.Tests,RedisPersistenceProviderTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPersistenceProviderTests.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new List<int> { 2' 4 };
Magic Number,ServiceStack.Redis.Tests,RedisPipelineCommonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineCommonTests.cs,Can_Set_and_Expire_key_in_atomic_transaction,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_hash_operations_in_pipeline,The following statement contains a magic number: Assert.AreEqual(members[i]' fieldBytes[i / 2]);
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_hash_operations_in_pipeline,The following statement contains a magic number: Assert.AreEqual(members[i + 1]' valueBytes[i / 2]);
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => ((RedisNativeClient)r).SetEx(keys[index0]' 100' GetBytes(values[index0])));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: i < 3
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_multiple_setexs_in_pipeline,The following statement contains a magic number: i < 3
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<long> { 1' 2 }));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.GetItemFromList(ListKey' 4)' x => item4 = x);
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: Assert.That(Redis.GetListCount(ListKey)' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RedisPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPipelineTests.cs,Can_call_operation_not_supported_on_older_servers_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => ((RedisNativeClient)r).SetEx(Key + "key"' 5' temp));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses,The following statement contains a magic number: Thread.Sleep(3100);
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses,The following statement contains a magic number: Assert.That(pulseCount' Is.GreaterThan(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: pubSub.OnControlCommand = op =>                  {                      if (op == "PULSE" && stopCount < 2)                          Thread.Sleep(4000);                  };
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: pubSub.OnControlCommand = op =>                  {                      if (op == "PULSE" && stopCount < 2)                          Thread.Sleep(4000);                  };
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: Thread.Sleep(30 * 1000);
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: Thread.Sleep(30 * 1000);
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: Assert.That(pulseCount' Is.GreaterThan(3));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: Assert.That(startCount' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_restart_when_Heartbeat_Timeout_exceeded,The following statement contains a magic number: Assert.That(stopCount' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: var count = 15;
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: var pubSubs = count.Times(i =>              {                  var pubSub = CreatePubSubServer(intervalSecs: 20' timeoutSecs: 30);                  pubSub.OnHeartbeatReceived = () => "{0}: pulse #{1}".Print(i' ++pulseCount);                  pubSub.Start();                  return pubSub;              });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: var pubSubs = count.Times(i =>              {                  var pubSub = CreatePubSubServer(intervalSecs: 20' timeoutSecs: 30);                  pubSub.OnHeartbeatReceived = () => "{0}: pulse #{1}".Print(i' ++pulseCount);                  pubSub.Start();                  return pubSub;              });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: Thread.Sleep(32000);
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: Assert.That(pulseCount' Is.GreaterThan(2 * count));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubServerTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubServerTests.cs,Does_send_heartbeat_pulses_to_multiple_PubSubServers,The following statement contains a magic number: Assert.That(pulseCount' Is.LessThan(8 * count));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                      using (var redisClient = CreateRedisClient())                      {                          Log("Publishing '{0}' to '{1}'"' message' channelName);                          redisClient.PublishMessage(channelName' message);                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message_using_wildcard,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                      using (var redisClient = CreateRedisClient())                      {                          Log("Publishing '{0}' to '{1}'"' message' channelName);                          redisClient.PublishMessage(channelName' message);                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_single_message_using_wildcard,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: const int publishMessageCount = 5;
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                        using (var redisClient = CreateRedisClient())                      {                          for (var i = 0; i < publishMessageCount; i++)                          {                              var message = messagePrefix + i;                              Log("Publishing '{0}' to '{1}'"' message' channelName);                              redisClient.PublishMessage(channelName' message);                          }                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_multiple_message,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: const int publishChannelCount = 5;
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                        using (var redisClient = CreateRedisClient())                      {                          foreach (var channel in channels)                          {                              Log("Publishing '{0}' to '{1}'"' message' channel);                              redisClient.PublishMessage(channel' message);                          }                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_and_Publish_message_to_multiple_channels,The following statement contains a magic number: Assert.That(Redis.Get<int>(key)' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_to_channel_pattern,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                        using (var redisClient = CreateRedisClient())                      {                          Log("Publishing msg...");                          redisClient.Publish(PrefixedKey("CHANNEL4:TITLE1")' "hello".ToUtf8Bytes());                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisPubSubTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisPubSubTests.cs,Can_Subscribe_to_multiplechannel_pattern,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(100); // to be sure that we have subscribers                        using (var redisClient = CreateRedisClient())                      {                          Log("Publishing msg...");                          redisClient.Publish(PrefixedKey("CHANNEL5:BODY")' "hello".ToUtf8Bytes());                      }                  });
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_10_collection,The following statement contains a magic number: var keys = 10.Times(x => "KEY" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_100_collection_over_cursor,The following statement contains a magic number: var keys = 100.Times(x => "KEY" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_100_collection_over_cursor,The following statement contains a magic number: ret = Redis.Scan(ret.Cursor' 10);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_100_collection_over_cursor,The following statement contains a magic number: Assert.That(i' Is.GreaterThanOrEqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_and_search_10_collection,The following statement contains a magic number: var keys = 11.Times(x => "KEY" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_scan_and_search_10_collection,The following statement contains a magic number: var ret = Redis.Scan(0' 11' match: "KEY1*");
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_SScan_10_sets,The following statement contains a magic number: var items = 10.Times(x => "item" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_ZScan_10_sortedsets,The following statement contains a magic number: var items = 10.Times(x => "item" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_ZScan_10_sortedsets,The following statement contains a magic number: Assert.That(itemsWithScore.Values' Is.EqualTo(10.Times(x => (double)x)));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Can_HScan_10_hashes,The following statement contains a magic number: var values = 10.Times(x => "VALUE" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_keys,The following statement contains a magic number: var keys = 100.Times(x => "KEY" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_keys,The following statement contains a magic number: var scanAllKeys = Redis.ScanAllKeys(pageSize: 10);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_keys,The following statement contains a magic number: var tenKeys = scanAllKeys.Take(10).ToList();
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_keys,The following statement contains a magic number: Assert.That(tenKeys.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_keys,The following statement contains a magic number: Assert.That(scanAllKeys.Count()' Is.EqualTo(100));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_set_items,The following statement contains a magic number: var items = 100.Times(x => "item" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_set_items,The following statement contains a magic number: var scanAllItems = Redis.ScanAllSetItems("scanset"' pageSize: 10);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_set_items,The following statement contains a magic number: var tenKeys = scanAllItems.Take(10).ToList();
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_set_items,The following statement contains a magic number: Assert.That(tenKeys.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_set_items,The following statement contains a magic number: Assert.That(scanAllItems.Count()' Is.EqualTo(100));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_sortedset_items,The following statement contains a magic number: var items = 100.Times(x => "item" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_sortedset_items,The following statement contains a magic number: var scanAllItems = Redis.ScanAllSortedSetItems("scanzset"' pageSize: 10);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_sortedset_items,The following statement contains a magic number: var tenKeys = scanAllItems.Take(10).ToList();
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_sortedset_items,The following statement contains a magic number: Assert.That(tenKeys.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_sortedset_items,The following statement contains a magic number: Assert.That(scanAllItems.Count()' Is.EqualTo(100));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_hash_items,The following statement contains a magic number: var values = 100.Times(x => "VALUE" + x);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_hash_items,The following statement contains a magic number: var scanAllItems = Redis.ScanAllHashEntries("scanhash"' pageSize: 10);
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_hash_items,The following statement contains a magic number: var tenKeys = scanAllItems.Take(10).ToList();
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_hash_items,The following statement contains a magic number: Assert.That(tenKeys.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests,RedisScanTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisScanTests.cs,Does_lazy_scan_all_hash_items,The following statement contains a magic number: Assert.That(scanAllItems.Count()' Is.EqualTo(100));
Magic Number,ServiceStack.Redis.Tests,RedisStatsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisStatsTests.cs,OneTimeSetUp,The following statement contains a magic number: RedisConfig.AssumeServerVersion = 2821;
Magic Number,ServiceStack.Redis.Tests,RedisStatsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisStatsTests.cs,Batch_and_Pipeline_requests_only_counts_as_1_request,The following statement contains a magic number: 10.Times(i => map["key" + i] = "value" + i);
Magic Number,ServiceStack.Redis.Tests,RedisStatsTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisStatsTests.cs,Batch_and_Pipeline_requests_only_counts_as_1_request,The following statement contains a magic number: Assert.That(RedisNativeClient.RequestsPerHour' Is.EqualTo(reqCount + 2));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionCommonTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionCommonTests.cs,Can_Set_and_Expire_key_in_atomic_transaction,The following statement contains a magic number: Thread.Sleep(TimeSpan.FromSeconds(2));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<long> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<long> { 1' 2 }));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.GetItemFromList(ListKey' 4)' x => item4 = x);
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: Assert.That(Redis.GetListCount(ListKey)' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx(keys[index0]' 100' GetBytes(values[index0])));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: i < 3
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_multiple_setexs_in_transaction,The following statement contains a magic number: i < 3
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_call_operation_not_supported_on_older_servers_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx(Key' 5' temp));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Transaction_can_issue_watch,The following statement contains a magic number: Redis.Set(Key' 7);
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Transaction_can_issue_watch,The following statement contains a magic number: trans.QueueCommand(r => r.Set(KeySquared' 2));
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Can_set_Expiry_on_key_in_transaction,The following statement contains a magic number: var expiresIn = TimeSpan.FromMinutes(15);
Magic Number,ServiceStack.Redis.Tests,RedisTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RedisTransactionTests.cs,Does_not_set_Expiry_on_existing_key_in_transaction,The following statement contains a magic number: var expiresIn = TimeSpan.FromMinutes(15);
Magic Number,ServiceStack.Redis.Tests,RetryCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RetryCommandTests.cs,Does_retry_failed_commands,The following statement contains a magic number: Assert.That(redis.IncrementValue("retryCounter")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RetryCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RetryCommandTests.cs,Does_retry_failed_commands,The following statement contains a magic number: Assert.That(redis.Get<int>("retryCounter")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RetryCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RetryCommandTests.cs,Does_retry_failed_commands_with_SocketException,The following statement contains a magic number: Assert.That(redis.IncrementValue("retryCounter")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests,RetryCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RetryCommandTests.cs,Does_retry_failed_commands_with_SocketException,The following statement contains a magic number: Assert.That(redis.Get<int>("retryCounter")' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests,RetryCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\RetryCommandTests.cs,Does_Timeout_with_repeated_SocketException,The following statement contains a magic number: RedisConfig.DefaultRetryTimeout = 100;
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,OneTimeSetUp,The following statement contains a magic number: Port = settings.Get("Port"' 6379);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,Can_connect_to_NetworkStream,The following statement contains a magic number: socket.Connect(Host' 6379);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,Can_connect_to_Buffered_SslStream,The following statement contains a magic number: var bstream = new BufferedStream(sslStream' 16 * 1024);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,Can_connect_to_Buffered_SslStream,The following statement contains a magic number: var bstream = new BufferedStream(sslStream' 16 * 1024);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,GetCmdBytes,The following statement contains a magic number: var cmdBytes = new byte[1 + strLinesLength + 2];
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,GetCmdBytes,The following statement contains a magic number: cmdBytes[2 + strLinesLength] = 0x0A;
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,ExpectSuccess,The following statement contains a magic number: throw new Exception(s.StartsWith("ERR") && s.Length >= 4 ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,ExpectSuccess,The following statement contains a magic number: throw new Exception(s.StartsWith("ERR") && s.Length >= 4 ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,SSL_can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: var results = 100.Times(x => ModelWithFieldsOfDifferentTypes.Create(x));
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,SSL_can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,SSL_can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,SSL_can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: var results = 100.Times(x => ModelWithFieldsOfDifferentTypes.Create(x));
Magic Number,ServiceStack.Redis.Tests,SslTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\SslTests.cs,SSL_can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests,TrackThreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\TrackThreadTests.cs,Does_throw_when_using_same_client_on_different_threads,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.Redis.Tests,TrackThreadTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\TrackThreadTests.cs,Does_not_throw_when_using_different_clients_on_same_Thread,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.Redis.Tests,TwemproxyTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\TwemproxyTests.cs,Can_connect_to_twemproxy,The following statement contains a magic number: var redis = new RedisClient("10.0.0.14"' 22121)              {                  //ServerVersionNumber = 2611              };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_int_list_values,The following statement contains a magic number: var intValues = new List<int> { 2' 4' 6' 8 };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {                      new IntAndString {Id = 2' Letter = "B"}'                      new IntAndString {Id = 3' Letter = "C"}'                      new IntAndString {Id = 4' Letter = "D"}'                      new IntAndString {Id = 5' Letter = "E"}'                  };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {                      new IntAndString {Id = 2' Letter = "B"}'                      new IntAndString {Id = 3' Letter = "C"}'                      new IntAndString {Id = 4' Letter = "D"}'                      new IntAndString {Id = 5' Letter = "E"}'                  };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {                      new IntAndString {Id = 2' Letter = "B"}'                      new IntAndString {Id = 3' Letter = "C"}'                      new IntAndString {Id = 4' Letter = "D"}'                      new IntAndString {Id = 5' Letter = "E"}'                  };
Magic Number,ServiceStack.Redis.Tests,ValueTypeExamples,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\ValueTypeExamples.cs,Working_with_Generic_types,The following statement contains a magic number: var pocoListValues = new List<IntAndString> {                      new IntAndString {Id = 2' Letter = "B"}'                      new IntAndString {Id = 3' Letter = "C"}'                      new IntAndString {Id = 4' Letter = "D"}'                      new IntAndString {Id = 5' Letter = "E"}'                  };
Magic Number,ServiceStack.Redis.Tests.Benchmarks,DoubleSerializationBenchmarks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Benchmarks\DoubleSerializationBenchmarks.cs,Compare_double_serializers,The following statement contains a magic number: var initalVal = 0.3333333333333333d;
Magic Number,ServiceStack.Redis,CustomCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\CustomCommandTests.cs,Can_send_custom_commands,The following statement contains a magic number: ret = Redis.Custom("LRANGE"' "DaysOfWeek"' 1' -2);
Magic Number,ServiceStack.Redis,CustomCommandTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\CustomCommandTests.cs,Can_send_complex_types_in_Custom_Commands,The following statement contains a magic number: ret = Redis.Custom("LRANGE"' "DaysOfWeek"' 1' -2);
Magic Number,ServiceStack.Redis.Tests.Examples.BestPractice,BlogRepository,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,StoreNewBlogPosts,The following statement contains a magic number: recentPosts.Trim(0' 4);
Magic Number,ServiceStack.Redis.Tests.Examples.BestPractice,BlogRepository,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,StoreNewBlogPosts,The following statement contains a magic number: recentComments.Trim(0' 4);
Magic Number,ServiceStack.Redis.Tests.Examples.BestPractice,BlogPostBestPractice,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BestPractice\BlogPostBestPractice.cs,Show_a_TagCloud,The following statement contains a magic number: var tagCloud = repository.GetTopTags(5);
Magic Number,ServiceStack.Redis.Tests.Examples,BlogPostExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The following statement contains a magic number: recentPosts.Trim(0' 2);
Magic Number,ServiceStack.Redis.Tests.Examples,BlogPostExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BlogPostExample.cs,Show_a_list_of_recent_posts_and_comments,The following statement contains a magic number: recentComments.Trim(0' 2);
Magic Number,ServiceStack.Redis.Tests.Examples,BlogPostExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\BlogPostExample.cs,Show_a_TagCloud,The following statement contains a magic number: var tagCloud = redis.GetRangeWithScoresFromSortedSetDesc("urn:TagCloud"' 0' 4);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,Use_multiple_redis_clients_to_safely_execute,The following statement contains a magic number: const int noOfClients = 5;
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,Use_multiple_redis_clients_to_safely_execute,The following statement contains a magic number: var actionFn = (Action)delegate                  {                      var redisClient = new RedisClient(TestConfig.SingleHost);                      using (redisClient.AcquireLock("testlock"))                      {                          Debug.WriteLine(String.Format("client {0} acquired lock"' clientNo));                          var counter = redisClient.Get<int>("atomic-counter");                            //Add an artificial delay to demonstrate locking behaviour                          Thread.Sleep(100);                            redisClient.Set("atomic-counter"' counter + 1);                          Debug.WriteLine(String.Format("client {0} released lock"' clientNo));                      }                  };
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,Acquiring_lock_with_timeout,The following statement contains a magic number: var waitFor = TimeSpan.FromSeconds(2);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,SimulateLockTimeout,The following statement contains a magic number: var waitFor = TimeSpan.FromMilliseconds(20);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,SimulateLockTimeout,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,AcquireLock_using_Tasks,The following statement contains a magic number: const int noOfClients = 4;
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,AcquireLock_using_Tasks,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,AcquireLock_using_Tasks,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew((object clientNo) =>                  {                      try                      {                          Console.WriteLine("About to process " + clientNo);                          //var redisClient = new RedisClient("xxxx.redis.cache.windows.net"' 6379' "xxxx");                          var redisClient = new RedisClient(TestConfig.SingleHost' 6379);                            using (redisClient.AcquireLock("testlock1"' TimeSpan.FromMinutes(3)))                          {                              Console.WriteLine("client {0} acquired lock"' (int)clientNo);                              var counter = redisClient.Get<int>("atomic-counter");                                //Add an artificial delay to demonstrate locking behaviour                              Thread.Sleep(100);                                redisClient.Set("atomic-counter"' counter + 1);                              Console.WriteLine("client {0} released lock"' (int)clientNo);                          }                      }                      catch (Exception e)                      {                          Console.WriteLine(e.Message);                      }                    }' i + 1);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,AcquireLock_using_Tasks,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew((object clientNo) =>                  {                      try                      {                          Console.WriteLine("About to process " + clientNo);                          //var redisClient = new RedisClient("xxxx.redis.cache.windows.net"' 6379' "xxxx");                          var redisClient = new RedisClient(TestConfig.SingleHost' 6379);                            using (redisClient.AcquireLock("testlock1"' TimeSpan.FromMinutes(3)))                          {                              Console.WriteLine("client {0} acquired lock"' (int)clientNo);                              var counter = redisClient.Get<int>("atomic-counter");                                //Add an artificial delay to demonstrate locking behaviour                              Thread.Sleep(100);                                redisClient.Set("atomic-counter"' counter + 1);                              Console.WriteLine("client {0} released lock"' (int)clientNo);                          }                      }                      catch (Exception e)                      {                          Console.WriteLine(e.Message);                      }                    }' i + 1);
Magic Number,ServiceStack.Redis.Tests.Examples,SimpleLocks,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimpleLocks.cs,AcquireLock_using_Tasks,The following statement contains a magic number: tasks[i] = Task.Factory.StartNew((object clientNo) =>                  {                      try                      {                          Console.WriteLine("About to process " + clientNo);                          //var redisClient = new RedisClient("xxxx.redis.cache.windows.net"' 6379' "xxxx");                          var redisClient = new RedisClient(TestConfig.SingleHost' 6379);                            using (redisClient.AcquireLock("testlock1"' TimeSpan.FromMinutes(3)))                          {                              Console.WriteLine("client {0} acquired lock"' (int)clientNo);                              var counter = redisClient.Get<int>("atomic-counter");                                //Add an artificial delay to demonstrate locking behaviour                              Thread.Sleep(100);                                redisClient.Set("atomic-counter"' counter + 1);                              Console.WriteLine("client {0} released lock"' (int)clientNo);                          }                      }                      catch (Exception e)                      {                          Console.WriteLine(e.Message);                      }                    }' i + 1);
Magic Number,ServiceStack.Redis.Tests.Examples,SimplePubSub,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimplePubSub.cs,Publish_and_receive_5_messages,The following statement contains a magic number: ThreadPool.QueueUserWorkItem(x =>                  {                      Thread.Sleep(200);                      Debug.WriteLine("Begin publishing messages...");                        using (var redisPublisher = new RedisClient(TestConfig.SingleHost))                      {                          for (var i = 1; i <= PublishMessageCount; i++)                          {                              var message = MessagePrefix + i;                              Debug.WriteLine(String.Format("Publishing '{0}' to '{1}'"' message' ChannelName));                              redisPublisher.PublishMessage(ChannelName' message);                          }                      }                  });
Magic Number,ServiceStack.Redis.Tests.Examples,SimplePubSub,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: const int noOfClients = 3;
Magic Number,ServiceStack.Redis.Tests.Examples,SimplePubSub,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,ServiceStack.Redis.Tests.Examples,SimplePubSub,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\SimplePubSub.cs,Publish_5_messages_to_3_clients,The following statement contains a magic number: Thread.Sleep(500);
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddHashes,The following statement contains a magic number: var stringIntMap = new Dictionary<string' int> {                  {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddHashes,The following statement contains a magic number: var stringIntMap = new Dictionary<string' int> {                  {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddHashes,The following statement contains a magic number: var stringIntMap = new Dictionary<string' int> {                  {"one"'1}' {"two"'2}' {"three"'3}' {"four"'4}              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Examples,TestData,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Examples\TestData.cs,AddSortedSets,The following statement contains a magic number: var articles = new[]              {                  new Article {Id = 1' Title = "Article 1"' ModifiedDate = new DateTime(2015' 01' 02)}'                  new Article {Id = 2' Title = "Article 2"' ModifiedDate = new DateTime(2015' 01' 01)}'                  new Article {Id = 3' Title = "Article 3"' ModifiedDate = new DateTime(2015' 01' 03)}'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestExtra,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestExtra.cs,Can_Remove_value_from_IList,The following statement contains a magic number: var equalItem = new CustomType() { CustomId = 4 };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetItemFromList,The following statement contains a magic number: var storeMember3 = storeMembers[2];
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetItemFromList,The following statement contains a magic number: var item3 = redis.GetItemFromList(List' 2);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_SetItemInList,The following statement contains a magic number: storeMembers[2] = Factory.NonExistingValue;
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_SetItemInList,The following statement contains a magic number: redis.SetItemInList(List' 2' Factory.NonExistingValue);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_enumerate_large_list,The following statement contains a magic number: const int listSize = 2500;
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: storeMembers.RemoveAt(2);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_RemoveAt_value_from_IList,The following statement contains a magic number: List.RemoveAt(2);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetRangeFromList,The following statement contains a magic number: var range = List.GetRange(1' 3);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientListTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientListTestsBase.cs,Can_GetRangeFromList,The following statement contains a magic number: var expected = storeMembers.Skip(1).Take(3).ToList();
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: storeMembers2.Insert(0' Factory.CreateInstance(4));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: Assert.That(diffMembers' Is.EquivalentTo(                  new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_DiffBetweenSets,The following statement contains a magic number: Assert.That(diffMembers' Is.EquivalentTo(                  new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: storeMembers2.Insert(0' Factory.CreateInstance(4));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: var storeMembers3 = new List<T> {                  Factory.CreateInstance(1)'                  Factory.CreateInstance(5)'                  Factory.CreateInstance(7)'                  Factory.CreateInstance(11)'              };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: Assert.That(storeSet' Is.EquivalentTo(                  new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_Store_DiffBetweenSets,The following statement contains a magic number: Assert.That(storeSet' Is.EquivalentTo(                  new List<T> { Factory.CreateInstance(2)' Factory.CreateInstance(3) }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientSetTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientSetTestsBase.cs,Can_enumerate_large_ICollection_Set,The following statement contains a magic number: const int setSize = 2500;
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_Set_and_Get_key_with_all_byte_values,The following statement contains a magic number: var value = new byte[256];
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_SetBit_And_GetBit_And_BitCount,The following statement contains a magic number: const int offset = 100;
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_save_via_string,The following statement contains a magic number: var dtos = 10.Times(i => new Dummy { Id = i' Name = "Name" + i });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_save_via_string,The following statement contains a magic number: Assert.That(fromDtos.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_save_via_types,The following statement contains a magic number: var dtos = 10.Times(i => new Dummy { Id = i' Name = "Name" + i });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisClientTests.cs,Can_save_via_types,The following statement contains a magic number: Assert.That(fromDtos.Count' Is.EqualTo(10));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisPersistenceProviderTestsBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisPersistenceProviderTestsBase.cs,Can_Delete_ModelWithIdAndName,The following statement contains a magic number: var deleteIds = new[] { ids[1]' ids[3] };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: redisQuestions.Db = 10;
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>                {                    Answer.Create(1' question1.Id)'                    Answer.Create(2' question1.Id)'                    Answer.Create(3' question1.Id)'                    Answer.Create(4' question1.Id)'                    Answer.Create(5' question1.Id)'                };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>                {                    Answer.Create(1' question1.Id)'                    Answer.Create(2' question1.Id)'                    Answer.Create(3' question1.Id)'                    Answer.Create(4' question1.Id)'                    Answer.Create(5' question1.Id)'                };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>                {                    Answer.Create(1' question1.Id)'                    Answer.Create(2' question1.Id)'                    Answer.Create(3' question1.Id)'                    Answer.Create(4' question1.Id)'                    Answer.Create(5' question1.Id)'                };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,OnBeforeEachTest,The following statement contains a magic number: q1Answers = new List<Answer>                {                    Answer.Create(1' question1.Id)'                    Answer.Create(2' question1.Id)'                    Answer.Create(3' question1.Id)'                    Answer.Create(4' question1.Id)'                    Answer.Create(5' question1.Id)'                };
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_DeleteRelatedEntity,The following statement contains a magic number: var answerToDelete = q1Answers[3];
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_GetLatestFromRecentsList,The following statement contains a magic number: var latest3Answers = redisAnswers.GetLatestFromRecentsList(0' 3);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientAppTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientAppTests.cs,Can_GetEarliestFromRecentsList,The following statement contains a magic number: var earliest3Answers = redisAnswers.GetEarliestFromRecentsList(0' 3);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_Expire,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_ExpireAt,The following statement contains a magic number: var in2Secs = DateTime.UtcNow.AddSeconds(2);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedClientTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedClientTests.cs,Can_ExpireAt,The following statement contains a magic number: Thread.Sleep(3000);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_single_operation_with_callback_3_Times_in_pipeline,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSet(typedSet' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.SetContainsItem(typedSet' modelFactory.CreateInstance(3))' b => containsItem = b);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(4)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(5)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(6)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<int> { 1' 2 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedList.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: Assert.That(typedSet.GetAll()' Is.EquivalentTo(new List<Shipper>                     {                         modelFactory.CreateInstance(3)                     }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Supports_different_operation_types_in_same_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: pipeline.QueueCommand(r => r.GetItemFromList(typedList' 4)' x => item4 = x);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedPipelineTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedPipelineTests.cs,Can_call_multi_string_operations_in_pipeline,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_3_Times_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2))' () => results.Add(2));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3))' () => results.Add(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_single_operation_with_callback_3_Times_in_transaction,The following statement contains a magic number: Assert.That(results' Is.EquivalentTo(new List<int> { 1' 2' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSet(typedSet' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.SetContainsItem(typedSet' modelFactory.CreateInstance(3))' b => containsItem = b);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(4)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(5)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToSortedSet(typedSortedSet' modelFactory.CreateInstance(6)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(incrementResults' Is.EquivalentTo(new List<int> { 1' 2 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(collectionCounts' Is.EquivalentTo(new List<int> { 2' 1' 3 }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedList.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: Assert.That(typedSet.GetAll()' Is.EquivalentTo(new List<Shipper>                     {                         modelFactory.CreateInstance(3)                     }));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Supports_different_operation_types_in_same_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(typedSortedSet.GetAll()' new List<Shipper>                  {                      modelFactory.CreateInstance(4)' modelFactory.CreateInstance(5)' modelFactory.CreateInstance(6)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(2)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.AddItemToList(typedList' modelFactory.CreateInstance(3)));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => r.GetItemFromList(typedList' 4)' x => item4 = x);
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: Assert.That(typedList.Count' Is.EqualTo(3));
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_multi_string_operations_in_transaction,The following statement contains a magic number: modelFactory.AssertListsAreEqual(results' new List<Shipper>                  {                      modelFactory.CreateInstance(1)' modelFactory.CreateInstance(2)' modelFactory.CreateInstance(3)                  });
Magic Number,ServiceStack.Redis.Tests.Generic,RedisTypedTransactionTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Generic\RedisTypedTransactionTests.cs,Can_call_operation_not_supported_on_older_servers_in_transaction,The following statement contains a magic number: trans.QueueCommand(r => ((RedisNativeClient)r).SetEx("key"' 5' temp));
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,CreateAndStartManagerPool,The following statement contains a magic number: return new RedisManagerPool(readWriteHosts' new RedisPoolConfig              {                  MaxPoolSize = 10              });
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,RunSimultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,RunSimultaneously,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: entry.Value < 5
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: entry.Value > 60
Magic Number,ServiceStack.Redis.Tests.Integration,IntegrationTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\IntegrationTestBase.cs,CheckHostCountMap,The following statement contains a magic number: hostCount != 64
Magic Number,ServiceStack.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,onBeforeTestFixture,The following statement contains a magic number: var results = 100.Times(x => ModelWithFieldsOfDifferentTypes.Create(x));
Magic Number,ServiceStack.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,ServiceStack.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests.Integration,MultiThreadedRedisClientIntegrationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\MultiThreadedRedisClientIntegrationTests.cs,Can_support_64_threads_using_the_client_sequentially,The following statement contains a magic number: Debug.WriteLine(String.Format("Time Taken: {0}"' (Stopwatch.GetTimestamp() - before) / 1000));
Magic Number,ServiceStack.Redis.Tests.Integration,RedisRegressionTestRun,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\RedisRegressionTestRun.cs,onBeforeTestFixture,The following statement contains a magic number: var results = 100.Times(x => ModelWithFieldsOfDifferentTypes.Create(x));
Magic Number,ServiceStack.Redis.Tests.Integration,RedisRegressionTestRun,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\RedisRegressionTestRun.cs,Can_support_64_threads_using_the_client_simultaneously,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests.Integration,RedisRegressionTestRun,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\RedisRegressionTestRun.cs,Can_run_series_of_operations_sequentially,The following statement contains a magic number: const int noOfConcurrentClients = 64;
Magic Number,ServiceStack.Redis.Tests.Integration,RedisRegressionTestRun,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Integration\RedisRegressionTestRun.cs,UseClient,The following statement contains a magic number: var differentDbs = new[] { 1' 0' 2 };
Magic Number,ServiceStack.Redis.Tests.Issues,AuthIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\AuthIssue.cs,Does_retry_failed_commands_auth,The following statement contains a magic number: Assert.That(redis.IncrementValue("retryCounter")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests.Issues,AuthIssue,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\AuthIssue.cs,Does_retry_failed_commands_auth,The following statement contains a magic number: Assert.That(redis.Get<int>("retryCounter")' Is.EqualTo(2));
Magic Number,ServiceStack.Redis.Tests.Issues,PipelineIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PipelineIssueTests.cs,Can_Set_with_DateTime_in_Pipeline,The following statement contains a magic number: int value = 111;
Magic Number,ServiceStack.Redis.Tests.Issues,PooledRedisClientManagerIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Stuff,The following statement contains a magic number: Thread.Sleep(10);
Magic Number,ServiceStack.Redis.Tests.Issues,PooledRedisClientManagerIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: var threads = new Thread[100];
Magic Number,ServiceStack.Redis.Tests.Issues,PooledRedisClientManagerIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: Thread.Sleep(10000);
Magic Number,ServiceStack.Redis.Tests.Issues,PooledRedisClientManagerIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\PooledRedisClientManagerIssues.cs,Issue37_Cannot_add_unknown_client_back_to_pool_exception,The following statement contains a magic number: Thread.Sleep(5000);
Magic Number,ServiceStack.Redis.Tests.Issues,RedisCharacterizationTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\RedisCharacterizationTests.cs,WhenUsingAnInitialDatabase_CorrectDatabaseIsUsed,The following statement contains a magic number: _db2ClientManager = new BasicRedisClientManager(2' TestConfig.SingleHost);
Magic Number,ServiceStack.Redis.Tests.Issues,ReportedIssues,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\ReportedIssues.cs,Try_simulate_NRE_when_calling_GetAllEntriesFromHash_using_BasicRedisClientManager,The following statement contains a magic number: var test2 = new Test { Id = 2' Name = "Name2" };
Magic Number,ServiceStack.Redis.Tests.Issues,Test,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\ReportedIssues.cs,GetHashCode,The following statement contains a magic number: return (Id * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: 5.Times(x => Redis.Set("foo" + x' x));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(keys' Has.Count.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_Get_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(dict' Has.Count.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: 5.Times(x => Redis.Set("foo" + x' x));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(keys' Has.Count.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_GetValues_and_Remove_multiple_keys_in_same_transaction,The following statement contains a magic number: Assert.That(values' Has.Count.EqualTo(5));
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_queue_large_transaction,The following statement contains a magic number: var q = new System.Threading.Timer(CheckConnection' null' 30000' 2);
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_queue_large_transaction,The following statement contains a magic number: var q = new System.Threading.Timer(CheckConnection' null' 30000' 2);
Magic Number,ServiceStack.Redis.Tests.Issues,TransactionIssueTests,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Issues\TransactionIssueTests.cs,Can_queue_large_transaction,The following statement contains a magic number: Thread.Sleep(30000);
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList,The following statement contains a magic number: return new List<T>              {                  CreateInstance(1)'                  CreateInstance(2)'                  CreateInstance(3)'                  CreateInstance(4)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList,The following statement contains a magic number: return new List<T>              {                  CreateInstance(1)'                  CreateInstance(2)'                  CreateInstance(3)'                  CreateInstance(4)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList,The following statement contains a magic number: return new List<T>              {                  CreateInstance(1)'                  CreateInstance(2)'                  CreateInstance(3)'                  CreateInstance(4)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList2,The following statement contains a magic number: return new List<T>              {                  CreateInstance(5)'                  CreateInstance(6)'                  CreateInstance(7)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList2,The following statement contains a magic number: return new List<T>              {                  CreateInstance(5)'                  CreateInstance(6)'                  CreateInstance(7)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelFactoryBase<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelFactoryBase.cs,CreateList2,The following statement contains a magic number: return new List<T>              {                  CreateInstance(5)'                  CreateInstance(6)'                  CreateInstance(7)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithComplexTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithComplexTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithComplexTypes              {                  Id = id'                  StringList = { "val" + id + 1' "val" + id + 2' "val" + id + 3 }'                  IntList = { id + 1' id + 2' id + 3 }'                  StringMap =                      {                          {"key" + id + 1' "val" + id + 1}'                          {"key" + id + 2' "val" + id + 2}'                          {"key" + id + 3' "val" + id + 3}'                      }'                  IntMap =                      {                          {id + 1' id + 2}'                          {id + 3' id + 4}'                          {id + 5' id + 6}'                      }'                  Child = new ModelWithComplexTypes { Id = id * 2 }'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentAndNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentAndNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentAndNullableTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Float = 1.11f + id'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "461D9D-47DB-4778-B3FA-458379AE9BDC")'                  LongId = 999 + id'                  Decimal = id + 0.5m'                  TimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = System.DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = System.Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = System.DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = System.Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = System.DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = System.Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypesAsNullables,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypesAsNullables              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = DateTime.Now.AddDays(id)'                  Double = 1.11d + id'                  Guid = Guid.NewGuid()'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfDifferentTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfDifferentTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfDifferentTypes              {                  Id = id'                  Bool = id % 2 == 0'                  DateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  Double = 1.11d + id'                  Guid = new Guid(((id % 240) + 16).ToString("X") + "726E3B-9983-40B4-A8CB-2F8ADA8C8760")'                  LongId = 999 + id'                  Name = "Name" + id              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = DateTime.Now.AddDays(id)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = Guid.NewGuid()'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = DateTime.Now.AddDays(id)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = Guid.NewGuid()'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = DateTime.Now.AddDays(id)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = Guid.NewGuid()'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = DateTime.Now.AddDays(id)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = Guid.NewGuid()'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,Create,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = DateTime.Now.AddDays(id)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = Guid.NewGuid()'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithFieldsOfNullableTypes,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithFieldsOfNullableTypes.cs,CreateConstant,The following statement contains a magic number: var row = new ModelWithFieldsOfNullableTypes              {                  Id = id'                  NId = id'                  NBool = id % 2 == 0'                  NDateTime = new DateTime(1979' (id % 12) + 1' (id % 28) + 1)'                  NFloat = 1.11f + id'                  NDouble = 1.11d + id'                  NGuid = new Guid(((id % 240) + 16).ToString("X") + "7DA519-73B6-4525-84BA-B57673B2360D")'                  NLongId = 999 + id'                  NDecimal = id + 0.5m'                  NTimeSpan = TimeSpan.FromSeconds(id)'              };
Magic Number,ServiceStack.Common.Tests.Models,ModelWithIdAndName,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ModelWithIdAndName.cs,GetHashCode,The following statement contains a magic number: return (Id * 397) ^ (Name != null ? Name.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Title != null ? Title.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Rating.GetHashCode();
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Director != null ? Director.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ ReleaseDate.GetHashCode();
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (TagLine != null ? TagLine.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,Movie,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\Movie.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ (Genres != null ? Genres.GetHashCode() : 0);
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\SampleOrderLine.cs,Create,The following statement contains a magic number: return new SampleOrderLine              {                  Id = CreateUrn(userId' orderId' orderLineId)'                  CreatedDate = DateTime.Now'                  OrderId = orderId'                  OrderLineId = orderLineId'                  AlbumName = "AlbumName"'                  CashMixValueIncVat = 0.79m / 1.15m'                  TransactionValueExVat = 0.79m'                  ContentUrn = "urn:content:" + Guid.NewGuid().ToString("N")'              };
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\SampleOrderLine.cs,Create,The following statement contains a magic number: return new SampleOrderLine              {                  Id = CreateUrn(userId' orderId' orderLineId)'                  CreatedDate = DateTime.Now'                  OrderId = orderId'                  OrderLineId = orderLineId'                  AlbumName = "AlbumName"'                  CashMixValueIncVat = 0.79m / 1.15m'                  TransactionValueExVat = 0.79m'                  ContentUrn = "urn:content:" + Guid.NewGuid().ToString("N")'              };
Magic Number,ServiceStack.Common.Tests.Models,SampleOrderLine,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\SampleOrderLine.cs,Create,The following statement contains a magic number: return new SampleOrderLine              {                  Id = CreateUrn(userId' orderId' orderLineId)'                  CreatedDate = DateTime.Now'                  OrderId = orderId'                  OrderLineId = orderLineId'                  AlbumName = "AlbumName"'                  CashMixValueIncVat = 0.79m / 1.15m'                  TransactionValueExVat = 0.79m'                  ContentUrn = "urn:content:" + Guid.NewGuid().ToString("N")'              };
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: var hex = ((i % 240) + 16).ToString("X");
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: var hex = ((i % 240) + 16).ToString("X");
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: return new Shipper              {                  Id = i'                  CompanyName = "Shipper" + i'                  DateCreated = new DateTime(i + 1 % 3000' (i % 11) + 1' (i % 27) + 1' 0' 0' 0' DateTimeKind.Utc)'                  ShipperType = (ShipperType)(i % 3)'                  UniqueRef = new Guid(hex + "D148A5-E5F1-4E5A-8C60-52E5A80ACCC6")'              };
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: return new Shipper              {                  Id = i'                  CompanyName = "Shipper" + i'                  DateCreated = new DateTime(i + 1 % 3000' (i % 11) + 1' (i % 27) + 1' 0' 0' 0' DateTimeKind.Utc)'                  ShipperType = (ShipperType)(i % 3)'                  UniqueRef = new Guid(hex + "D148A5-E5F1-4E5A-8C60-52E5A80ACCC6")'              };
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: return new Shipper              {                  Id = i'                  CompanyName = "Shipper" + i'                  DateCreated = new DateTime(i + 1 % 3000' (i % 11) + 1' (i % 27) + 1' 0' 0' 0' DateTimeKind.Utc)'                  ShipperType = (ShipperType)(i % 3)'                  UniqueRef = new Guid(hex + "D148A5-E5F1-4E5A-8C60-52E5A80ACCC6")'              };
Magic Number,ServiceStack.Common.Tests.Models,ShipperFactory,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\ShipperFactory.cs,CreateInstance,The following statement contains a magic number: return new Shipper              {                  Id = i'                  CompanyName = "Shipper" + i'                  DateCreated = new DateTime(i + 1 % 3000' (i % 11) + 1' (i % 27) + 1' 0' 0' 0' DateTimeKind.Utc)'                  ShipperType = (ShipperType)(i % 3)'                  UniqueRef = new Guid(hex + "D148A5-E5F1-4E5A-8C60-52E5A80ACCC6")'              };
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,PerfTestBase,The following statement contains a magic number: this.DefaultIterations = 10000;
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,PerfTestBase,The following statement contains a magic number: this.MultipleIterations = new List<int> { 1000' 10000' 100000' 1000000 };
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,PerfTestBase,The following statement contains a magic number: this.MultipleIterations = new List<int> { 1000' 10000' 100000' 1000000 };
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,PerfTestBase,The following statement contains a magic number: this.MultipleIterations = new List<int> { 1000' 10000' 100000' 1000000 };
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,PerfTestBase,The following statement contains a magic number: this.MultipleIterations = new List<int> { 1000' 10000' 100000' 1000000 };
Magic Number,ServiceStack.Common.Tests,PerfTestBase,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Shared\PerfTestBase.cs,CompareRuns,The following statement contains a magic number: Log("{0} was {1}ms or {2} times slower than {3}"'                  slowerRun' runDiffTime' Math.Round(runDiffAvg' 2)' fasterRun);
Magic Number,ServiceStack.Redis.Tests.Support,TcpClientExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var connection = new TcpClientWithTimeout(                  "www.google.com"' 80' TimeSpan.FromSeconds(5)).Connect();
Magic Number,ServiceStack.Redis.Tests.Support,TcpClientExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var connection = new TcpClientWithTimeout(                  "www.google.com"' 80' TimeSpan.FromSeconds(5)).Connect();
Magic Number,ServiceStack.Redis.Tests.Support,TcpClientExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: var readbuf = new byte[10];
Magic Number,ServiceStack.Redis.Tests.Support,TcpClientExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: stream.ReadTimeout = 10000;
Magic Number,ServiceStack.Redis.Tests.Support,TcpClientExample,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\Support\TcpClientWithTimeout.cs,Main,The following statement contains a magic number: stream.Read(readbuf' 0' 10);
Missing Default,ServiceStack.Redis.Tests,LuaCachedScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\tests\ServiceStack.Redis.Tests\LuaCachedScripts.cs,Can_merge_multiple_SearchResults,The following switch statement is missing a default case: switch (entry.Value)                          {                              case "string":                                  pipeline.QueueCommand(r => r.GetStringCount(key)' x => keySizes[key] = x);                                  break;                              case "list":                                  pipeline.QueueCommand(r => r.GetListCount(key)' x => keySizes[key] = x);                                  break;                              case "set":                                  pipeline.QueueCommand(r => r.GetSetCount(key)' x => keySizes[key] = x);                                  break;                              case "zset":                                  pipeline.QueueCommand(r => r.GetSortedSetCount(key)' x => keySizes[key] = x);                                  break;                              case "hash":                                  pipeline.QueueCommand(r => r.GetHashCount(key)' x => keySizes[key] = x);                                  break;                          }
