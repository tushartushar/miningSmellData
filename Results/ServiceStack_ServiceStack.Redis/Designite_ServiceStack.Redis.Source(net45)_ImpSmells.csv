Implementation smell,Namespace,Class,File,Method,Description
Long Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The method has 136 lines of code.
Long Method,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,RunLoop,The method has 105 lines of code.
Long Method,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,CreateRedisClient,The method has 111 lines of code.
Long Method,ServiceStack.Redis.Pipeline,QueuedRedisOperation,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\QueuedRedisOperation.cs,ProcessResult,The method has 153 lines of code.
Complex Method,ServiceStack.Redis,RedisCommand,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\RedisCommand.cs,Execute,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,GetClient,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,GetReadOnlyClient,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,GetStats,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,AddRangeToSet,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.Redis,RedisExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisExtensions.cs,ToRedisEndpoint,Cyclomatic complexity of the method is 21
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoRadius,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoRadiusByMember,Cyclomatic complexity of the method is 14
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,FlushSendBuffer,Cyclomatic complexity of the method is 10
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendReceive,Cyclomatic complexity of the method is 13
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ParseSingleLine,Cyclomatic complexity of the method is 11
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadMultiData,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadDeeplyNestedMultiDataItem,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadComplexResponse,Cyclomatic complexity of the method is 8
Complex Method,ServiceStack.Redis,RedisSubscription,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSubscription.cs,ParseSubscriptionResults,Cyclomatic complexity of the method is 12
Complex Method,ServiceStack.Redis.Generic,QueuedRedisTypedCommand<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\QueuedRedisTypedCommand.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Redis.Pipeline,QueuedRedisCommand,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\QueuedRedisCommand.cs,Execute,Cyclomatic complexity of the method is 9
Complex Method,ServiceStack.Redis.Pipeline,QueuedRedisOperation,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\QueuedRedisOperation.cs,ProcessResult,Cyclomatic complexity of the method is 35
Complex Method,ServiceStack.Redis.Support,OptimizedObjectSerializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\OptimizedObjectSerializer.cs,SerializeToWrapper,Cyclomatic complexity of the method is 17
Complex Method,ServiceStack.Redis.Support,OptimizedObjectSerializer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\OptimizedObjectSerializer.cs,Unwrap,Cyclomatic complexity of the method is 19
Complex Method,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,Cyclomatic complexity of the method is 9
Long Parameter List,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,PooledRedisClientManager,The method has 6 parameters. Parameters: readWriteHosts' readOnlyHosts' config' initalDb' poolSizeMultiplier' poolTimeOutSeconds
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,FindGeoMembersInRadius,The method has 5 parameters. Parameters: key' longitude' latitude' radius' unit
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,FindGeoResultsInRadius,The method has 7 parameters. Parameters: key' longitude' latitude' radius' unit' count' sortByNearest
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,FindGeoResultsInRadius,The method has 6 parameters. Parameters: key' member' radius' unit' count' sortByNearest
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByLowestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetRangeWithScoresFromSortedSetByHighestScore,The method has 5 parameters. Parameters: setId' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,SearchSortedSet,The method has 5 parameters. Parameters: setId' start' end' skip' take
Long Parameter List,ServiceStack.Redis,RedisClientsManagerExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClientsManagerExtensions.cs,CreatePubSubServer,The method has 7 parameters. Parameters: redisManager' channel' onMessage' onError' onInit' onStart' onStop
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Migrate,The method has 5 parameters. Parameters: host' port' key' destinationDb' timeoutMs
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Set,The method has 5 parameters. Parameters: key' value' exists' expirySeconds' expiryMs
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetRange,The method has 5 parameters. Parameters: commandBytes' setId' min' max' withScores
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetRangeByScore,The method has 7 parameters. Parameters: commandBytes' setId' min' max' skip' take' withScores
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetRangeByScore,The method has 7 parameters. Parameters: commandBytes' setId' min' max' skip' take' withScores
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRangeByScore,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRangeByScore,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRangeByScoreWithScores,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRangeByScoreWithScores,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRevRangeByScore,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRevRangeByScore,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRevRangeByScoreWithScores,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRevRangeByScoreWithScores,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZRangeByLex,The method has 5 parameters. Parameters: setId' min' max' skip' take
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoRadius,The method has 10 parameters. Parameters: key' longitude' latitude' radius' unit' withCoords' withDist' withHash' count' asc
Long Parameter List,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoRadiusByMember,The method has 9 parameters. Parameters: key' member' radius' unit' withCoords' withDist' withHash' count' asc
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeFromSortedSetByLowestScore,The method has 5 parameters. Parameters: set' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeFromSortedSetByLowestScore,The method has 5 parameters. Parameters: set' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeWithScoresFromSortedSetByLowestScore,The method has 5 parameters. Parameters: set' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeWithScoresFromSortedSetByLowestScore,The method has 5 parameters. Parameters: set' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeFromSortedSetByHighestScore,The method has 5 parameters. Parameters: set' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeFromSortedSetByHighestScore,The method has 5 parameters. Parameters: set' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeWithScoresFromSortedSetByHighestScore,The method has 5 parameters. Parameters: set' fromStringScore' toStringScore' skip' take
Long Parameter List,ServiceStack.Redis.Generic,RedisTypedClient<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedClient.cs,GetRangeWithScoresFromSortedSetByHighestScore,The method has 5 parameters. Parameters: set' fromScore' toScore' skip' take
Long Parameter List,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The method has 5 parameters. Parameters: key' acquisitionTimeout' lockTimeout' lockExpire' client
Long Parameter List,ServiceStack.Redis.Support.Locking,IDistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\IDistributedLock.cs,Lock,The method has 5 parameters. Parameters: key' acquisitionTimeout' lockTimeout' lockExpire' client
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,RedisChronologicalWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisChronologicalWorkQueue.cs,RedisChronologicalWorkQueue,The method has 5 parameters. Parameters: maxReadPoolSize' maxWritePoolSize' host' port' queueName
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,RedisSequentialWorkQueue,The method has 5 parameters. Parameters: maxReadPoolSize' maxWritePoolSize' host' port' dequeueLockTimeout
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,RedisSequentialWorkQueue,The method has 6 parameters. Parameters: maxReadPoolSize' maxWritePoolSize' host' port' queueName' dequeueLockTimeout
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,DequeueManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.Locks.cs,DequeueManager,The method has 6 parameters. Parameters: clientManager' workQueue' workItemId' dequeueLockKey' numberOfDequeuedItems' dequeueLockTimeout
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,RedisSimpleWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSimpleWorkQueue.cs,RedisSimpleWorkQueue,The method has 5 parameters. Parameters: maxReadPoolSize' maxWritePoolSize' host' port' queueName
Long Parameter List,ServiceStack.Redis.Support.Queue.Implementation,RedisWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisWorkQueue.cs,RedisWorkQueue,The method has 5 parameters. Parameters: maxReadPoolSize' maxWritePoolSize' host' port' queueName
Long Identifier,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,RegisterTypeId,The length of the parameter registeredTypeIdsWithinPipeline is 31.
Long Identifier,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,RegisterTypeIds,The length of the parameter registeredTypeIdsWithinPipeline is 31.
Long Identifier,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,RemoveTypeIds,The length of the parameter registeredTypeIdsWithinPipeline is 31.
Long Identifier,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,RemoveTypeIds,The length of the parameter registeredTypeIdsWithinPipeline is 31.
Long Identifier,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,,The length of the parameter registeredTypeIdsWithinPipelineMap is 34.
Long Identifier,ServiceStack.Redis,RedisState,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisState.cs,,The length of the parameter TotalClientsCreatedOutsidePool is 30.
Long Statement,ServiceStack.Redis,RedisAllPurposePipeline,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\RedisAllPurposePipeline.cs,Flush,The length of the statement  "                // The connection cannot be reused anymore. All queued commands have been sent to redis. Even if a new command is executed' the next response read from the " is 155.
Long Statement,ServiceStack.Redis,RedisAllPurposePipeline,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\RedisAllPurposePipeline.cs,Flush,The length of the statement  "                // network stream can be the response of one of the queued commands' depending on when the exception occurred. This response would be invalid for the new command. " is 162.
Long Statement,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,FindGeoResultsInRadius,The length of the statement  "            return base.GeoRadius(key' longitude' latitude' radius' unit' withCoords:true' withDist:true' withHash:true' count:count' asc: sortByNearest); " is 142.
Long Statement,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,FindGeoResultsInRadius,The length of the statement  "            return base.GeoRadiusByMember(key' member' radius' unit' withCoords: true' withDist: true' withHash: true' count: count' asc: sortByNearest); " is 141.
Long Statement,ServiceStack.Redis,RedisExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisExtensions.cs,ToRedisEndpoint,The length of the statement  "                            if (!Enum.TryParse(value' true' out protocols)) throw new ArgumentOutOfRangeException("Keyword '" + name + "' requires an SslProtocol value (multiple values separated by '|')."); " is 178.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Migrate,The length of the statement  "            SendExpectSuccess(Commands.Migrate' host.ToUtf8Bytes()' port.ToUtf8Bytes()' key.ToUtf8Bytes()' destinationDb.ToUtf8Bytes()' timeoutMs.ToUtf8Bytes()); " is 149.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Set,The length of the statement  "                return SendExpectString(Commands.Set' key.ToUtf8Bytes()' value' Commands.Ex' expirySeconds.ToUtf8Bytes()' entryExists) == OK; " is 125.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Set,The length of the statement  "                return SendExpectString(Commands.Set' key.ToUtf8Bytes()' value' Commands.Px' expiryMs.ToUtf8Bytes()' entryExists) == OK; " is 120.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,BRPopLPush,The length of the statement  "            byte[][] result = SendExpectMultiData(Commands.BRPopLPush' fromListId.ToUtf8Bytes()' toListId.ToUtf8Bytes()' timeOutSecs.ToUtf8Bytes()); " is 136.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,HIncrbyFloat,The length of the statement  "            return SendExpectDouble(Commands.HIncrByFloat' hashId.ToUtf8Bytes()' key' incrementBy.ToString(CultureInfo.InvariantCulture).ToUtf8Bytes()); " is 140.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The length of the statement  "            return SendExpectLong(Commands.GeoAdd' key.ToUtf8Bytes()' longitude.ToUtf8Bytes()' latitude.ToUtf8Bytes()' member.ToUtf8Bytes()); " is 129.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoDist,The length of the statement  "                : SendExpectDouble(Commands.GeoDist' key.ToUtf8Bytes()' fromMember.ToUtf8Bytes()' toMember.ToUtf8Bytes()' unit.ToUtf8Bytes()); " is 126.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoHash,The length of the statement  "            var cmdWithArgs = MergeCommandWithArgs(Commands.GeoHash' key.ToUtf8Bytes()' members.Map(x => x.ToUtf8Bytes()).ToArray()); " is 121.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoPos,The length of the statement  "            var cmdWithArgs = MergeCommandWithArgs(Commands.GeoPos' key.ToUtf8Bytes()' members.Map(x => x.ToUtf8Bytes()).ToArray()); " is 120.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The length of the statement  "                        sslStream.AuthenticateAsClient(Host' new X509CertificateCollection()' SslProtocols ?? System.Security.Authentication.SslProtocols.Default' checkCertificateRevocation: true); " is 173.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,CreateConnectionError,The length of the statement  "                $"[{DateTime.UtcNow:HH:mm:ss.fff}] Unable to Connect: sPort: {clientPort}{(originalEx != null ? "' Error: " + originalEx.Message + "\n" + originalEx.StackTrace : "")}"' " is 168.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendUnmanagedExpectSuccess,The length of the statement  "                logDebug("stream.Write: " + Encoding.UTF8.GetString(bytes' 0' Math.Min(bytes.Length' 50)).Replace("\r\n"'" ").SafeSubstring(0'50)); " is 131.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectLong,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ReadLong' Pipeline != null ? Pipeline.CompleteLongQueuedCommand : (Action<Func<long>>)null); " is 130.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectData,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ReadData' Pipeline != null ? Pipeline.CompleteBytesQueuedCommand : (Action<Func<byte[]>>)null); " is 133.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectDouble,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ReadDouble' Pipeline != null ? Pipeline.CompleteDoubleQueuedCommand : (Action<Func<double>>)null); " is 136.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectCode,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ExpectCode' Pipeline != null ? Pipeline.CompleteStringQueuedCommand : (Action<Func<string>>)null); " is 136.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectMultiData,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ReadMultiData' Pipeline != null ? Pipeline.CompleteMultiBytesQueuedCommand : (Action<Func<byte[][]>>)null) " is 144.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendExpectComplexResponse,The length of the statement  "            return SendReceive(cmdWithBinaryArgs' ReadComplexResponse' Pipeline != null ? Pipeline.CompleteRedisDataQueuedCommand : (Action<Func<RedisData>>)null); " is 151.
Long Statement,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ToDictionary,The length of the statement  "                        throw new RedisResponseException("key == null' i={0}' data.Children[i] = {1}".Fmt(i' data.Children[i].ToRedisText().Dump())); " is 125.
Long Statement,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,Start,The length of the statement  "            if (Interlocked.CompareExchange(ref status' Status.Starting' Status.Stopped) == Status.Stopped) //Should only be 1 thread past this point " is 137.
Long Statement,ServiceStack.Redis,RedisScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisScripts.cs,redisCall,The length of the statement  "                throw new NotSupportedException($"redisCall expects a string or an object args but received a {redisCommand.GetType().Name} instead."); " is 135.
Long Statement,ServiceStack.Redis,RedisScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisScripts.cs,redisChangeConnection,The length of the statement  "                    throw new NotSupportedException(nameof(redisChangeConnection) + " expects a String or an ObjectDictionary but received: " + (newConnection?.GetType().Name ?? "null")); " is 167.
Long Statement,ServiceStack.Redis.Generic,RedisTypedCommandQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedCommandQueue.cs,QueueCommand,The length of the statement  "                OnSuccessMultiTypeCallback = x => onSuccessCallback(x.ConvertAll(y => JsonSerializer.DeserializeFromString<T>(y)).ToHashSet())' " is 127.
Long Statement,ServiceStack.Redis.Support,OrderedDictionary<TKey;TValue>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\OrderedDictionary.cs,RemoveAt,The length of the statement  "				throw new ArgumentOutOfRangeException("index"' "'index' must be non-negative and less than the size of the collection"); " is 120.
Long Statement,ServiceStack.Redis.Support.Diagnostic,TrackingRedisClientsManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Diagnostic\TrackingRedisClientsManager.cs,TrackInstance,The length of the statement  "                Logger.DebugFormat("{0'18} Disposed {1} released from instance of type {2} checked out for {3}"' method' frame.Id' frame.ProvidedToInstanceOfType.FullName' duration); " is 166.
Long Statement,ServiceStack.Redis.Support.Diagnostic,TrackingRedisClientsManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Diagnostic\TrackingRedisClientsManager.cs,TrackInstance,The length of the statement  "            Logger.DebugFormat("{0'18} Tracking {1} allocated to instance of type {2}"' method' frame.Id' frame.ProvidedToInstanceOfType.FullName); " is 135.
Long Statement,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,Enqueue,The length of the statement  "                        pipe.QueueCommand(r => ((RedisNativeClient)r).RPush(queueNamespace.GlobalCacheKey(workItemId)' client.Serialize(workItem))); " is 124.
Long Statement,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,Dequeue,The length of the statement  "                        workItemDequeueManager = new DequeueManager(clientManager' this' workItemId' GlobalDequeueLockKey(workItemId)' workItems.Count' dequeueLockTimeout); " is 148.
Complex Conditional,ServiceStack.Redis,RedisSentinelWorker,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelWorker.cs,SentinelMessageReceived,The conditional expression  "c == "+failover-end"                   || c == "+switch-master"                  || (sentinel.ResetWhenSubjectivelyDown && isSubjectivelyDown)                  || (sentinel.ResetWhenObjectivelyDown && isObjectivelyDown)"  is complex.
Complex Conditional,ServiceStack.Redis,RedisSentinelWorker,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelWorker.cs,SanitizeHostsConfig,The conditional expression  "ip != null && port != null && !flags.Contains("s_down") && !flags.Contains("o_down")"  is complex.
Virtual Method Call from Constructor,ServiceStack.Redis,BasicRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\BasicRedisClientManager.cs,BasicRedisClientManager,The constructor "BasicRedisClientManager" calls a virtual method "OnStart".
Virtual Method Call from Constructor,ServiceStack.Redis,BasicRedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\BasicRedisResolver.cs,BasicRedisResolver,The constructor "BasicRedisResolver" calls a virtual method "ResetMasters".
Virtual Method Call from Constructor,ServiceStack.Redis,BasicRedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\BasicRedisResolver.cs,BasicRedisResolver,The constructor "BasicRedisResolver" calls a virtual method "ResetSlaves".
Virtual Method Call from Constructor,ServiceStack.Redis,RedisAllPurposePipeline,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Pipeline\RedisAllPurposePipeline.cs,RedisAllPurposePipeline,The constructor "RedisAllPurposePipeline" calls a virtual method "Init".
Virtual Method Call from Constructor,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,PooledRedisClientManager,The constructor "PooledRedisClientManager" calls a virtual method "OnStart".
Virtual Method Call from Constructor,ServiceStack.Redis,RedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisResolver.cs,RedisResolver,The constructor "RedisResolver" calls a virtual method "ResetMasters".
Virtual Method Call from Constructor,ServiceStack.Redis,RedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisResolver.cs,RedisResolver,The constructor "RedisResolver" calls a virtual method "ResetSlaves".
Virtual Method Call from Constructor,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,RedisSentinelResolver,The constructor "RedisSentinelResolver" calls a virtual method "ResetMasters".
Virtual Method Call from Constructor,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,RedisSentinelResolver,The constructor "RedisSentinelResolver" calls a virtual method "ResetSlaves".
Empty Catch Block,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SafeConnectionClose,The method has an empty catch block.
Empty Catch Block,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SafeConnectionClose,The method has an empty catch block.
Empty Catch Block,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SafeConnectionClose,The method has an empty catch block.
Empty Catch Block,ServiceStack.Redis,RedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisResolver.cs,CreateRedisClient,The method has an empty catch block.
Empty Catch Block,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,CreateRedisClient,The method has an empty catch block.
Empty Catch Block,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,CreateRedisClient,The method has an empty catch block.
Magic Number,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,PooledRedisClientManager,The following statement contains a magic number: this.PoolSizeMultiplier = poolSizeMultiplier ?? 20;
Magic Number,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,PooledRedisClientManager,The following statement contains a magic number: this.PoolTimeout = poolTimeOutSeconds != null                  ? poolTimeOutSeconds * 1000                  : 2000;
Magic Number,ServiceStack.Redis,PooledRedisClientManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\PooledRedisClientManager.cs,PooledRedisClientManager,The following statement contains a magic number: this.PoolTimeout = poolTimeOutSeconds != null                  ? poolTimeOutSeconds * 1000                  : 2000;
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,SetValue,The following statement contains a magic number: AssertServerVersionNumber() >= 2600
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,SetValue,The following statement contains a magic number: AssertServerVersionNumber() >= 2610
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,ExpireEntryIn,The following statement contains a magic number: AssertServerVersionNumber() >= 2600
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,ExpireEntryIn,The following statement contains a magic number: AssertServerVersionNumber() >= 2600
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,ExpireEntryAt,The following statement contains a magic number: AssertServerVersionNumber() >= 2600
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetTimeToLive,The following statement contains a magic number: ttlSecs == -2
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetServerRole,The following statement contains a magic number: AssertServerVersionNumber() >= 2812
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,Set,The following statement contains a magic number: AssertServerVersionNumber() >= 2600
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetServerTime,The following statement contains a magic number: var ticks = microSecs / 1000 * TimeSpan.TicksPerMillisecond;
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetSlowlog,The following statement contains a magic number: var arguments = ((object[])log[3]).OfType<byte[]>()                      .Select(t => t.FromUtf8Bytes())                      .ToArray();
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetSlowlog,The following statement contains a magic number: list[i] = new SlowlogItem(                      Int32.Parse((string)log[0]' CultureInfo.InvariantCulture)'                      DateTimeExtensions.FromUnixTime(Int32.Parse((string)log[1]' CultureInfo.InvariantCulture))'                      Int32.Parse((string)log[2]' CultureInfo.InvariantCulture)'                      arguments                      );
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[0] * (int)Math.Pow(256' 3);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[0] * (int)Math.Pow(256' 3);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[1] * (int)Math.Pow(256' 2);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[1] * (int)Math.Pow(256' 2);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: value.Length >= 2
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[2] * (int)Math.Pow(256' 1);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[2] * (int)Math.Pow(256' 1);
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: value.Length >= 3
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: lexicalValue += value[3];
Magic Number,ServiceStack.Redis,RedisClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisClient.cs,GetLexicalScore,The following statement contains a magic number: value.Length >= 4
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: DefaultRetryTimeout = 10 * 1000;
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: DefaultRetryTimeout = 10 * 1000;
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: DefaultIdleTimeOutSecs = 240;
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: BackOffMultiplier = 10;
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: BufferPoolMaxSize = 500000;
Magic Number,ServiceStack.Redis,RedisConfig,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisConfig.cs,Reset,The following statement contains a magic number: HostLookupTimeoutMs = 200;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Port;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Ssl.GetHashCode();
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ SslProtocols.GetHashCode();
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ConnectTimeout;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ SendTimeout;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ ReceiveTimeout;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ RetryTimeout;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ IdleTimeOutSecs;
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ Db.GetHashCode();
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Client != null ? Client.GetHashCode() : 0);
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (Password != null ? Password.GetHashCode() : 0);
Magic Number,ServiceStack.Redis,RedisEndpoint,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisEndpoint.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * 397) ^ (NamespacePrefix != null ? NamespacePrefix.GetHashCode() : 0);
Magic Number,ServiceStack.Redis,RedisLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisLock.cs,RedisLock,The following statement contains a magic number: ExecUtils.RetryUntilTrue(                  () =>                      {                          //This pattern is taken from the redis command for SETNX http://redis.io/commands/setnx                            //Calculate a unix time for when the lock should expire                          var realSpan = timeOut ?? new TimeSpan(365' 0' 0' 0); //if nothing is passed in the timeout hold for a year                          var expireTime = DateTime.UtcNow.Add(realSpan);                          var lockString = (expireTime.ToUnixTimeMs() + 1).ToString();                            //Try to set the lock' if it does not exist this will succeed and the lock is obtained                          var nx = redisClient.SetValueIfNotExists(key' lockString);                          if (nx)                              return true;                            //If we've gotten here then a key for the lock is present. This could be because the lock is                          //correctly acquired or it could be because a client that had acquired the lock crashed (or didn't release it properly).                          //Therefore we need to get the value of the lock to see when it should expire                            redisClient.Watch(key);                          var lockExpireString = redisClient.Get<string>(key);                          if (!long.TryParse(lockExpireString' out var lockExpireTime))                          {                              redisClient.UnWatch();  // since the client is scoped externally                              return false;                          }                            //If the expire time is greater than the current time then we can't let the lock go yet                          if (lockExpireTime > DateTime.UtcNow.ToUnixTimeMs())                          {                              redisClient.UnWatch();  // since the client is scoped externally                              return false;                          }                            //If the expire time is less than the current time then it wasn't released properly and we can attempt to                           //acquire the lock. The above call to Watch(_lockKey) enrolled the key in monitoring' so if it changes                          //before we call Commit() below' the Commit will fail and return false' which means that another thread                           //was able to acquire the lock before we finished processing.                          using (var trans = redisClient.CreateTransaction()) // we started the "Watch" above; this tx will succeed if the value has not moved                           {                              trans.QueueCommand(r => r.Set(key' lockString));                              return trans.Commit(); //returns false if Transaction failed                          }                      }'                  timeOut              );
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: var mergedBytes = new byte[2 + pairs.Count * 2][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: var mergedBytes = new byte[2 + pairs.Count * 2][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 2] = pairs[i].Value.ToFastUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 2] = pairs[i].Value.ToFastUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 3] = pairs[i].Key;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 3] = pairs[i].Key;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: var mergedBytes = new byte[2 + pairs.Count * 2][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: var mergedBytes = new byte[2 + pairs.Count * 2][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 2] = pairs[i].Value.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 2] = pairs[i].Value.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 3] = pairs[i].Key;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ZAdd,The following statement contains a magic number: mergedBytes[i * 2 + 3] = pairs[i].Key;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The following statement contains a magic number: var members = new byte[geoPoints.Length * 3][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The following statement contains a magic number: members[i * 3 + 0] = geoPoint.Longitude.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The following statement contains a magic number: members[i * 3 + 1] = geoPoint.Latitude.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The following statement contains a magic number: members[i * 3 + 2] = geoPoint.Member.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GeoAdd,The following statement contains a magic number: members[i * 3 + 2] = geoPoint.Member.ToUtf8Bytes();
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: Bstream = new BufferedStream(networkStream' 16 * 1024);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: Bstream = new BufferedStream(networkStream' 16 * 1024);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: var version = int.Parse(parts[0]) * 1000;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: version += int.Parse(parts[1]) * 100;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: version += int.Parse(parts[2]);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,Connect,The following statement contains a magic number: parts.Length > 2
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,IsSocketConnected,The following statement contains a magic number: var part1 = socket.Poll(1000' SelectMode.SelectRead);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetCmdBytes,The following statement contains a magic number: var cmdBytes = new byte[1 + strLinesLength + 2];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetCmdBytes,The following statement contains a magic number: cmdBytes[2 + strLinesLength] = 0x0A;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,WriteCommandToSendBuffer,The following statement contains a magic number: __requestsPerHour % 20 == 0
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendUnmanagedExpectSuccess,The following statement contains a magic number: logDebug("stream.Write: " + Encoding.UTF8.GetString(bytes' 0' Math.Min(bytes.Length' 50)).Replace("\r\n"'" ").SafeSubstring(0'50));
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,SendUnmanagedExpectSuccess,The following statement contains a magic number: logDebug("stream.Write: " + Encoding.UTF8.GetString(bytes' 0' Math.Min(bytes.Length' 50)).Replace("\r\n"'" ").SafeSubstring(0'50));
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,FlushSendBuffer,The following statement contains a magic number: sb.Length > 50
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,FlushSendBuffer,The following statement contains a magic number: logDebug("socket.Send: " + StringBuilderCache.ReturnAndFree(sb.Replace("\r\n"' " ")).SafeSubstring(0'50));
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetBackOffMultiplier,The following statement contains a magic number: var nextTryMs = (2 ^ i) * RedisConfig.BackOffMultiplier;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ToDictionary,The following statement contains a magic number: i % 2 == 0
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,CmdLog,The following statement contains a magic number: sb.Length > 100
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,CmdLog,The following statement contains a magic number: this.lastCommand = this.lastCommand.Substring(0' 100) + "...";
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,CmdLog,The following statement contains a magic number: this.lastCommand.Length > 100
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ExpectSuccess,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") && s.Length >= 4 ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ExpectSuccess,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") && s.Length >= 4 ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ExpectWord,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ExpectCode,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadLong,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ParseSingleLine,The following statement contains a magic number: throw CreateResponseError(r.StartsWith("-ERR") ? r.Substring(5) : r.Substring(1));
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadMultiData,The following statement contains a magic number: switch (c)              {                  // Some commands like BRPOPLPUSH may return Bulk Reply instead of Multi-bulk                  case '$':                      var t = new byte[2][];                      t[1] = ParseSingleLine(string.Concat(char.ToString((char)c)' s));                      return t;                    case '-':                      throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);                    case '*':                      if (int.TryParse(s' out var count))                      {                          if (count == -1)                          {                              //redis is in an invalid state                              return TypeConstants.EmptyByteArrayArray;                          }                            var result = new byte[count][];                            for (int i = 0; i < count; i++)                              result[i] = ReadData();                            return result;                      }                      break;              }
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadMultiData,The following statement contains a magic number: switch (c)              {                  // Some commands like BRPOPLPUSH may return Bulk Reply instead of Multi-bulk                  case '$':                      var t = new byte[2][];                      t[1] = ParseSingleLine(string.Concat(char.ToString((char)c)' s));                      return t;                    case '-':                      throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);                    case '*':                      if (int.TryParse(s' out var count))                      {                          if (count == -1)                          {                              //redis is in an invalid state                              return TypeConstants.EmptyByteArrayArray;                          }                            var result = new byte[count][];                            for (int i = 0; i < count; i++)                              result[i] = ReadData();                            return result;                      }                      break;              }
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadDeeplyNestedMultiDataItem,The following statement contains a magic number: switch (c)              {                  case '$':                      return ParseSingleLine(string.Concat(char.ToString((char)c)' s));                    case '-':                      throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);                    case '*':                      if (int.TryParse(s' out var count))                      {                          var array = new object[count];                          for (int i = 0; i < count; i++)                          {                              array[i] = ReadDeeplyNestedMultiDataItem();                          }                            return array;                      }                      break;                    default:                      return s;              }
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadComplexResponse,The following statement contains a magic number: switch (c)              {                  case '$':                      return new RedisData                      {                          Data = ParseSingleLine(string.Concat(char.ToString((char)c)' s))                      };                    case '-':                      throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);                    case '*':                      if (int.TryParse(s' out var count))                      {                          var ret = new RedisData { Children = new List<RedisData>() };                          for (var i = 0; i < count; i++)                          {                              ret.Children.Add(ReadComplexResponse());                          }                            return ret;                      }                      break;                    default:                      return new RedisData { Data = s.ToUtf8Bytes() };              }
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadMultiDataResultCount,The following statement contains a magic number: throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,MergeCommandWithKeysAndValues,The following statement contains a magic number: var keysAndValuesLength = keys.Length * 2 + keyValueStartIndex;
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,MergeCommandWithArgs,The following statement contains a magic number: var mergedBytes = new byte[2 + args.Length][];
Magic Number,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,MergeCommandWithArgs,The following statement contains a magic number: mergedBytes[i + 2] = args[i];
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,RunLoop,The following statement contains a magic number: msg.Length < 4
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,KillBgThreadIfExists,The following statement contains a magic number: !bgThread.Join(TimeSpan.FromSeconds(3))
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,KillBgThreadIfExists,The following statement contains a magic number: !bgThread.Join(500)
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,SleepBackOffMultiplier,The following statement contains a magic number: const int MaxSleepMs = 60 * 1000;
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,SleepBackOffMultiplier,The following statement contains a magic number: const int MaxSleepMs = 60 * 1000;
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,SleepBackOffMultiplier,The following statement contains a magic number: var nextTry = Math.Min(                  rand.Next((int)Math.Pow(continuousErrorsCount' 3)' (int)Math.Pow(continuousErrorsCount + 1' 3) + 1)'                  MaxSleepMs);
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,SleepBackOffMultiplier,The following statement contains a magic number: var nextTry = Math.Min(                  rand.Next((int)Math.Pow(continuousErrorsCount' 3)' (int)Math.Pow(continuousErrorsCount + 1' 3) + 1)'                  MaxSleepMs);
Magic Number,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,Dispose,The following statement contains a magic number: Thread.Sleep(100);
Magic Number,ServiceStack.Redis,RedisScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisScripts.cs,redisToConnectionString,The following statement contains a magic number: var port = d.TryGetValue("port"' out object p) ? DynamicInt.Instance.ConvertFrom(p) : 6379;
Magic Number,ServiceStack.Redis,RedisScripts,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisScripts.cs,redisSearchKeysAsJson,The following statement contains a magic number: var limit = args.TryGetValue("limit"' out object value)                      ? value.ConvertTo<int>()                      : scope.GetValue("redis.search.limit") ?? 100;
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: RefreshSentinelHostsAfter = TimeSpan.FromMinutes(10);
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: SentinelWorkerConnectTimeoutMs = 100;
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: SentinelWorkerReceiveTimeoutMs = 100;
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: SentinelWorkerSendTimeoutMs = 100;
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: WaitBetweenFailedHosts = TimeSpan.FromMilliseconds(250);
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: MaxWaitBetweenFailedHosts = TimeSpan.FromSeconds(60);
Magic Number,ServiceStack.Redis,RedisSentinel,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinel.cs,RedisSentinel,The following statement contains a magic number: WaitBeforeForcingMasterFailover = TimeSpan.FromSeconds(60);
Magic Number,ServiceStack.Redis,RedisSubscription,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSubscription.cs,ParseSubscriptionResults,The following statement contains a magic number: int componentsPerMsg = IsPSubscription ? 4 : 3;
Magic Number,ServiceStack.Redis,RedisSubscription,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSubscription.cs,ParseSubscriptionResults,The following statement contains a magic number: int componentsPerMsg = IsPSubscription ? 4 : 3;
Magic Number,ServiceStack.Redis,ShardedConnectionPool,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\ShardedConnectionPool.cs,ShardedConnectionPool,The following statement contains a magic number: this.PoolTimeout = 1000;
Magic Number,ServiceStack.Redis,RedisTransaction,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Transaction\RedisTransaction.cs,Commit,The following statement contains a magic number: numCommands = QueuedCommands.Count / 2;
Magic Number,ServiceStack.Redis.Generic,RedisTypedTransaction<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Generic\RedisTypedTransaction.cs,Commit,The following statement contains a magic number: _numCommands = QueuedCommands.Count / 2;
Magic Number,ServiceStack.Redis.Support,ConsistentHash<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\ConsistentHash.cs,ModifiedBinarySearch,The following statement contains a magic number: int mid = (max + min) / 2;
Magic Number,ServiceStack.Redis.Support,ConsistentHash<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\ConsistentHash.cs,Md5Hash,The following statement contains a magic number: var b = BitConverter.ToUInt64(data' 8);
Magic Number,ServiceStack.Redis.Support.Diagnostic,TrackingRedisClientsManager,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Diagnostic\TrackingRedisClientsManager.cs,TrackingRedisClientsManager,The following statement contains a magic number: timer.Change(TimeSpan.FromSeconds(30)' TimeSpan.FromMinutes(1));
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: const int sleepIfLockSet = 200;
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: acquisitionTimeout *= 1000;
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: var ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,Lock,The following statement contains a magic number: ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Magic Number,ServiceStack.Redis.Support.Locking,DistributedLock,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Locking\DistributedLock.cs,CalculateLockExpire,The following statement contains a magic number: return (long)(ts.TotalSeconds + timeout + 1.5);
Magic Number,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,PrepareNextWorkItem,The following statement contains a magic number: ts.TotalMinutes > 5
Magic Number,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,HarvestZombies,The following statement contains a magic number: var ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Magic Number,ServiceStack.Redis.Support.Queue.Implementation,RedisSequentialWorkQueue<T>,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\Support\Queue\Implementation\RedisSequentialWorkQueue.cs,TryForceReleaseLock,The following statement contains a magic number: var ts = (DateTime.UtcNow - new DateTime(1970' 1' 1' 0' 0' 0));
Missing Default,ServiceStack.Redis,RedisExtensions,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisExtensions.cs,ToRedisEndpoint,The following switch statement is missing a default case: switch (name)                      {                          case "db":                              endpoint.Db = int.Parse(value);                              break;                          case "ssl":                              endpoint.Ssl = bool.Parse(value);                              if (useDefaultPort)                                  endpoint.Port = RedisConfig.DefaultPortSsl;                              break;                          case "sslprotocols":                              SslProtocols protocols;                              value = value?.Replace("|"' "'");                              if (!Enum.TryParse(value' true' out protocols)) throw new ArgumentOutOfRangeException("Keyword '" + name + "' requires an SslProtocol value (multiple values separated by '|').");                              endpoint.SslProtocols = protocols;                              break;                          case "client":                              endpoint.Client = value;                              break;                          case "password":                              endpoint.Password = value;                              break;                          case "namespaceprefix":                              endpoint.NamespacePrefix = value;                              break;                          case "connecttimeout":                              endpoint.ConnectTimeout = int.Parse(value);                              break;                          case "sendtimeout":                              endpoint.SendTimeout = int.Parse(value);                              break;                          case "receivetimeout":                              endpoint.ReceiveTimeout = int.Parse(value);                              break;                          case "retrytimeout":                              endpoint.RetryTimeout = int.Parse(value);                              break;                          case "idletimeout":                          case "idletimeoutsecs":                              endpoint.IdleTimeOutSecs = int.Parse(value);                              break;                      }
Missing Default,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,GetEntryType,The following switch statement is missing a default case: switch (type)              {                  case "none":                      return RedisKeyType.None;                  case "string":                      return RedisKeyType.String;                  case "set":                      return RedisKeyType.Set;                  case "list":                      return RedisKeyType.List;                  case "zset":                      return RedisKeyType.SortedSet;                  case "hash":                      return RedisKeyType.Hash;              }
Missing Default,ServiceStack.Redis,RedisNativeClient,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisNativeClient.cs,ReadMultiData,The following switch statement is missing a default case: switch (c)              {                  // Some commands like BRPOPLPUSH may return Bulk Reply instead of Multi-bulk                  case '$':                      var t = new byte[2][];                      t[1] = ParseSingleLine(string.Concat(char.ToString((char)c)' s));                      return t;                    case '-':                      throw CreateResponseError(s.StartsWith("ERR") ? s.Substring(4) : s);                    case '*':                      if (int.TryParse(s' out var count))                      {                          if (count == -1)                          {                              //redis is in an invalid state                              return TypeConstants.EmptyByteArrayArray;                          }                            var result = new byte[count][];                            for (int i = 0; i < count; i++)                              result[i] = ReadData();                            return result;                      }                      break;              }
Missing Default,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,RunLoop,The following switch statement is missing a default case: switch (op)                                      {                                          case Operation.Stop:                                              if (Log.IsDebugEnabled)                                                  Log.Debug("Stop Command Issued");                                                Interlocked.CompareExchange(ref status' Status.Stopping' Status.Started);                                              try                                              {                                                  if (Log.IsDebugEnabled)                                                      Log.Debug("UnSubscribe From All Channels...");                                                    subscription.UnSubscribeFromAllChannels(); //Un block thread.                                              }                                              finally                                              {                                                  Interlocked.CompareExchange(ref status' Status.Stopped' Status.Stopping);                                              }                                              return;                                            case Operation.Reset:                                              subscription.UnSubscribeFromAllChannels(); //Un block thread.                                              return;                                      }
Missing Default,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,RunLoop,The following switch statement is missing a default case: switch (msgType)                                      {                                          case ControlCommand.Pulse:                                              Pulse();                                              break;                                      }
Missing Default,ServiceStack.Redis,RedisPubSubServer,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisPubSubServer.cs,GetStatus,The following switch statement is missing a default case: switch (Interlocked.CompareExchange(ref status' 0' 0))              {                  case Status.Disposed:                      return "Disposed";                  case Status.Stopped:                      return "Stopped";                  case Status.Stopping:                      return "Stopping";                  case Status.Starting:                      return "Starting";                  case Status.Started:                      return "Started";              }
Missing Default,ServiceStack.Redis,RedisResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisResolver.cs,CreateRedisClient,The following switch statement is missing a default case: switch (testRole)                              {                                  case RedisServerRole.Master:                                      newMasters.Add(hostConfig);                                      if (masterClient == null)                                          masterClient = testClient;                                      break;                                  case RedisServerRole.Slave:                                      newSlaves.Add(hostConfig);                                      break;                              }
Missing Default,ServiceStack.Redis,RedisSentinelResolver,D:\research\architectureSmells\repos1\ServiceStack_ServiceStack.Redis\src\ServiceStack.Redis\RedisSentinelResolver.cs,CreateRedisClient,The following switch statement is missing a default case: switch (testRole)                                  {                                      case RedisServerRole.Master:                                          newMasters.Add(hostConfig);                                          if (masterClient == null)                                              masterClient = testClient;                                          break;                                      case RedisServerRole.Slave:                                          newSlaves.Add(hostConfig);                                          break;                                  }
