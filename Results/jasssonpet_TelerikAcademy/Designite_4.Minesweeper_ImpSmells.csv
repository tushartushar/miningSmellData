Implementation smell,Namespace,Class,File,Method,Description
Long Method,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The method has 102 lines of code.
Complex Method,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,Cyclomatic complexity of the method is 31
Complex Method,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,GetNeighbourMinesCount,Cyclomatic complexity of the method is 17
Long Statement,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The length of the statement  "			Console.WriteLine ("Hajde da igraem na “Mini4KI”. Probvaj si kasmeta da otkriesh poleteta bez mini4ki." + " Komanda 'top' pokazva klasiraneto' 'restart' po4va nova igra' 'exit' izliza i hajde 4ao!"); " is 199.
Long Statement,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The length of the statement  "			if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) { " is 163.
Complex Conditional,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The conditional expression  "int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)"  is complex.
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: do {  	if (isFirstMove) {  		Console.WriteLine ("Hajde da igraem na “Mini4KI”. Probvaj si kasmeta da otkriesh poleteta bez mini4ki." + " Komanda 'top' pokazva klasiraneto' 'restart' po4va nova igra' 'exit' izliza i hajde 4ao!");  		PrintField (field);  		isFirstMove = false;  	}  	Console.Write ("Daj red i kolona : ");  	command = Console.ReadLine ().Trim ();  	if (command.Length >= 3) {  		if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  			command = "turn";  		}  	}  	switch (command) {  	case "top":  		PrintScoreBoard (champions);  		break;  	case "restart":  		field = MakeField ();  		mines = MakeMines ();  		PrintField (field);  		isGameOver = false;  		isFirstMove = false;  		break;  	case "exit":  		Console.WriteLine ("4a0' 4a0' 4a0!");  		break;  	case "turn":  		if (mines [row' col] != '*') {  			if (mines [row' col] == '-') {  				MakeMove (field' mines' row' col);  				cellsOpened++;  			}  			if (cellsOpened == ТotalCells) {  				allCellsOpened = true;  			} else {  				PrintField (field);  			}  		} else {  			isGameOver = true;  		}  		break;  	default:  		Console.WriteLine ("\nGreshka! nevalidna Komanda\n");  		break;  	}  	if (isGameOver) {  		PrintField (mines);  		Console.Write ("\nHrrrrrr! Umria gerojski s {0} to4ki. " + "Daj si niknejm: "' cellsOpened);  		string playerName = Console.ReadLine ();  		Player player = new Player (playerName' cellsOpened);  		if (champions.Count < 5) {  			champions.Add (player);  		} else {  			for (int i = 0; i < champions.Count; i++) {  				if (champions [i].Points < player.Points) {  					champions.Insert (i' player);  					champions.RemoveAt (champions.Count - 1);  					break;  				}  			}  		}  		champions.Sort ((Player p1' Player p2) => p2.Name.CompareTo (p1.Name));  		champions.Sort ((Player p1' Player p2) => p2.Points.CompareTo (p1.Points));  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		isGameOver = false;  		isFirstMove = true;  	}  	if (allCellsOpened) {  		Console.WriteLine ("\nBRAVOOOS! Otvri 35 kletki bez kapka kryv.");  		PrintField (mines);  		Console.WriteLine ("Daj si imeto' batka: ");  		string name = Console.ReadLine ();  		Player player = new Player (name' cellsOpened);  		champions.Add (player);  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		allCellsOpened = false;  		isFirstMove = true;  	}  } while (command != "exit");  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: do {  	if (isFirstMove) {  		Console.WriteLine ("Hajde da igraem na “Mini4KI”. Probvaj si kasmeta da otkriesh poleteta bez mini4ki." + " Komanda 'top' pokazva klasiraneto' 'restart' po4va nova igra' 'exit' izliza i hajde 4ao!");  		PrintField (field);  		isFirstMove = false;  	}  	Console.Write ("Daj red i kolona : ");  	command = Console.ReadLine ().Trim ();  	if (command.Length >= 3) {  		if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  			command = "turn";  		}  	}  	switch (command) {  	case "top":  		PrintScoreBoard (champions);  		break;  	case "restart":  		field = MakeField ();  		mines = MakeMines ();  		PrintField (field);  		isGameOver = false;  		isFirstMove = false;  		break;  	case "exit":  		Console.WriteLine ("4a0' 4a0' 4a0!");  		break;  	case "turn":  		if (mines [row' col] != '*') {  			if (mines [row' col] == '-') {  				MakeMove (field' mines' row' col);  				cellsOpened++;  			}  			if (cellsOpened == ТotalCells) {  				allCellsOpened = true;  			} else {  				PrintField (field);  			}  		} else {  			isGameOver = true;  		}  		break;  	default:  		Console.WriteLine ("\nGreshka! nevalidna Komanda\n");  		break;  	}  	if (isGameOver) {  		PrintField (mines);  		Console.Write ("\nHrrrrrr! Umria gerojski s {0} to4ki. " + "Daj si niknejm: "' cellsOpened);  		string playerName = Console.ReadLine ();  		Player player = new Player (playerName' cellsOpened);  		if (champions.Count < 5) {  			champions.Add (player);  		} else {  			for (int i = 0; i < champions.Count; i++) {  				if (champions [i].Points < player.Points) {  					champions.Insert (i' player);  					champions.RemoveAt (champions.Count - 1);  					break;  				}  			}  		}  		champions.Sort ((Player p1' Player p2) => p2.Name.CompareTo (p1.Name));  		champions.Sort ((Player p1' Player p2) => p2.Points.CompareTo (p1.Points));  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		isGameOver = false;  		isFirstMove = true;  	}  	if (allCellsOpened) {  		Console.WriteLine ("\nBRAVOOOS! Otvri 35 kletki bez kapka kryv.");  		PrintField (mines);  		Console.WriteLine ("Daj si imeto' batka: ");  		string name = Console.ReadLine ();  		Player player = new Player (name' cellsOpened);  		champions.Add (player);  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		allCellsOpened = false;  		isFirstMove = true;  	}  } while (command != "exit");  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: do {  	if (isFirstMove) {  		Console.WriteLine ("Hajde da igraem na “Mini4KI”. Probvaj si kasmeta da otkriesh poleteta bez mini4ki." + " Komanda 'top' pokazva klasiraneto' 'restart' po4va nova igra' 'exit' izliza i hajde 4ao!");  		PrintField (field);  		isFirstMove = false;  	}  	Console.Write ("Daj red i kolona : ");  	command = Console.ReadLine ().Trim ();  	if (command.Length >= 3) {  		if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  			command = "turn";  		}  	}  	switch (command) {  	case "top":  		PrintScoreBoard (champions);  		break;  	case "restart":  		field = MakeField ();  		mines = MakeMines ();  		PrintField (field);  		isGameOver = false;  		isFirstMove = false;  		break;  	case "exit":  		Console.WriteLine ("4a0' 4a0' 4a0!");  		break;  	case "turn":  		if (mines [row' col] != '*') {  			if (mines [row' col] == '-') {  				MakeMove (field' mines' row' col);  				cellsOpened++;  			}  			if (cellsOpened == ТotalCells) {  				allCellsOpened = true;  			} else {  				PrintField (field);  			}  		} else {  			isGameOver = true;  		}  		break;  	default:  		Console.WriteLine ("\nGreshka! nevalidna Komanda\n");  		break;  	}  	if (isGameOver) {  		PrintField (mines);  		Console.Write ("\nHrrrrrr! Umria gerojski s {0} to4ki. " + "Daj si niknejm: "' cellsOpened);  		string playerName = Console.ReadLine ();  		Player player = new Player (playerName' cellsOpened);  		if (champions.Count < 5) {  			champions.Add (player);  		} else {  			for (int i = 0; i < champions.Count; i++) {  				if (champions [i].Points < player.Points) {  					champions.Insert (i' player);  					champions.RemoveAt (champions.Count - 1);  					break;  				}  			}  		}  		champions.Sort ((Player p1' Player p2) => p2.Name.CompareTo (p1.Name));  		champions.Sort ((Player p1' Player p2) => p2.Points.CompareTo (p1.Points));  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		isGameOver = false;  		isFirstMove = true;  	}  	if (allCellsOpened) {  		Console.WriteLine ("\nBRAVOOOS! Otvri 35 kletki bez kapka kryv.");  		PrintField (mines);  		Console.WriteLine ("Daj si imeto' batka: ");  		string name = Console.ReadLine ();  		Player player = new Player (name' cellsOpened);  		champions.Add (player);  		PrintScoreBoard (champions);  		field = MakeField ();  		mines = MakeMines ();  		cellsOpened = 0;  		allCellsOpened = false;  		isFirstMove = true;  	}  } while (command != "exit");  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: if (command.Length >= 3) {  	if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  		command = "turn";  	}  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: if (command.Length >= 3) {  	if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  		command = "turn";  	}  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: if (int.TryParse (command [0].ToString ()' out row) && int.TryParse (command [2].ToString ()' out col) && row < field.GetLength (0) && col < field.GetLength (1)) {  	command = "turn";  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: if (isGameOver) {  	PrintField (mines);  	Console.Write ("\nHrrrrrr! Umria gerojski s {0} to4ki. " + "Daj si niknejm: "' cellsOpened);  	string playerName = Console.ReadLine ();  	Player player = new Player (playerName' cellsOpened);  	if (champions.Count < 5) {  		champions.Add (player);  	} else {  		for (int i = 0; i < champions.Count; i++) {  			if (champions [i].Points < player.Points) {  				champions.Insert (i' player);  				champions.RemoveAt (champions.Count - 1);  				break;  			}  		}  	}  	champions.Sort ((Player p1' Player p2) => p2.Name.CompareTo (p1.Name));  	champions.Sort ((Player p1' Player p2) => p2.Points.CompareTo (p1.Points));  	PrintScoreBoard (champions);  	field = MakeField ();  	mines = MakeMines ();  	cellsOpened = 0;  	isGameOver = false;  	isFirstMove = true;  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,Main,The following statement contains a magic number: if (champions.Count < 5) {  	champions.Add (player);  } else {  	for (int i = 0; i < champions.Count; i++) {  		if (champions [i].Points < player.Points) {  			champions.Insert (i' player);  			champions.RemoveAt (champions.Count - 1);  			break;  		}  	}  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,MakeMines,The following statement contains a magic number: while (randomNumbers.Count < 15) {  	int randomNumber = randomGenerator.Next (50);  	if (!randomNumbers.Contains (randomNumber)) {  		randomNumbers.Add (randomNumber);  	}  }  
Magic Number,Minesweeper,Mine,F:\newReposMay17\jasssonpet_TelerikAcademy\Programming\4.HighQualityCode\3.NamingIdentifiers\4.Minesweeper\Program.cs,MakeMines,The following statement contains a magic number: while (randomNumbers.Count < 15) {  	int randomNumber = randomGenerator.Next (50);  	if (!randomNumbers.Contains (randomNumber)) {  		randomNumbers.Add (randomNumber);  	}  }  
