Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,Cyclomatic complexity of the method is 21
Complex Method,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,Cyclomatic complexity of the method is 26
Complex Method,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,Cyclomatic complexity of the method is 18
Complex Method,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetCustomerAccounts,Cyclomatic complexity of the method is 15
Long Parameter List,AlbaDL,AuthorizeNetTransaction,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BibleThonDL.Designer.cs,CreateAuthorizeNetTransaction,The method has 8 parameters.
Long Parameter List,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerializeSalesOrderObject,The method has 5 parameters.
Long Parameter List,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerilizeCustomerObject,The method has 6 parameters.
Long Parameter List,AlbaDL,ShareAThonDonationFrequency,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\ShareAThonDL.Designer.cs,CreateShareAThonDonationFrequency,The method has 8 parameters.
Long Parameter List,AlbaDL,ShareAThonOfferLine,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\ShareAThonDL.Designer.cs,CreateShareAThonOfferLine,The method has 6 parameters.
Long Statement,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The length of the statement  "			bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ()); " is 122.
Long Statement,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The length of the statement  "					isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ()); " is 126.
Long Statement,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The length of the statement  "							isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ()); " is 154.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetCustomerDetails,The length of the statement  "	var customerDoc = econ.eConnect_Requester (connString' EnumTypes.ConnectionStringType.SqlClient' xmlCustomerdoc.OuterXml); " is 122.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetCustomerDetails,The length of the statement  "	var customerDoc = econ.eConnect_Requester (connString' EnumTypes.ConnectionStringType.SqlClient' xmlCustomerdoc.OuterXml); " is 122.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOfferDetails,The length of the statement  "	var customerDoc = econ.eConnect_Requester (connString' EnumTypes.ConnectionStringType.SqlClient' xmlCustomerdoc.OuterXml); " is 122.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerilizeCustomerObject,The length of the statement  "	//taCreateInternetAddresses_ItemsTaCreateInternetAddresses[] createInternetAddresses = GetCustomerInetInfo(customerInetInfo); " is 125.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerilizeCustomerObject,The length of the statement  "		status = eConCall.eConnect_EntryPoint (sConnectionString' EnumTypes.ConnectionStringType.SqlClient' customerDocument' EnumTypes.SchemaValidationType.None); " is 155.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerializeSalesOrderObject,The length of the statement  "	taCreateSopPaymentInsertRecord_ItemsTaCreateSopPaymentInsertRecord[] sopPaymentInsert = GetSopPaymentInsertRecord (sopOrderPayment); " is 132.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerializeSalesOrderObject,The length of the statement  "		status = eConCall.eConnect_EntryPoint (sConnectionString' EnumTypes.ConnectionStringType.SqlClient' sopTransactionDoc' EnumTypes.SchemaValidationType.None); " is 156.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetCustomerAccounts,The length of the statement  "	var customerAccount = customerAccounts.AccountReceivable + "'" + customerAccounts.CashAccount + "'" + customerAccounts.CostofSalesAccount + "'" + customerAccounts.FinanceChargesAccount + "'" + customerAccounts.InventoryAccount + "'" + customerAccounts.SalesAccount + "'" + customerAccounts.SalesOrderReturnAccount + "'" + customerAccounts.TermDiscountTackenAccount + "'" + customerAccounts.TermDiscountAvailableAccount + "'" + customerAccounts.WriteOffAccount; " is 460.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,SerilizeCustomerObject,The length of the statement  "		status = eConCall.eConnect_EntryPoint (connString' EnumTypes.ConnectionStringType.SqlClient' customerDocument' EnumTypes.SchemaValidationType.None); " is 148.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOrderProcess,The length of the statement  "		orderProcess.DOCAMNT = Convert.ToDecimal (orderProcess.SUBTOTAL + orderProcess.FREIGHT + orderProcess.MISCAMNT + orderProcess.MSCTXAMT + orderProcess.TAXAMNT + orderProcess.FRTTXAMT) - Convert.ToDecimal (orderProcess.TRDISAMT); " is 227.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetCustomerAccountDetails,The length of the statement  "	var customerDoc = econ.eConnect_Requester (connString' EnumTypes.ConnectionStringType.SqlClient' xmlCustomerdoc.OuterXml); " is 122.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetPaymentNumber,The length of the statement  "	return getNextDocNumber.GetNextRMNumber (GetNextDocNumbers.IncrementDecrement.Increment' GetNextDocNumbers.RMPaymentType.RMPayments' connString); " is 145.
Long Statement,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetAccountValue,The length of the statement  "		var command = new SqlCommand ("select DEFCACTY'RMCSHACC'RMARACC'RMSLSACC'RMIVACC'RMCOSACC'RMTAKACC'RMAVACC'RMFCGACC'RMWRACC'RMSORACC from RM00101 where CUSTNMBR='" + customerNumber + "'"' sqlConn); " is 197.
Long Statement,AlbaDL,OfferLines,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\OfferLines.cs,GetOfferLines,The length of the statement  "			if (of ["CURNCYID"] != null && of ["LISTPRCE"] != null && of.ParentNode != null && of.ParentNode ["ITEMNMBR"] != null && of.ParentNode ["ITEMDESC"] != null) { " is 158.
Long Statement,AlbaDL,ShippingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\ShippingAddress.cs,GetCustomerShipAddress,The length of the statement  "				if (xn ["CUSTNMBR"] != null && xn ["CUSTNMBR"].InnerText.Trim ().ToLower ().Equals (customerNo.ToLower ().Trim ()) && xn ["ADRSCODE"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null && xn ["PHONE1"] != null && xn ["PHONE2"] != null) { " is 275.
Complex Conditional,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The conditional expression  "xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null"  is complex.
Complex Conditional,AlbaDL,OfferLines,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\OfferLines.cs,GetOfferLines,The conditional expression  "of ["CURNCYID"] != null && of ["LISTPRCE"] != null && of.ParentNode != null && of.ParentNode ["ITEMNMBR"] != null && of.ParentNode ["ITEMDESC"] != null"  is complex.
Complex Conditional,AlbaDL,ShippingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\ShippingAddress.cs,GetCustomerShipAddress,The conditional expression  "xn ["CUSTNMBR"] != null && xn ["CUSTNMBR"].InnerText.Trim ().ToLower ().Equals (customerNo.ToLower ().Trim ()) && xn ["ADRSCODE"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null && xn ["PHONE1"] != null && xn ["PHONE2"] != null"  is complex.
Empty Catch Block,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The method has an empty catch block.
Empty Catch Block,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The method has an empty catch block.
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xnParent in xmlList) {  		string customerName = xnParent ["CUSTNAME"].InnerText;  		string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  		string creditCardExpireDate = string.Empty;  		try {  			creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  		if (xmlNodeList != null)  			foreach (XmlNode xn in xmlNodeList) {  				if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  					var billingAddr = new BillingAddress {  						CustomerNo = xn ["CUSTNMBR"].InnerText'  						CustomerName = customerName'  						Address1 = xn ["ADDRESS1"].InnerText'  						Address2 = xn ["ADDRESS2"].InnerText'  						Address3 = xn ["ADDRESS3"].InnerText  					};  					if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE1"].InnerText.Length > 3)  							billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE1"].InnerText.Length > 6)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE1"].InnerText.Length > 10)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE1"].InnerText.Length > 13)  							billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone1 = string.Empty;  					if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  						if (xn ["PHONE2"].InnerText.Length > 3)  							billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  						if (xn ["PHONE2"].InnerText.Length > 6)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  						if (xn ["PHONE2"].InnerText.Length > 10)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  						if (xn ["PHONE2"].InnerText.Length > 13)  							billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  					}  					else  						billingAddr.Telephone2 = string.Empty;  					billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  					billingAddr.City = xn ["CITY"].InnerText;  					billingAddr.State = xn ["STATE"].InnerText;  					billingAddr.Zipcode = xn ["ZIP"].InnerText;  					billingAddr.Country = xn ["COUNTRY"].InnerText;  					billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  					billingAddr.CreditCardNumber = creditCardNumber;  					billingAddr.CreditCardExpireDate = creditCardExpireDate;  					XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  					if (emailAddressNodes != null)  						foreach (XmlNode emailAddressNode in emailAddressNodes) {  							XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  							if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  								XmlElement element = emailAddressNode ["INET1"];  								if (element != null)  									billingAddr.Email = element.InnerText;  								break;  							}  						}  					customeDetails.Add (billingAddr);  				}  			}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xnParent in xmlList) {  	string customerName = xnParent ["CUSTNAME"].InnerText;  	string creditCardNumber = xnParent ["CRCRDNUM"].InnerText;  	string creditCardExpireDate = string.Empty;  	try {  		creditCardExpireDate = Convert.ToDateTime (xnParent ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList xmlNodeList = xnParent.SelectNodes ("Address");  	if (xmlNodeList != null)  		foreach (XmlNode xn in xmlNodeList) {  			if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = customerName'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = creditCardNumber;  				billingAddr.CreditCardExpireDate = creditCardExpireDate;  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xmlNodeList != null)  	foreach (XmlNode xn in xmlNodeList) {  		if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = customerName'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = creditCardNumber;  			billingAddr.CreditCardExpireDate = creditCardExpireDate;  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: foreach (XmlNode xn in xmlNodeList) {  	if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = customerName'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = creditCardNumber;  		billingAddr.CreditCardExpireDate = creditCardExpireDate;  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && xn ["ADDRESS1"] != null && xn ["ADDRESS2"] != null && xn ["ADDRESS3"] != null) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = customerName'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = creditCardNumber;  	billingAddr.CreditCardExpireDate = creditCardExpireDate;  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerBillingAddresses,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  		if (!string.IsNullOrEmpty (telephone)) {  			if (!isRecordFound)  				isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  			if (!isRecordFound) {  				// if the search is not found in the primary address  then start search on billing addresses  				XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  				if (xmlNodeList != null)  					foreach (XmlNode xnBillingAddress in xmlNodeList) {  						isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  						// checking untill any record matches in billing addresses  						if (isRecordFound)  							break;  					}  			}  		}  		if (isRecordFound) {  			if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  				var billingAddr = new BillingAddress {  					CustomerNo = xn ["CUSTNMBR"].InnerText'  					CustomerName = xn ["CUSTNAME"].InnerText'  					Address1 = xn ["ADDRESS1"].InnerText'  					Address2 = xn ["ADDRESS2"].InnerText'  					Address3 = xn ["ADDRESS3"].InnerText  				};  				if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE1"].InnerText.Length > 3)  						billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE1"].InnerText.Length > 6)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE1"].InnerText.Length > 10)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE1"].InnerText.Length > 13)  						billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone1 = string.Empty;  				if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  					if (xn ["PHONE2"].InnerText.Length > 3)  						billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  					if (xn ["PHONE2"].InnerText.Length > 6)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  					if (xn ["PHONE2"].InnerText.Length > 10)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  					if (xn ["PHONE2"].InnerText.Length > 13)  						billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  				}  				else  					billingAddr.Telephone2 = string.Empty;  				billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  				billingAddr.City = xn ["CITY"].InnerText;  				billingAddr.State = xn ["STATE"].InnerText;  				billingAddr.Zipcode = xn ["ZIP"].InnerText;  				billingAddr.Country = xn ["COUNTRY"].InnerText;  				billingAddr.Email = "";  				billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  				billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  				DateTime expireDate;  				if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  					billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  				XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  				if (emailAddressNodes != null)  					foreach (XmlNode emailAddressNode in emailAddressNodes) {  						XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  						if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  							XmlElement element = emailAddressNode ["INET1"];  							if (element != null)  								billingAddr.Email = element.InnerText;  							break;  						}  					}  				customeDetails.Add (billingAddr);  			}  		}  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	bool isRecordFound = xn ["CUSTNAME"] != null && xn ["CUSTNAME"].InnerText.ToLower ().StartsWith (customerName.ToLower ());  	if (!string.IsNullOrEmpty (telephone)) {  		if (!isRecordFound)  			isRecordFound = xn ["PHONE1"] != null && xn ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  		if (!isRecordFound) {  			// if the search is not found in the primary address  then start search on billing addresses  			XmlNodeList xmlNodeList = xn.SelectNodes ("Address");  			if (xmlNodeList != null)  				foreach (XmlNode xnBillingAddress in xmlNodeList) {  					isRecordFound = xnBillingAddress ["PHONE1"] != null && xnBillingAddress ["PHONE1"].InnerText.ToLower ().Trim ().StartsWith (telephone.ToLower ().Trim ());  					// checking untill any record matches in billing addresses  					if (isRecordFound)  						break;  				}  		}  	}  	if (isRecordFound) {  		if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  			var billingAddr = new BillingAddress {  				CustomerNo = xn ["CUSTNMBR"].InnerText'  				CustomerName = xn ["CUSTNAME"].InnerText'  				Address1 = xn ["ADDRESS1"].InnerText'  				Address2 = xn ["ADDRESS2"].InnerText'  				Address3 = xn ["ADDRESS3"].InnerText  			};  			if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE1"].InnerText.Length > 3)  					billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE1"].InnerText.Length > 6)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE1"].InnerText.Length > 10)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE1"].InnerText.Length > 13)  					billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone1 = string.Empty;  			if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  				if (xn ["PHONE2"].InnerText.Length > 3)  					billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  				if (xn ["PHONE2"].InnerText.Length > 6)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  				if (xn ["PHONE2"].InnerText.Length > 10)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  				if (xn ["PHONE2"].InnerText.Length > 13)  					billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  			}  			else  				billingAddr.Telephone2 = string.Empty;  			billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  			billingAddr.City = xn ["CITY"].InnerText;  			billingAddr.State = xn ["STATE"].InnerText;  			billingAddr.Zipcode = xn ["ZIP"].InnerText;  			billingAddr.Country = xn ["COUNTRY"].InnerText;  			billingAddr.Email = "";  			billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  			billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  			DateTime expireDate;  			if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  				billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  			XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  			if (emailAddressNodes != null)  				foreach (XmlNode emailAddressNode in emailAddressNodes) {  					XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  					if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  						XmlElement element = emailAddressNode ["INET1"];  						if (element != null)  							billingAddr.Email = element.InnerText;  						break;  					}  				}  			customeDetails.Add (billingAddr);  		}  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (isRecordFound) {  	if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		DateTime expireDate;  		if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  			billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["CUSTNMBR"] != null && !string.IsNullOrEmpty (xn ["CUSTNMBR"].InnerText)) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	DateTime expireDate;  	if (DateTime.TryParse (xn ["CCRDXPDT"].InnerText' out expireDate))  		billingAddr.CreditCardExpireDate = expireDate.ToString ("MMyy");  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xmlList != null)  	foreach (XmlNode xn in xmlList) {  		var billingAddr = new BillingAddress {  			CustomerNo = xn ["CUSTNMBR"].InnerText'  			CustomerName = xn ["CUSTNAME"].InnerText'  			Address1 = xn ["ADDRESS1"].InnerText'  			Address2 = xn ["ADDRESS2"].InnerText'  			Address3 = xn ["ADDRESS3"].InnerText  		};  		if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE1"].InnerText.Length > 3)  				billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE1"].InnerText.Length > 6)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE1"].InnerText.Length > 10)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE1"].InnerText.Length > 13)  				billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone1 = string.Empty;  		if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  			if (xn ["PHONE2"].InnerText.Length > 3)  				billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  			if (xn ["PHONE2"].InnerText.Length > 6)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  			if (xn ["PHONE2"].InnerText.Length > 10)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  			if (xn ["PHONE2"].InnerText.Length > 13)  				billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  		}  		else  			billingAddr.Telephone2 = string.Empty;  		billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  		billingAddr.City = xn ["CITY"].InnerText;  		billingAddr.State = xn ["STATE"].InnerText;  		billingAddr.Zipcode = xn ["ZIP"].InnerText;  		billingAddr.Country = xn ["COUNTRY"].InnerText;  		billingAddr.Email = "";  		billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  		billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  		try {  			billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  		}  		catch (Exception) {  		}  		XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  		if (emailAddressNodes != null)  			foreach (XmlNode emailAddressNode in emailAddressNodes) {  				XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  				if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  					XmlElement element = emailAddressNode ["INET1"];  					if (element != null)  						billingAddr.Email = element.InnerText;  					break;  				}  			}  		customeDetails.Add (billingAddr);  	}  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: foreach (XmlNode xn in xmlList) {  	var billingAddr = new BillingAddress {  		CustomerNo = xn ["CUSTNMBR"].InnerText'  		CustomerName = xn ["CUSTNAME"].InnerText'  		Address1 = xn ["ADDRESS1"].InnerText'  		Address2 = xn ["ADDRESS2"].InnerText'  		Address3 = xn ["ADDRESS3"].InnerText  	};  	if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE1"].InnerText.Length > 3)  			billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE1"].InnerText.Length > 6)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE1"].InnerText.Length > 10)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE1"].InnerText.Length > 13)  			billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone1 = string.Empty;  	if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  		if (xn ["PHONE2"].InnerText.Length > 3)  			billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  		if (xn ["PHONE2"].InnerText.Length > 6)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  		if (xn ["PHONE2"].InnerText.Length > 10)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  		if (xn ["PHONE2"].InnerText.Length > 13)  			billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  	}  	else  		billingAddr.Telephone2 = string.Empty;  	billingAddr.Telephone3 = xn ["PHONE3"].InnerText;  	billingAddr.City = xn ["CITY"].InnerText;  	billingAddr.State = xn ["STATE"].InnerText;  	billingAddr.Zipcode = xn ["ZIP"].InnerText;  	billingAddr.Country = xn ["COUNTRY"].InnerText;  	billingAddr.Email = "";  	billingAddr.AddressCode = xn ["ADRSCODE"].InnerText;  	billingAddr.CreditCardNumber = xn ["CRCRDNUM"].InnerText;  	try {  		billingAddr.CreditCardExpireDate = Convert.ToDateTime (xn ["CCRDXPDT"].InnerText).ToString ("MMyy");  	}  	catch (Exception) {  	}  	XmlNodeList emailAddressNodes = xn.SelectNodes ("Address/Internet_Address");  	if (emailAddressNodes != null)  		foreach (XmlNode emailAddressNode in emailAddressNodes) {  			XmlElement xmlElement = emailAddressNode ["ADRSCODE"];  			if (xmlElement != null && String.CompareOrdinal (billingAddr.AddressCode' xmlElement.InnerText) == 0) {  				XmlElement element = emailAddressNode ["INET1"];  				if (element != null)  					billingAddr.Email = element.InnerText;  				break;  			}  		}  	customeDetails.Add (billingAddr);  }  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE1"].InnerText) && xn ["PHONE1"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE1"].InnerText.Length > 3)  		billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE1"].InnerText.Length > 6)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE1"].InnerText.Length > 10)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE1"].InnerText.Length > 13)  		billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  }  else  	billingAddr.Telephone1 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 3)  	billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 = "(" + xn ["PHONE1"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 6)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 10)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE1"].InnerText.Length > 13)  	billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone1 += xn ["PHONE1"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (!string.IsNullOrEmpty (xn ["PHONE2"].InnerText) && xn ["PHONE2"].InnerText.Trim () != "00000000000000") {  	if (xn ["PHONE2"].InnerText.Length > 3)  		billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  	if (xn ["PHONE2"].InnerText.Length > 6)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  	if (xn ["PHONE2"].InnerText.Length > 10)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  	if (xn ["PHONE2"].InnerText.Length > 13)  		billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  }  else  	billingAddr.Telephone2 = string.Empty;  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 3)  	billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 = "(" + xn ["PHONE2"].InnerText.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 6)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (3' 3) + "-";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 10)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: if (xn ["PHONE2"].InnerText.Length > 13)  	billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,BillingAddress,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\BillingAddress.cs,GetCustomerDetails,The following statement contains a magic number: billingAddr.Telephone2 += xn ["PHONE2"].InnerText.Substring (10);  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetNextSalseDocNumber,The following statement contains a magic number: return sopTransNumber.GetNextSopNumber (2' "STDORD"' connString);  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,RollbackSalseDocNumber,The following statement contains a magic number: sopTransNumber.RollBackSopNumber (orderNumber' 2' "STDORD"' connString);  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOrderProcess,The following statement contains a magic number: if (nodeList != null) {  	var orderProcess = new OrderProcess {  		SOPNUMBE = orderNumber'  		SOPTYPE = 2'  		BACHNUMB = "SHAREATHON  "'  		DOCID = "STDORD"'  		CUSTNMBR = customerNo'  		CUSTNAME = (nodeList [0] ["CUSTNMBR"] != null) ? nodeList [0] ["CUSTNMBR"].InnerText : string.Empty'  		SUBTOTAL = subTotal'  		DOCDATE = DateTime.Now.ToShortDateString ()'  		ORDRDATE = DateTime.Now.ToShortDateString ()'  		ShipToName = ""'  		ADDRESS1 = (nodeList [0] ["ADDRESS1"] != null) ? nodeList [0] ["ADDRESS1"].InnerText : string.Empty'  		ADDRESS2 = (nodeList [0] ["ADDRESS2"] != null) ? nodeList [0] ["ADDRESS2"].InnerText : string.Empty'  		CITY = (nodeList [0] ["CITY"] != null) ? nodeList [0] ["CITY"].InnerText : string.Empty'  		STATE = (nodeList [0] ["STATE"] != null) ? nodeList [0] ["STATE"].InnerText : string.Empty'  		ZIPCODE = (nodeList [0] ["ZIP"] != null) ? nodeList [0] ["ZIP"].InnerText : string.Empty'  		COUNTRY = (nodeList [0] ["COUNTRY"] != null) ? nodeList [0] ["COUNTRY"].InnerText : string.Empty'  		PHNUMBR1 = (nodeList [0] ["PHONE1"] != null) ? nodeList [0] ["PHONE1"].InnerText : string.Empty'  		FREIGHT = 0'  		FRTTXAMT = 0'  		MISCAMNT = 0'  		MSCTXAMT = 0'  		TRDISAMT = 0'  		TAXAMNT = 0'  	};  	orderProcess.DOCAMNT = Convert.ToDecimal (orderProcess.SUBTOTAL + orderProcess.FREIGHT + orderProcess.MISCAMNT + orderProcess.MSCTXAMT + orderProcess.TAXAMNT + orderProcess.FRTTXAMT) - Convert.ToDecimal (orderProcess.TRDISAMT);  	return orderProcess;  }  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOrderedItems,The following statement contains a magic number: if (nodeList != null) {  	foreach (ShareAThonOfferLine shareAThonOfferLine in donation.ShareAThonOfferLines) {  		outPut.Add (new OrderItems {  			SOPTYPE = 2'  			SOPNUMBE = orderNumber'  			CUSTNMBR = (nodeList [0] ["CUSTNMBR"] != null) ? nodeList [0] ["CUSTNMBR"].InnerText : string.Empty'  			DOCDATE = DateTime.Now.ToShortDateString ()'  			ITEMNMBR = shareAThonOfferLine.OfferNo'  			ITEMDESC = shareAThonOfferLine.Description'  			UNITPRCE = GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  			QUANTITY = shareAThonOfferLine.Qty'  			XTNDPRCE = shareAThonOfferLine.Qty * GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  			TOTALQTY = 0'  			CURNCYID = ""'  			UOFM = ""'  			NONINVEN = 0'  			ShipToName = ""'  			ADDRESS1 = (nodeList [0] ["ADDRESS1"] != null) ? nodeList [0] ["ADDRESS1"].InnerText : string.Empty'  			ADDRESS2 = (nodeList [0] ["ADDRESS2"] != null) ? nodeList [0] ["ADDRESS2"].InnerText : string.Empty'  			CITY = (nodeList [0] ["CITY"] != null) ? nodeList [0] ["CITY"].InnerText : string.Empty'  			STATE = (nodeList [0] ["STATE"] != null) ? nodeList [0] ["STATE"].InnerText : string.Empty'  			ZIPCODE = (nodeList [0] ["ZIP"] != null) ? nodeList [0] ["ZIP"].InnerText : string.Empty'  			COUNTRY = (nodeList [0] ["COUNTRY"] != null) ? nodeList [0] ["COUNTRY"].InnerText : string.Empty'  			PHNUMBR1 = (nodeList [0] ["PHONE1"] != null) ? nodeList [0] ["PHONE1"].InnerText : string.Empty'  		});  	}  }  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOrderedItems,The following statement contains a magic number: foreach (ShareAThonOfferLine shareAThonOfferLine in donation.ShareAThonOfferLines) {  	outPut.Add (new OrderItems {  		SOPTYPE = 2'  		SOPNUMBE = orderNumber'  		CUSTNMBR = (nodeList [0] ["CUSTNMBR"] != null) ? nodeList [0] ["CUSTNMBR"].InnerText : string.Empty'  		DOCDATE = DateTime.Now.ToShortDateString ()'  		ITEMNMBR = shareAThonOfferLine.OfferNo'  		ITEMDESC = shareAThonOfferLine.Description'  		UNITPRCE = GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  		QUANTITY = shareAThonOfferLine.Qty'  		XTNDPRCE = shareAThonOfferLine.Qty * GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  		TOTALQTY = 0'  		CURNCYID = ""'  		UOFM = ""'  		NONINVEN = 0'  		ShipToName = ""'  		ADDRESS1 = (nodeList [0] ["ADDRESS1"] != null) ? nodeList [0] ["ADDRESS1"].InnerText : string.Empty'  		ADDRESS2 = (nodeList [0] ["ADDRESS2"] != null) ? nodeList [0] ["ADDRESS2"].InnerText : string.Empty'  		CITY = (nodeList [0] ["CITY"] != null) ? nodeList [0] ["CITY"].InnerText : string.Empty'  		STATE = (nodeList [0] ["STATE"] != null) ? nodeList [0] ["STATE"].InnerText : string.Empty'  		ZIPCODE = (nodeList [0] ["ZIP"] != null) ? nodeList [0] ["ZIP"].InnerText : string.Empty'  		COUNTRY = (nodeList [0] ["COUNTRY"] != null) ? nodeList [0] ["COUNTRY"].InnerText : string.Empty'  		PHNUMBR1 = (nodeList [0] ["PHONE1"] != null) ? nodeList [0] ["PHONE1"].InnerText : string.Empty'  	});  }  
Magic Number,AlbaDL,EConnectModel,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\EConnectModel.cs,GetOrderedItems,The following statement contains a magic number: outPut.Add (new OrderItems {  	SOPTYPE = 2'  	SOPNUMBE = orderNumber'  	CUSTNMBR = (nodeList [0] ["CUSTNMBR"] != null) ? nodeList [0] ["CUSTNMBR"].InnerText : string.Empty'  	DOCDATE = DateTime.Now.ToShortDateString ()'  	ITEMNMBR = shareAThonOfferLine.OfferNo'  	ITEMDESC = shareAThonOfferLine.Description'  	UNITPRCE = GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  	QUANTITY = shareAThonOfferLine.Qty'  	XTNDPRCE = shareAThonOfferLine.Qty * GetUnitPrice (shareAThonOfferLine.OfferNo' connString)'  	TOTALQTY = 0'  	CURNCYID = ""'  	UOFM = ""'  	NONINVEN = 0'  	ShipToName = ""'  	ADDRESS1 = (nodeList [0] ["ADDRESS1"] != null) ? nodeList [0] ["ADDRESS1"].InnerText : string.Empty'  	ADDRESS2 = (nodeList [0] ["ADDRESS2"] != null) ? nodeList [0] ["ADDRESS2"].InnerText : string.Empty'  	CITY = (nodeList [0] ["CITY"] != null) ? nodeList [0] ["CITY"].InnerText : string.Empty'  	STATE = (nodeList [0] ["STATE"] != null) ? nodeList [0] ["STATE"].InnerText : string.Empty'  	ZIPCODE = (nodeList [0] ["ZIP"] != null) ? nodeList [0] ["ZIP"].InnerText : string.Empty'  	COUNTRY = (nodeList [0] ["COUNTRY"] != null) ? nodeList [0] ["COUNTRY"].InnerText : string.Empty'  	PHNUMBR1 = (nodeList [0] ["PHONE1"] != null) ? nodeList [0] ["PHONE1"].InnerText : string.Empty'  });  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (!string.IsNullOrEmpty (phrase) && phrase.Trim () != "00000000000000") {  	string outPut = string.Empty;  	if (phrase.Length > 3)  		outPut = "(" + phrase.Substring (0' 3) + ") ";  	if (phrase.Length > 6)  		outPut += phrase.Substring (3' 3) + "-";  	if (phrase.Length > 10)  		outPut += phrase.Substring (6' 4) + " Ext. ";  	if (phrase.Length > 13)  		outPut += phrase.Substring (10);  	return outPut;  }  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 3)  	outPut = "(" + phrase.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 3)  	outPut = "(" + phrase.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut = "(" + phrase.Substring (0' 3) + ") ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 6)  	outPut += phrase.Substring (3' 3) + "-";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 6)  	outPut += phrase.Substring (3' 3) + "-";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 6)  	outPut += phrase.Substring (3' 3) + "-";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut += phrase.Substring (3' 3) + "-";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut += phrase.Substring (3' 3) + "-";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 10)  	outPut += phrase.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 10)  	outPut += phrase.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 10)  	outPut += phrase.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut += phrase.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut += phrase.Substring (6' 4) + " Ext. ";  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 13)  	outPut += phrase.Substring (10);  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: if (phrase.Length > 13)  	outPut += phrase.Substring (10);  
Magic Number,AlbaDL,FormatUtilities,C:\repos\Santhoshattillid_BibleThonWebPortal\AlbaDL\FormatUtilities.cs,FormatToTelephone,The following statement contains a magic number: outPut += phrase.Substring (10);  
