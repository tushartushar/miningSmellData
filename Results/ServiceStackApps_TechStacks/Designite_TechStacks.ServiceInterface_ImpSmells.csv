Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TechStacks.ServiceInterface,CustomUserSession,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\CustomAuthUserSession.cs,OnAuthenticated,Cyclomatic complexity of the method is 8
Complex Method,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,Cyclomatic complexity of the method is 7
Complex Method,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,Cyclomatic complexity of the method is 9
Complex Method,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,Cyclomatic complexity of the method is 12
Complex Method,TechStacks.ServiceInterface,TwitterGateway,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,PostToUrl,Cyclomatic complexity of the method is 8
Complex Method,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,Cyclomatic complexity of the method is 8
Long Parameter List,TechStacks.ServiceInterface,CustomUserSession,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\CustomAuthUserSession.cs,OnAuthenticated,The method has 4 parameters.
Long Parameter List,TechStacks.ServiceInterface,TwitterUpdates,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,TwitterUpdates,The method has 4 parameters.
Long Parameter List,TechStacks.ServiceInterface,TwitterGateway,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,PostToUrl,The method has 6 parameters.
Long Statement,TechStacks.ServiceInterface,ClientRoutesService,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\ClientRoutesService.cs,ShowServerHtml,The length of the statement  "	var serverHtml = (Request.UserAgent != null && Request.UserAgent.Contains ("Googlebot")) || Request.GetParam ("html") == "server"; " is 130.
Long Statement,TechStacks.ServiceInterface,CustomUserSession,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\CustomAuthUserSession.cs,OnAuthenticated,The length of the statement  "			if (appSettings.GetList ("TwitterAdmins").Contains (session.UserName) && !session.HasRole (RoleNames.Admin' userAuthRepo)) { " is 124.
Long Statement,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,PostTwitterUpdate,The length of the statement  "	var stackNames = Db.Column<string> (Db.From<TechnologyStack> ().Where (x => techIds.Contains (x.Id)).Select (x => x.Name)); " is 123.
Long Statement,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Post,The length of the statement  "		PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length)); " is 270.
Long Statement,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,The length of the statement  "	var postUpdate = AppSettings.EnableTwitterUpdates () && tech.LastStatusUpdate.GetValueOrDefault (DateTime.MinValue) < DateTime.UtcNow.Date; " is 139.
Long Statement,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,The length of the statement  "			Message = PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length)) " is 279.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The length of the statement  "		PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length)); " is 137.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The length of the statement  "	var postUpdate = AppSettings.EnableTwitterUpdates () && techStack.LastStatusUpdate.GetValueOrDefault (DateTime.MinValue) < DateTime.UtcNow.Date && techIds.Count >= 4; " is 166.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The length of the statement  "			Message = PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length)) " is 146.
Long Statement,TechStacks.ServiceInterface,TwitterGateway,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,Send,The length of the statement  "			var response = PostToUrl (TwitterAuthProvider' "https://api.twitter.com/1.1/statuses/update.json"' message.AccessToken' message.AccessTokenSecret' new Dictionary<string' string> { " is 179.
Long Statement,TechStacks.ServiceInterface,TwitterGateway,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,PostToUrl,The length of the statement  "	webReq.Headers [HttpRequestHeader.Authorization] = OAuthAuthorizer.AuthorizeRequest (oAuthProvider' accessToken' accessTokenSecret' "POST"' uri' data); " is 151.
Long Statement,TechStacks.ServiceInterface,TechnologyServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The length of the statement  "		Results = Db.Select (Db.From<TechnologyHistory> ().Where (x => x.TechnologyId == id).OrderByDescending (x => x.LastModified)) " is 125.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The length of the statement  "	var tech = int.TryParse (request.Slug' out id) ? Db.SingleById<Technology> (id) : Db.Single<Technology> (x => x.Slug == request.Slug.ToLower ()); " is 145.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The length of the statement  "	var techStacks = Db.Select (Db.From<TechnologyStack> ().Join<TechnologyChoice> ().Join<TechnologyChoice' Technology> ().Where<TechnologyChoice> (x => x.TechnologyId == tech.Id).OrderByDescending (x => x.LastModified)); " is 218.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The length of the statement  "	var tech = int.TryParse (request.Slug' out id) ? Db.SingleById<Technology> (id) : Db.Single<Technology> (x => x.Slug == request.Slug.ToLower ()); " is 145.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The length of the statement  "		Results = Db.Select (Db.From<TechnologyStackHistory> ().Where (x => x.TechnologyStackId == id).OrderByDescending (x => x.LastModified)) " is 135.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "	var updatedTechIds = Db.ExecuteSql ("UPDATE page_stats AS p SET ref_id = t.id FROM technology AS t WHERE t.slug = p.ref_slug and p.ref_type = 'tech' AND ref_id = 0"); " is 166.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "	var updatedStackIds = Db.ExecuteSql ("UPDATE page_stats AS p SET ref_id = t.id FROM technology_stack AS t WHERE t.slug = p.ref_slug and p.ref_type = 'stack' AND ref_id = 0"); " is 174.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "	var techFavs = Db.Dictionary<long' long> ("SELECT technology_id' count(*) FROM user_favorite_technology GROUP BY technology_id"); " is 129.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "	var stackFavs = Db.Dictionary<long' long> ("SELECT technology_stack_id' count(*) FROM user_favorite_technology_stack GROUP BY technology_stack_id"); " is 148.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "		LatestTechStacks = Db.GetTechstackDetails (Db.From<TechnologyStack> ().OrderByDescending (x => x.LastModified).Limit (20))' " is 123.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "		TopUsers = Db.Select<UserInfo> (@"select u.user_name as UserName' u.default_profile_url as AvatarUrl' COUNT(*) as StacksCount" is 125.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "		PopularTechStacks = Db.Select (Db.From<TechnologyStack> ().Join<PageStats> ((s' p) => s.Id == p.RefId && p.RefType == "stack").OrderByDescending<PageStats> (p => p.ViewCount).Limit (12))' " is 187.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,GetTopTechByCategory,The length of the statement  "	var topTechByCategory = Db.Select<TechnologyInfo> (@"select t.tier' t.slug as Slug' t.name' t.logo_url' COUNT(*) as StacksCount " is 127.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The length of the statement  "	var techStack = int.TryParse (request.Slug' out id) ? Db.SingleById<TechnologyStack> (id) : Db.Single<TechnologyStack> (x => x.Slug == request.Slug.ToLower ()); " is 160.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The length of the statement  "	var techChoices = Db.LoadSelect (Db.From<TechnologyChoice> ().Join<Technology> ().Join<TechnologyStack> ().Where (x => x.TechnologyStackId == techStack.Id)); " is 157.
Long Statement,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The length of the statement  "	var tech = int.TryParse (request.Slug' out id) ? Db.SingleById<TechnologyStack> (id) : Db.Single<TechnologyStack> (x => x.Slug == request.Slug.ToLower ()); " is 155.
Long Statement,TechStacks.ServiceInterface,TechStackQueries,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechStackQueries.cs,GetTechstackDetails,The length of the statement  "	var technologyChoices = db.LoadSelect (db.From<TechnologyChoice> ().Join<Technology> ().Join<TechnologyStack> ().Where (techChoice => Sql.In (techChoice.TechnologyStackId' latestStacks.Select (x => x.Id)))); " is 207.
Long Statement,TechStacks.ServiceInterface,TechStackQueries,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechStackQueries.cs,GetTechstackDetails,The length of the statement  "	stackDetails.ForEach (stack => stack.TechnologyChoices = technologyChoices.Map (x => x.ToTechnologyInStack ()).Where (x => stack.Id == x.TechnologyStackId).ToList ()); " is 167.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Get,The length of the statement  "	var results = favorites.Count == 0 ? new List<TechnologyStack> () : Db.Select (Db.From<TechnologyStack> ().Where (x => Sql.In (x.Id' favorites.Select (y => y.TechnologyStackId)))); " is 180.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Put,The length of the statement  "	var existingFavorite = Db.Single<UserFavoriteTechnologyStack> (x => x.TechnologyStackId == request.TechnologyStackId && x.UserId == session.UserAuthId); " is 152.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Delete,The length of the statement  "	var existingFavorite = Db.Single<UserFavoriteTechnologyStack> (x => x.TechnologyStackId == request.TechnologyStackId && x.UserId == session.UserAuthId); " is 152.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Get,The length of the statement  "	var results = favorites.Count == 0 ? new List<Technology> () : Db.Select (Db.From<Technology> ().Where (x => Sql.In (x.Id' favorites.Select (y => y.TechnologyId)))); " is 165.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Put,The length of the statement  "	var existingFavorite = Db.Single<UserFavoriteTechnology> (x => x.TechnologyId == request.TechnologyId && x.UserId == session.UserAuthId); " is 137.
Long Statement,TechStacks.ServiceInterface,UserFavoriteServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserFavoriteServices.cs,Delete,The length of the statement  "	var existingFavorite = Db.Single<UserFavoriteTechnology> (x => x.TechnologyId == request.TechnologyId && x.UserId == session.UserAuthId); " is 137.
Long Statement,TechStacks.ServiceInterface,UserStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,Any,The length of the statement  "	var userFeed = favTechs.Count == 0 ? GetDefaultFeed () : GetDefaultFeed (favTechs.Select (x => x.TechnologyId).ToList ()); " is 122.
Long Statement,TechStacks.ServiceInterface,UserStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,GetDefaultFeed,The length of the statement  "		q.Join<TechnologyStack' TechnologyChoice> ((ts' tsc) => ts.Id == tsc.TechnologyStackId && Sql.In (tsc.TechnologyId' favTechIds)); " is 129.
Long Statement,TechStacks.ServiceInterface,CachedUserStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,Any,The length of the statement  "	var techStacks = Db.Select (Db.From<TechnologyStack> ().Where (x => x.CreatedBy == request.UserName).OrderByDescending (x => x.Id)); " is 132.
Long Statement,TechStacks.ServiceInterface,CachedUserStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,Any,The length of the statement  "	var favStacks = Db.Select (Db.From<TechnologyStack> ().Join<UserFavoriteTechnologyStack> ().Where<UserFavoriteTechnologyStack> (u => u.UserId == user.Id.ToString ())); " is 167.
Long Statement,TechStacks.ServiceInterface,CachedUserStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,Any,The length of the statement  "	var favTechs = Db.Select (Db.From<Technology> ().Join<UserFavoriteTechnology> ().Where<UserFavoriteTechnology> (u => u.UserId == user.Id.ToString ())); " is 151.
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: for (int i = 0; i < stackNames.Count; i++) {  	var name = stackNames [i];  	if (sb.Length + name.Length + 3 > maxLength)  		break;  	if (i > 0)  		sb.Append ("'");  	sb.Append (" " + name);  }  
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: if (sb.Length + name.Length + 3 > maxLength)  	break;  
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Post,The following statement contains a magic number: if (postUpdate) {  	var url = new ClientTechnology {  		Slug = tech.Slug  	}.ToAbsoluteUri ();  	PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length));  }  
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Post,The following statement contains a magic number: PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length));  
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,The following statement contains a magic number: if (postUpdate) {  	var url = new ClientTechnology {  		Slug = tech.Slug  	}.ToAbsoluteUri ();  	response.ResponseStatus = new ResponseStatus {  		Message = PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length))  	};  }  
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,The following statement contains a magic number: response.ResponseStatus = new ResponseStatus {  	Message = PostTwitterUpdate ("Who's using #{0}? {1}".Fmt (tech.Slug.Replace ("-"' "")' url)' Db.ColumnDistinct<long> (Db.From<TechnologyChoice> ().Where (x => x.TechnologyId == tech.Id).Select (x => x.TechnologyStackId)).ToList ()' maxLength: 140 - (TweetUrlLength - url.Length))  };  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: foreach (var techSlug in techSlugs) {  	var slug = techSlug.Replace ("-"' "");  	if (sb.Length + slug.Length + 3 > maxLength)  		break;  	sb.Append (" #" + slug);  }  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: if (sb.Length + slug.Length + 3 > maxLength)  	break;  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: if (string.IsNullOrEmpty (request.Description) || request.Description.Length < 100)  	throw new ArgumentException ("Summary needs to be a min of 100 chars");  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: if (postUpdate) {  	var url = new ClientTechnologyStack {  		Slug = techStack.Slug  	}.ToAbsoluteUri ();  	PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length));  }  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length));  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: if (string.IsNullOrEmpty (request.Description) || request.Description.Length < 100)  	throw new ArgumentException ("Summary needs to be a min of 100 chars");  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: if (postUpdate) {  	var url = new ClientTechnologyStack {  		Slug = techStack.Slug  	}.ToAbsoluteUri ();  	response.ResponseStatus = new ResponseStatus {  		Message = PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length))  	};  }  
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: response.ResponseStatus = new ResponseStatus {  	Message = PostTwitterUpdate ("{0}'s Stack! {1} ".Fmt (techStack.Name' url)' request.TechnologyIds' maxLength: 140 - (TweetUrlLength - url.Length))  };  
Magic Number,TechStacks.ServiceInterface,TechExtensions,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,GenerateSlug,The following statement contains a magic number: str = str.Substring (0' str.Length <= 45 ? str.Length : 45).Trim ();  
Magic Number,TechStacks.ServiceInterface,TechExtensions,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,GenerateSlug,The following statement contains a magic number: str = str.Substring (0' str.Length <= 45 ? str.Length : 45).Trim ();  
Magic Number,TechStacks.ServiceInterface,TechExtensions,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,RegisterPageView,The following statement contains a magic number: return db.ExecuteSqlAsync ("UPDATE page_stats SET view_count = view_count + 1 WHERE id = @id"' new {  	id  }).ContinueWith (t => {  	var parts = id.Substring (1).SplitOnFirst ('/');  	if (t.Result == 0 && parts.Length == 2) {  		var type = parts [0];  		var slug = parts [1];  		return db.InsertAsync (new PageStats {  			Id = id'  			RefType = type'  			RefSlug = slug'  			ViewCount = 1'  			LastModified = DateTime.UtcNow'  		}).ContinueWith (t2 => (int)t2.Result);  	}  	return t;  }).ContinueWith (_ => db.Dispose ());  
Magic Number,TechStacks.ServiceInterface,TechExtensions,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,RegisterPageView,The following statement contains a magic number: if (t.Result == 0 && parts.Length == 2) {  	var type = parts [0];  	var slug = parts [1];  	return db.InsertAsync (new PageStats {  		Id = id'  		RefType = type'  		RefSlug = slug'  		ViewCount = 1'  		LastModified = DateTime.UtcNow'  	}).ContinueWith (t2 => (int)t2.Result);  }  
Magic Number,TechStacks.ServiceInterface,TechnologyServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The following statement contains a magic number: return new GetAllTechnologiesResponse {  	Results = Db.Select (Db.From<Technology> ().Take (100)).ToList ()  };  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys) {  	var list = map [tier];  	list.Sort ((x' y) => y.StacksCount - x.StacksCount);  	if (list.Count > 5)  		list.RemoveRange (5' list.Count - 5);  }  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys) {  	var list = map [tier];  	list.Sort ((x' y) => y.StacksCount - x.StacksCount);  	if (list.Count > 5)  		list.RemoveRange (5' list.Count - 5);  }  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys) {  	var list = map [tier];  	list.Sort ((x' y) => y.StacksCount - x.StacksCount);  	if (list.Count > 5)  		list.RemoveRange (5' list.Count - 5);  }  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: if (list.Count > 5)  	list.RemoveRange (5' list.Count - 5);  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: if (list.Count > 5)  	list.RemoveRange (5' list.Count - 5);  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: if (list.Count > 5)  	list.RemoveRange (5' list.Count - 5);  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: list.RemoveRange (5' list.Count - 5);  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: list.RemoveRange (5' list.Count - 5);  
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,D:\newReposJune17\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The following statement contains a magic number: return new GetAllTechnologyStacksResponse {  	Results = Db.Select (Db.From<TechnologyStack> ().Take (100))  };  
