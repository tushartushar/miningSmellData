Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,TechStacks.ServiceInterface,TwitterGateway,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TwitterUpdates.cs,PostToUrl,The method has 6 parameters. Parameters: oAuthProvider' url' accessToken' accessTokenSecret' args' acceptType
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "            var updatedTechIds = Db.ExecuteSql("UPDATE page_stats AS p SET ref_id = t.id FROM technology AS t WHERE t.slug = p.ref_slug and p.ref_type = 'tech' AND ref_id = 0"); " is 165.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "            var updatedStackIds = Db.ExecuteSql("UPDATE page_stats AS p SET ref_id = t.id FROM technology_stack AS t WHERE t.slug = p.ref_slug and p.ref_type = 'stack' AND ref_id = 0"); " is 173.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "            var techFavs = Db.Dictionary<long' long>("SELECT technology_id' count(*) FROM user_favorite_technology GROUP BY technology_id"); " is 128.
Long Statement,TechStacks.ServiceInterface,TechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The length of the statement  "            var stackFavs = Db.Dictionary<long' long>("SELECT technology_stack_id' count(*) FROM user_favorite_technology_stack GROUP BY technology_stack_id"); " is 147.
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: for (int i = 0; i < stackNames.Count; i++)              {                  var name = stackNames[i];                  if (sb.Length + name.Length + 3 > maxLength)                      break;                    if (i > 0)                      sb.Append("'");                    sb.Append(" " + name);              }
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Post,The following statement contains a magic number: if (postUpdate)              {                  var url = new ClientTechnology { Slug = tech.Slug }.ToAbsoluteUri();                  PostTwitterUpdate(                      "Who's using #{0}? {1}".Fmt(tech.Slug.Replace("-"' "")' url)'                      Db.ColumnDistinct<long>(Db.From<TechnologyChoice>()                          .Where(x => x.TechnologyId == tech.Id)                          .Select(x => x.TechnologyStackId)).ToList()'                      maxLength: 140 - (TweetUrlLength - url.Length));              }
Magic Number,TechStacks.ServiceInterface,TechnologyServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServicesAdmin.cs,Put,The following statement contains a magic number: if (postUpdate)              {                  var url = new ClientTechnology { Slug = tech.Slug }.ToAbsoluteUri();                  response.ResponseStatus = new ResponseStatus                  {                      Message = PostTwitterUpdate(                          "Who's using #{0}? {1}".Fmt(tech.Slug.Replace("-"' "")' url)'                          Db.ColumnDistinct<long>(Db.From<TechnologyChoice>()                              .Where(x => x.TechnologyId == tech.Id)                              .Select(x => x.TechnologyStackId)).ToList()'                          maxLength: 140 - (TweetUrlLength - url.Length))                  };              }
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,PostTwitterUpdate,The following statement contains a magic number: foreach (var techSlug in techSlugs)              {                  var slug = techSlug.Replace("-"' "");                  if (sb.Length + slug.Length + 3 > maxLength)                      break;                    sb.Append(" #" + slug);              }
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: if (string.IsNullOrEmpty(request.Description) || request.Description.Length < 100)                  throw new ArgumentException("Summary needs to be a min of 100 chars");
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: var postUpdate = AppSettings.EnableTwitterUpdates() && techIds.Count >= 4;
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Post,The following statement contains a magic number: if (postUpdate)              {                  var url = new ClientTechnologyStack { Slug = techStack.Slug }.ToAbsoluteUri();                  PostTwitterUpdate(                      "{0}'s Stack! {1} ".Fmt(techStack.Name' url)'                      request.TechnologyIds'                      maxLength: 140 - (TweetUrlLength - url.Length));              }
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: if (string.IsNullOrEmpty(request.Description) || request.Description.Length < 100)                  throw new ArgumentException("Summary needs to be a min of 100 chars");
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: var postUpdate = AppSettings.EnableTwitterUpdates()                               && techStack.LastStatusUpdate.GetValueOrDefault(DateTime.MinValue) < DateTime.UtcNow.Date                               && techIds.Count >= 4;
Magic Number,TechStacks.ServiceInterface,TechnologyStackServicesAdmin,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServicesAdmin.cs,Put,The following statement contains a magic number: if (postUpdate)              {                  var url = new ClientTechnologyStack { Slug = techStack.Slug }.ToAbsoluteUri();                  response.ResponseStatus = new ResponseStatus                  {                      Message = PostTwitterUpdate(                          "{0}'s Stack! {1} ".Fmt(techStack.Name' url)'                          request.TechnologyIds'                          maxLength: 140 - (TweetUrlLength - url.Length))                  };              }
Magic Number,TechStacks.ServiceInterface,TechExtensions,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,GenerateSlug,The following statement contains a magic number: str = str.Substring(0' str.Length <= 45 ? str.Length : 45).Trim();
Magic Number,TechStacks.ServiceInterface,TechExtensions,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,GenerateSlug,The following statement contains a magic number: str = str.Substring(0' str.Length <= 45 ? str.Length : 45).Trim();
Magic Number,TechStacks.ServiceInterface,TechExtensions,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechExtensions.cs,RegisterPageView,The following statement contains a magic number: return db.ExecuteSqlAsync("UPDATE page_stats SET view_count = view_count + 1 WHERE id = @id"' new { id })                  .ContinueWith(t =>                  {                      var parts = id.Substring(1).SplitOnFirst('/');                      if (t.Result == 0 && parts.Length == 2)                      {                          var type = parts[0];                          var slug = parts[1];                            return db.InsertAsync(new PageStats                          {                              Id = id'                              RefType = type'                              RefSlug = slug'                              ViewCount = 1'                              LastModified = DateTime.UtcNow'                          })                          .ContinueWith(t2 => (int)t2.Result);                      }                        return t;                  }).ContinueWith(_ => db.Dispose());
Magic Number,TechStacks.ServiceInterface,TechnologyServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyServices.cs,Get,The following statement contains a magic number: return new GetAllTechnologiesResponse              {                  Results = Db.Select(Db.From<Technology>().Take(100)).ToList()              };
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys)              {                  var list = map[tier];                  list.Sort((x' y) => y.StacksCount - x.StacksCount);                  if (list.Count > 5)                      list.RemoveRange(5' list.Count - 5);              }
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys)              {                  var list = map[tier];                  list.Sort((x' y) => y.StacksCount - x.StacksCount);                  if (list.Count > 5)                      list.RemoveRange(5' list.Count - 5);              }
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: foreach (var tier in map.Keys)              {                  var list = map[tier];                  list.Sort((x' y) => y.StacksCount - x.StacksCount);                  if (list.Count > 5)                      list.RemoveRange(5' list.Count - 5);              }
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: var response = new OverviewResponse              {                  Created = DateTime.UtcNow'                    LatestTechStacks = Db.GetTechstackDetails(Db.From<TechnologyStack>().OrderByDescending(x => x.LastModified).Limit(20))'                    TopUsers = Db.Select<UserInfo>(                      @"select u.user_name as UserName' u.default_profile_url as AvatarUrl' COUNT(*) as StacksCount                            from technology_stack ts  	                          left join  	                          user_favorite_technology_stack uf on (ts.id = uf.technology_stack_id)  	                          left join  	                          custom_user_auth u on (u.id = ts.owner_id::integer)                            group by u.user_name' u.default_profile_url                            having count(*) > 0                            order by StacksCount desc                            limit 20")'                    TopTechnologies = topTechByCategory                      .OrderByDescending(x => x.StacksCount)                      .Take(50)                      .ToList()'                    PopularTechStacks = Db.Select(                      Db.From<TechnologyStack>()                        .Join<PageStats>((s' p) => s.Id == p.RefId && p.RefType == "stack")                        .OrderByDescending<PageStats>(p => p.ViewCount)                        .Limit(12))'                    TopTechnologiesByTier = map'              };
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: var response = new OverviewResponse              {                  Created = DateTime.UtcNow'                    LatestTechStacks = Db.GetTechstackDetails(Db.From<TechnologyStack>().OrderByDescending(x => x.LastModified).Limit(20))'                    TopUsers = Db.Select<UserInfo>(                      @"select u.user_name as UserName' u.default_profile_url as AvatarUrl' COUNT(*) as StacksCount                            from technology_stack ts  	                          left join  	                          user_favorite_technology_stack uf on (ts.id = uf.technology_stack_id)  	                          left join  	                          custom_user_auth u on (u.id = ts.owner_id::integer)                            group by u.user_name' u.default_profile_url                            having count(*) > 0                            order by StacksCount desc                            limit 20")'                    TopTechnologies = topTechByCategory                      .OrderByDescending(x => x.StacksCount)                      .Take(50)                      .ToList()'                    PopularTechStacks = Db.Select(                      Db.From<TechnologyStack>()                        .Join<PageStats>((s' p) => s.Id == p.RefId && p.RefType == "stack")                        .OrderByDescending<PageStats>(p => p.ViewCount)                        .Limit(12))'                    TopTechnologiesByTier = map'              };
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: var response = new OverviewResponse              {                  Created = DateTime.UtcNow'                    LatestTechStacks = Db.GetTechstackDetails(Db.From<TechnologyStack>().OrderByDescending(x => x.LastModified).Limit(20))'                    TopUsers = Db.Select<UserInfo>(                      @"select u.user_name as UserName' u.default_profile_url as AvatarUrl' COUNT(*) as StacksCount                            from technology_stack ts  	                          left join  	                          user_favorite_technology_stack uf on (ts.id = uf.technology_stack_id)  	                          left join  	                          custom_user_auth u on (u.id = ts.owner_id::integer)                            group by u.user_name' u.default_profile_url                            having count(*) > 0                            order by StacksCount desc                            limit 20")'                    TopTechnologies = topTechByCategory                      .OrderByDescending(x => x.StacksCount)                      .Take(50)                      .ToList()'                    PopularTechStacks = Db.Select(                      Db.From<TechnologyStack>()                        .Join<PageStats>((s' p) => s.Id == p.RefId && p.RefType == "stack")                        .OrderByDescending<PageStats>(p => p.ViewCount)                        .Limit(12))'                    TopTechnologiesByTier = map'              };
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Any,The following statement contains a magic number: var response = new AppOverviewResponse              {                  Created = DateTime.UtcNow'                  AllTiers = GetAllTiers()'                  TopTechnologies = GetTopTechByCategory(minCount: 1)                      .OrderByDescending(x => x.StacksCount)                      .Take(100)                      .ToList()'              };
Magic Number,TechStacks.ServiceInterface,CachedTechnologyStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\TechnologyStackServices.cs,Get,The following statement contains a magic number: return new GetAllTechnologyStacksResponse              {                  Results = Db.Select(Db.From<TechnologyStack>().Take(100))              };
Magic Number,TechStacks.ServiceInterface,UserStackServices,C:\repos\ServiceStackApps_TechStacks\src\TechStacks\TechStacks.ServiceInterface\UserStackServices.cs,GetDefaultFeed,The following statement contains a magic number: var q = Db.From<TechnologyStack>().OrderByDescending(x => x.Id).Limit(20);
