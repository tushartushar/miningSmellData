Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,Cyclomatic complexity of the method is 20
Complex Method,NChanges.Core,Reporter,C:\repos\jdiamond_NChanges\NChanges.Core\Reporter.cs,UpdateExistingTypeMembers,Cyclomatic complexity of the method is 14
Complex Method,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,ReadType,Cyclomatic complexity of the method is 9
Long Statement,NChanges.Core,Project,C:\repos\jdiamond_NChanges\NChanges.Core\Project.cs,WriteSnapshotTarget,The length of the statement  "	xmlWriter.WriteAttributeString ("Command"' string.Format ("$({0}) snapshot \"%({1}.Identity)\" -v=\"%({2})\" -x=\"$({3})\""' NChangesToolPathPropertyName' AssembliesToSnapshotItemName' VersionMetaDataName' TypesToExcludePatternPropertyName)); " is 242.
Long Statement,NChanges.Core,Project,C:\repos\jdiamond_NChanges\NChanges.Core\Project.cs,WriteReportTarget,The length of the statement  "	xmlWriter.WriteAttributeString ("Command"' string.Format ("$({0}) report *-snapshot.xml"' NChangesToolPathPropertyName)); " is 121.
Long Statement,NChanges.Core,Project,C:\repos\jdiamond_NChanges\NChanges.Core\Project.cs,WriteExcelTarget,The length of the statement  "	xmlWriter.WriteAttributeString ("Command"' string.Format ("$({0}) excel *-report.xml -o=\"$({1})\""' NChangesToolPathPropertyName' ExcelOutputPathPropertyName)); " is 161.
Long Statement,NChanges.Core,Project,C:\repos\jdiamond_NChanges\NChanges.Core\Project.cs,WriteCleanTarget,The length of the statement  "	xmlWriter.WriteAttributeString ("Files"' string.Format ("%({0}.Filename)-%({1})-snapshot.xml"' AssembliesToSnapshotItemName' VersionMetaDataName)); " is 147.
Long Statement,NChanges.Core,Project,C:\repos\jdiamond_NChanges\NChanges.Core\Project.cs,WriteCleanTarget,The length of the statement  "	xmlWriter.WriteAttributeString ("Files"' string.Format ("%({0}.Filename)-%({1})-report.xml"' AssembliesToSnapshotItemName' VersionMetaDataName)); " is 145.
Long Statement,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,ReadType,The length of the statement  "		if (MemberIsNotDeclaredOnThisType (member' type) || MemberIsSpecialMethodButNotConstructor (member) || MemberIsSpecialField (member) || MemberIsOverride (member)) { " is 164.
Long Statement,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,MemberIsSpecialField,The length of the statement  "	return (member is FieldInfo) && (((FieldInfo)member).Attributes & FieldAttributes.RTSpecialName) == FieldAttributes.RTSpecialName; " is 130.
Long Statement,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,MemberIsOverride,The length of the statement  "		if ((getMethod == null || (getMethod.IsVirtual && MemberIsOverride (getMethod))) && (setMethod == null || (setMethod.IsVirtual && MemberIsOverride (setMethod)))) { " is 163.
Complex Conditional,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,ReadType,The conditional expression  "MemberIsNotDeclaredOnThisType (member' type) || MemberIsSpecialMethodButNotConstructor (member) || MemberIsSpecialField (member) || MemberIsOverride (member)"  is complex.
Complex Conditional,NChanges.Core,TypeInfo,C:\repos\jdiamond_NChanges\NChanges.Core\TypeInfo.cs,MemberIsOverride,The conditional expression  "(getMethod == null || (getMethod.IsVirtual && MemberIsOverride (getMethod))) && (setMethod == null || (setMethod.IsVirtual && MemberIsOverride (setMethod)))"  is complex.
Magic Number,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following statement contains a magic number: if (m.Success) {  	var parameters = GenericTypeParameterRegex.Replace (m.Groups [2].Value' n => NormalizeTypeName (n.Groups [1].Value));  	parameters = parameters.Replace ("'"' "' ");  	return NormalizeTypeName (m.Groups [1].Value) + "<" + parameters + ">";  }  
Magic Number,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following statement contains a magic number: if (typeName.EndsWith ("[]")) {  	return NormalizeTypeName (typeName.Substring (0' typeName.Length - 2)) + "[]";  }  
Magic Number,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following statement contains a magic number: return NormalizeTypeName (typeName.Substring (0' typeName.Length - 2)) + "[]";  
Magic Number,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following statement contains a magic number: if (typeName.StartsWith ("[") && typeName.EndsWith ("]")) {  	typeName = typeName.Substring (1' typeName.Length - 2);  }  
Magic Number,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following statement contains a magic number: typeName = typeName.Substring (1' typeName.Length - 2);  
Magic Number,NChanges.Core,PadNumbersExtension,C:\repos\jdiamond_NChanges\NChanges.Core\PadNumbersExtension.cs,PadNumbers,The following statement contains a magic number: return NumbersRegex.Replace (value' m => m.Value.PadLeft (10' '0'));  
Missing Default,NChanges.Core,TypeHelpers,C:\repos\jdiamond_NChanges\NChanges.Core\TypeHelpers.cs,NormalizeTypeName,The following switch statement is missing a default case: switch (typeName) {  case "System.Boolean":  	return "bool";  case "System.Byte":  	return "byte";  case "System.SByte":  	return "sbyte";  case "System.Char":  	return "char";  case "System.Decimal":  	return "decimal";  case "System.Double":  	return "double";  case "System.Single":  	return "float";  case "System.Int32":  	return "int";  case "System.UInt32":  	return "uint";  case "System.Int64":  	return "long";  case "System.Object":  	return "object";  case "System.Int16":  	return "short";  case "System.UInt16":  	return "ushort";  case "System.String":  	return "string";  case "System.Void":  	return "void";  }  
