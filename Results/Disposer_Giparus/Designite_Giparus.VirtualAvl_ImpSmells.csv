Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Giparus.VirtualAvl,AvlVirtualProgram,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\AvlVirtualProgram.cs,Initialize,The following statement contains a magic number: _port = 2020;  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: while (true) {  	try {  		lock (Locker)  			if (!_client.Connected) {  				_client.Connect (_server' _port);  			}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	var stream = _client.GetStream ();  	var imei = "123456789012345";  	var imeiBuffer = Encoding.ASCII.GetBytes (imei);  	var memoryStream = new MemoryStream ();  	memoryStream.WriteByte (0);  	memoryStream.WriteByte (15);  	memoryStream.Write (imeiBuffer' 0' imeiBuffer.Length);  	try {  		stream.Write (memoryStream.ToArray ()' 0' (int)memoryStream.Length);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	// Read command after a connection has been established  	var readBuffer = new byte[1024];  	try {  		var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  		var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  		//if (listenerResponse == "0001")  		{  			var path0 = @"..\..\..\SampleData\321666841.avldata";  			var path1 = @"..\..\..\SampleData\400600440.avldata";  			var path2 = @"..\..\..\SampleData\1399292567.avldata";  			var gpsData = File.ReadAllBytes (path0);  			stream.Write (gpsData' 0' gpsData.Length);  		//else if (listenerResponse == "0000")  		}  		{  		}  		Thread.Sleep (1 * 60 * 1000);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: while (true) {  	try {  		lock (Locker)  			if (!_client.Connected) {  				_client.Connect (_server' _port);  			}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	var stream = _client.GetStream ();  	var imei = "123456789012345";  	var imeiBuffer = Encoding.ASCII.GetBytes (imei);  	var memoryStream = new MemoryStream ();  	memoryStream.WriteByte (0);  	memoryStream.WriteByte (15);  	memoryStream.Write (imeiBuffer' 0' imeiBuffer.Length);  	try {  		stream.Write (memoryStream.ToArray ()' 0' (int)memoryStream.Length);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	// Read command after a connection has been established  	var readBuffer = new byte[1024];  	try {  		var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  		var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  		//if (listenerResponse == "0001")  		{  			var path0 = @"..\..\..\SampleData\321666841.avldata";  			var path1 = @"..\..\..\SampleData\400600440.avldata";  			var path2 = @"..\..\..\SampleData\1399292567.avldata";  			var gpsData = File.ReadAllBytes (path0);  			stream.Write (gpsData' 0' gpsData.Length);  		//else if (listenerResponse == "0000")  		}  		{  		}  		Thread.Sleep (1 * 60 * 1000);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: while (true) {  	try {  		lock (Locker)  			if (!_client.Connected) {  				_client.Connect (_server' _port);  			}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	var stream = _client.GetStream ();  	var imei = "123456789012345";  	var imeiBuffer = Encoding.ASCII.GetBytes (imei);  	var memoryStream = new MemoryStream ();  	memoryStream.WriteByte (0);  	memoryStream.WriteByte (15);  	memoryStream.Write (imeiBuffer' 0' imeiBuffer.Length);  	try {  		stream.Write (memoryStream.ToArray ()' 0' (int)memoryStream.Length);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	// Read command after a connection has been established  	var readBuffer = new byte[1024];  	try {  		var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  		var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  		//if (listenerResponse == "0001")  		{  			var path0 = @"..\..\..\SampleData\321666841.avldata";  			var path1 = @"..\..\..\SampleData\400600440.avldata";  			var path2 = @"..\..\..\SampleData\1399292567.avldata";  			var gpsData = File.ReadAllBytes (path0);  			stream.Write (gpsData' 0' gpsData.Length);  		//else if (listenerResponse == "0000")  		}  		{  		}  		Thread.Sleep (1 * 60 * 1000);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: while (true) {  	try {  		lock (Locker)  			if (!_client.Connected) {  				_client.Connect (_server' _port);  			}  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	var stream = _client.GetStream ();  	var imei = "123456789012345";  	var imeiBuffer = Encoding.ASCII.GetBytes (imei);  	var memoryStream = new MemoryStream ();  	memoryStream.WriteByte (0);  	memoryStream.WriteByte (15);  	memoryStream.Write (imeiBuffer' 0' imeiBuffer.Length);  	try {  		stream.Write (memoryStream.ToArray ()' 0' (int)memoryStream.Length);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  	// Read command after a connection has been established  	var readBuffer = new byte[1024];  	try {  		var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  		var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  		//if (listenerResponse == "0001")  		{  			var path0 = @"..\..\..\SampleData\321666841.avldata";  			var path1 = @"..\..\..\SampleData\400600440.avldata";  			var path2 = @"..\..\..\SampleData\1399292567.avldata";  			var gpsData = File.ReadAllBytes (path0);  			stream.Write (gpsData' 0' gpsData.Length);  		//else if (listenerResponse == "0000")  		}  		{  		}  		Thread.Sleep (1 * 60 * 1000);  	}  	catch (Exception ex) {  		Console.WriteLine (ex.Message);  		continue;  	}  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: memoryStream.WriteByte (15);  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: try {  	var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  	var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  	//if (listenerResponse == "0001")  	{  		var path0 = @"..\..\..\SampleData\321666841.avldata";  		var path1 = @"..\..\..\SampleData\400600440.avldata";  		var path2 = @"..\..\..\SampleData\1399292567.avldata";  		var gpsData = File.ReadAllBytes (path0);  		stream.Write (gpsData' 0' gpsData.Length);  	//else if (listenerResponse == "0000")  	}  	{  	}  	Thread.Sleep (1 * 60 * 1000);  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  	continue;  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: try {  	var readCounts = stream.Read (readBuffer' 0' readBuffer.Length);  	var listenerResponse = Encoding.ASCII.GetString (readBuffer' 0' readCounts);  	//if (listenerResponse == "0001")  	{  		var path0 = @"..\..\..\SampleData\321666841.avldata";  		var path1 = @"..\..\..\SampleData\400600440.avldata";  		var path2 = @"..\..\..\SampleData\1399292567.avldata";  		var gpsData = File.ReadAllBytes (path0);  		stream.Write (gpsData' 0' gpsData.Length);  	//else if (listenerResponse == "0000")  	}  	{  	}  	Thread.Sleep (1 * 60 * 1000);  }  catch (Exception ex) {  	Console.WriteLine (ex.Message);  	continue;  }  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: Thread.Sleep (1 * 60 * 1000);  
Magic Number,Giparus.VirtualAvl,VirtualAvl,C:\repos\Disposer_Giparus\Giparus.VirtualAvl\VirtualAvl.cs,StartAmi,The following statement contains a magic number: Thread.Sleep (1 * 60 * 1000);  
