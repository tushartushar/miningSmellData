Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OAuthWebFlowExample.Helpers,StringExtensions,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Helpers\StringExtensions.cs,ToSnakeCase,Cyclomatic complexity of the method is 7
Long Statement,OAuthWebFlowExample.Controllers,SessionsController,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Controllers\SessionsController.cs,Index,The length of the statement  "	var oauthUrl = string.Format ("https://{0}/api/oauth?client_id={1}&scope={2}&redirect_uri={3}"' ConfigurationManager.AppSettings ["StoreDomain"]' ConfigurationManager.AppSettings ["AppId"]' ConfigurationManager.AppSettings ["AppScope"]' callbackUrl); " is 250.
Long Statement,OAuthWebFlowExample.Controllers,SessionsController,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Controllers\SessionsController.cs,Callback,The length of the statement  "	var accessTokenUrl = string.Format ("https://{0}/api/oauth/access_token"' ConfigurationManager.AppSettings ["StoreDomain"]); " is 124.
Long Statement,OAuthWebFlowExample.Controllers,SessionsController,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Controllers\SessionsController.cs,Callback,The length of the statement  "	var sig = CreateSignature (ConfigurationManager.AppSettings ["AppSecret"]' model.Code' ConfigurationManager.AppSettings ["AppId"]' ConfigurationManager.AppSettings ["AppScope"]' callbackUrl.ToLower ()); " is 202.
Magic Number,OAuthWebFlowExample.Helpers,StringExtensions,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Helpers\StringExtensions.cs,ToSnakeCase,The following statement contains a magic number: for (var i = 0; i < input.Length; i++) {  	var isLast = (i == input.Length - 1);  	var isSecondFromLast = (i == input.Length - 2);  	var curr = input [i];  	var next = !isLast ? input [i + 1] : '\0';  	var afterNext = !isSecondFromLast && !isLast ? input [i + 2] : '\0';  	buffer += char.ToLower (curr);  	if (!char.IsDigit (curr) && char.IsUpper (next)) {  		if (char.IsUpper (curr)) {  			if (!isLast && !isSecondFromLast && !char.IsUpper (afterNext))  				buffer += "_";  		} else  			buffer += "_";  	}  	if (!char.IsDigit (curr) && char.IsDigit (next))  		buffer += "_";  	if (char.IsDigit (curr) && !char.IsDigit (next) && !isLast)  		buffer += "_";  }  
Magic Number,OAuthWebFlowExample.Helpers,StringExtensions,D:\newReposJune17\americommerce_ac-rest-api\examples\csharp\OAuthWebFlowExample\OAuthWebFlowExample\Helpers\StringExtensions.cs,ToSnakeCase,The following statement contains a magic number: for (var i = 0; i < input.Length; i++) {  	var isLast = (i == input.Length - 1);  	var isSecondFromLast = (i == input.Length - 2);  	var curr = input [i];  	var next = !isLast ? input [i + 1] : '\0';  	var afterNext = !isSecondFromLast && !isLast ? input [i + 2] : '\0';  	buffer += char.ToLower (curr);  	if (!char.IsDigit (curr) && char.IsUpper (next)) {  		if (char.IsUpper (curr)) {  			if (!isLast && !isSecondFromLast && !char.IsUpper (afterNext))  				buffer += "_";  		} else  			buffer += "_";  	}  	if (!char.IsDigit (curr) && char.IsDigit (next))  		buffer += "_";  	if (char.IsDigit (curr) && !char.IsDigit (next) && !isLast)  		buffer += "_";  }  
