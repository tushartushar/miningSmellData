Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Seek,Cyclomatic complexity of the method is 12
Complex Method,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,Cyclomatic complexity of the method is 8
Long Parameter List,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Pbkdf2,The method has 5 parameters.
Long Parameter List,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,ComputeKey,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Reopen,The method has 5 parameters.
Long Parameter List,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ComputeKey,The method has 7 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,GetEffectivePbkdf2Salt,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,GetStream,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,SMix,The method has 6 parameters.
Long Parameter List,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The method has 9 parameters.
Long Statement,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,Crypt,The length of the statement  "	string result = string.Format ("$2a${0}${1}{2}"' rounds.ToString ("00")' new string (UnixBase64.Encode (saltBytes))' new string (UnixBase64.Encode (crypt))); " is 157.
Long Statement,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Read,The length of the statement  "		throw new ArgumentException ("Can only return " + output.Length.ToString (CultureInfo.InvariantCulture) + " bytes."' "output"); " is 127.
Long Statement,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,CheckRange,The length of the statement  "		throw new ArgumentOutOfRangeException (valueName' string.Format ("Value must be in the range [{0}' {1}]."' minimum' maximum)); " is 126.
Long Statement,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,CheckRange,The length of the statement  "		throw new ArgumentOutOfRangeException (valueName' string.Format ("Length must be in the range [{0}' {1}]."' minimum' maximum)); " is 127.
Long Statement,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The length of the statement  "	return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3]; " is 124.
Long Statement,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The length of the statement  "	return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0]; " is 124.
Magic Number,CryptSharp,Crypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Crypter.cs,SafeEquals,The following statement contains a magic number: return 1 & ((diff - 1) >> 8);  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,GenerateSalt,The following statement contains a magic number: return GenerateSalt (6);  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,GenerateSalt,The following statement contains a magic number: Helper.CheckRange ("rounds"' rounds' 4' 31);  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,GenerateSalt,The following statement contains a magic number: Helper.CheckRange ("rounds"' rounds' 4' 31);  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,GenerateSalt,The following statement contains a magic number: return string.Format ("$2a${0}${1}"' rounds.ToString ("00")' new string (UnixBase64.Encode (GenerateSaltBytes (16))));  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,Crypt,The following statement contains a magic number: if (rounds < 4 || rounds > 31) {  	throw new ArgumentException ("Invalid number of rounds."' "salt");  }  
Magic Number,CryptSharp,BlowfishCrypter,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\BlowfishCrypter.cs,Crypt,The following statement contains a magic number: if (rounds < 4 || rounds > 31) {  	throw new ArgumentException ("Invalid number of rounds."' "salt");  }  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: if (value >= 'A' && value <= 'F') {  	return 10 + (value - 'A');  }  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: return 10 + (value - 'A');  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: if (value >= 'a' && value <= 'f') {  	return 10 + (value - 'a');  }  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: return 10 + (value - 'a');  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: return Pow2Base.Decode (4' Decode' value);  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Decode,The following statement contains a magic number: return Pow2Base.Decode (4' Decode' value' bitsToDecode);  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Encode,The following statement contains a magic number: return Pow2Base.Encode (4' Encode' value);  
Magic Number,CryptSharp.Utility,HexBase16,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\HexBase16.cs,Encode,The following statement contains a magic number: return Pow2Base.Encode (6' Encode' value' bitsToEncode);  
Magic Number,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Reopen,The following statement contains a magic number: Helper.CheckRange ("salt"' salt' 0' int.MaxValue - 4);  
Magic Number,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,Reopen,The following statement contains a magic number: _saltBuf = new byte[salt.Length + 4];  
Magic Number,CryptSharp.Utility,Pbkdf2,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pbkdf2.cs,ComputeBlock,The following statement contains a magic number: Helper.UInt32ToBytes (pos' _saltBuf' _saltBuf.Length - 4);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: Helper.CheckRange ("bitsPerChar"' bitsPerChar' 1' 8);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: Helper.CheckRange ("bitsPerChar"' bitsPerChar' 1' 8);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: Helper.CheckRange ("bitsToDecode"' bitsToDecode' 0' int.MaxValue - 7);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: using (IEnumerator<char> e = value.GetEnumerator ()) {  	byte[] bytes = new byte[(bitsToDecode + 7) / 8];  	int j = 0' bits = 0' buffer = 0;  	while (bitsToDecode > 0) {  		while (bits < 8) {  			if (!e.MoveNext ()) {  				break;  			}  			bits += bitsPerChar;  			buffer <<= bitsPerChar;  			buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  		}  		int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  		bits -= chunk;  		bitsToDecode -= 8;  		int eightBit = buffer >> bits;  		buffer ^= eightBit << bits;  		bytes [j++] = (byte)(eightBit << (8 - chunk));  	}  	Debug.Assert (j == bytes.Length);  	return bytes;  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: while (bitsToDecode > 0) {  	while (bits < 8) {  		if (!e.MoveNext ()) {  			break;  		}  		bits += bitsPerChar;  		buffer <<= bitsPerChar;  		buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  	}  	int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  	bits -= chunk;  	bitsToDecode -= 8;  	int eightBit = buffer >> bits;  	buffer ^= eightBit << bits;  	bytes [j++] = (byte)(eightBit << (8 - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: while (bitsToDecode > 0) {  	while (bits < 8) {  		if (!e.MoveNext ()) {  			break;  		}  		bits += bitsPerChar;  		buffer <<= bitsPerChar;  		buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  	}  	int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  	bits -= chunk;  	bitsToDecode -= 8;  	int eightBit = buffer >> bits;  	buffer ^= eightBit << bits;  	bytes [j++] = (byte)(eightBit << (8 - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: while (bitsToDecode > 0) {  	while (bits < 8) {  		if (!e.MoveNext ()) {  			break;  		}  		bits += bitsPerChar;  		buffer <<= bitsPerChar;  		buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  	}  	int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  	bits -= chunk;  	bitsToDecode -= 8;  	int eightBit = buffer >> bits;  	buffer ^= eightBit << bits;  	bytes [j++] = (byte)(eightBit << (8 - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: while (bitsToDecode > 0) {  	while (bits < 8) {  		if (!e.MoveNext ()) {  			break;  		}  		bits += bitsPerChar;  		buffer <<= bitsPerChar;  		buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  	}  	int chunk = Math.Min (8' Math.Min (bits' bitsToDecode));  	bits -= chunk;  	bitsToDecode -= 8;  	int eightBit = buffer >> bits;  	buffer ^= eightBit << bits;  	bytes [j++] = (byte)(eightBit << (8 - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: while (bits < 8) {  	if (!e.MoveNext ()) {  		break;  	}  	bits += bitsPerChar;  	buffer <<= bitsPerChar;  	buffer |= decodeCallback (e.Current) & ((1 << bitsPerChar) - 1);  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: bitsToDecode -= 8;  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Decode,The following statement contains a magic number: bytes [j++] = (byte)(eightBit << (8 - chunk));  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: Helper.CheckRange ("value"' value' 0' int.MaxValue / 8);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: return Encode (bitsPerChar' encodeCallback' value' value.Length * 8);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: Helper.CheckRange ("bitsPerChar"' bitsPerChar' 1' 8);  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: while (bitsToEncode > 0) {  	if (bits < 6 && i < value.Length) {  		bits += 8;  		buffer <<= 8;  		buffer |= value [i++];  	}  	int chunk = Math.Min (bitsPerChar' Math.Min (bits' bitsToEncode));  	bits -= chunk;  	bitsToEncode -= bitsPerChar;  	int pow2Bits = buffer >> bits;  	buffer ^= pow2Bits << bits;  	chars [j++] = encodeCallback (pow2Bits << (bitsPerChar - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: while (bitsToEncode > 0) {  	if (bits < 6 && i < value.Length) {  		bits += 8;  		buffer <<= 8;  		buffer |= value [i++];  	}  	int chunk = Math.Min (bitsPerChar' Math.Min (bits' bitsToEncode));  	bits -= chunk;  	bitsToEncode -= bitsPerChar;  	int pow2Bits = buffer >> bits;  	buffer ^= pow2Bits << bits;  	chars [j++] = encodeCallback (pow2Bits << (bitsPerChar - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: while (bitsToEncode > 0) {  	if (bits < 6 && i < value.Length) {  		bits += 8;  		buffer <<= 8;  		buffer |= value [i++];  	}  	int chunk = Math.Min (bitsPerChar' Math.Min (bits' bitsToEncode));  	bits -= chunk;  	bitsToEncode -= bitsPerChar;  	int pow2Bits = buffer >> bits;  	buffer ^= pow2Bits << bits;  	chars [j++] = encodeCallback (pow2Bits << (bitsPerChar - chunk));  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: if (bits < 6 && i < value.Length) {  	bits += 8;  	buffer <<= 8;  	buffer |= value [i++];  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: if (bits < 6 && i < value.Length) {  	bits += 8;  	buffer <<= 8;  	buffer |= value [i++];  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: if (bits < 6 && i < value.Length) {  	bits += 8;  	buffer <<= 8;  	buffer |= value [i++];  }  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: bits += 8;  
Magic Number,CryptSharp.Utility,Pow2Base,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Pow2Base.cs,Encode,The following statement contains a magic number: buffer <<= 8;  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,R,The following statement contains a magic number: return (a << b) | (a >> (32 - b));  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: if (rounds < 1 || rounds > 20 || (rounds & 1) == 1) {  	throw new ArgumentOutOfRangeException ("rounds");  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: try {  	int i;  	for (i = 0; i < 16; i++) {  		x [i] = input [i + inputOffset];  	}  	for (i = rounds; i > 0; i -= 2) {  		x [4] ^= R (x [0] + x [12]' 7);  		x [8] ^= R (x [4] + x [0]' 9);  		x [12] ^= R (x [8] + x [4]' 13);  		x [0] ^= R (x [12] + x [8]' 18);  		x [9] ^= R (x [5] + x [1]' 7);  		x [13] ^= R (x [9] + x [5]' 9);  		x [1] ^= R (x [13] + x [9]' 13);  		x [5] ^= R (x [1] + x [13]' 18);  		x [14] ^= R (x [10] + x [6]' 7);  		x [2] ^= R (x [14] + x [10]' 9);  		x [6] ^= R (x [2] + x [14]' 13);  		x [10] ^= R (x [6] + x [2]' 18);  		x [3] ^= R (x [15] + x [11]' 7);  		x [7] ^= R (x [3] + x [15]' 9);  		x [11] ^= R (x [7] + x [3]' 13);  		x [15] ^= R (x [11] + x [7]' 18);  		x [1] ^= R (x [0] + x [3]' 7);  		x [2] ^= R (x [1] + x [0]' 9);  		x [3] ^= R (x [2] + x [1]' 13);  		x [0] ^= R (x [3] + x [2]' 18);  		x [6] ^= R (x [5] + x [4]' 7);  		x [7] ^= R (x [6] + x [5]' 9);  		x [4] ^= R (x [7] + x [6]' 13);  		x [5] ^= R (x [4] + x [7]' 18);  		x [11] ^= R (x [10] + x [9]' 7);  		x [8] ^= R (x [11] + x [10]' 9);  		x [9] ^= R (x [8] + x [11]' 13);  		x [10] ^= R (x [9] + x [8]' 18);  		x [12] ^= R (x [15] + x [14]' 7);  		x [13] ^= R (x [12] + x [15]' 9);  		x [14] ^= R (x [13] + x [12]' 13);  		x [15] ^= R (x [14] + x [13]' 18);  	}  	for (i = 0; i < 16; i++) {  		output [i + outputOffset] = x [i] + input [i + inputOffset];  	}  } catch {  	Helper.CheckNull ("input"' input);  	Helper.CheckBounds ("input"' input' inputOffset' 16);  	Helper.CheckNull ("output"' output);  	Helper.CheckBounds ("output"' output' outputOffset' 16);  	Helper.CheckNull ("x"' x);  	Helper.CheckBounds ("x"' x' 0' 16);  	throw;  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = 0; i < 16; i++) {  	x [i] = input [i + inputOffset];  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = rounds; i > 0; i -= 2) {  	x [4] ^= R (x [0] + x [12]' 7);  	x [8] ^= R (x [4] + x [0]' 9);  	x [12] ^= R (x [8] + x [4]' 13);  	x [0] ^= R (x [12] + x [8]' 18);  	x [9] ^= R (x [5] + x [1]' 7);  	x [13] ^= R (x [9] + x [5]' 9);  	x [1] ^= R (x [13] + x [9]' 13);  	x [5] ^= R (x [1] + x [13]' 18);  	x [14] ^= R (x [10] + x [6]' 7);  	x [2] ^= R (x [14] + x [10]' 9);  	x [6] ^= R (x [2] + x [14]' 13);  	x [10] ^= R (x [6] + x [2]' 18);  	x [3] ^= R (x [15] + x [11]' 7);  	x [7] ^= R (x [3] + x [15]' 9);  	x [11] ^= R (x [7] + x [3]' 13);  	x [15] ^= R (x [11] + x [7]' 18);  	x [1] ^= R (x [0] + x [3]' 7);  	x [2] ^= R (x [1] + x [0]' 9);  	x [3] ^= R (x [2] + x [1]' 13);  	x [0] ^= R (x [3] + x [2]' 18);  	x [6] ^= R (x [5] + x [4]' 7);  	x [7] ^= R (x [6] + x [5]' 9);  	x [4] ^= R (x [7] + x [6]' 13);  	x [5] ^= R (x [4] + x [7]' 18);  	x [11] ^= R (x [10] + x [9]' 7);  	x [8] ^= R (x [11] + x [10]' 9);  	x [9] ^= R (x [8] + x [11]' 13);  	x [10] ^= R (x [9] + x [8]' 18);  	x [12] ^= R (x [15] + x [14]' 7);  	x [13] ^= R (x [12] + x [15]' 9);  	x [14] ^= R (x [13] + x [12]' 13);  	x [15] ^= R (x [14] + x [13]' 18);  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: i -= 2
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [0] + x [12]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [0] + x [12]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [0] + x [12]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [4] + x [0]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [4] + x [0]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [4] + x [0]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [8] + x [4]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [8] + x [4]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [8] + x [4]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [8] + x [4]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [12] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [12] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [12] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [5] + x [1]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [5] + x [1]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [5] + x [1]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [9] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [9] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [9] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [9] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [1] ^= R (x [13] + x [9]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [1] ^= R (x [13] + x [9]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [1] ^= R (x [13] + x [9]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [1] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [1] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [1] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [10] + x [6]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [10] + x [6]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [10] + x [6]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [10] + x [6]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [14] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [14] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [14] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [14] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [2] + x [14]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [2] + x [14]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [2] + x [14]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [2] + x [14]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [6] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [6] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [6] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [6] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [15] + x [11]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [15] + x [11]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [15] + x [11]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [15] + x [11]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [3] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [3] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [3] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [3] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [7] + x [3]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [7] + x [3]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [7] + x [3]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [7] + x [3]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [11] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [11] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [11] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [11] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [1] ^= R (x [0] + x [3]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [1] ^= R (x [0] + x [3]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [1] + x [0]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [2] ^= R (x [1] + x [0]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [2] + x [1]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [2] + x [1]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [3] ^= R (x [2] + x [1]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [3] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [3] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [0] ^= R (x [3] + x [2]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [5] + x [4]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [5] + x [4]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [5] + x [4]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [6] ^= R (x [5] + x [4]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [6] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [6] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [6] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [7] ^= R (x [6] + x [5]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [7] + x [6]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [7] + x [6]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [7] + x [6]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [4] ^= R (x [7] + x [6]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [4] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [4] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [4] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [5] ^= R (x [4] + x [7]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [10] + x [9]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [10] + x [9]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [10] + x [9]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [11] ^= R (x [10] + x [9]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [11] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [11] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [11] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [8] ^= R (x [11] + x [10]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [8] + x [11]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [8] + x [11]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [8] + x [11]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [9] ^= R (x [8] + x [11]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [9] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [9] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [9] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [10] ^= R (x [9] + x [8]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [15] + x [14]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [15] + x [14]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [15] + x [14]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [12] ^= R (x [15] + x [14]' 7);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [12] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [12] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [12] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [13] ^= R (x [12] + x [15]' 9);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [13] + x [12]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [13] + x [12]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [13] + x [12]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [14] ^= R (x [13] + x [12]' 13);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [14] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [14] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [14] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: x [15] ^= R (x [14] + x [13]' 18);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: for (i = 0; i < 16; i++) {  	output [i + outputOffset] = x [i] + input [i + inputOffset];  }  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: Helper.CheckBounds ("input"' input' inputOffset' 16);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: Helper.CheckBounds ("output"' output' outputOffset' 16);  
Magic Number,CryptSharp.Utility,Salsa20Core,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Salsa20Core.cs,Compute,The following statement contains a magic number: Helper.CheckBounds ("x"' x' 0' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The following statement contains a magic number: Helper.CheckRange ("blockSize"' blockSize' 1' int.MaxValue / 32);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The following statement contains a magic number: for (int i = 0; i < B0.Length; i++) {  	B0 [i] = Helper.BytesToUInt32LE (B' i * 4);  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The following statement contains a magic number: B0 [i] = Helper.BytesToUInt32LE (B' i * 4);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The following statement contains a magic number: for (int i = 0; i < B0.Length; i++) {  	Helper.UInt32ToBytesLE (B0 [i]' B' i * 4);  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,MFcrypt,The following statement contains a magic number: Helper.UInt32ToBytesLE (B0 [i]' B' i * 4);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: while (true) {  	int j = Interlocked.Increment (ref current) - 1;  	if (j >= parallel) {  		break;  	}  	SMix (B0' j * MFLen / 4' B0' j * MFLen / 4' (uint)cost' blockSize);  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: while (true) {  	int j = Interlocked.Increment (ref current) - 1;  	if (j >= parallel) {  		break;  	}  	SMix (B0' j * MFLen / 4' B0' j * MFLen / 4' (uint)cost' blockSize);  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: SMix (B0' j * MFLen / 4' B0' j * MFLen / 4' (uint)cost' blockSize);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: SMix (B0' j * MFLen / 4' B0' j * MFLen / 4' (uint)cost' blockSize);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: for (int i = 0; i < threads.Length; i++) {  	(threads [i] = new Thread (workerThread' 8192)).Start ();  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,ThreadSMixCalls,The following statement contains a magic number: (threads [i] = new Thread (workerThread' 8192)).Start ();  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,SMix,The following statement contains a magic number: for (uint i = 0; i < N; i++) {  	uint j = x [Bs - 16] & Nmask;  	uint[] vj = v [j];  	for (int k = 0; k < scratchZ.Length; k++) {  		scratchZ [k] = x [k] ^ vj [k];  	}  	BlockMix (scratchZ' 0' x' 0' scratchX' scratchY' scratch1' scratch2' r);  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Array.Copy (B' (2 * r - 1) * 16' x' 0' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Array.Copy (B' (2 * r - 1) * 16' x' 0' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Array.Copy (B' (2 * r - 1) * 16' x' 0' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: for (int i = 0; i < r; i++) {  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m' 16);  	k += 16;  	for (int j = 0; j < scratch1.Length; j++) {  		scratch1 [j] = x [j] ^ B [j + k];  	}  	Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  	Array.Copy (x' 0' y' m + n' 16);  	k += 16;  	m += 16;  }  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Array.Copy (x' 0' y' m' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: k += 16;  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Salsa20Core.Compute (8' scratch1' 0' x' 0' scratch2);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: Array.Copy (x' 0' y' m + n' 16);  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: k += 16;  
Magic Number,CryptSharp.Utility,SCrypt,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\SCrypt.cs,BlockMix,The following statement contains a magic number: m += 16;  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '.' || value == '=') {  	return 0;  } else if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '.' || value == '=') {  	return 0;  } else if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '.' || value == '=') {  	return 0;  } else if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value == '/') {  	return 1;  } else if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= 'A' && value <= 'Z') {  	return 2 + (value - 'A');  } else if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: return 2 + (value - 'A');  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= 'a' && value <= 'z') {  	return 28 + (value - 'a');  } else if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: return 28 + (value - 'a');  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: if (value >= '0' && value <= '9') {  	return 54 + (value - '0');  } else {  	return 0;  }  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: return 54 + (value - '0');  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: return Pow2Base.Decode (6' Decode' value);  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Decode,The following statement contains a magic number: return Pow2Base.Decode (6' Decode' value' bitsToDecode);  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Encode,The following statement contains a magic number: return Pow2Base.Encode (6' Encode' value);  
Magic Number,CryptSharp.Utility,UnixBase64,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\UnixBase64.cs,Encode,The following statement contains a magic number: return Pow2Base.Encode (6' Encode' value' bitsToEncode);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Array.Resize (ref magicBytes' (magicBytes.Length + 7) / 8 * 8);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Array.Resize (ref magicBytes' (magicBytes.Length + 7) / 8 * 8);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Array.Resize (ref magicBytes' (magicBytes.Length + 7) / 8 * 8);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Magic = new uint[(magicBytes.Length + 3) / 4];  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Magic = new uint[(magicBytes.Length + 3) / 4];  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: for (int i = 0; i < Magic.Length; i++) {  	Magic [i] = Helper.BytesToUInt32 (magicBytes' i * 4);  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: Magic [i] = Helper.BytesToUInt32 (magicBytes' i * 4);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: S = new[] {  	(uint[])S0 [0].Clone ()'  	(uint[])S0 [1].Clone ()'  	(uint[])S0 [2].Clone ()'  	(uint[])S0 [3].Clone ()  };  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BlowfishCipher,The following statement contains a magic number: S = new[] {  	(uint[])S0 [0].Clone ()'  	(uint[])S0 [1].Clone ()'  	(uint[])S0 [2].Clone ()'  	(uint[])S0 [3].Clone ()  };  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,Create,The following statement contains a magic number: Helper.CheckRange ("key"' key' 4' 56);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,Create,The following statement contains a magic number: Helper.CheckRange ("key"' key' 4' 56);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CreateEks,The following statement contains a magic number: Helper.CheckRange ("key"' key' 1' 72);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CreateEks,The following statement contains a magic number: Helper.CheckRange ("salt"' salt' 16' 16);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CreateEks,The following statement contains a magic number: Helper.CheckRange ("salt"' salt' 16' 16);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CreateEks,The following statement contains a magic number: Helper.CheckRange ("cost"' cost' 4' 31);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CreateEks,The following statement contains a magic number: Helper.CheckRange ("cost"' cost' 4' 31);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: for (int j = 0; j < magic.Length; j += 2) {  	for (int i = 0; i < 64; i++) {  		Encipher (ref magic [j]' ref magic [j + 1]);  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: for (int j = 0; j < magic.Length; j += 2) {  	for (int i = 0; i < 64; i++) {  		Encipher (ref magic [j]' ref magic [j + 1]);  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: j += 2
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	Encipher (ref magic [j]' ref magic [j + 1]);  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: for (int i = 0; i < magic.Length; i++) {  	Helper.UInt32ToBytes (magic [i]' magicBytes' i * 4);  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,BCrypt,The following statement contains a magic number: Helper.UInt32ToBytes (magic [i]' magicBytes' i * 4);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i++) {  	data = 0x00000000;  	for (k = 0; k < 4; k++) {  		data = (data << 8) | key [j];  		if (++j >= key.Length) {  			j = 0;  		}  	}  	p [i] = p [i] ^ data;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i++) {  	data = 0x00000000;  	for (k = 0; k < 4; k++) {  		data = (data << 8) | key [j];  		if (++j >= key.Length) {  			j = 0;  		}  	}  	p [i] = p [i] ^ data;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (k = 0; k < 4; k++) {  	data = (data << 8) | key [j];  	if (++j >= key.Length) {  		j = 0;  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (k = 0; k < 4; k++) {  	data = (data << 8) | key [j];  	if (++j >= key.Length) {  		j = 0;  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: data = (data << 8) | key [j];  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i += 4) {  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	p [i + 0] = datal;  	p [i + 1] = datar;  	if (i + 2 == p.Length) {  		break;  	}  	// 18 here  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	p [i + 2] = datal;  	p [i + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i += 4) {  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	p [i + 0] = datal;  	p [i + 1] = datar;  	if (i + 2 == p.Length) {  		break;  	}  	// 18 here  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	p [i + 2] = datal;  	p [i + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i += 4) {  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	p [i + 0] = datal;  	p [i + 1] = datar;  	if (i + 2 == p.Length) {  		break;  	}  	// 18 here  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	p [i + 2] = datal;  	p [i + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < p.Length; i += 4) {  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	p [i + 0] = datal;  	p [i + 1] = datar;  	if (i + 2 == p.Length) {  		break;  	}  	// 18 here  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	p [i + 2] = datal;  	p [i + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: i += 4
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: if (i + 2 == p.Length) {  	break;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: p [i + 2] = datal;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: p [i + 3] = datar;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < s.Length; i++) {  	uint[] sb = s [i];  	for (j = 0; j < sb.Length; j += 4) {  		datal ^= saltL1;  		datar ^= saltR1;  		Encipher (ref datal' ref datar);  		sb [j + 0] = datal;  		sb [j + 1] = datar;  		datal ^= saltL0;  		datar ^= saltR0;  		Encipher (ref datal' ref datar);  		sb [j + 2] = datal;  		sb [j + 3] = datar;  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < s.Length; i++) {  	uint[] sb = s [i];  	for (j = 0; j < sb.Length; j += 4) {  		datal ^= saltL1;  		datar ^= saltR1;  		Encipher (ref datal' ref datar);  		sb [j + 0] = datal;  		sb [j + 1] = datar;  		datal ^= saltL0;  		datar ^= saltR0;  		Encipher (ref datal' ref datar);  		sb [j + 2] = datal;  		sb [j + 3] = datar;  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (i = 0; i < s.Length; i++) {  	uint[] sb = s [i];  	for (j = 0; j < sb.Length; j += 4) {  		datal ^= saltL1;  		datar ^= saltR1;  		Encipher (ref datal' ref datar);  		sb [j + 0] = datal;  		sb [j + 1] = datar;  		datal ^= saltL0;  		datar ^= saltR0;  		Encipher (ref datal' ref datar);  		sb [j + 2] = datal;  		sb [j + 3] = datar;  	}  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (j = 0; j < sb.Length; j += 4) {  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	sb [j + 0] = datal;  	sb [j + 1] = datar;  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	sb [j + 2] = datal;  	sb [j + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (j = 0; j < sb.Length; j += 4) {  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	sb [j + 0] = datal;  	sb [j + 1] = datar;  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	sb [j + 2] = datal;  	sb [j + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: for (j = 0; j < sb.Length; j += 4) {  	datal ^= saltL1;  	datar ^= saltR1;  	Encipher (ref datal' ref datar);  	sb [j + 0] = datal;  	sb [j + 1] = datar;  	datal ^= saltL0;  	datar ^= saltR0;  	Encipher (ref datal' ref datar);  	sb [j + 2] = datal;  	sb [j + 3] = datar;  }  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: j += 4
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: sb [j + 2] = datal;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,ExpandKey,The following statement contains a magic number: sb [j + 3] = datar;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,F,The following statement contains a magic number: x >>= 8;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,F,The following statement contains a magic number: x >>= 8;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,F,The following statement contains a magic number: x >>= 8;  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,F,The following statement contains a magic number: y = y ^ S [2] [c];  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,F,The following statement contains a magic number: y = y + S [3] [d];  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CheckCipherBuffers,The following statement contains a magic number: Helper.CheckBounds ("inputBuffer"' inputBuffer' inputOffset' 8);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,CheckCipherBuffers,The following statement contains a magic number: Helper.CheckBounds ("outputBuffer"' outputBuffer' outputOffset' 8);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,Encipher,The following statement contains a magic number: Helper.UInt32ToBytes (xr' outputBuffer' outputOffset + 4);  
Magic Number,CryptSharp.Utility,BlowfishCipher,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\BlowfishCipher.cs,Decipher,The following statement contains a magic number: Helper.UInt32ToBytes (xr' outputBuffer' outputOffset + 4);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The following statement contains a magic number: return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The following statement contains a magic number: return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The following statement contains a magic number: return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The following statement contains a magic number: return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32,The following statement contains a magic number: return (uint)bytes [offset + 0] << 24 | (uint)bytes [offset + 1] << 16 | (uint)bytes [offset + 2] << 8 | bytes [offset + 3];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The following statement contains a magic number: return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The following statement contains a magic number: return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The following statement contains a magic number: return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The following statement contains a magic number: return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,BytesToUInt32LE,The following statement contains a magic number: return (uint)bytes [offset + 3] << 24 | (uint)bytes [offset + 2] << 16 | (uint)bytes [offset + 1] << 8 | bytes [offset + 0];  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytes,The following statement contains a magic number: bytes [offset + 0] = (byte)(value >> 24);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytes,The following statement contains a magic number: bytes [offset + 1] = (byte)(value >> 16);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytes,The following statement contains a magic number: bytes [offset + 2] = (byte)(value >> 8);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytes,The following statement contains a magic number: bytes [offset + 2] = (byte)(value >> 8);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytes,The following statement contains a magic number: bytes [offset + 3] = (byte)(value);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytesLE,The following statement contains a magic number: bytes [offset + 3] = (byte)(value >> 24);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytesLE,The following statement contains a magic number: bytes [offset + 3] = (byte)(value >> 24);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytesLE,The following statement contains a magic number: bytes [offset + 2] = (byte)(value >> 16);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytesLE,The following statement contains a magic number: bytes [offset + 2] = (byte)(value >> 16);  
Magic Number,CryptSharp.Utility,Helper,F:\newReposMay17\ChrisMcKee_cryptsharp\CryptSharp\Utility\Helper.cs,UInt32ToBytesLE,The following statement contains a magic number: bytes [offset + 1] = (byte)(value >> 8);  
