Implementation smell,Namespace,Class,File,Method,Description
Magic Number,FunWithNinject.Conventions,ConventionsTests,C:\repos\jquintus_spikes\ConsoleApps\FunWithSpikes\FunWithNinject\Conventions\ConventionsTests.cs,Bind_ResolveGenericType_Works,The following statement contains a magic number: using (var kernel = new StandardKernel())              {                  kernel.Bind(k => k.FromThisAssembly()                                    .SelectAllClasses()                                    .InNamespaceOf<ConventionsTests>()                                    .BindAllInterfaces()                                    .Configure(b => b.InSingletonScope()));                    kernel.Bind<int>().ToConstant(27);                  kernel.Bind<string>().ToConstant("twenty seven");                    // Act                  var generic = kernel.Get<IGeneric<int' string>>();                    // Assemble                  Assert.AreEqual(27' generic.FirstProp);                  Assert.AreEqual("twenty seven"' generic.SecondProp);              }
Magic Number,FunWithNinject.Conventions,ConventionsTests,C:\repos\jquintus_spikes\ConsoleApps\FunWithSpikes\FunWithNinject\Conventions\ConventionsTests.cs,Bind_ResolveGenericType_Works,The following statement contains a magic number: using (var kernel = new StandardKernel())              {                  kernel.Bind(k => k.FromThisAssembly()                                    .SelectAllClasses()                                    .InNamespaceOf<ConventionsTests>()                                    .BindAllInterfaces()                                    .Configure(b => b.InSingletonScope()));                    kernel.Bind<int>().ToConstant(27);                  kernel.Bind<string>().ToConstant("twenty seven");                    // Act                  var generic = kernel.Get<IGeneric<int' string>>();                    // Assemble                  Assert.AreEqual(27' generic.FirstProp);                  Assert.AreEqual("twenty seven"' generic.SecondProp);              }
Magic Number,FunWithNinject.Factories,FactoryTests,C:\repos\jquintus_spikes\ConsoleApps\FunWithSpikes\FunWithNinject\Factories\FactoryTests.cs,FactoryDoesNotPassParametersToSubDependency,The following statement contains a magic number: using (var kernel = new StandardKernel())              {                  // Assemble                  kernel.Bind<IFoo>().To<Foo>();                  kernel.Bind<IBar>().To<Bar>();                    var factory = kernel.Get<Func<int' IFoo>>();                    // Act                  var foo = factory(7);              }
Magic Number,FunWithNinject.Interception,SimpleInterceptionTest,C:\repos\jquintus_spikes\ConsoleApps\FunWithSpikes\FunWithNinject\Interception\SimpleInterceptionTest.cs,InterceptWithAttribute_InteceptionSucceeds,The following statement contains a magic number: using (var k = new StandardKernel())              {                  k.Bind<IFoo>().To<AttributedFoo>();                    // Act                  var foo = k.Get<IFoo>();                    // Assert                  Assert.AreEqual(606' foo.Bar("Hello"));              }
Magic Number,FunWithNinject.OpenGenerics,OpenGenericsTests,C:\repos\jquintus_spikes\ConsoleApps\FunWithSpikes\FunWithNinject\OpenGenerics\OpenGenericsTests.cs,OpenGenericBinding,The following statement contains a magic number: using (var k = new StandardKernel())              {                  // Assemble                  k.Bind(typeof(IAutoCache<>)).To(typeof(AutoCache<>));                  k.Bind < IProvider<int>>().To<IntProvider>();                    // Act                  var dependsOn = k.Get<DependsOnCachedInt>();                    // Assert                  Assert.AreEqual(42' dependsOn.CachedValue);              }
