Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WebSharp.Handlers,StaticContentHandler,C:\repos\SirCmpwn_WebSharp\WebSharp\Handlers\StaticContentHandler.cs,Serve,Cyclomatic complexity of the method is 8
Long Statement,WebSharp.Handlers,StaticContentHandler,C:\repos\SirCmpwn_WebSharp\WebSharp\Handlers\StaticContentHandler.cs,Serve,The length of the statement  "            if (Path.IsPathRooted(path)) path = path.Substring(path.IndexOfAny(new[] { Path.DirectorySeparatorChar' '/'' '\\' }) + 1); " is 122.
Long Statement,WebSharp.Handlers,StaticContentHandler,C:\repos\SirCmpwn_WebSharp\WebSharp\Handlers\StaticContentHandler.cs,CanResolve,The length of the statement  "            if (Path.IsPathRooted(path)) path = path.Substring(path.IndexOfAny(new[] { Path.DirectorySeparatorChar' '/'' '\\' }) + 1); " is 122.
Long Statement,WebSharp,HttpServer,C:\repos\SirCmpwn_WebSharp\WebSharp\HttpServer.cs,ListenerCallback,The length of the statement  "                writer.WriteLine("No request handler is registered with this HttpServer instance. Set HttpServer.Request to a RequestHandler delegate."); " is 137.
Magic Number,WebSharp.Handlers,StaticContentHandler,C:\repos\SirCmpwn_WebSharp\WebSharp\Handlers\StaticContentHandler.cs,Serve,The following statement contains a magic number: if (request.Headers.Any(h => h.Name == "Range"))              {                  //response.StatusCode = 206; // Breaks things for some unknown reason' quite infuriating                  //response.StatusDescription = "Partial Content";                  var range = request.Headers["Range"].Value;                  var type = range.Remove(range.IndexOf("="' StringComparison.Ordinal));                  if (type != "bytes")                  {                      response.StatusCode = 400;                      response.StatusDescription = "Bad Request";                      return;                  }                  range = range.Substring(range.IndexOf("="' StringComparison.Ordinal) + 1);                  var rangeParts = range.Split('-');                  long start = int.Parse(rangeParts[0]);                  long end;                  if (!long.TryParse(rangeParts[1]' out end))                      end = length;                  length = end - start;                  response.AddHeader("Content-Range"' string.Format("bytes {0}-{1}/{2}"' start' end' length));                  stream.Seek(start' SeekOrigin.Begin);              }
Magic Number,WebSharp,HttpServer,C:\repos\SirCmpwn_WebSharp\WebSharp\HttpServer.cs,HandleException,The following statement contains a magic number: if (e is HttpException)                  response.StatusCode = (e as HttpException).StatusCode;              else                  response.StatusCode = 500;
