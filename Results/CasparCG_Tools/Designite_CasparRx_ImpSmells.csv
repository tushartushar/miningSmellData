Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,CasparRx,Version,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Version,The method has 5 parameters. Parameters: gen' maj' min' rev' tag
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.client = new TcpClient(this.host' this.port) { ReceiveTimeout = 3000' SendTimeout = 3000  };
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.client = new TcpClient(this.host' this.port) { ReceiveTimeout = 3000' SendTimeout = 3000  };
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.AsyncSend("VERSION")                      .Select(x =>                      {                          var exp = new Regex(@"(\d+)\.(\d+)\.(\d+)\.(\d+)\s+(.*)");                            var match = exp.Match(x);                          if (!match.Success)                              throw new Exception("Invalid VERSION response.");                            return new Version(int.Parse(match.Groups[1].Value)'                                              int.Parse(match.Groups[2].Value)'                                              int.Parse(match.Groups[3].Value)'                                              int.Parse(match.Groups[4].Value)'                                              match.Groups[5].Value);                      })                      .Subscribe(x => this.versionSubject.OnNext(x));
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.AsyncSend("VERSION")                      .Select(x =>                      {                          var exp = new Regex(@"(\d+)\.(\d+)\.(\d+)\.(\d+)\s+(.*)");                            var match = exp.Match(x);                          if (!match.Success)                              throw new Exception("Invalid VERSION response.");                            return new Version(int.Parse(match.Groups[1].Value)'                                              int.Parse(match.Groups[2].Value)'                                              int.Parse(match.Groups[3].Value)'                                              int.Parse(match.Groups[4].Value)'                                              match.Groups[5].Value);                      })                      .Subscribe(x => this.versionSubject.OnNext(x));
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.AsyncSend("VERSION")                      .Select(x =>                      {                          var exp = new Regex(@"(\d+)\.(\d+)\.(\d+)\.(\d+)\s+(.*)");                            var match = exp.Match(x);                          if (!match.Success)                              throw new Exception("Invalid VERSION response.");                            return new Version(int.Parse(match.Groups[1].Value)'                                              int.Parse(match.Groups[2].Value)'                                              int.Parse(match.Groups[3].Value)'                                              int.Parse(match.Groups[4].Value)'                                              match.Groups[5].Value);                      })                      .Subscribe(x => this.versionSubject.OnNext(x));
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,Connect,The following statement contains a magic number: this.AsyncSend("VERSION")                      .Select(x =>                      {                          var exp = new Regex(@"(\d+)\.(\d+)\.(\d+)\.(\d+)\s+(.*)");                            var match = exp.Match(x);                          if (!match.Success)                              throw new Exception("Invalid VERSION response.");                            return new Version(int.Parse(match.Groups[1].Value)'                                              int.Parse(match.Groups[2].Value)'                                              int.Parse(match.Groups[3].Value)'                                              int.Parse(match.Groups[4].Value)'                                              match.Groups[5].Value);                      })                      .Subscribe(x => this.versionSubject.OnNext(x));
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,ReadLine,The following statement contains a magic number: str.Length >= 2 && str[str.Length - 2] == '\r' && str[str.Length - 1] == '\n'
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,ReadLine,The following statement contains a magic number: str.Length >= 2 && str[str.Length - 2] == '\r' && str[str.Length - 1] == '\n'
Magic Number,CasparRx,Connection,D:\research\architectureSmells\repos\CasparCG_Tools\csharp\CasparRx\trunk\CasparRx\Connection.cs,ReadLine,The following statement contains a magic number: return str.ToString(0' str.Length - 2);
