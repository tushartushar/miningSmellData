Implementation smell,Namespace,Class,File,Method,Description
Complex Method,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,Cyclomatic complexity of the method is 22
Complex Method,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,Cyclomatic complexity of the method is 22
Long Parameter List,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,NavigationHelper,The method has 5 parameters.
Long Statement,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 240.
Long Statement,eCarControl.Common,ObservableDictionary,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\ObservableDictionary.cs,Remove,The length of the statement  "	if (this._dictionary.TryGetValue (item.Key' out currentValue) && Object.Equals (item.Value' currentValue) && this._dictionary.Remove (item.Key)) { " is 146.
Long Statement,eCarControl.Common,SuspensionManager,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,eCarControl.Common,SuspensionManager,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Complex Conditional,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: Dispatcher.RunAsync (CoreDispatcherPriority.High' () =>  {  	/**                          * Checks the status of the dpad and left thumbstick and uses that to send commands                           *                           **/if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  		send_to_board (1);  		//forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	}  	else {  		send_to_board (5);  		//stop forward  		UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  		send_to_board (3);  		//back  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	}  	else {  		send_to_board (7);  		//stop down  		DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  		send_to_board (2);  		//right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	}  	else {  		send_to_board (6);  		//stop right  		RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	}  	if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  		send_to_board (4);  		//left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	}  	else {  		send_to_board (8);  		//stop left  		LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	}  });  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  	send_to_board (1);  	//forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  }  else {  	send_to_board (5);  	//stop forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadUp) > 0 || s.Gamepad.LeftThumbY > 10000) {  	send_to_board (1);  	//forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  }  else {  	send_to_board (5);  	//stop forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (5);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  }  else {  	send_to_board (7);  	//stop down  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  }  else {  	send_to_board (7);  	//stop down  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadDown) > 0 || s.Gamepad.LeftThumbY < -10000) {  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  }  else {  	send_to_board (7);  	//stop down  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (3);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (7);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  	send_to_board (2);  	//right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  }  else {  	send_to_board (6);  	//stop right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  	send_to_board (2);  	//right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  }  else {  	send_to_board (6);  	//stop right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadRight) > 0 || s.Gamepad.LeftThumbX > 10000) {  	send_to_board (2);  	//right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  }  else {  	send_to_board (6);  	//stop right  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (2);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (6);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  }  else {  	send_to_board (8);  	//stop left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  }  else {  	send_to_board (8);  	//stop left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: if ((s.Gamepad.Buttons & GamepadButtonFlags.DPadLeft) > 0 || s.Gamepad.LeftThumbX < -10000) {  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  }  else {  	send_to_board (8);  	//stop left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (4);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,MainPage,The following statement contains a magic number: send_to_board (8);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	send_to_board (1);  	//forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	break;  case "D":  case "Right":  	send_to_board (2);  	//left  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	;  	break;  case "S":  case "Down":  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	break;  case "A":  case "Left":  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	;  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	send_to_board (1);  	//forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	break;  case "D":  case "Right":  	send_to_board (2);  	//left  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	;  	break;  case "S":  case "Down":  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	break;  case "A":  case "Left":  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	;  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	send_to_board (1);  	//forward  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_ACTIVE"];  	break;  case "D":  case "Right":  	send_to_board (2);  	//left  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_ACTIVE"];  	;  	break;  case "S":  case "Down":  	send_to_board (3);  	//back  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_ACTIVE"];  	break;  case "A":  case "Left":  	send_to_board (4);  	//left  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_ACTIVE"];  	;  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: send_to_board (2);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: send_to_board (3);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyDownHandler,The following statement contains a magic number: send_to_board (4);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	;  	send_to_board (5);  	//stop left  	break;  case "D":  case "Right":  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	;  	send_to_board (6);  	//stop left  	break;  case "S":  case "Down":  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	;  	send_to_board (7);  	//stop left  	break;  case "A":  case "Left":  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	;  	send_to_board (8);  	//stop left  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	;  	send_to_board (5);  	//stop left  	break;  case "D":  case "Right":  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	;  	send_to_board (6);  	//stop left  	break;  case "S":  case "Down":  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	;  	send_to_board (7);  	//stop left  	break;  case "A":  case "Left":  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	;  	send_to_board (8);  	//stop left  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	;  	send_to_board (5);  	//stop left  	break;  case "D":  case "Right":  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	;  	send_to_board (6);  	//stop left  	break;  case "S":  case "Down":  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	;  	send_to_board (7);  	//stop left  	break;  case "A":  case "Left":  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	;  	send_to_board (8);  	//stop left  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: switch (e.VirtualKey.ToString ()) {  case "W":  case "Up":  	UP_IMAGE.Source = (BitmapSource)Resources ["UP_INACTIVE"];  	;  	send_to_board (5);  	//stop left  	break;  case "D":  case "Right":  	RIGHT_IMAGE.Source = (BitmapSource)Resources ["RIGHT_INACTIVE"];  	;  	send_to_board (6);  	//stop left  	break;  case "S":  case "Down":  	DOWN_IMAGE.Source = (BitmapSource)Resources ["DOWN_INACTIVE"];  	;  	send_to_board (7);  	//stop left  	break;  case "A":  case "Left":  	LEFT_IMAGE.Source = (BitmapSource)Resources ["LEFT_INACTIVE"];  	;  	send_to_board (8);  	//stop left  	break;  default:  	break;  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: send_to_board (5);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: send_to_board (6);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: send_to_board (7);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,keyUpHandler,The following statement contains a magic number: send_to_board (8);  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,ToggleSwitch_Toggled,The following statement contains a magic number: if (sender.Equals (NETWORK_SWITCH)) {  	send_to_board (9);  }  
Magic Number,eCarControl,MainPage,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\MainPage.xaml.cs,ToggleSwitch_Toggled,The following statement contains a magic number: send_to_board (9);  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((e.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || e.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		e.Handled = true;  		this.GoBackCommand.Execute (null);  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		e.Handled = true;  		this.GoForwardCommand.Execute (null);  	}  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	e.Handled = true;  	this.GoBackCommand.Execute (null);  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
Magic Number,eCarControl.Common,NavigationHelper,C:\repos\ms-iot_sample-rccar\eCarControl\eCarControl\Common\NavigationHelper.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	e.Handled = true;  	this.GoForwardCommand.Execute (null);  }  
