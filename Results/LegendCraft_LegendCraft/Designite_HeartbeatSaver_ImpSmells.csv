Implementation smell,Namespace,Class,File,Method,Description
Long Statement,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The length of the statement  "		//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3 " is 123.
Long Statement,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The length of the statement  "			Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message); " is 159.
Long Statement,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The length of the statement  "			Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message); " is 172.
Long Statement,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,BeatThreadMinecraftNet,The length of the statement  "			ub.Query = String.Format ("public={0}&max={1}&users={2}&port={3}&version={4}&salt={5}&name={6}"' freshData.IsPublic' freshData.MaxPlayers' freshData.PlayerCount' freshData.Port' ProtocolVersion' Uri.EscapeDataString (freshData.Salt)' Uri.EscapeDataString (freshData.ServerName)); " is 279.
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The following statement contains a magic number: try {  	string[] rawData = File.ReadAllLines (heartbeatDataFileName' Encoding.ASCII);  	//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3  	HeartbeatData newData = new HeartbeatData {  		Salt = rawData [0]'  		ServerIP = IPAddress.Parse (rawData [1])'  		Port = Int32.Parse (rawData [2])'  		PlayerCount = Int32.Parse (rawData [3])'  		MaxPlayers = Int32.Parse (rawData [4])'  		ServerName = rawData [5]'  		IsPublic = Boolean.Parse (rawData [6])  	};  	data = newData;  	return true;  } catch (Exception ex) {  	if (ex is UnauthorizedAccessException || ex is IOException) {  		Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else if (ex is FormatException || ex is ArgumentException) {  		Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else {  		Console.Error.WriteLine ("{0}: Unexpected error - {1} {2}"' Timestamp ()' ex.GetType ().Name' ex.Message);  	}  	return false;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The following statement contains a magic number: try {  	string[] rawData = File.ReadAllLines (heartbeatDataFileName' Encoding.ASCII);  	//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3  	HeartbeatData newData = new HeartbeatData {  		Salt = rawData [0]'  		ServerIP = IPAddress.Parse (rawData [1])'  		Port = Int32.Parse (rawData [2])'  		PlayerCount = Int32.Parse (rawData [3])'  		MaxPlayers = Int32.Parse (rawData [4])'  		ServerName = rawData [5]'  		IsPublic = Boolean.Parse (rawData [6])  	};  	data = newData;  	return true;  } catch (Exception ex) {  	if (ex is UnauthorizedAccessException || ex is IOException) {  		Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else if (ex is FormatException || ex is ArgumentException) {  		Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else {  		Console.Error.WriteLine ("{0}: Unexpected error - {1} {2}"' Timestamp ()' ex.GetType ().Name' ex.Message);  	}  	return false;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The following statement contains a magic number: try {  	string[] rawData = File.ReadAllLines (heartbeatDataFileName' Encoding.ASCII);  	//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3  	HeartbeatData newData = new HeartbeatData {  		Salt = rawData [0]'  		ServerIP = IPAddress.Parse (rawData [1])'  		Port = Int32.Parse (rawData [2])'  		PlayerCount = Int32.Parse (rawData [3])'  		MaxPlayers = Int32.Parse (rawData [4])'  		ServerName = rawData [5]'  		IsPublic = Boolean.Parse (rawData [6])  	};  	data = newData;  	return true;  } catch (Exception ex) {  	if (ex is UnauthorizedAccessException || ex is IOException) {  		Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else if (ex is FormatException || ex is ArgumentException) {  		Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else {  		Console.Error.WriteLine ("{0}: Unexpected error - {1} {2}"' Timestamp ()' ex.GetType ().Name' ex.Message);  	}  	return false;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The following statement contains a magic number: try {  	string[] rawData = File.ReadAllLines (heartbeatDataFileName' Encoding.ASCII);  	//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3  	HeartbeatData newData = new HeartbeatData {  		Salt = rawData [0]'  		ServerIP = IPAddress.Parse (rawData [1])'  		Port = Int32.Parse (rawData [2])'  		PlayerCount = Int32.Parse (rawData [3])'  		MaxPlayers = Int32.Parse (rawData [4])'  		ServerName = rawData [5]'  		IsPublic = Boolean.Parse (rawData [6])  	};  	data = newData;  	return true;  } catch (Exception ex) {  	if (ex is UnauthorizedAccessException || ex is IOException) {  		Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else if (ex is FormatException || ex is ArgumentException) {  		Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else {  		Console.Error.WriteLine ("{0}: Unexpected error - {1} {2}"' Timestamp ()' ex.GetType ().Name' ex.Message);  	}  	return false;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,RefreshData,The following statement contains a magic number: try {  	string[] rawData = File.ReadAllLines (heartbeatDataFileName' Encoding.ASCII);  	//take the data from heartbeatdata.txt that was created from Network/HeartBeat.cs' make sure the orders match up on each :3  	HeartbeatData newData = new HeartbeatData {  		Salt = rawData [0]'  		ServerIP = IPAddress.Parse (rawData [1])'  		Port = Int32.Parse (rawData [2])'  		PlayerCount = Int32.Parse (rawData [3])'  		MaxPlayers = Int32.Parse (rawData [4])'  		ServerName = rawData [5]'  		IsPublic = Boolean.Parse (rawData [6])  	};  	data = newData;  	return true;  } catch (Exception ex) {  	if (ex is UnauthorizedAccessException || ex is IOException) {  		Console.Error.WriteLine ("{0}: UnauthorizedAccessException - Error reading {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else if (ex is FormatException || ex is ArgumentException) {  		Console.Error.WriteLine ("{0}: FormatException - Cannot parse one of the data fields of {1}: {2} {3}"' Timestamp ()' heartbeatDataFileName' ex.GetType ().Name' ex.Message);  	} else {  		Console.Error.WriteLine ("{0}: Unexpected error - {1} {2}"' Timestamp ()' ex.GetType ().Name' ex.Message);  	}  	return false;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  	using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  		string responseText = responseReader.ReadToEnd ();  		File.WriteAllText (UrlFileName' responseText.Trim ()' Encoding.ASCII);  		if (count == 69) {  			Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  		} else if (count == 9001) {  			Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  		} else {  			Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  		}  		count++;  	}  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: using (HttpWebResponse response = (HttpWebResponse)request.GetResponse ()) {  	using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  		string responseText = responseReader.ReadToEnd ();  		File.WriteAllText (UrlFileName' responseText.Trim ()' Encoding.ASCII);  		if (count == 69) {  			Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  		} else if (count == 9001) {  			Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  		} else {  			Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  		}  		count++;  	}  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  	string responseText = responseReader.ReadToEnd ();  	File.WriteAllText (UrlFileName' responseText.Trim ()' Encoding.ASCII);  	if (count == 69) {  		Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  	} else if (count == 9001) {  		Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  	} else {  		Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  	}  	count++;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: using (StreamReader responseReader = new StreamReader (response.GetResponseStream ())) {  	string responseText = responseReader.ReadToEnd ();  	File.WriteAllText (UrlFileName' responseText.Trim ()' Encoding.ASCII);  	if (count == 69) {  		Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  	} else if (count == 9001) {  		Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  	} else {  		Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  	}  	count++;  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: if (count == 69) {  	Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  } else if (count == 9001) {  	Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  } else {  	Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: if (count == 69) {  	Console.WriteLine ("{0}: Sending HeartBeat... Count 69...Lol' I said 69...hehe"' Timestamp ());  } else if (count == 9001) {  	Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  } else {  	Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  }  
Magic Number,fCraft.HeartbeatSaver,HeartbeatSaver,F:\newReposMay17\LegendCraft_LegendCraft\HeartBeat\HeartbeatSaver.cs,CreateRequest,The following statement contains a magic number: if (count == 9001) {  	Console.WriteLine ("{0}: Sending HeartBeat... Count 9001...ITS OVAR 9000!"' Timestamp ());  } else {  	Console.WriteLine ("{0}: Sending HeartBeat... Count {1}"' Timestamp ()' count);  }  
