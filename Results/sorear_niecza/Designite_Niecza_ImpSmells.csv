Implementation smell,Namespace,Class,File,Method,Description
Long Method,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Thaw,The method has 106 lines of code.
Long Method,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The method has 248 lines of code.
Long Method,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Core,The method has 160 lines of code.
Long Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CreateBasicTypes,The method has 181 lines of code.
Long Method,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,NewWrapper,The method has 101 lines of code.
Long Method,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CoerceArgument,The method has 164 lines of code.
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,Cyclomatic complexity of the method is 15
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,Cyclomatic complexity of the method is 13
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Parse,Cyclomatic complexity of the method is 17
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,DivRem,Cyclomatic complexity of the method is 9
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GreatestCommonDivisor,Cyclomatic complexity of the method is 12
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log,Cyclomatic complexity of the method is 9
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,Cyclomatic complexity of the method is 12
Complex Method,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,DivModUnsigned,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,Cyclomatic complexity of the method is 9
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsInteger,Cyclomatic complexity of the method is 9
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,minus,Cyclomatic complexity of the method is 8
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,pow,Cyclomatic complexity of the method is 12
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,floor,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numcompare_core,Cyclomatic complexity of the method is 10
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,mod,Cyclomatic complexity of the method is 15
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,divop,Cyclomatic complexity of the method is 12
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonGrep_C,Cyclomatic complexity of the method is 14
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,Cyclomatic complexity of the method is 10
Complex Method,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,Cyclomatic complexity of the method is 8
Complex Method,Niecza,CrossSource,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,TryGet,Cyclomatic complexity of the method is 12
Complex Method,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ExactNum,Cyclomatic complexity of the method is 17
Complex Method,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,Cyclomatic complexity of the method is 9
Complex Method,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Freeze,Cyclomatic complexity of the method is 8
Complex Method,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Thaw,Cyclomatic complexity of the method is 19
Complex Method,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsInlinable,Cyclomatic complexity of the method is 10
Complex Method,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Freeze,Cyclomatic complexity of the method is 8
Complex Method,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Thaw,Cyclomatic complexity of the method is 19
Complex Method,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Fixup,Cyclomatic complexity of the method is 12
Complex Method,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,Cyclomatic complexity of the method is 63
Complex Method,Niecza,CtxCallMethodUnboxNumeric,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,Cyclomatic complexity of the method is 8
Complex Method,Niecza,CtxStrSuccish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,Cyclomatic complexity of the method is 12
Complex Method,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,Cyclomatic complexity of the method is 15
Complex Method,Niecza,IxListAtPos,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,Cyclomatic complexity of the method is 9
Complex Method,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Core,Cyclomatic complexity of the method is 39
Complex Method,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Indirect,Cyclomatic complexity of the method is 9
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DefaultNew,Cyclomatic complexity of the method is 9
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,Cyclomatic complexity of the method is 11
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ToComposable,Cyclomatic complexity of the method is 8
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,Cyclomatic complexity of the method is 20
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,RunCore,Cyclomatic complexity of the method is 9
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SearchForHandler,Cyclomatic complexity of the method is 15
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Unwind,Cyclomatic complexity of the method is 17
Complex Method,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Main,Cyclomatic complexity of the method is 12
Complex Method,Niecza,MMDParameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,Cyclomatic complexity of the method is 9
Complex Method,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,Cyclomatic complexity of the method is 10
Complex Method,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,MMDCandidate,Cyclomatic complexity of the method is 12
Complex Method,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ToString,Cyclomatic complexity of the method is 10
Complex Method,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,DoDispatch,Cyclomatic complexity of the method is 10
Complex Method,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,SortCandidates,Cyclomatic complexity of the method is 18
Complex Method,Niecza,OverloadCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,Invoke,Cyclomatic complexity of the method is 8
Complex Method,Niecza,OverloadCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,Compare,Cyclomatic complexity of the method is 10
Complex Method,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,NewWrapper,Cyclomatic complexity of the method is 23
Complex Method,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,BoxResult,Cyclomatic complexity of the method is 17
Complex Method,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CoerceArgument,Cyclomatic complexity of the method is 45
Complex Method,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,CollectMMDs,Cyclomatic complexity of the method is 15
Complex Method,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,Revalidate,Cyclomatic complexity of the method is 11
Complex Method,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,AcceptsType,Cyclomatic complexity of the method is 12
Complex Method,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,C3Merge,Cyclomatic complexity of the method is 14
Complex Method,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,Compose,Cyclomatic complexity of the method is 15
Complex Method,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Remove,Cyclomatic complexity of the method is 10
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CheckSpecialArg,The method has 5 parameters. Parameters: s' ix' pivot' rank' val
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HandleSpecial2,The method has 6 parameters. Parameters: c' av0' av1' ao0' ao1' dgt
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HandleSpecial3,The method has 8 parameters. Parameters: c' av0' av1' av2' ao0' ao1' ao2' dgt
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,strcompare,The method has 5 parameters. Parameters: c' v1' v2' mask' d
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numcompare,The method has 5 parameters. Parameters: c' a1' a2' mask' dl
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numcompare_core,The method has 6 parameters. Parameters: s' a1' o1' a2' o2' complex_ok
Long Parameter List,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,mixin,The method has 5 parameters. Parameters: c' obj' role_list' init' newtype
Long Parameter List,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,EmitUnit,The method has 5 parameters. Parameters: s' uname' asm_name' dll_name' is_mainish
Long Parameter List,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,RuntimeUnit,The method has 6 parameters. Parameters: setting' name' filename' source' main' runnow
Long Parameter List,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NsBind,The method has 5 parameters. Parameters: who' name' var' file' line
Long Parameter List,Niecza,Parameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Parameter,The method has 9 parameters. Parameters: c' flags' slot' name' names' def' type' attr' atype
Long Parameter List,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetupCall,The method has 7 parameters. Parameters: caller' outer' sub' pos' named' quiet' de
Long Parameter List,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SubInfo,The method has 9 parameters. Parameters: setting' name' lines' code' outer' ltm' edata' label_names' nspill
Long Parameter List,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SubInfo,The method has 7 parameters. Parameters: unit' name' outer' cls' pkg' once' ofr
Long Parameter List,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,RunConstraint,The method has 6 parameters. Parameters: th' signame' param' quiet' arg' c
Long Parameter List,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The method has 9 parameters. Parameters: th' sig' mode' signame' pos' named' jun_pivot' jun_pivot_n' jun_rank
Long Parameter List,Niecza,ResumeUnwindException,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ResumeUnwindException,The method has 5 parameters. Parameters: type' tf' tip' td' bt
Long Parameter List,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Core,The method has 5 parameters. Parameters: key' final' sc' v' bind_to
Long Parameter List,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,WrapIndexy,The method has 6 parameters. Parameters: kl' name' at' exist' del' bind
Long Parameter List,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SearchForHandler,The method has 6 parameters. Parameters: th' type' tgt' unused' name' payload
Long Parameter List,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Unwind,The method has 8 parameters. Parameters: th' type' tf' tip' td' tgt' name' bt
Long Parameter List,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CheckJunctionArg,The method has 6 parameters. Parameters: v' jun_pivot' jun_pivot_n' jun_rank' num' nam
Long Parameter List,Niecza,OverloadCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,OverloadCandidate,The method has 5 parameters. Parameters: s' what_call' args' refs' param_array
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,MultiAdd,The method has 5 parameters. Parameters: s' d' n' mi' pi
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv4,The method has 5 parameters. Parameters: f' a0' a1' a2' a3
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv4,The method has 5 parameters. Parameters: f' a0' a1' a2' a3
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv5,The method has 6 parameters. Parameters: f' a0' a1' a2' a3' a4
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv5,The method has 6 parameters. Parameters: f' a0' a1' a2' a3' a4
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv6,The method has 7 parameters. Parameters: f' a0' a1' a2' a3' a4' a5
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv6,The method has 7 parameters. Parameters: f' a0' a1' a2' a3' a4' a5
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv7,The method has 8 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv7,The method has 8 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv8,The method has 9 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6' a7
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv8,The method has 9 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6' a7
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv9,The method has 10 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6' a7' a8
Long Parameter List,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv9,The method has 10 parameters. Parameters: f' a0' a1' a2' a3' a4' a5' a6' a7' a8
Long Parameter List,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,AddMethodPos,The method has 5 parameters. Parameters: flags' name' code' file' line
Long Parameter List,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,AddAttributePos,The method has 6 parameters. Parameters: name' flags' init' type' file' line
Long Parameter List,Niecza,RatApproxer,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,CandidateSimplest,The method has 8 parameters. Parameters: numl' denl' xl' numh' denh' xh' snum' sden
Long Parameter List,Niecza,RatApproxer,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Simplest,The method has 6 parameters. Parameters: numl' denl' numh' denh' numo' deno
Long Statement,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,command_run,The length of the statement  "        Type Process = Type.GetType("GLib.Process'glib-sharp' Version=2.12.0.0' Culture=neutral' PublicKeyToken=35e10195dab3c99f"); " is 123.
Long Statement,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,command_run,The length of the statement  "        Type SpawnFlags = Type.GetType("GLib.SpawnFlags'glib-sharp' Version=2.12.0.0' Culture=neutral' PublicKeyToken=35e10195dab3c99f"); " is 129.
Long Statement,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,is_role,The length of the statement  "        return (rty == P6how.ROLE || rty == P6how.CURRIED_ROLE || rty == P6how.PARAMETRIZED_ROLE) ? c.setting.TrueV : c.setting.FalseV; " is 127.
Long Statement,Niecza,RWVariable,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Store,The length of the statement  "                throw new NieczaException("Nominal type check failed for scalar store; got " + v.mo.name + "' needed " + type.name + " or subtype"); " is 132.
Long Statement,Niecza,LIAttrAlias,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetSelfCode,The length of the statement  "                return DieCode(Tokens.P6any' string.Format("No 'self' available in this scope to resolve reference to attribute '{0}'"' name)); " is 127.
Long Statement,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The length of the statement  "                        throw new NieczaException("Nominal type check failed in binding '" + param.name + "' in '" + signame + "'; got " + srco.mo.name + "' needed " + type.name); " is 155.
Long Statement,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The length of the statement  "                            throw new NieczaException("Binding '" + param.name + "' in '" + signame + "'' cannot bind read-only value to is rw parameter"); " is 127.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewBoundVar,The length of the statement  "                throw new NieczaException("Nominal type check failed in nonparameter binding; got " + rhso.mo.name + "' needed " + type.name); " is 126.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The length of the statement  "                            throw new NieczaException("Attribute '" + ai.name + "' already exists in the class '" + cls.name + "'' but a role also wishes to compose it"); " is 142.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The length of the statement  "                            throw new NieczaException("Attribute '" + ai.name + "' is provided by both '" + attrs[ai.name] + "' and '" + r.name + "'"); " is 123.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The length of the statement  "                            throw new NieczaException(MethodSlot(name) + " must be resolved by class '" + cls.name + "' because it exists in roles '" + role_methods[name].v1 + "' and '" + r.name + "'"); " is 174.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The length of the statement  "                if (role_methods.ContainsKey(name.Key) || class_methods.Contains(name.Key) || (name.Key.v1 == 0 && cls.FindMethod(name.Key.v2) != null)) continue; " is 146.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The length of the statement  "                throw new NieczaException(MethodSlot(name.Key) + " must be implemented by '" + cls.name + "' because it is required by role '" + name.Value + "'"); " is 147.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SearchForHandler,The length of the statement  "            //Console.WriteLine("Entering SearchForHandler(th={0:X}' type={1}' tgt={2:X}' name={3}"' th.GetHashCode()' type' tgt == null ? 0 : tgt.GetHashCode()' name); " is 156.
Long Statement,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SearchForHandler,The length of the statement  "                //Console.WriteLine("looking at {0:X} (caller: {1:X}) ..."' csr == null ? 0 : csr.GetHashCode()' (csr == null || csr.caller == null) ? 0 : csr.caller.GetHashCode()); " is 165.
Long Statement,Niecza,PropertyProxy,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,Store,The length of the statement  "                throw new NieczaException("Unable to coerce value of type " + v.mo.name + " for " + prop.Name); // could also be a range problem " is 128.
Long Statement,Niecza,FieldProxy,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,Store,The length of the statement  "                throw new NieczaException("Unable to coerce value of type " + v.mo.name + " for " + field.Name); // could also be a range problem " is 129.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv4,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)' }); }" is 131.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv4,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)' }); }" is 122.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv5,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3'a4' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)' }); }" is 145.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv5,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3'a4' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)' }); }" is 136.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv6,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3'a4'a5' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)' }); }" is 159.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv6,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3'a4'a5' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)' }); }" is 150.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv7,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3'a4'a5'a6' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)' }); }" is 173.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv7,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3'a4'a5'a6' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)' }); }" is 164.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv8,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3'a4'a5'a6'a7' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)'typeof(T7)' }); }" is 187.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv8,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3'a4'a5'a6'a7' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)'typeof(T7)' }); }" is 178.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dnv9,The length of the statement  "{ return (TR)Callback(f' typeof(TR)' new object[] { a0'a1'a2'a3'a4'a5'a6'a7'a8' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)'typeof(T7)'typeof(T8)' }); }" is 201.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,dv9,The length of the statement  "{ Callback(f' typeof(void)' new object[] { a0'a1'a2'a3'a4'a5'a6'a7'a8' }' new Type[] { typeof(T0)'typeof(T1)'typeof(T2)'typeof(T3)'typeof(T4)'typeof(T5)'typeof(T6)'typeof(T7)'typeof(T8)' }); }" is 192.
Long Statement,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,marshal_handler,The length of the statement  "                return Kernel.Die(th' "Cannot coerce value of type " + ((Variable)th.lex1).Fetch().mo.name + " to " + mo.box_type.FullName); " is 124.
Long Statement,Niecza,STable,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,FindSlot,The length of the statement  "            throw new NieczaException("Attribute {0} in {1} is defined in {2} but not {3}"' name' this.name' type_slot[slotMap[name]].name' type.name); " is 139.
Complex Conditional,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The conditional expression  "sign == 1 && radix > 10 && (last < '0' || last > '9')"  is complex.
Complex Conditional,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log,The conditional expression  "value.sign == -1 || baseValue == 1.0d || baseValue == -1.0d ||  					baseValue == Double.NegativeInfinity || double.IsNaN (baseValue)"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numcompare_core,The conditional expression  "double.IsNaN(v1.re) || double.IsNaN(v1.im) ||                      double.IsNaN(v2.re) || double.IsNaN(v2.im)"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,divop,The conditional expression  "b1 || b2 || small1 == int.MinValue || small2 == int.MinValue"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numand,The conditional expression  "b1 || b2 || small1 == int.MinValue || small2 == int.MinValue"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numor,The conditional expression  "b1 || b2 || small1 == int.MinValue || small2 == int.MinValue"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,numxor,The conditional expression  "b1 || b2 || small1 == int.MinValue || small2 == int.MinValue"  is complex.
Complex Conditional,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,ord,The conditional expression  "r.Length >= 2 &&                  r[0] >= (char)0xD800 && r[0] <= (char)0xDBFF &&                  r[1] >= (char)0xDC00 && r[1] <= (char)0xDFFF"  is complex.
Complex Conditional,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NsMerge,The conditional expression  "nmode == Variable.RW && !nseod || !nse.constant && IsEmptyAggr(nse.v)"  is complex.
Complex Conditional,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NsMerge,The conditional expression  "omode == Variable.RW && !oseod || !ose.constant && IsEmptyAggr(ose.v)"  is complex.
Complex Conditional,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NsMerge,The conditional expression  "ose.v == nse.v || omode != Variable.RW &&                      omode == nmode && oseo == nseo"  is complex.
Complex Conditional,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NsMerge,The conditional expression  "ose.constant && !oseod && nse.constant && !nseod &&                      (oseo.mo.mo.type == P6how.PACKAGE || nseo.mo.mo.type == P6how.PACKAGE) &&                      oseo.mo.who.Isa(setting.StashMO) &&                      nseo.mo.who.Isa(setting.StashMO) &&                      Kernel.UnboxAny<string>(oseo.mo.who) ==                          Kernel.UnboxAny<string>(nseo.mo.who)"  is complex.
Complex Conditional,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The conditional expression  "edata[end+2] == ON_VARLOOKUP && edata[end+4] < 0 &&                          edata[end+3] == depth && ip >= edata[end] &&                          ip < edata[end+1]"  is complex.
Complex Conditional,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsInlinable,The conditional expression  "(kv.Key.Length > 0 &&                              (kv.Key[0] == '?' || kv.Key[0] == '*')) ||                          (kv.Key.Length > 1 &&                            (kv.Key[1] == '?' || kv.Key[1] == '*'))"  is complex.
Complex Conditional,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Core,The conditional expression  "key == "UNIT" || key == "OUTER" ||                          key == "SETTING" || key == "CALLER""  is complex.
Complex Conditional,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,ApplyRoleToClass,The conditional expression  "role_methods.ContainsKey(name.Key) || class_methods.Contains(name.Key) || (name.Key.v1 == 0 && cls.FindMethod(name.Key.v2) != null)"  is complex.
Complex Conditional,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Main,The conditional expression  "fi.IsInitOnly && (ft.IsPrimitive ||                                  ft == typeof(BigInteger) ||                                  ft == typeof(Type) ||                                  ft == typeof(Assembly) ||                                  ft == typeof(FieldInfo) ||                                  ft == typeof(ConstructorInfo) ||                                  ft == typeof(MethodInfo) ||                                  typeof(Delegate).IsAssignableFrom(ft) ||                                  //ft.IsSealed && ft.GetFields(                                  //    BindingFlags.Instance |                                  //    BindingFlags.Public |                                  //    BindingFlags.NonPublic).Length == 0 ||                                  ft == typeof(string))"  is complex.
Virtual Method Call from Constructor,Niecza,TiedVariable,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TiedVariable,The constructor "TiedVariable" calls a virtual method "IsDefined".
Virtual Method Call from Constructor,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,MMDCandidate,The constructor "MMDCandidate" calls a virtual method "GetSlot".
Virtual Method Call from Constructor,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CandidateSet,The constructor "CandidateSet" calls a virtual method "MinDispatchArity".
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Negative,The following statement contains a magic number: return ((v[7] & 0x80) != 0);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v[7] & 0x7F)) << (ushort)4) | (((ushort)(v[6] & 0xF0)) >> 4));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v[7] & 0x7F)) << (ushort)4) | (((ushort)(v[6] & 0xF0)) >> 4));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v[7] & 0x7F)) << (ushort)4) | (((ushort)(v[6] & 0xF0)) >> 4));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Exponent,The following statement contains a magic number: return (ushort)((((ushort)(v[7] & 0x7F)) << (ushort)4) | (((ushort)(v[6] & 0xF0)) >> 4));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i1 = ((uint)v[0] | ((uint)v[1] << 8) | ((uint)v[2] << 16) | ((uint)v[3] << 24));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i1 = ((uint)v[0] | ((uint)v[1] << 8) | ((uint)v[2] << 16) | ((uint)v[3] << 24));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i1 = ((uint)v[0] | ((uint)v[1] << 8) | ((uint)v[2] << 16) | ((uint)v[3] << 24));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i1 = ((uint)v[0] | ((uint)v[1] << 8) | ((uint)v[2] << 16) | ((uint)v[3] << 24));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i1 = ((uint)v[0] | ((uint)v[1] << 8) | ((uint)v[2] << 16) | ((uint)v[3] << 24));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i2 = ((uint)v[4] | ((uint)v[5] << 8) | ((uint)(v[6] & 0xF) << 16));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i2 = ((uint)v[4] | ((uint)v[5] << 8) | ((uint)(v[6] & 0xF) << 16));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i2 = ((uint)v[4] | ((uint)v[5] << 8) | ((uint)(v[6] & 0xF) << 16));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i2 = ((uint)v[4] | ((uint)v[5] << 8) | ((uint)(v[6] & 0xF) << 16));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: uint i2 = ((uint)v[4] | ((uint)v[5] << 8) | ((uint)(v[6] & 0xF) << 16));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Mantissa,The following statement contains a magic number: return (ulong)((ulong)i1 | ((ulong)i2 << 32));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: int size = 3;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: sign = (short) ((bits [3] & DecimalSignMask) != 0 ? -1 : 1);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [2] = (uint)bits [2];
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [2] = (uint)bits [2];
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: size > 2
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: full_words = size = len / 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [i] =	(uint)value [j++] |  								(uint)(value [j++] << 8) |  								(uint)(value [j++] << 16) |  								(uint)(value [j++] << 24);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [i] =	(uint)value [j++] |  								(uint)(value [j++] << 8) |  								(uint)(value [j++] << 16) |  								(uint)(value [j++] << 24);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [i] =	(uint)value [j++] |  								(uint)(value [j++] << 8) |  								(uint)(value [j++] << 16) |  								(uint)(value [j++] << 24);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,BigInteger,The following statement contains a magic number: data [idx] |= (uint)(value [j++] << (i * 8));
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = (x & 0x33333333) + ((x >> 2) & 0x33333333);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = (x + (x >> 4)) & 0x0F0F0F0F;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = x + (x >> 8);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,PopulationCount,The following statement contains a magic number: x = x + (x >> 16);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,AsUInt64,The following statement contains a magic number: data.Length > 2 || sign == -1
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,AsUInt64,The following statement contains a magic number: val |= (((ulong)high) << 32);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10' null);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: return ToString (10' provider);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: switch (format[0]) {  			case 'd':  			case 'D':  			case 'g':  			case 'G':  			case 'r':  			case 'R':  				return ToStringWithPadding (format' 10' provider);  			case 'x':  			case 'X':  				return ToStringWithPadding (format' 16' null);  			default:  				throw new FormatException (string.Format ("format '{0}' not implemented"' format));  			}
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: switch (format[0]) {  			case 'd':  			case 'D':  			case 'g':  			case 'G':  			case 'r':  			case 'R':  				return ToStringWithPadding (format' 10' provider);  			case 'x':  			case 'X':  				return ToStringWithPadding (format' 16' null);  			default:  				throw new FormatException (string.Format ("format '{0}' not implemented"' format));  			}
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: carry = (uint)(carry >> 32);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,MakeTwoComplement,The following statement contains a magic number: mask = (mask << 8) | 0xFF;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: List<char> digits = new List<char> (1 + data.Length * 3 / 10);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: List<char> digits = new List<char> (1 + data.Length * 3 / 10);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: sign == -1 && radix == 10
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToString,The following statement contains a magic number: sign == 1 && radix > 10 && (last < '0' || last > '9')
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Parse,The following statement contains a magic number: val = val * 10 + d;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log,The following statement contains a magic number: bitCount = curBit + length * 32;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log,The following statement contains a magic number: d *= 0.5;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log,The following statement contains a magic number: return (System.Math.Log (c) + System.Math.Log (2) * bitlen) / System.Math.Log (baseValue);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Log10,The following statement contains a magic number: return Log (value' 10);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CompareTo,The following statement contains a magic number: data.Length > 2
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CompareTo,The following statement contains a magic number: uint high = (uint)(other >> 32);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CompareTo,The following statement contains a magic number: data.Length > 2
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CompareTo,The following statement contains a magic number: uint high = (uint)((ulong)other >> 32);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,TopByte,The following statement contains a magic number: return 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,TopByte,The following statement contains a magic number: return 3;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,TopByte,The following statement contains a magic number: return 2;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,FirstNonFFByte,The following statement contains a magic number: return 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: int bytes = (data.Length - 1) * 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: uint mask = 0x80u << ((extra - 1) * 8);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 8);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 16);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: res [j++] = (byte)(word >> 24);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,ToByteArray,The following statement contains a magic number: topWord >>= 8;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Least_Significant_Bit_Position,The following statement contains a magic number: result += 8 * sizeof (uint);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Most_Significant_Bit_Position,The following statement contains a magic number: int result = (data.Length - 1) * 8 * sizeof (uint) - 1;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Most_Significant_Bit_Position,The following statement contains a magic number: result -= 8 * sizeof (uint);
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreAdd,The following statement contains a magic number: sum >>= 32;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,CoreSub,The following statement contains a magic number: borrow = (borrow >> 32) & 0x1;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 16;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 16;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 8;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 8;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 4;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: value <<= 2;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,GetNormalizeShift,The following statement contains a magic number: shift += 2;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Normalize,The following statement contains a magic number: int rshift = 32 - shift;
Magic Number,Niecza,BigInteger,D:\research\architectureSmells\repos1\sorear_niecza\lib\BigInteger.cs,Unnormalize,The following statement contains a magic number: int lshift = 32 - shift;
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: long[] res = new long[14];
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[2] =  (long)(ulong)f_ino.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[3] =  ((IConvertible)f_mode.GetValue(args[1])).ToInt64(null);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[4] =  (long)(ulong)f_nlink.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[5] =  (uint)f_uid.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[6] =  (uint)f_gid.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[7] =  (long)(ulong)f_rdev.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[8] =  (long)f_size.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[9] =  (long)f_blksize.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[10] = (long)f_blocks.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[11] = (long)f_atime.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[12] = (long)f_mtime.GetValue(args[1]);
Magic Number,Niecza,PosixWrapper,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,stat,The following statement contains a magic number: res[13] = (long)f_ctime.GetValue(args[1]);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HandleSpecial3,The following statement contains a magic number: CheckSpecialArg(s' 2' ref jpivot' ref jrank' ao2);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HandleSpecial3,The following statement contains a magic number: return AutoThread(s' avs[jpivot].Fetch()' delegate(Variable n) {              avs[jpivot] = n; return dgt(c' avs[0]' avs[1]' avs[2]); });
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,The following statement contains a magic number: num = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,The following statement contains a magic number: num = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,The following statement contains a magic number: den = (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,The following statement contains a magic number: (bits & (1UL << 63)) != 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsRational,The following statement contains a magic number: int power = ((int)((bits >> 52) & 0x7FF)) - 0x3FF;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsInteger,The following statement contains a magic number: big = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsInteger,The following statement contains a magic number: big = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsInteger,The following statement contains a magic number: int power = ((int)((bits >> 52) & 0x7FF)) - 0x433;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,GetAsInteger,The following statement contains a magic number: (bits & (1UL << 63)) != 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,big_pow,The following statement contains a magic number: return v2 % 2 == 0 ? BigInteger.One : -BigInteger.One;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,big_pow,The following statement contains a magic number: int CHUNK = 2000000000;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RatPow,The following statement contains a magic number: pow >= 64
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,floor,The following statement contains a magic number: BigInteger big = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,floor,The following statement contains a magic number: BigInteger big = (bits & ((1UL << 52) - 1)) + (1UL << 52);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,floor,The following statement contains a magic number: int power = ((int)((bits >> 52) & 0x7FF)) - 0x433;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,floor,The following statement contains a magic number: (bits & (1UL << 63)) != 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,bigrand,The following statement contains a magic number: int bits = (int) Math.Ceiling(BigInteger.Log(top' 2));
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,bigrand,The following statement contains a magic number: int bytes = bits / 8 + 1;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,bigrand,The following statement contains a magic number: byte mask = (byte) ((1 << (bits % 8)) - 1);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,divop,The following statement contains a magic number: opc >= 4 && big2.Sign > 0 && rem.Sign < 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,divop,The following statement contains a magic number: opc >= 4 && big2.Sign < 0 && rem.Sign > 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,divop,The following statement contains a magic number: switch (opc & 3) {                  case 0: return s.MakeInt(red);                  case 1: return s.MakeInt(rem);                  default: return s.MakeParcel(s.MakeInt(red)' s.MakeInt(rem));              }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sqrt,The following statement contains a magic number: double angle = Math.Atan2(v1.im' v1.re) / 2;
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HashIterRaw,The following statement contains a magic number: switch (mode) {                  case 0:                      lv.Push(s.MakeStr(kv.Key));                      break;                  case 1:                      lv.Push(kv.Value);                      break;                  case 2:                      lv.Push(s.MakeStr(kv.Key));                      lv.Push(kv.Value);                      break;                  case 3:                      P6opaque p = new P6opaque(s.PairMO);                      p.slots[0] = s.MakeStr(kv.Key);                      p.slots[1] = kv.Value;                      lv.Push(p);                      break;              }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HashIterRaw,The following statement contains a magic number: switch (mode) {                  case 0:                      lv.Push(s.MakeStr(kv.Key));                      break;                  case 1:                      lv.Push(kv.Value);                      break;                  case 2:                      lv.Push(s.MakeStr(kv.Key));                      lv.Push(kv.Value);                      break;                  case 3:                      P6opaque p = new P6opaque(s.PairMO);                      p.slots[0] = s.MakeStr(kv.Key);                      p.slots[1] = kv.Value;                      lv.Push(p);                      break;              }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,path_modified,The following statement contains a magic number: return c.setting.MakeFloat(((double)(t - 621355968000000000L)) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,path_modified,The following statement contains a magic number: return c.setting.MakeFloat(((double)(t - 621355968000000000L)) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,now,The following statement contains a magic number: return c.setting.MakeFloat(((double)(t - 621355968000000000L)) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,now,The following statement contains a magic number: return c.setting.MakeFloat(((double)(t - 621355968000000000L)) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,times,The following statement contains a magic number: Variable[] ret = new Variable[4];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,times,The following statement contains a magic number: ret[0] = ret[2] = c.setting.MakeFloat(((double)p.UserProcessorTime.Ticks) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,times,The following statement contains a magic number: ret[0] = ret[2] = c.setting.MakeFloat(((double)p.UserProcessorTime.Ticks) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,times,The following statement contains a magic number: ret[1] = ret[3] = c.setting.MakeFloat(((double)p.PrivilegedProcessorTime.Ticks) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,times,The following statement contains a magic number: ret[1] = ret[3] = c.setting.MakeFloat(((double)p.PrivilegedProcessorTime.Ticks) / 10000000.0);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,path_eaccess_owned,The following statement contains a magic number: return PosixWrapper.geteuid() == (uint)stat[5];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,path_access_owned,The following statement contains a magic number: return PosixWrapper.getuid() == (uint)stat[5];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable[] pen;                  if (!src.TryGet(out pen' tailmode != 0)) {                      P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                      th.coro_return = th;                      th.MarkSharedChain();                      thunk.slots[0] = Kernel.NewMuScalar(th);                      thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque(thunk);                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      th.lexi0 = 1;                      return th.Return();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  if (fnc is P6any) {                      return ((P6any)fnc).Invoke(th' (Variable[])th.lex3' null);                  } else if (fnc == null) {                      th.resultSlot = setting.MakeParcel((Variable[]) th.lex3);                      goto case 2;                  } else {                      th.resultSlot = ((Func<Variable'Variable>)fnc).Invoke(                          ((Variable[])th.lex3)[0]);                      goto case 2;                  }              case 2:                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.resultSlot);                  } else {                      outq.Push((Variable) th.resultSlot);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = ItemSource.Empty;                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable[] pen;                  if (!src.TryGet(out pen' tailmode != 0)) {                      P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                      th.coro_return = th;                      th.MarkSharedChain();                      thunk.slots[0] = Kernel.NewMuScalar(th);                      thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque(thunk);                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      th.lexi0 = 1;                      return th.Return();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  if (fnc is P6any) {                      return ((P6any)fnc).Invoke(th' (Variable[])th.lex3' null);                  } else if (fnc == null) {                      th.resultSlot = setting.MakeParcel((Variable[]) th.lex3);                      goto case 2;                  } else {                      th.resultSlot = ((Func<Variable'Variable>)fnc).Invoke(                          ((Variable[])th.lex3)[0]);                      goto case 2;                  }              case 2:                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.resultSlot);                  } else {                      outq.Push((Variable) th.resultSlot);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = ItemSource.Empty;                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable[] pen;                  if (!src.TryGet(out pen' tailmode != 0)) {                      P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                      th.coro_return = th;                      th.MarkSharedChain();                      thunk.slots[0] = Kernel.NewMuScalar(th);                      thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque(thunk);                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      th.lexi0 = 1;                      return th.Return();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  if (fnc is P6any) {                      return ((P6any)fnc).Invoke(th' (Variable[])th.lex3' null);                  } else if (fnc == null) {                      th.resultSlot = setting.MakeParcel((Variable[]) th.lex3);                      goto case 2;                  } else {                      th.resultSlot = ((Func<Variable'Variable>)fnc).Invoke(                          ((Variable[])th.lex3)[0]);                      goto case 2;                  }              case 2:                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.resultSlot);                  } else {                      outq.Push((Variable) th.resultSlot);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = ItemSource.Empty;                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable[] pen;                  if (!src.TryGet(out pen' tailmode != 0)) {                      P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                      th.coro_return = th;                      th.MarkSharedChain();                      thunk.slots[0] = Kernel.NewMuScalar(th);                      thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque(thunk);                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      th.lexi0 = 1;                      return th.Return();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  if (fnc is P6any) {                      return ((P6any)fnc).Invoke(th' (Variable[])th.lex3' null);                  } else if (fnc == null) {                      th.resultSlot = setting.MakeParcel((Variable[]) th.lex3);                      goto case 2;                  } else {                      th.resultSlot = ((Func<Variable'Variable>)fnc).Invoke(                          ((Variable[])th.lex3)[0]);                      goto case 2;                  }              case 2:                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.resultSlot);                  } else {                      outq.Push((Variable) th.resultSlot);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = ItemSource.Empty;                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonMEMap_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable[] pen;                  if (!src.TryGet(out pen' tailmode != 0)) {                      P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                      th.coro_return = th;                      th.MarkSharedChain();                      thunk.slots[0] = Kernel.NewMuScalar(th);                      thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque(thunk);                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      th.lexi0 = 1;                      return th.Return();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  if (fnc is P6any) {                      return ((P6any)fnc).Invoke(th' (Variable[])th.lex3' null);                  } else if (fnc == null) {                      th.resultSlot = setting.MakeParcel((Variable[]) th.lex3);                      goto case 2;                  } else {                      th.resultSlot = ((Func<Variable'Variable>)fnc).Invoke(                          ((Variable[])th.lex3)[0]);                      goto case 2;                  }              case 2:                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.resultSlot);                  } else {                      outq.Push((Variable) th.resultSlot);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = ItemSource.Empty;                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonGrep_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable pen = null;                  while (pen == null) {                      if (tailmode != 0) {                          if (!Kernel.IterHasFlat(src' false)) break;                      } else {                          if (src.Count() == 0) break;                          if (src[0].Fetch().mo.HasType(setting.IterCursorMO)) {                              P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                              th.coro_return = th;                              th.MarkSharedChain();                              thunk.slots[0] = Kernel.NewMuScalar(th);                              thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                              P6opaque lst = new P6opaque(setting.ListMO);                              lst.slots[0] = outq;                              lst.slots[1] = new VarDeque(thunk);                              th.caller.resultSlot = Kernel.NewRWListVar(lst);                              th.lexi0 = 1;                              return th.Return();                          }                      }                      pen = src.Shift();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  return flt.Fetch().InvokeMethod(th' "ACCEPTS"'                          new Variable[] { flt' (Variable)th.lex3 }' null);              case 2:                  Variable r = (Variable) th.resultSlot;                  if (!r.Fetch().mo.mro_raw_Bool.Get(r)) {                      th.ip = 0;                      goto case 0;                  }                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.lex3);                  } else {                      outq.Push((Variable) th.lex3);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = new VarDeque();                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonGrep_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable pen = null;                  while (pen == null) {                      if (tailmode != 0) {                          if (!Kernel.IterHasFlat(src' false)) break;                      } else {                          if (src.Count() == 0) break;                          if (src[0].Fetch().mo.HasType(setting.IterCursorMO)) {                              P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                              th.coro_return = th;                              th.MarkSharedChain();                              thunk.slots[0] = Kernel.NewMuScalar(th);                              thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                              P6opaque lst = new P6opaque(setting.ListMO);                              lst.slots[0] = outq;                              lst.slots[1] = new VarDeque(thunk);                              th.caller.resultSlot = Kernel.NewRWListVar(lst);                              th.lexi0 = 1;                              return th.Return();                          }                      }                      pen = src.Shift();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  return flt.Fetch().InvokeMethod(th' "ACCEPTS"'                          new Variable[] { flt' (Variable)th.lex3 }' null);              case 2:                  Variable r = (Variable) th.resultSlot;                  if (!r.Fetch().mo.mro_raw_Bool.Get(r)) {                      th.ip = 0;                      goto case 0;                  }                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.lex3);                  } else {                      outq.Push((Variable) th.lex3);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = new VarDeque();                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,CommonGrep_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  Variable pen = null;                  while (pen == null) {                      if (tailmode != 0) {                          if (!Kernel.IterHasFlat(src' false)) break;                      } else {                          if (src.Count() == 0) break;                          if (src[0].Fetch().mo.HasType(setting.IterCursorMO)) {                              P6opaque thunk = new P6opaque(setting.GatherIteratorMO);                              th.coro_return = th;                              th.MarkSharedChain();                              thunk.slots[0] = Kernel.NewMuScalar(th);                              thunk.slots[1] = Kernel.NewMuScalar(setting.AnyP);                              P6opaque lst = new P6opaque(setting.ListMO);                              lst.slots[0] = outq;                              lst.slots[1] = new VarDeque(thunk);                              th.caller.resultSlot = Kernel.NewRWListVar(lst);                              th.lexi0 = 1;                              return th.Return();                          }                      }                      pen = src.Shift();                  }                  if (pen == null) {                      if (tailmode != 0)                          return Kernel.Take(th' setting.EMPTYP);                      P6opaque lst = new P6opaque(setting.ListMO);                      lst.slots[0] = outq;                      lst.slots[1] = new VarDeque();                      th.caller.resultSlot = Kernel.NewRWListVar(lst);                      return th.Return();                  }                  th.lex3 = pen;                  th.ip = 1;                  goto case 1;              case 1:                  th.ip = 2;                  return flt.Fetch().InvokeMethod(th' "ACCEPTS"'                          new Variable[] { flt' (Variable)th.lex3 }' null);              case 2:                  Variable r = (Variable) th.resultSlot;                  if (!r.Fetch().mo.mro_raw_Bool.Get(r)) {                      th.ip = 0;                      goto case 0;                  }                  if (tailmode != 0) {                      th.ip = 0;                      return Kernel.Take(th' (Variable)th.lex3);                  } else {                      outq.Push((Variable) th.lex3);                      th.ip = 0;                      goto case 0;                  }              case 3:                  th.lex0 = src = new VarDeque();                  th.ip = 0;                  goto case 0;              default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sysquery,The following statement contains a magic number: switch (ix) {              case 0: return s.BoxLoS(Kernel.commandArgs);              case 1: return s.MakeStr(programName ?? AppDomain.CurrentDomain.FriendlyName);              case 2: return s.MakeStr(execName);              case 3: return s.MakeStr(AppDomain.CurrentDomain.BaseDirectory);              case 4: {                  VarHash ret = new VarHash();                  foreach (System.Collections.DictionaryEntry de in Environment.GetEnvironmentVariables()) {                      ret[(string) de.Key] = Kernel.BoxAnyMO((string)de.Value' s.StrMO);                  }                  return Kernel.BoxAnyMO(ret' s.HashMO);              }              case 5: return s.MakeStr(Environment.OSVersion.Platform.ToString());              case 6: return s.MakeStr(Environment.OSVersion.Version.ToString());              case 7: return s.MakeStr(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData).ToString());              default: return null;          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,temporize,The following statement contains a magic number: (mode & 2) != 0
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,RunCATCH_C,The following statement contains a magic number: switch (th.ip) {              case 0:                  th.lex2 = th.info.setting.CreateArray();                  t1 = (Variable)th.lex1;                  th.lex4 = t1.Fetch().mo.mro_raw_iterator.Get(t1);                  goto case 1;                case 1:                  u1 = (VarDeque)th.lex4;                  if (!Kernel.IterHasFlat(u1' true)) goto case 4;                  th.lex3 = u1.Shift();                  goto case 2;                case 2:                  t1 = (Variable)th.lex3;                  v1 = (P6any)th.lex0;                  th.ip = 3;                  return v1.Invoke(th' new Variable[] { t1 }' null);                case 3:                  t1 = (Variable)th.resultSlot;                  if (t1.Fetch().mo.mro_raw_Bool.Get(t1))                      goto case 1; // yay handled                  t1 = (Variable)th.lex3;                  t2 = (Variable)th.lex2;                  t2.Fetch().mo.mro_push.Invoke(t2' new Variable[] { t1 });                  goto case 1;                case 4:                  th.caller.resultSlot = th.lex2;                  return th.Return();                default:                  return Kernel.Die(th' "Invalid IP");          }
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dir,The following statement contains a magic number: string[] forperl = new string[raw.Length + 2];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dir,The following statement contains a magic number: forperl[i+2] = (ix >= 0) ? raw[i].Substring(ix+1) : raw[i];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,sleep,The following statement contains a magic number: Thread.Sleep((int)(secs * 1000.0));
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dispatch_fromtype,The following statement contains a magic number: Variable[] npos = new Variable[th.pos.Length - 2];
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dispatch_fromtype,The following statement contains a magic number: string name = th.pos[2].Fetch().mo.mro_raw_Str.Get(th.pos[2]);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dispatch_fromtype,The following statement contains a magic number: string name = th.pos[2].Fetch().mo.mro_raw_Str.Get(th.pos[2]);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,dispatch_fromtype,The following statement contains a magic number: Array.Copy(th.pos' 3' npos' 1' npos.Length - 1);
Magic Number,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,repr_clone,The following statement contains a magic number: !mods.TryGetValue(ai.name.Substring(2)' out arg)
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: char[] c = new char[5];
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[2] = (char)(b >> 16);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[2] = (char)(b >> 16);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[3] = (char)(b >> 32);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[3] = (char)(b >> 32);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[4] = (char)(b >> 48);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,VarConstNum,The following statement contains a magic number: c[4] = (char)(b >> 48);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CCConst,The following statement contains a magic number: code.Append((char)(x>>16));
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,StringListConst,The following statement contains a magic number: code.Append((char)(s.Length >> 16));
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CCListConst,The following statement contains a magic number: code.Append((char)(cc.Length >> 16));
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CCListConst,The following statement contains a magic number: code.Append((char)(x>>16));
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: char[] buf = new char[20];
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: int wp = 10;
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: int d = ac % 36;
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: ac /= 36;
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: buf[--wp] = d >= 10 ? (char)(d + 87) : (char)(d + 48);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: buf[--wp] = d >= 10 ? (char)(d + 87) : (char)(d + 48);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: buf[--wp] = d >= 10 ? (char)(d + 87) : (char)(d + 48);
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: rp != 10
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: wp == 20
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: wp == 20
Magic Number,Niecza,EmitUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,NewField,The following statement contains a magic number: ch >= ' ' && ch <= '~' && wp < 20
Magic Number,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Freeze,The following statement contains a magic number: string[] srcinfo = new string[dep.Length * 2];
Magic Number,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Freeze,The following statement contains a magic number: srcinfo[i*2]   = dep[i].name;
Magic Number,Niecza,RuntimeUnit,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Freeze,The following statement contains a magic number: srcinfo[i*2+1] = Utils.HashToStr(                      ObjectRegistry.NewHash().ComputeHash(                          new UTF8Encoding().GetBytes(dep[i].source)));
Magic Number,Niecza,LexInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsDynamicName,The following statement contains a magic number: name.Length < 2
Magic Number,Niecza,LIVarish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindFields,The following statement contains a magic number: Array.Resize(ref owner.protopad.lexn' owner.num_lex_slots * 2 - 10);
Magic Number,Niecza,LIVarish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindFields,The following statement contains a magic number: Array.Resize(ref owner.protopad.lexn' owner.num_lex_slots * 2 - 10);
Magic Number,Niecza,LIVarish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindFields,The following statement contains a magic number: owner.num_lex_slots > 10 + osz
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: edata[end+2] == ON_VARLOOKUP && edata[end+4] < 0 &&                          edata[end+3] == depth && ip >= edata[end] &&                          ip < edata[end+1]
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: edata[end+2] == ON_VARLOOKUP && edata[end+4] < 0 &&                          edata[end+3] == depth && ip >= edata[end] &&                          ip < edata[end+1]
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: edata[end+2] == ON_VARLOOKUP && edata[end+4] < 0 &&                          edata[end+3] == depth && ip >= edata[end] &&                          ip < edata[end+1]
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: end += 5;
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: end -= 5;
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: end < 0 || edata[end+2] != ON_VARLOOKUP ||                          edata[end+4] < 0
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: end < 0 || edata[end+2] != ON_VARLOOKUP ||                          edata[end+4] < 0
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: return edata[end+3];
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetInlineSlot,The following statement contains a magic number: name.Equals(label_names[edata[end+4]])
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FindControlEnt,The following statement contains a magic number: ty != edata[i+2]
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FindControlEnt,The following statement contains a magic number: name != null && (edata[i+4] < 0 || !name.Equals(label_names[edata[i+4]]))
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FindControlEnt,The following statement contains a magic number: name != null && (edata[i+4] < 0 || !name.Equals(label_names[edata[i+4]]))
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FindControlEnt,The following statement contains a magic number: name == null && ty == ON_VARLOOKUP && edata[i+4] >= 0
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FindControlEnt,The following statement contains a magic number: return edata[i+3];
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,AutoThreadSubC,The following statement contains a magic number: th.lexi0 == -2
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,AutoThreadSubC,The following statement contains a magic number: th.lexi0 == -2
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CreateProtopad,The following statement contains a magic number: protopad.EnsureSpills(num_lex_slots - 10);
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FilterForName,The following statement contains a magic number: name.Length < 2 || name[1] != '*'
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,FilterForName,The following statement contains a magic number: return 1u << (int)(hash >> 27);
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SubInfo,The following statement contains a magic number: dylex_filter |= FilterForName(label_names[edata[i+4]]);
Magic Number,Niecza,SubInfo,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Thaw,The following statement contains a magic number: n.dylex_filter |=FilterForName(n.label_names[n.edata[i+4]]);
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,SetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: lex0 = v; break;                  case 1: lex1 = v; break;                  case 2: lex2 = v; break;                  case 3: lex3 = v; break;                  case 4: lex4 = v; break;                  case 5: lex5 = v; break;                  case 6: lex6 = v; break;                  case 7: lex7 = v; break;                  case 8: lex8 = v; break;                  case 9: lex9 = v; break;                  default: lexn[ix-10] = v; break;              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,GetDynamic,The following statement contains a magic number: switch(ix) {                  case 0: return lex0;                  case 1: return lex1;                  case 2: return lex2;                  case 3: return lex3;                  case 4: return lex4;                  case 5: return lex5;                  case 6: return lex6;                  case 7: return lex7;                  case 8: return lex8;                  case 9: return lex9;                  default: return lexn[ix-10];              }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Binder,The following statement contains a magic number: Variable jct = (jun_pivot == -2 ? th.named[jun_pivot_n] :                          th.pos[jun_pivot]);
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: obj_src = -2;
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,BindSignature,The following statement contains a magic number: switch (slot + 1) {                      case 0: break;                      case 1:  th.lex0 = src; break;                      case 2:  th.lex1 = src; break;                      case 3:  th.lex2 = src; break;                      case 4:  th.lex3 = src; break;                      case 5:  th.lex4 = src; break;                      case 6:  th.lex5 = src; break;                      case 7:  th.lex6 = src; break;                      case 8:  th.lex7 = src; break;                      case 9:  th.lex8 = src; break;                      case 10: th.lex9 = src; break;                      default: th.lexn[slot - 10] = src; break;                  }
Magic Number,Niecza,Frame,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DepthMark,The following statement contains a magic number: spacey.Add(new String(' '' spacey.Count * 2));
Magic Number,Niecza,CtxHashIterator,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: return Builtins.HashIterRaw(3' obj);
Magic Number,Niecza,CtxStrSuccish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TableGet,The following statement contains a magic number: int ah = table.Length / 4;
Magic Number,Niecza,CtxStrSuccish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TableGet,The following statement contains a magic number: int am = (al + ah) / 2;
Magic Number,Niecza,CtxStrSuccish,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TableGet,The following statement contains a magic number: it < (char)table[am*4]
Magic Number,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: jtype == 4
Magic Number,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: switch(jtype) {                  case 0: //all                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (!v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 0;                  case 1: //none                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 1;                  case 2: //one' searching for first                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) goto case 1;                      goto case 2;                  case 3: //any                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return true;                      goto case 3;                  default: throw new ArgumentException();              }
Magic Number,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: switch(jtype) {                  case 0: //all                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (!v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 0;                  case 1: //none                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 1;                  case 2: //one' searching for first                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) goto case 1;                      goto case 2;                  case 3: //any                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return true;                      goto case 3;                  default: throw new ArgumentException();              }
Magic Number,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: switch(jtype) {                  case 0: //all                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (!v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 0;                  case 1: //none                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 1;                  case 2: //one' searching for first                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) goto case 1;                      goto case 2;                  case 3: //any                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return true;                      goto case 3;                  default: throw new ArgumentException();              }
Magic Number,Niecza,CtxJunctionBool,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: switch(jtype) {                  case 0: //all                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (!v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 0;                  case 1: //none                      if (ix == eigen.Length) return true;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return false;                      goto case 1;                  case 2: //one' searching for first                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) goto case 1;                      goto case 2;                  case 3: //any                      if (ix == eigen.Length) return false;                      v = eigen[ix++];                      if (v.Fetch().mo.mro_raw_Bool.Get(v)) return true;                      goto case 3;                  default: throw new ArgumentException();              }
Magic Number,Niecza,CtxNumRangeReify,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: const int unroll = 10;
Magic Number,Niecza,CtxNumRangeReify,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Get,The following statement contains a magic number: newobj.slots[2] = excl;
Magic Number,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TryLexOut,The following statement contains a magic number: key.Length >= 2 && key[1] == '*'
Magic Number,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,TryDynamic,The following statement contains a magic number: key.Length >= 2 && key[1] == '*'
Magic Number,Niecza,StashCursor,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,Indirect,The following statement contains a magic number: ix1 = ix2+2;
Magic Number,Niecza,Compartment,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,CreateArray,The following statement contains a magic number: P6any v = new P6opaque(ArrayMO' 2);
Magic Number,Niecza,Compartment,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,MakeJunction,The following statement contains a magic number: type -= 8;
Magic Number,Niecza,Compartment,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,MakeJunction,The following statement contains a magic number: type >= 8
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,JunctionFallbackC,The following statement contains a magic number: Array.Copy(th.pos' 2' (Variable[])th.lex4' 1' th.pos.Length-2);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,JunctionFallbackC,The following statement contains a magic number: Array.Copy(th.pos' 2' (Variable[])th.lex4' 1' th.pos.Length-2);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitGlobal,The following statement contains a magic number: VarHash.hash_automorphism =                  ((uint)r.Next(int.MaxValue)) * 2 + 1;
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.RunCATCH_I = new SubInfo(c' "KERNEL run_CATCH"' null'                  Builtins.RunCATCH_C' null' null' new int[] {                      0' 5' SubInfo.ON_NEXT' 1' 0'                      0' 5' SubInfo.ON_REDO' 2' 0'                      0' 5' SubInfo.ON_LAST' 4' 0'                      0' 5' SubInfo.ON_DIE'  1' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonMEMap_I = new SubInfo(c' "KERNEL map"' null'                  Builtins.CommonMEMap_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,InitCompartment,The following statement contains a magic number: c.CommonGrep_I = new SubInfo(c' "KERNEL grep"' null'                  Builtins.CommonGrep_C' null' null' new int[] {                      2' 3' SubInfo.ON_NEXT' 0' 0'                      2' 3' SubInfo.ON_REDO' 1' 0'                      2' 3' SubInfo.ON_LAST' 3' 0'                  }' new string[] { "" }' 0);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,MakeSub,The following statement contains a magic number: P6opaque n = new P6opaque(info.mo ?? info.setting.CodeMO' 2);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DefaultNew,The following statement contains a magic number: args.Remove(prog[i].name.Substring(2));
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DefaultNew,The following statement contains a magic number: (prog[i].flags & P6how.A_PUBLIC) != 0 &&                      args.TryGetValue(prog[i].name.Substring(2)' out vx)
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,The following statement contains a magic number: Variable index = pos.Length >= 2 ? pos[1] : null;
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,The following statement contains a magic number: Array.Copy(pos' 2' npos' 1' pos.Length - 2);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,The following statement contains a magic number: Array.Copy(pos' 2' npos' 1' pos.Length - 2);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,The following statement contains a magic number: return inter.Fetch().InvokeMethod(th.Return()' (string)p[4]'                          npos' n);
Magic Number,Niecza,Kernel,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,DispIndexy,The following statement contains a magic number: pos.Length > 2
Magic Number,Niecza,MMDParameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: return (this == TOP) ? 0 : 2;
Magic Number,Niecza,MMDParameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: return 2;
Magic Number,Niecza,MMDParameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: return 2;
Magic Number,Niecza,MMDParameter,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: return 2;
Magic Number,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: narrower |= 2;
Magic Number,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: narrower == 0 || narrower == 3
Magic Number,Niecza,MMDCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\Kernel.cs,IsNarrowerThan,The following statement contains a magic number: return (narrower == 2);
Magic Number,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CheckJunctionArg,The following statement contains a magic number: int jrank = Kernel.UnboxAny<int>((P6any) ((P6opaque)obj).slots[0]) / 2;
Magic Number,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CheckJunctions,The following statement contains a magic number: CheckJunctionArg(kv.Value' ref jun_pivot' ref jun_pivot_n'                              ref jun_rank' -2' kv.Key);
Magic Number,Niecza,CandidateSet,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CheckJunctions,The following statement contains a magic number: Variable jct = (jun_pivot == -2 ? named[jun_pivot_n] :                      pos[jun_pivot]);
Magic Number,Niecza,OverloadCandidate,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,MinDispatchArity,The following statement contains a magic number: return args.Length + 2;
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: delegate_methods = new MethodInfo[20];
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: delegate_methods[2 * (nm[2] - '0')] = mi;
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: delegate_methods[2 * (nm[2] - '0')] = mi;
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: delegate_methods[2 * (nm[3] - '0') + 1] = mi;
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: delegate_methods[2 * (nm[3] - '0') + 1] = mi;
Magic Number,Niecza,CLRWrapperProvider,D:\research\architectureSmells\repos1\sorear_niecza\lib\NieczaCLR.cs,CLRWrapperProvider,The following statement contains a magic number: nm[0] == 'd' && nm[1] == 'n' && nm[2] == 'v'
Magic Number,Niecza,P6any,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,InvokeMethod,The following statement contains a magic number: Array.Copy(pos' 1' npos' 2' pos.Length - 1);
Magic Number,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,ComputeMRO,The following statement contains a magic number: STable[][] lists = new STable[superclasses.Count + 2][];
Magic Number,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,Freeze,The following statement contains a magic number: fb.Byte((byte)(isComposed ? 2 : isComposing ? 1 : 0));
Magic Number,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,Thaw,The following statement contains a magic number: n.isComposed  = state >= 2;
Magic Number,Niecza,STable,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,SetupVTables,The following statement contains a magic number: mro_bind_key = _GetVTi("postcircumfix:<{ }>"' 3) as BindHandler;
Magic Number,Niecza,STable,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,SetupVTables,The following statement contains a magic number: mro_bind_pos = _GetVTi("postcircumfix:<[ ]>"' 3) as BindHandler;
Magic Number,Niecza,STable,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,SetupVTables,The following statement contains a magic number: mro_delete_key = _GetVTi("postcircumfix:<{ }>"' 2) as IndexHandler ?? s.CallDeleteKey;
Magic Number,Niecza,STable,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,HasType,The following statement contains a magic number: k >= 20
Magic Number,Niecza,Prod<T1;T2>,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,GetHashCode,The following statement contains a magic number: h = (h << 5) - h + (v2 == null ? 0 : v2.GetHashCode());
Magic Number,Niecza,VarDeque,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,VarDeque,The following statement contains a magic number: data = new Variable[8];
Magic Number,Niecza,VarDeque,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,VarDeque,The following statement contains a magic number: int cap = 8;
Magic Number,Niecza,VarDeque,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,VarDeque,The following statement contains a magic number: cap *= 2;
Magic Number,Niecza,VarDeque,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,VarDeque,The following statement contains a magic number: data = new Variable[8];
Magic Number,Niecza,VarDeque,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,checkgrow,The following statement contains a magic number: Variable[] ndata = new Variable[data.Length * 2];
Magic Number,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,UniversalHash,The following statement contains a magic number: accum = (uint)((temp & 0x7FFFFFFF) + (temp >> 31));
Magic Number,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,UniversalHash,The following statement contains a magic number: return (int) (temp2 >> 32);
Magic Number,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,rehash,The following statement contains a magic number: heap.Length != (1 << (rank + 2))
Magic Number,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,rehash,The following statement contains a magic number: init(1 << (rank + 2));
Magic Number,Niecza,VarHash,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Remove,The following statement contains a magic number: count < (heap.Length >> 2) && heap.Length != INITIAL
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HashToStr,The following statement contains a magic number: char[] buf = new char[hash.Length * 2];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HashToStr,The following statement contains a magic number: buf[i*2]   = "0123456789abcdef"[hash[i] >> 4];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HashToStr,The following statement contains a magic number: buf[i*2]   = "0123456789abcdef"[hash[i] >> 4];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HashToStr,The following statement contains a magic number: buf[i*2+1] = "0123456789abcdef"[hash[i] & 15];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HashToStr,The following statement contains a magic number: buf[i*2+1] = "0123456789abcdef"[hash[i] & 15];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: len = 16;
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: len > 16
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: col == 7
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: col < 16
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: Console.Write(                          (heap[offs+col] < 32 || heap[offs+col] > 126)                              ? '.' : (char)heap[offs+col]);
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,HexDump,The following statement contains a magic number: Console.Write(                          (heap[offs+col] < 32 || heap[offs+col] > 126)                              ? '.' : (char)heap[offs+col]);
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Chr,The following statement contains a magic number: char[] rs = new char[2];
Magic Number,Niecza,Utils,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Chr,The following statement contains a magic number: rs[0] = (char)(0xD800 + ((r - 0x10000) >> 10));
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,sqrt,The following statement contains a magic number: return (this.log() / 2).exp();
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Acos,The following statement contains a magic number: return Math.PI / 2 - this.Asin();
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Atan,The following statement contains a magic number: return ((1 + this * i).log() - (1 - this * i).log()) / (2 * i);
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Acosh,The following statement contains a magic number: return 2 * (((1 + this) / 2).sqrt() + ((-1 + this) / 2).sqrt()).log();
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Acosh,The following statement contains a magic number: return 2 * (((1 + this) / 2).sqrt() + ((-1 + this) / 2).sqrt()).log();
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Acosh,The following statement contains a magic number: return 2 * (((1 + this) / 2).sqrt() + ((-1 + this) / 2).sqrt()).log();
Magic Number,Niecza,Complex,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Atanh,The following statement contains a magic number: return ((1 + this).log() - (1 - this).log()) / 2;
Magic Number,Niecza,RatApproxer,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Simplest,The following statement contains a magic number: CandidateSimplest(numl' denl' (k&1)!=0' numh' denh' (k&2)!=0' ref snum' ref sden);
Magic Number,Niecza,RatApproxer,D:\research\architectureSmells\repos1\sorear_niecza\lib\Utils.cs,Simplest,The following statement contains a magic number: k < 4
Missing Default,Niecza,Builtins,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,HashIterRaw,The following switch statement is missing a default case: switch (mode) {                  case 0:                      lv.Push(s.MakeStr(kv.Key));                      break;                  case 1:                      lv.Push(kv.Value);                      break;                  case 2:                      lv.Push(s.MakeStr(kv.Key));                      lv.Push(kv.Value);                      break;                  case 3:                      P6opaque p = new P6opaque(s.PairMO);                      p.slots[0] = s.MakeStr(kv.Key);                      p.slots[1] = kv.Value;                      lv.Push(p);                      break;              }
Missing Default,Niecza,BatchSource,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,TryGet,The following switch statement is missing a default case: switch (TryOne(items' block)) {                      case -1: goto nomore;                      case 0:                          for (int i = pen.Count - 1; i >= 0; i--)                              items.Unshift(pen[i]);                          return false;                      case +1: pen.Add(items.Shift()); break;                  }
Missing Default,Niecza,ZipSource,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,TryGet,The following switch statement is missing a default case: switch (TryOne(sources[i]' block)) {                      case -1: return true;                      case  0: return false;                  }
Missing Default,Niecza,CrossSource,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,TryGet,The following switch statement is missing a default case: switch (TryOne(iter[i]' block)) {                          case -1: return true;                          case 0:  return false;                          case 1:  break;                      }
Missing Default,Niecza,CrossSource,D:\research\architectureSmells\repos1\sorear_niecza\lib\Builtins.cs,TryGet,The following switch statement is missing a default case: switch (TryOne(iter[wheel]' block)) {                      case 0:  return false;                      case +1:                          iter_top[wheel] = iter[wheel].Shift();                          break;                      case -1:                          if (wheel == 0) return true;                          iter[wheel] = new VarDeque(basic[wheel]);                          iter_top[wheel] = basic_top[wheel];                          state--;                          goto again;                  }
Missing Default,Niecza,P6how,D:\research\architectureSmells\repos1\sorear_niecza\lib\ObjModel.cs,CollectMMDs,The following switch statement is missing a default case: switch (mi.flags & M_MASK) {                      case M_PROTO:                          ds = new DispatchSet();                          ds.proto = mi.impl;                          ds.name  = mi.short_name;                          ds.defining_class = stable;                          here_protos.Add(ds);                          up_protos[ds.name] = ds;                          break;                      case P6how.M_MULTI:                          if (up_protos.ContainsKey(mi.short_name)                                  && up_protos[mi.short_name] != null) break;                          ds = new DispatchSet();                          ds.name = mi.short_name;                          ds.defining_class = stable;                          here_protos.Add(ds);                          up_protos[ds.name] = ds;                          break;                      case P6how.M_ONLY:                          up_protos[mi.short_name] = null;                          break;                  }
