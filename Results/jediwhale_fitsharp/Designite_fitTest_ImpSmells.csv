Implementation smell,Namespace,Class,File,Method,Description
Complex Method,fit.Test.Acceptance,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\CellMatching.cs,MakeTypedValue,Cyclomatic complexity of the method is 12
Long Parameter List,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,DoTable,The method has 7 parameters. Parameters: fixture' tables' businessObjects' right' wrong' ignores' exceptions
Long Parameter List,fit.Test.NUnit,TestUtils,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TestUtils.cs,CheckCounts,The method has 5 parameters. Parameters: counts' right' wrong' ignore' exception
Long Parameter List,fit.Test.NUnit,TestUtils,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TestUtils.cs,VerifyCounts,The method has 5 parameters. Parameters: fixture' right' wrong' ignores' exceptions
Long Statement,fit.Test.Acceptance,XmlFixtureUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\XmlFixtureUnderTest.cs,MakeDocument,The length of the statement  "            document.LoadXml("<root><child1>some text</child1><child2 item1=\"value1\" item2=\"value2\">text1<leaf name=\"value\"/>text2</child2><child3/></root>"); " is 152.
Long Statement,fit.Test.Double,SampleDomain,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Double\SampleDomain.cs,MakeDictionary,The length of the statement  "            return new Dictionary<string' Person> {{"key1"' new Person("Bob"' "Martin")}' {"key2"' new Person("Mike"' "Stockdale")}}; " is 121.
Long Statement,fit.Test.NUnit,CellMaking,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\CellMaking.cs,CellIsMadeWithEmbeddedTable,The length of the statement  "            Assert.AreEqual("\n<td>\n<table>\n<tr><td><span class=\"fit_grey\">11</span></td><td><span class=\"fit_grey\">12</span></td></tr>" + " is 132.
Long Statement,fit.Test.NUnit,CellMaking,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\CellMaking.cs,CellIsMadeWithEmbeddedTable,The length of the statement  "            "\n<tr><td><span class=\"fit_grey\">21</span></td><td><span class=\"fit_grey\">22</span></td></tr></table></td>"' cell.ToString()); " is 131.
Long Statement,fit.Test.NUnit,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\CellMatching.cs,ListEqualsSameTableCell,The length of the statement  "            Parse table = Parse.ParseFrom("<table><tr><td><table><tr><td>first</td><td>last</td></tr><tr><td>joe</td><td>smith</td></tr></table></td></tr></table>"); " is 153.
Long Statement,fit.Test.NUnit,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\CellMatching.cs,MarksSameTableCellAsRight,The length of the statement  "            Parse table = Parse.ParseFrom("<table><tr><td><table><tr><td>first</td><td>last</td></tr><tr><td>joe</td><td>smith</td></tr></table></td></tr></table>"); " is 153.
Long Statement,fit.Test.NUnit,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\CellMatching.cs,MarksExtraTableHeaderAsError,The length of the statement  "            Parse table = Parse.ParseFrom("<table><tr><td><table><tr><td>first</td><td>last</td><td>address</td></tr><tr><td>joe</td><td>smith</td><td></td></tr></table></td></tr></table>"); " is 178.
Long Statement,fit.Test.NUnit,FixtureParametersTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FixtureNUnitTest.cs,OneParameterCellShouldResultInOneArgument,The length of the statement  "            const string tableString = "<table><tr><td>StringFixture</td><td>" + arg + "</td></tr><tr><td>field</td><td>field</td></tr></table>"; " is 133.
Long Statement,fit.Test.NUnit,FixtureParametersTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FixtureNUnitTest.cs,TwoParameterCellShouldResultInTwoArguments,The length of the statement  "            const string tableString = "<table><tr><td>StringFixture</td><td>" + arg1 + "</td><td>" + arg2 + "</td></tr><tr><td>field</td><td>field</td></tr></table>"; " is 155.
Long Statement,fit.Test.NUnit,FixtureTableTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FixtureTableTest.cs,StackTraceNoneExpectedDifferent,The length of the statement  "            Assert.AreEqual("in <table>' in <tr>' in <td> body' expected: null' was 'stack trace blah blah'"' table1.Differences(table2)); " is 126.
Long Statement,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestText,The length of the statement  "            p = Parse.ParseFrom("<table><tr><TD><P><FONT FACE=\"Arial\" SIZE=2>GroupTestFixture</FONT></TD></tr></table>").Parts.Parts; " is 123.
Long Statement,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestCorrectFormatForMissing,The length of the statement  "                "\n<tr><td class=\"fail\"><span class=\"fit_grey\">1</span> <span class=\"fit_label\">surplus</span></td><td><span class=\"fit_grey\">null</span></td><td><span class=\"fit_grey\">Jones</span></td></tr>"' " is 203.
Long Statement,fit.Test.NUnit,SocketServerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\SocketServerTest.cs,StoryTestIsExecuted,The length of the statement  "            Assert.AreEqual("<table><tr><td><span class=\"fit_interpreter\">do</span></td></tr></table><table><tr><td><span class=\"fit_interpreter\">do</span></td></tr></table>"' resultTables); " is 182.
Long Statement,fit.Test.NUnit,SocketServerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\SocketServerTest.cs,RunTest,The length of the statement  "            var server = new SocketServer(new FitSocket(new MessageChannel(port)' new NullReporter())' service' new NullReporter()' false); " is 127.
Long Statement,fit.Test.NUnit,ComposeStoryTestHtmlTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ComposeStoryTestHtmlTest.cs,MultipleTablesAreGenerated,The length of the statement  "            CheckRoundTrip("some stuff <table border=\"1\"><tr> umm <td>hello</td></tr></table> and more <table><tr><td>more</td></tr></table>"); " is 133.
Long Statement,fit.Test.NUnit,SymbolHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\SymbolHandlerTest.cs,CellContentWhenRecalling_Wrong,The length of the statement  "            Assert.AreEqual("<<def<span class=\"fit_grey\"> ghi</span> <span class=\"fit_label\">expected</span><hr />xyz <span class=\"fit_label\">actual</span><hr />At 0 expected g was x"' cell.Body); " is 190.
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,BowlingGame,The following statement contains a magic number: rolls = new int[21];
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,GetScore,The following statement contains a magic number: result += 10 + nextTwoRollsForStrike(currentRoll);
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,GetScore,The following statement contains a magic number: frame < 10
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,nextRollForSpare,The following statement contains a magic number: return rolls[currentRoll + 2];
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,nextTwoRollsForStrike,The following statement contains a magic number: i = rolls[currentRoll + 1] + rolls[currentRoll + 2];
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,isSpare,The following statement contains a magic number: return rolls[current] + rolls[current + 1] == 10;
Magic Number,fit.Test.Acceptance,BowlingGame,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGame.cs,isStrike,The following statement contains a magic number: return rolls[current] == 10;
Magic Number,fit.Test.Acceptance,BowlingGameFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGameFixture.cs,DoStaticTable,The following statement contains a magic number: column < 21
Magic Number,fit.Test.Acceptance,BowlingGameFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGameFixture.cs,DoStaticTable,The following statement contains a magic number: int expectedScore = GetInt(row' 21);
Magic Number,fit.Test.Acceptance,BowlingGameFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\BowlingGameFixture.cs,DoStaticTable,The following statement contains a magic number: Right(row' 21);
Magic Number,fit.Test.Acceptance,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\CellMatching.cs,DoTable,The following statement contains a magic number: Processor.Get<Symbols>().Save("four"' 4);
Magic Number,fit.Test.Acceptance,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\CellMatching.cs,MatchesActualTypeActualValueExpectedValue,The following statement contains a magic number: string expectedValue = theExpectedValue.StartsWith("'")                                         ? theExpectedValue.Substring(1' theExpectedValue.Length - 2)                                         : theExpectedValue;
Magic Number,fit.Test.Acceptance,ExecuteExampleFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\ExecuteExampleFixture.cs,Execute,The following statement contains a magic number: IntField= IntField*2;
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,FolderRunnerStory,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\FolderRunnerStory.cs,Run,The following statement contains a magic number: TestClock.Instance.Now = new DateTime(2006' 12' 6' 13' 14' 15);
Magic Number,fit.Test.Acceptance,NestedLists,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\NestedLists.cs,apple,The following statement contains a magic number: list.Add(new Element("b"'2'secondInnerMostList()));
Magic Number,fit.Test.Acceptance,NestedLists,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\NestedLists.cs,orange,The following statement contains a magic number: list.Add(new Element("c"'3));
Magic Number,fit.Test.Acceptance,StoryTestFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\StoryTestFixture.cs,PlainTest,The following statement contains a magic number: var resultString = writer.Tables.Substring(11);
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,anArrayOfPoint,The following statement contains a magic number: return new Object[] { new System.Drawing.Point(0'0)' new System.Drawing.Point(5'5) };
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,anArrayOfPoint,The following statement contains a magic number: return new Object[] { new System.Drawing.Point(0'0)' new System.Drawing.Point(5'5) };
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,aListOfPoint,The following statement contains a magic number: list.Add(new System.Drawing.Point(5'5));
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,aListOfPoint,The following statement contains a magic number: list.Add(new System.Drawing.Point(5'5));
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,aMapOfPoint,The following statement contains a magic number: map.Add("5'5"'new System.Drawing.Point(5'5));
Magic Number,fit.Test.Acceptance,SystemUnderTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,aMapOfPoint,The following statement contains a magic number: map.Add("5'5"'new System.Drawing.Point(5'5));
Magic Number,fit.Test.Acceptance,A,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\SystemUnderTest.cs,otherInt,The following statement contains a magic number: return 4;
Magic Number,eg,ArithmeticColumnFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\ArithmeticColumnFixture.cs,toRadians,The following statement contains a magic number: return (degrees * Math.PI) / 180d;
Magic Number,fitSharp.Samples_1,SummarySample,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Double\SummarySample.cs,Slow,The following statement contains a magic number: Thread.Sleep(2000);
Magic Number,fit.Test.NUnit,ActionFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ActionFixtureTest.cs,TestCheck,The following statement contains a magic number: Assert.AreEqual(6' actualCount);
Magic Number,fit.Test.NUnit,ActionFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ActionFixtureTest.cs,TestCheck,The following statement contains a magic number: Assert.AreEqual(4' fixture.TestStatus.Counts.GetCount(TestStatus.Right));
Magic Number,fit.Test.NUnit,ActionFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ActionFixtureTest.cs,TestCheckOnTimedActionFixture,The following statement contains a magic number: Assert.AreEqual(6' actualCount);
Magic Number,fit.Test.NUnit,ActionFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ActionFixtureTest.cs,TestCheckOnTimedActionFixture,The following statement contains a magic number: Assert.AreEqual(4' countFixture.TestStatus.Counts.GetCount(TestStatus.Right));
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(123456' f.sampleInt);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(-234567' f.sampleInt);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(3.14159' f.sampleDouble);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(6.02e23f' f.sampleFloat' 1e17f);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(6.02e23f' f.sampleFloat' 1e17f);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(123' f.sampleByte);
Magic Number,fit.Test.NUnit,BindingTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\BindingTest.cs,TestSetterBinding,The following statement contains a magic number: Assert.AreEqual(12345' f.sampleShort);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestBlankCell,The following statement contains a magic number: TestUtils.CheckCounts(resultCounts' 3' 0' 0' 0);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteAtEnd,The following statement contains a magic number: Assert.AreEqual(3' testFixture.Values.Count);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteAtEnd,The following statement contains a magic number: Assert.AreEqual("Execute()"' testFixture.Values[2]);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteInMiddle,The following statement contains a magic number: Assert.AreEqual(3' testFixture.Values.Count);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteInMiddle,The following statement contains a magic number: Assert.AreEqual("second call"' testFixture.Values[2]);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteWithMethod,The following statement contains a magic number: Assert.AreEqual(3' testFixture.Values.Count);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteWithMethod,The following statement contains a magic number: Assert.AreEqual("method!"' testFixture.Values[2]);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteDoesNotCauseMethodsToGetCalledThrice,The following statement contains a magic number: Assert.AreEqual(4' testFixture.Values.Count);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteDoesNotCauseMethodsToGetCalledThrice,The following statement contains a magic number: Assert.AreEqual("Execute()"' testFixture.Values[2]);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteDoesNotCauseMethodsToGetCalledThrice,The following statement contains a magic number: Assert.AreEqual("Method()"' testFixture.Values[3]);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,TestExecuteDoesNotCauseMethodsToGetCalledThrice,The following statement contains a magic number: TestUtils.VerifyCounts(testFixture' 2' 0' 0' 0);
Magic Number,fit.Test.NUnit,ColumnFixtureTests,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ColumnFixtureTests.cs,UsesDynamicTarget,The following statement contains a magic number: TestUtils.VerifyCounts(testFixture' 2' 0' 0' 0);
Magic Number,fit.Test.NUnit,EmptyCellHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\EmptyCellHandlerTest.cs,TestInputWhereValueExists,The following statement contains a magic number: intFixture.Field = 37;
Magic Number,fit.Test.NUnit,EmptyCellHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\EmptyCellHandlerTest.cs,TestInputWhereValueExists,The following statement contains a magic number: Assert.AreEqual(37' intFixture.Field);
Magic Number,fit.Test.NUnit,FailKeywordHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FailKeywordHandlerTest.cs,TestFailInt,The following statement contains a magic number: intFixture.Field = 2;
Magic Number,fit.Test.NUnit,FailKeywordHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FailKeywordHandlerTest.cs,TestFailOnCorrectInt,The following statement contains a magic number: intFixture.Field = 2;
Magic Number,fit.Test.NUnit,FixtureParametersTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\FixtureNUnitTest.cs,TwoParameterCellShouldResultInTwoArguments,The following statement contains a magic number: Assert.AreEqual(2' stringFixture.Args.Length);
Magic Number,fit.Test.NUnit,IntegralRangeHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\IntegralRangeHandlerTest.cs,IsMatch,The following statement contains a magic number: return IsMatch(new CompareIntegralRange()' 777' typeof (int)' input);
Magic Number,fit.Test.NUnit,IntegralRangeHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\IntegralRangeHandlerTest.cs,TestEndOfRange,The following statement contains a magic number: intFixture.Field = 2;
Magic Number,fit.Test.NUnit,IntegralRangeHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\IntegralRangeHandlerTest.cs,TestNotInRange,The following statement contains a magic number: intFixture.Field = 5;
Magic Number,fit.Test.NUnit,IntegralRangeHandlerTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\IntegralRangeHandlerTest.cs,TestNegativeNumbers,The following statement contains a magic number: intFixture.Field = -400;
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual("three"' p.At(0'0'2).Body);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual("three"' p.At(0'0'3).Body);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual("three"' p.At(0'0'4).Body);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual("four"' p.At(0'2'0).Body);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual(2' p.Parts.Size);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,TestIndexingPage,The following statement contains a magic number: Assert.AreEqual(3' p.Parts.Parts.Size);
Magic Number,fit.Test.NUnit,ParseTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ParseTest.cs,CopyFromWithBranches,The following statement contains a magic number: i < 2
Magic Number,fit.Test.NUnit,ProtocolTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ProtocolTest.cs,WriteIntegerToIntegerString,The following statement contains a magic number: Assert.AreEqual("0000000009"' Protocol.FormatInteger(9));
Magic Number,fit.Test.NUnit,ProtocolTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ProtocolTest.cs,WriteIntegerToIntegerString,The following statement contains a magic number: Assert.AreEqual("0000000123"' Protocol.FormatInteger(123));
Magic Number,fit.Test.NUnit,ProtocolTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ProtocolTest.cs,WriteIntegerToIntegerString,The following statement contains a magic number: Assert.AreEqual("0000004444"' Protocol.FormatInteger(4444));
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestExpectBlankOrNullAllCorrect,The following statement contains a magic number: DoTable(new BusinessObjectRowFixture()'                  BuildTable(new[] {"null"' "blank"' "joe"})'                  BuildObjectArray(new[] {null' ""' "joe"})'                  3' 0' 0' 0                  );
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestExpectBlankOrNullAllCorrect,The following statement contains a magic number: DoTable(new BusinessObjectRowFixture()'                  BuildTable(new[] {"Null"' "Blank"})'                  BuildObjectArray(new[] {null' ""})'                  2' 0' 0' 0                  );
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestExpectBlankOrNullAllCorrect,The following statement contains a magic number: DoTable(new BusinessObjectRowFixture()'                  BuildTable(new[] {"NULL"' "BLANK"})'                  BuildObjectArray(new[] {null' ""})'                  2' 0' 0' 0                  );
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestExpectBlankOrNullSomeWrong,The following statement contains a magic number: DoTable(new BusinessObjectRowFixture()'                  atable'                  BuildObjectArray(new[] {""' "this is not null"})'                  1' 2' 0' 0                  );
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestSurplus,The following statement contains a magic number: TestUtils.CheckCounts(resultCounts' 1' 2' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestMissing,The following statement contains a magic number: TestUtils.CheckCounts(resultCounts' 1' 2' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestStartsWithHandlerInSecondColumn,The following statement contains a magic number: TestUtils.CheckCounts(resultCounts' 2' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrect,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrectTwoColumns,The following statement contains a magic number: VerifyCounts(2' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrectTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrectTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 1)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoColumnAsKeyAllCorrect,The following statement contains a magic number: VerifyCounts(6' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoColumnAsKeyThirdColumnIncorrect,The following statement contains a magic number: VerifyCounts(5' 1' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrectTwoColumnsSecondColumnWrong,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualCorrectTwoColumnsSecondColumnWrong,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 1)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualIncorrect,The following statement contains a magic number: VerifyCounts(0' 2' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualIncorrect,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualIncorrect,The following statement contains a magic number: AssertTextInBody(table.At(0' 2' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualIncorrect,The following statement contains a magic number: AssertTextInTag(table.At(0' 3' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneExpectedOneActualIncorrect,The following statement contains a magic number: AssertTextInBody(table.At(0' 3' 0)' "surplus");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestDupsAllowed,The following statement contains a magic number: VerifyCounts(2' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,ThreeItemsWithCommonParts,The following statement contains a magic number: VerifyCounts(6' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoExpectedTwoActualAllCorrectOrderCorrect,The following statement contains a magic number: VerifyCounts(2' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoExpectedTwoActualAllCorrectOrderIncorrect,The following statement contains a magic number: VerifyCounts(2' 0' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoExpectedTwoActualOneCorrect,The following statement contains a magic number: VerifyCounts(1' 2' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestTwoExpectedTwoActualOneCorrectOrderIncorrect,The following statement contains a magic number: VerifyCounts(1' 2' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneMissing,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneMissing,The following statement contains a magic number: AssertTextInBody(table.At(0' 2' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneMissingTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOneMissingTwoColumns,The following statement contains a magic number: AssertTextInBody(table.At(0' 2' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: VerifyCounts(2' 1' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 1)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: AssertTextNotInBody(table.At(0' 2' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: AssertTextInTag(table.At(0' 3' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumns,The following statement contains a magic number: AssertTextInBody(table.At(0' 3' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: VerifyCounts(2' 1' 0' 0);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextInTag(table.At(0' 2' 0)' TestStatus.Wrong);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextInBody(table.At(0' 2' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextNotInBody(table.At(0' 2' 1)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextInTag(table.At(0' 3' 0)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextInTag(table.At(0' 3' 1)' TestStatus.Right);
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextNotInBody(table.At(0' 3' 0)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestOnePresentOneMissingTwoColumnsReverseOrder,The following statement contains a magic number: AssertTextNotInBody(table.At(0' 3' 1)' "missing");
Magic Number,fit.Test.NUnit,RowFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\RowFixtureTest.cs,TestEnum,The following statement contains a magic number: DoTable(new ColorInspectorFixture()' new TestBuilder( tableHtml).Parse' colorsList.ToArray()' 2' 0' 0' 0);
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: double pi = 3.141592865;
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: Assert.AreEqual(ScientificDouble.ValueOf("6.02e23")' 6.02e23d);
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: Assert.AreEqual(ScientificDouble.ValueOf("6.02E23")' 6.024E23d);
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: Assert.AreEqual(ScientificDouble.ValueOf("6.02e23")' 6.016e23d);
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: Assert.IsTrue(!ScientificDouble.ValueOf("6.02e23").Equals(6.026e23d));
Magic Number,fit.Test.NUnit,ScientificDoubleTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\ScientificDoubleTest.cs,TestScientificDouble,The following statement contains a magic number: Assert.IsTrue(!ScientificDouble.ValueOf("6.02e23").Equals(6.014e23d));
Magic Number,fit.Test.NUnit,TableFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,TestGetInt,The following statement contains a magic number: Assert.AreEqual(37' ExampleTableFixture.resultOfGetInt);
Magic Number,fit.Test.NUnit,TableFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,TestWrong,The following statement contains a magic number: Assert.AreEqual(2' resultCounts.GetCount(TestStatus.Wrong));
Magic Number,fit.Test.NUnit,TableFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,TestWrong,The following statement contains a magic number: Assert.AreEqual(TestStatus.Wrong' table.At(0'1'2).GetAttribute(CellAttribute.Status));
Magic Number,fit.Test.NUnit,TableFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,TestWrong,The following statement contains a magic number: Assert.IsTrue(table.At(0'1'2).Body.IndexOf("actual") > 0);
Magic Number,fit.Test.NUnit,TableFixtureTest,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,TestIgnore,The following statement contains a magic number: Assert.AreEqual(TestStatus.Ignore' table.At(0'1'3).GetAttribute(CellAttribute.Status));
Magic Number,fit,ExampleTableFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,DoStaticTable,The following statement contains a magic number: Wrong(0'2'"0'3");
Magic Number,fit,ExampleTableFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,DoStaticTable,The following statement contains a magic number: Ignore(0'3);
Magic Number,fit,ExampleTableFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,DoStaticTable,The following statement contains a magic number: resultOfGetInt = GetInt(0'3);
Magic Number,fit,ExampleTableFixture,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\NUnit\TableFixtureTest.cs,DoStaticTable,The following statement contains a magic number: blankCell = Blank(0'4);
Missing Default,fit.Test.Acceptance,CellMatching,D:\research\architectureSmells\repos\jediwhale_fitsharp\source\fitTest\Acceptance\CellMatching.cs,MakeTypedValue,The following switch statement is missing a default case: switch (type.ToLower()) {                  case "string": return new TypedValue(value' typeof(string));                  case "int": return new TypedValue(int.Parse(value)' typeof(int));                  case "uint": return new TypedValue(uint.Parse(value)' typeof(uint));                  case "long": return new TypedValue(long.Parse(value)' typeof(long));                  case "ulong": return new TypedValue(ulong.Parse(value)' typeof(ulong));                  case "short": return new TypedValue(short.Parse(value)' typeof(short));                  case "ushort": return new TypedValue(ushort.Parse(value)' typeof(ushort));                  case "byte": return new TypedValue(byte.Parse(value)' typeof(byte));                  case "sbyte": return new TypedValue(sbyte.Parse(value)' typeof(sbyte));                  case "decimal": return new TypedValue(decimal.Parse(value)' typeof(decimal));                  case "double": return new TypedValue(double.Parse(value)' typeof(double));                  case "float": return new TypedValue(float.Parse(value)' typeof(float));              }
