Implementation smell,Namespace,Class,File,Method,Description
Complex Method,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,Cyclomatic complexity of the method is 10
Long Statement,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,GetConnectionString,The length of the statement  "	return String.Format ("Data Source={0}; User ID={1}; pwd={2}; DatabaseName={3}"' dataSource' username' password' database); " is 123.
Long Statement,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The length of the statement  "		allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType); " is 132.
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: if (objname.Contains (".")) {  	String[] schemaAndName = objname.Split (new char[] {  		'.'  	}' 2);  	objname = schemaAndName [0] + ".." + schemaAndName [1];  } else {  	objname = NameNormaliser.NormaliseName (objname);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,ReadIntoParams,The following statement contains a magic number: while (reader.Read ()) {  	String paramName = (reader.IsDBNull (0)) ? null : reader.GetString (0);  	String dataType = reader.GetString (1);  	int length = (reader.IsDBNull (2)) ? 0 : System.Convert.ToInt32 (reader [2]);  	int isOutput = (reader.IsDBNull (3)) ? 0 : System.Convert.ToInt32 (reader [3]);  	byte precision = (reader.IsDBNull (4)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [4]);  	byte scale = (reader.IsDBNull (5)) ? Convert.ToByte (0) : System.Convert.ToByte (reader [5]);  	AseParameter dp = new AseParameter ();  	dp.Direction = GetParameterDirection (isOutput);  	if (!String.IsNullOrEmpty (paramName)) {  		if (!paramName.StartsWith (ParameterPrefix))  			dp.ParameterName = ParameterPrefix + paramName;  		else  			dp.ParameterName = paramName;  		dp.SourceColumn = paramName;  	} else {  		dp.Direction = ParameterDirection.ReturnValue;  	}  	dp.AseDbType = GetDBType (dataType);  	String typeName = NormaliseTypeName (dataType);  	if (precision > 0)  		dp.Precision = precision;  	if (scale > 0)  		dp.Scale = scale;  	if ("NTEXT".Equals (typeName) || ("TEXT".Equals (typeName)))  		dp.Size = MAX_STRING_SIZE;  	else if (length > 0) {  		dp.Size = System.Convert.ToInt32 (length);  	} else {  		if (!ParameterDirection.Input.Equals (dp.Direction) || typeof(String).Equals (GetDotNetType (dataType)))  			dp.Size = MAX_STRING_SIZE;  	}  	allParams [NameNormaliser.NormaliseName (paramName)] = new DbParameterAccessor (dp' GetDotNetType (dataType)' position++' dataType);  }  
Magic Number,dbfit,SybaseEnvironment,F:\newReposMay17\jediwhale_fitsharp\source\dbfitSybase\SybaseEnvironment.cs,GetParameterDirection,The following statement contains a magic number: if (isOutput == 2)  	return ParameterDirection.Output;  else  	return ParameterDirection.Input;  
