Implementation smell,Namespace,Class,File,Method,Description
Complex Method,dbfit,DbConnectionProperties,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbConnectionProperties.cs,CreateFromString,Cyclomatic complexity of the method is 9
Long Identifier,dbfit.util,NameNormaliser,C:\repos\jediwhale_fitsharp\source\dbfit\util\NameNormaliser.cs,,The length of the parameter replaceIllegalCharactersWithSpacesRegex is 39.
Long Statement,dbfit,DbConnectionProperties,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbConnectionProperties.cs,CreateFromString,The length of the statement  "            throw new ApplicationException("You have to define either the full connection string; or service' username and password in the properties file"); " is 145.
Long Statement,dbfit,DbParameterAccessor,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbParameterAccessor.cs,CloneWithSameParameter,The length of the statement  "            DbParameterAccessor clone = new DbParameterAccessor(dbacc.DbParameter' dbacc.dotNetType' dbacc.position' dbacc.actualSqlType); " is 126.
Long Statement,dbfit,DbParameterAccessor,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbParameterAccessor.cs,Get,The length of the statement  "				throw new NotSupportedException("Cannot use input parameters as output values. Please remove the question mark after " + dbp.ParameterName); " is 140.
Long Statement,dbfit,DbParameterAccessor,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbParameterAccessor.cs,Set,The length of the statement  "				throw new NotSupportedException("Cannot use output parameters as input values. Did you forget a question mark after " + dbp.ParameterName); " is 139.
Long Statement,dbfit.fixture,Inspect,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\Inspect.cs,InspectTable,The length of the statement  "			    throw new ApplicationException("Cannot retrieve list of columns for table or view "+objectName + " - check spelling and access rights"); " is 136.
Long Statement,dbfit.fixture,Inspect,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\Inspect.cs,InspectProcedure,The length of the statement  "			    throw new ApplicationException("Cannot retrieve list of parameters for procedure "+objectName + " - check spelling and access rights"); " is 135.
Long Statement,dbfit.fixture,StoreQuery,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\StoreQuery.cs,DoTable,The length of the statement  "                if (Args.Length < 2) throw new ApplicationException("No query and symbol name specified to StoreQuery constructor or argument list"); " is 133.
Magic Number,dbfit,DbConnectionProperties,C:\repos\jediwhale_fitsharp\source\dbfit\util\DbConnectionProperties.cs,CreateFromString,The following statement contains a magic number: foreach (String line in lines)              {                  currLine++;                  if (line==null) continue;                  String trimline=line.Trim();                  if (trimline.Length == 0) continue;                  if (trimline.StartsWith("#")) continue;                  String[] keyval = trimline.Split(new char[] { '=' }'2);                  if (keyval.Length==1) throw new                       ApplicationException("Connection properties format incorrect' line "+currLine+ " does not contain a key-value pair ");                  String key = keyval[0].Trim().ToLower();                  String val = keyval[1].Trim();                  if ("username".Equals(key))                  {                      props.Username = val;                  }                  else if ("password".Equals(key))                  {                      props.Password = val;                  }                  else if ("service".Equals(key))                  {                      props.Service = val;                  }                  else if ("database".Equals(key))                  {                      props.DbName = val;                  }                  else if ("connection-string".Equals(key))                  {                      props.FullConnectionString = val;                  }                  else                  {                      throw new ApplicationException("Unsupported key in properties file:" + key);                  }                }
Magic Number,dbfit.fixture,CompareStoredQueries,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\CompareStoredQueries.cs,InitialiseDataTables,The following statement contains a magic number: if (symbol1 == null || symbol2 == null)              {                  if (Args.Length < 2)                       throw new ApplicationException("No symbols specified to CompareStoreQueries constructor or argument list");                  symbol1 = Args[0];                  symbol2 = Args[1];              }
Magic Number,dbfit.fixture,CompareStoredQueries,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\CompareStoredQueries.cs,InitialiseDataTables,The following statement contains a magic number: if (symbol1.StartsWith("<<")) symbol1 = symbol1.Substring(2);
Magic Number,dbfit.fixture,CompareStoredQueries,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\CompareStoredQueries.cs,InitialiseDataTables,The following statement contains a magic number: if (symbol2.StartsWith("<<")) symbol2 = symbol2.Substring(2);
Magic Number,dbfit.fixture,SetParameter,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\SetParameter.cs,SetParameterValue,The following statement contains a magic number: if (value == null || "null".Equals(value.ToString().ToLower()))              {                 symbols.Save(name' DBNull.Value);              }              else if (value != null && value.ToString().StartsWith("<<"))              {                  string varname = value.ToString().Substring(2);                  if (!name.Equals(varname))                  {                      symbols.Save(name' symbols.GetValueOrDefault(varname' null));                  }              }              else                  symbols.Save(name' value);
Magic Number,dbfit.fixture,StoreQuery,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\StoreQuery.cs,DoTable,The following statement contains a magic number: if (query == null || symbolName == null)              {                  if (Args.Length < 2) throw new ApplicationException("No query and symbol name specified to StoreQuery constructor or argument list");                  query = Args[0];                  symbolName = Args[1];              }
Magic Number,dbfit.fixture,StoreQuery,C:\repos\jediwhale_fitsharp\source\dbfit\fixture\StoreQuery.cs,DoTable,The following statement contains a magic number: if (symbolName.StartsWith(">>")) symbolName = symbolName.Substring(2);
Magic Number,dbfit.util,Options,C:\repos\jediwhale_fitsharp\source\dbfit\util\Options.cs,reset,The following statement contains a magic number: commandTimeOut = 30;
