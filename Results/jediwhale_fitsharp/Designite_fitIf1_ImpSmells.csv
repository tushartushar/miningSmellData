Implementation smell,Namespace,Class,File,Method,Description
Long Statement,fitIf,MainController,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainController.cs,Initialize,The length of the statement  "	view.ShowTests (new TestFiles (new FileFolder (inputPath)' new FileFolder (outputPath)' new StoryTestSuite (memory.GetItem<FileExclusions> ()' s => IsExecutable (processor' s))).Tree); " is 184.
Long Statement,fitIf,MainController,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainController.cs,SelectTest,The length of the statement  "	view.ShowResult (System.IO.Path.GetFullPath (System.IO.Path.Combine (memory.GetItem<Settings> ().OutputFolder' file.FullName + ".html"))); " is 138.
Long Statement,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The length of the statement  "	return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204)); " is 312.
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: using (var input = folder.Pages [path].Reader) {  	while (true) {  		var line = input.ReadLine ();  		if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  			return;  		var scanner = new Scanner (line);  		scanner.FindTokenPair ("<!--"' "-->");  		var content = scanner.Body.ToString ().Split (''');  		if (content.Length < 5)  			continue;  		runTime = content [0];  		counts = new TestCounts ();  		counts.SetCount (TestStatus.Right' int.Parse (content [1]));  		counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  		counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  		counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  		break;  	}  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: using (var input = folder.Pages [path].Reader) {  	while (true) {  		var line = input.ReadLine ();  		if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  			return;  		var scanner = new Scanner (line);  		scanner.FindTokenPair ("<!--"' "-->");  		var content = scanner.Body.ToString ().Split (''');  		if (content.Length < 5)  			continue;  		runTime = content [0];  		counts = new TestCounts ();  		counts.SetCount (TestStatus.Right' int.Parse (content [1]));  		counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  		counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  		counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  		break;  	}  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: using (var input = folder.Pages [path].Reader) {  	while (true) {  		var line = input.ReadLine ();  		if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  			return;  		var scanner = new Scanner (line);  		scanner.FindTokenPair ("<!--"' "-->");  		var content = scanner.Body.ToString ().Split (''');  		if (content.Length < 5)  			continue;  		runTime = content [0];  		counts = new TestCounts ();  		counts.SetCount (TestStatus.Right' int.Parse (content [1]));  		counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  		counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  		counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  		break;  	}  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: using (var input = folder.Pages [path].Reader) {  	while (true) {  		var line = input.ReadLine ();  		if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  			return;  		var scanner = new Scanner (line);  		scanner.FindTokenPair ("<!--"' "-->");  		var content = scanner.Body.ToString ().Split (''');  		if (content.Length < 5)  			continue;  		runTime = content [0];  		counts = new TestCounts ();  		counts.SetCount (TestStatus.Right' int.Parse (content [1]));  		counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  		counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  		counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  		break;  	}  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: using (var input = folder.Pages [path].Reader) {  	while (true) {  		var line = input.ReadLine ();  		if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  			return;  		var scanner = new Scanner (line);  		scanner.FindTokenPair ("<!--"' "-->");  		var content = scanner.Body.ToString ().Split (''');  		if (content.Length < 5)  			continue;  		runTime = content [0];  		counts = new TestCounts ();  		counts.SetCount (TestStatus.Right' int.Parse (content [1]));  		counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  		counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  		counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  		break;  	}  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: while (true) {  	var line = input.ReadLine ();  	if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  		return;  	var scanner = new Scanner (line);  	scanner.FindTokenPair ("<!--"' "-->");  	var content = scanner.Body.ToString ().Split (''');  	if (content.Length < 5)  		continue;  	runTime = content [0];  	counts = new TestCounts ();  	counts.SetCount (TestStatus.Right' int.Parse (content [1]));  	counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  	counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  	counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  	break;  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: while (true) {  	var line = input.ReadLine ();  	if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  		return;  	var scanner = new Scanner (line);  	scanner.FindTokenPair ("<!--"' "-->");  	var content = scanner.Body.ToString ().Split (''');  	if (content.Length < 5)  		continue;  	runTime = content [0];  	counts = new TestCounts ();  	counts.SetCount (TestStatus.Right' int.Parse (content [1]));  	counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  	counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  	counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  	break;  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: while (true) {  	var line = input.ReadLine ();  	if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  		return;  	var scanner = new Scanner (line);  	scanner.FindTokenPair ("<!--"' "-->");  	var content = scanner.Body.ToString ().Split (''');  	if (content.Length < 5)  		continue;  	runTime = content [0];  	counts = new TestCounts ();  	counts.SetCount (TestStatus.Right' int.Parse (content [1]));  	counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  	counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  	counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  	break;  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: while (true) {  	var line = input.ReadLine ();  	if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  		return;  	var scanner = new Scanner (line);  	scanner.FindTokenPair ("<!--"' "-->");  	var content = scanner.Body.ToString ().Split (''');  	if (content.Length < 5)  		continue;  	runTime = content [0];  	counts = new TestCounts ();  	counts.SetCount (TestStatus.Right' int.Parse (content [1]));  	counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  	counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  	counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  	break;  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: while (true) {  	var line = input.ReadLine ();  	if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  		return;  	var scanner = new Scanner (line);  	scanner.FindTokenPair ("<!--"' "-->");  	var content = scanner.Body.ToString ().Split (''');  	if (content.Length < 5)  		continue;  	runTime = content [0];  	counts = new TestCounts ();  	counts.SetCount (TestStatus.Right' int.Parse (content [1]));  	counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  	counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  	counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  	break;  }  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: if (line == null || line.Length < 8 || !line.StartsWith ("<!"' StringComparison.Ordinal))  	return;  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: if (content.Length < 5)  	continue;  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: counts.SetCount (TestStatus.Wrong' int.Parse (content [2]));  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: counts.SetCount (TestStatus.Ignore' int.Parse (content [3]));  
Magic Number,fitIf,TestResult,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\TestResult.cs,TestResult,The following statement contains a magic number: counts.SetCount (TestStatus.Exception' int.Parse (content [4]));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: if (!string.IsNullOrEmpty (tests.Value.TestStatus)) {  	header.Children.Add (new Ellipse {  		Height = 10'  		Width = 10'  		Fill = MakeBrush (tests.Value.TestStatus)'  		VerticalAlignment = VerticalAlignment.Center'  		Margin = new Thickness (0' 0' 2' 0)  	});  }  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: if (!string.IsNullOrEmpty (tests.Value.TestStatus)) {  	header.Children.Add (new Ellipse {  		Height = 10'  		Width = 10'  		Fill = MakeBrush (tests.Value.TestStatus)'  		VerticalAlignment = VerticalAlignment.Center'  		Margin = new Thickness (0' 0' 2' 0)  	});  }  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: if (!string.IsNullOrEmpty (tests.Value.TestStatus)) {  	header.Children.Add (new Ellipse {  		Height = 10'  		Width = 10'  		Fill = MakeBrush (tests.Value.TestStatus)'  		VerticalAlignment = VerticalAlignment.Center'  		Margin = new Thickness (0' 0' 2' 0)  	});  }  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: header.Children.Add (new Ellipse {  	Height = 10'  	Width = 10'  	Fill = MakeBrush (tests.Value.TestStatus)'  	VerticalAlignment = VerticalAlignment.Center'  	Margin = new Thickness (0' 0' 2' 0)  });  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: header.Children.Add (new Ellipse {  	Height = 10'  	Width = 10'  	Fill = MakeBrush (tests.Value.TestStatus)'  	VerticalAlignment = VerticalAlignment.Center'  	Margin = new Thickness (0' 0' 2' 0)  });  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,AddTests,The following statement contains a magic number: header.Children.Add (new Ellipse {  	Height = 10'  	Width = 10'  	Fill = MakeBrush (tests.Value.TestStatus)'  	VerticalAlignment = VerticalAlignment.Center'  	Margin = new Thickness (0' 0' 2' 0)  });  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
Magic Number,fitIf,MainWindow,F:\newReposMay17\jediwhale_fitsharp\source\fitIf1\MainWindow.xaml.cs,MakeBrush,The following statement contains a magic number: return status == TestStatus.Right ? new SolidColorBrush (Color.FromRgb (170' 255' 170)) : status == TestStatus.Wrong ? new SolidColorBrush (Color.FromRgb (255' 170' 170)) : status == TestStatus.Exception ? new SolidColorBrush (Color.FromRgb (255' 255' 170)) : new SolidColorBrush (Color.FromRgb (204' 204' 204));  
