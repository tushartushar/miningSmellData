Implementation smell,Namespace,Class,File,Method,Description
Complex Method,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadCString,Cyclomatic complexity of the method is 8
Complex Method,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,Cyclomatic complexity of the method is 9
Complex Method,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadRLE,Cyclomatic complexity of the method is 9
Complex Method,GameRes,TreeArchiveFileSystem,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FileSystem.cs,ChDir,Cyclomatic complexity of the method is 10
Complex Method,GameRes,FileSystemStack,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FileSystem.cs,ChDir,Cyclomatic complexity of the method is 8
Complex Method,GameRes,FormatCatalog,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FormatCatalog.cs,AddAliases,Cyclomatic complexity of the method is 9
Complex Method,GameRes,FormatCatalog,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FormatCatalog.cs,FindFormats,Cyclomatic complexity of the method is 9
Complex Method,GameRes,BmpFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadMetaData,Cyclomatic complexity of the method is 8
Complex Method,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,Cyclomatic complexity of the method is 13
Complex Method,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadMetaData,Cyclomatic complexity of the method is 20
Complex Method,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadValue,Cyclomatic complexity of the method is 8
Complex Method,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,Cyclomatic complexity of the method is 11
Complex Method,GameRes.Utility.Serialization,BinaryStreamExtension,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\StructSerialization.cs,ReadField,Cyclomatic complexity of the method is 14
Long Parameter List,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,Create,The method has 5 parameters. Parameters: info' format' palette' pixel_data' stride
Long Parameter List,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,CreateFlipped,The method has 5 parameters. Parameters: info' format' palette' pixel_data' stride
Complex Conditional,GameRes,WaveAudio,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\AudioWAV.cs,TryOpen,The conditional expression  "0xFFFF == tag || 0x676F == tag || 0x6770 == tag || 0x674F == tag"  is complex.
Complex Conditional,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The conditional expression  "bpp != 1 && bpp != 2 && bpp != 4 && bpp != 8 && bpp != 16"  is complex.
Complex Conditional,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The conditional expression  "bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8"  is complex.
Empty Catch Block,GameRes,ImageFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,FindFormat,The method has an empty catch block.
Empty Catch Block,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The method has an empty catch block.
Magic Number,GameRes,ArcFile,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcFile.cs,TryOpen,The following statement contains a magic number: entry.Size < 4
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt16,The following statement contains a magic number: EnsureAvailable (2);
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt16,The following statement contains a magic number: m_buffer_pos += 2;
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt24,The following statement contains a magic number: EnsureAvailable (3);
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt24,The following statement contains a magic number: m_buffer_pos += 3;
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt32,The following statement contains a magic number: EnsureAvailable (4);
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt32,The following statement contains a magic number: m_buffer_pos += 4;
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt64,The following statement contains a magic number: EnsureAvailable (8);
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadInt64,The following statement contains a magic number: m_buffer_pos += 8;
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadCString,The following statement contains a magic number: var string_buf = new byte[Math.Max (0x20' available * 2)];
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadCString,The following statement contains a magic number: Array.Resize (ref string_buf' checked(size*3/2));
Magic Number,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,ReadCString,The following statement contains a magic number: Array.Resize (ref string_buf' checked(size*3/2));
Magic Number,GameRes,StreamExtension,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadStringUntil,The following statement contains a magic number: byte[] buffer = new byte[16];
Magic Number,GameRes,StreamExtension,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadStringUntil,The following statement contains a magic number: Array.Resize (ref buffer' checked(size/2*3));
Magic Number,GameRes,StreamExtension,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadStringUntil,The following statement contains a magic number: Array.Resize (ref buffer' checked(size/2*3));
Magic Number,GameRes,ArcView,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,InitFromStream,The following statement contains a magic number: var buffer = new byte[81920];
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadUInt16,The following statement contains a magic number: StrictReserve (offset' 2);
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadInt16,The following statement contains a magic number: StrictReserve (offset' 2);
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadUInt32,The following statement contains a magic number: StrictReserve (offset' 4);
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadInt32,The following statement contains a magic number: StrictReserve (offset' 4);
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadUInt64,The following statement contains a magic number: StrictReserve (offset' 8);
Magic Number,GameRes,Frame,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadInt64,The following statement contains a magic number: StrictReserve (offset' 8);
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: switch (meta.BPP)                  {                  default: throw new InvalidFormatException();                  case 8:                      if (1 == meta.ColormapType)                          Format = PixelFormats.Indexed8;                      else                          Format = PixelFormats.Gray8;                      break;                  case 15: Format = PixelFormats.Bgr555; break;                  case 16: Format = PixelFormats.Bgr555; break;                  case 32: Format = PixelFormats.Bgra32; break;                  case 24:                      if (8 == (meta.Descriptor & 0xf))                          Format = PixelFormats.Bgr32;                      else                          Format = PixelFormats.Bgr24;                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: int colormap_size = meta.ColormapLength * meta.ColormapDepth / 8;
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: m_stride = m_width * ((Format.BitsPerPixel+7) / 8);
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Reader,The following statement contains a magic number: m_stride = m_width * ((Format.BitsPerPixel+7) / 8);
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadColormap,The following statement contains a magic number: 24 != depth && 32 != depth
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadColormap,The following statement contains a magic number: 24 != depth && 32 != depth
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadColormap,The following statement contains a magic number: int pixel_size = depth / 8;
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,ReadColormap,The following statement contains a magic number: byte r = palette_data[i*pixel_size+2];
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,Reader,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcView.cs,Unpack,The following statement contains a magic number: switch (m_meta.ImageType)                  {                  case 9:  // Runlength encoded color-mapped images.                  case 32: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.                  case 33: // Compressed color-mapped data' using Huffman' Delta' and                          // runlength encoding.  4-pass quadtree-type process.                      throw new NotImplementedException();                  default:                      throw new InvalidFormatException();                  case 1:  // Uncompressed' color-mapped images.                  case 2:  // Uncompressed' RGB images.                  case 3:  // Uncompressed' black and white images.                      ReadRaw();                      break;                  case 10: // Runlength encoded RGB images.                  case 11: // Compressed' black and white images.                      ReadRLE ((m_meta.BPP+7)/8);                      break;                  }
Magic Number,GameRes,WaveFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Audio.cs,SetBPS,The following statement contains a magic number: AverageBytesPerSecond = (uint)(SamplesPerSecond * Channels * BitsPerSample / 8);
Magic Number,GameRes,WaveAudio,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\AudioWAV.cs,TryOpen,The following statement contains a magic number: !header.AsciiEqual (8' "WAVE")
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,BinaryStream,The following statement contains a magic number: m_buffer_end = m_source.Read (m_buffer' 0' 4);
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadSignature,The following statement contains a magic number: m_header_size >= 4
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt16,The following statement contains a magic number: 2 != FillBuffer (2)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt16,The following statement contains a magic number: 2 != FillBuffer (2)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt16,The following statement contains a magic number: m_buffer_pos += 2;
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt24,The following statement contains a magic number: 3 != FillBuffer (3)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt24,The following statement contains a magic number: 3 != FillBuffer (3)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt24,The following statement contains a magic number: m_buffer_pos += 3;
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt32,The following statement contains a magic number: 4 != FillBuffer (4)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt32,The following statement contains a magic number: 4 != FillBuffer (4)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt32,The following statement contains a magic number: m_buffer_pos += 4;
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt64,The following statement contains a magic number: 8 != FillBuffer (8)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt64,The following statement contains a magic number: 8 != FillBuffer (8)
Magic Number,GameRes,BinaryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt64,The following statement contains a magic number: m_buffer_pos += 8;
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,Init,The following statement contains a magic number: m_length >= 4
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt16,The following statement contains a magic number: m_length - m_position < 2
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt16,The following statement contains a magic number: m_position += 2;
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt24,The following statement contains a magic number: m_length - m_position < 3
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt24,The following statement contains a magic number: m_position += 3;
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt32,The following statement contains a magic number: m_length - m_position < 4
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt32,The following statement contains a magic number: m_position += 4;
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt64,The following statement contains a magic number: m_length - m_position < 8
Magic Number,GameRes,BinMemoryStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\BinaryStream.cs,ReadInt64,The following statement contains a magic number: m_position += 8;
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt16,The following statement contains a magic number: return (ushort)(arr[index] | arr[index+1] << 8);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToInt16,The following statement contains a magic number: return (short)(arr[index] | arr[index+1] << 8);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToInt24,The following statement contains a magic number: return arr[index] | arr[index+1] << 8 | arr[index+2] << 16;
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToInt24,The following statement contains a magic number: return arr[index] | arr[index+1] << 8 | arr[index+2] << 16;
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToInt24,The following statement contains a magic number: return arr[index] | arr[index+1] << 8 | arr[index+2] << 16;
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt32,The following statement contains a magic number: return (uint)(arr[index] | arr[index+1] << 8 | arr[index+2] << 16 | arr[index+3] << 24);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt32,The following statement contains a magic number: return (uint)(arr[index] | arr[index+1] << 8 | arr[index+2] << 16 | arr[index+3] << 24);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt32,The following statement contains a magic number: return (uint)(arr[index] | arr[index+1] << 8 | arr[index+2] << 16 | arr[index+3] << 24);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt32,The following statement contains a magic number: return (uint)(arr[index] | arr[index+1] << 8 | arr[index+2] << 16 | arr[index+3] << 24);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt32,The following statement contains a magic number: return (uint)(arr[index] | arr[index+1] << 8 | arr[index+2] << 16 | arr[index+3] << 24);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt64,The following statement contains a magic number: return (ulong)ToUInt32 (arr' index) | ((ulong)ToUInt32 (arr' index+4) << 32);
Magic Number,GameRes,ByteArrayExt,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ByteArray.cs,ToUInt64,The following statement contains a magic number: return (ulong)ToUInt32 (arr' index) | ((ulong)ToUInt32 (arr' index+4) << 32);
Magic Number,GameRes,TreeArchiveFileSystem,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FileSystem.cs,GetFiles,The following statement contains a magic number: PathDelimiter = match.Groups[2].Value;
Magic Number,GameRes,FileNameGlob,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FileSystem.cs,FileNameGlob,The following statement contains a magic number: pattern = pattern.Remove (pattern.Length-4) + @"(?:\..*)?";
Magic Number,GameRes,FormatCatalog,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FormatCatalog.cs,ReadSignature,The following statement contains a magic number: signature |= (uint)file.ReadByte() << 8;
Magic Number,GameRes,FormatCatalog,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FormatCatalog.cs,ReadSignature,The following statement contains a magic number: signature |= (uint)file.ReadByte() << 16;
Magic Number,GameRes,FormatCatalog,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\FormatCatalog.cs,ReadSignature,The following statement contains a magic number: signature |= (uint)file.ReadByte() << 24;
Magic Number,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,ImageData,The following statement contains a magic number: SetDefaultDpi (96' 96);
Magic Number,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,ImageData,The following statement contains a magic number: SetDefaultDpi (96' 96);
Magic Number,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,Create,The following statement contains a magic number: return Create (info' format' palette' pixel_data' (int)info.Width*((format.BitsPerPixel+7)/8));
Magic Number,GameRes,ImageData,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,Create,The following statement contains a magic number: return Create (info' format' palette' pixel_data' (int)info.Width*((format.BitsPerPixel+7)/8));
Magic Number,GameRes,ImageFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,ReadColorMap,The following statement contains a magic number: int bpp = PaletteFormat.Rgb == format || PaletteFormat.Bgr == format ? 3 : 4;
Magic Number,GameRes,ImageFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,ReadColorMap,The following statement contains a magic number: int bpp = PaletteFormat.Rgb == format || PaletteFormat.Bgr == format ? 3 : 4;
Magic Number,GameRes,ImageFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Image.cs,ReadColorMap,The following statement contains a magic number: get_color = x => Color.FromRgb (palette_data[x+2]' palette_data[x+1]' palette_data[x]);
Magic Number,GameRes,BmpFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadMetaData,The following statement contains a magic number: size < 14+header_size
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,Read,The following statement contains a magic number: uint bmp_length = width_x_height * (uint)info.BPP/8 + info.ImageOffset;
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,Read,The following statement contains a magic number: bmp_length == info.ImageLength || bmp_length+2 == info.ImageLength
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadBitmapWithAlpha,The following statement contains a magic number: int dst_stride = (int)info.Width * 4;
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadBitmapWithAlpha,The following statement contains a magic number: file.Read (pixels' dst+x' 3);
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadBitmapWithAlpha,The following statement contains a magic number: pixels[dst+x+3] = alpha[a_src++];
Magic Number,GameRes,BitmapWithAlpha,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageBMP.cs,ReadBitmapBGRA,The following statement contains a magic number: int stride = (int)info.Width * 4;
Magic Number,GameRes,JpegFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageJPEG.cs,ReadMetaData,The following statement contains a magic number: length < 8
Magic Number,GameRes,JpegFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageJPEG.cs,ReadMetaData,The following statement contains a magic number: file.Seek (length-2' SeekOrigin.Current);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,Write,The following statement contains a magic number: long header_pos = 8;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,Write,The following statement contains a magic number: file.Write (buf' 0' (int)(header_pos+header_length+12));
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,Write,The following statement contains a magic number: mem_stream.Position = header_pos+header_length+12;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadChunkLength,The following statement contains a magic number: int length = file.ReadByte() << 24;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadChunkLength,The following statement contains a magic number: length |= file.ReadByte() << 16;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadChunkLength,The following statement contains a magic number: length |= file.ReadByte() << 8;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,WriteOffsChunk,The following statement contains a magic number: bin.Write (Binary.BigEndian ((uint)9));
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,WriteOffsChunk,The following statement contains a magic number: uint crc = Crc32.Compute (membuf.GetBuffer()' 4' 13);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,WriteOffsChunk,The following statement contains a magic number: uint crc = Crc32.Compute (membuf.GetBuffer()' 4' 13);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,WriteOffsChunk,The following statement contains a magic number: file.Write (membuf.GetBuffer()' 0' 9+12);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,WriteOffsChunk,The following statement contains a magic number: file.Write (membuf.GetBuffer()' 0' 9+12);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: byte[] chunk_type = file.ReadBytes (4);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: bpp != 1 && bpp != 2 && bpp != 4 && bpp != 8 && bpp != 16
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: bpp != 1 && bpp != 2 && bpp != 4 && bpp != 8 && bpp != 16
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: bpp != 1 && bpp != 2 && bpp != 4 && bpp != 8 && bpp != 16
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: bpp != 1 && bpp != 2 && bpp != 4 && bpp != 8 && bpp != 16
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: switch (color_type)              {              case 2: meta.BPP = bpp*3; break;              case 3: meta.BPP = 24; break;              case 4: meta.BPP = bpp*2; break;              case 6: meta.BPP = bpp*4; break;              case 0: meta.BPP = bpp; break;              default: return null;              }
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: SkipBytes (file' 7);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: file.Read (chunk_type' 0' 4);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,ReadMetaData,The following statement contains a magic number: SkipBytes (file' chunk_size+4);
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The following statement contains a magic number: var buf = new byte[4];
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The following statement contains a magic number: file.Position = 8;
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The following statement contains a magic number: 4 != file.Read (buf' 0' 4)
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The following statement contains a magic number: 4 != file.Read (buf' 0' 4)
Magic Number,GameRes,PngFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImagePNG.cs,FindChunk,The following statement contains a magic number: file.Position += chunk_size + 4;
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,Write,The following statement contains a magic number: file.Write ((byte)2);
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,Write,The following statement contains a magic number: bpp = 24;
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,Write,The following statement contains a magic number: stride = (int)image.Width*3;
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: bpp != 32 && bpp != 24 && bpp != 16 && bpp != 15 && bpp != 8
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: uint colormap_offset = (uint)(18 + id_length);
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,TgaFormat,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTGA.cs,ReadMetaData,The following statement contains a magic number: switch (image_type)              {              default: return null;              case 1:  // Uncompressed' color-mapped images.              case 9:  // Runlength encoded color-mapped images.              case 32: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.              case 33: // Compressed color-mapped data' using Huffman' Delta' and                      // runlength encoding.  4-pass quadtree-type process.                  if (colormap_depth != 24 && colormap_depth != 32)                      return null;                  break;              case 2:  // Uncompressed' RGB images.              case 3:  // Uncompressed' black and white images.              case 10: // Runlength encoded RGB images.              case 11: // Compressed' black and white images.                  break;              }
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,Parser,The following statement contains a magic number: m_first_ifd = file.ReadHeader (8).ToUInt32 (4);
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,Parser,The following statement contains a magic number: m_first_ifd = file.ReadHeader (8).ToUInt32 (4);
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,FindLastIFD,The following statement contains a magic number: ifd += 2 + tag_count*12;
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,FindLastIFD,The following statement contains a magic number: ifd += 2 + tag_count*12;
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadMetaData,The following statement contains a magic number: ifd += 2;
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadMetaData,The following statement contains a magic number: switch ((TIFF)tag)                              {                              case TIFF.ImageWidth:                                  if (1 == count)                                      if (ReadOffsetValue (type' out width))                                          parsed |= MetaParsed.Width;                                  break;                              case TIFF.ImageHeight:                                  if (1 == count)                                      if (ReadOffsetValue (type' out height))                                          parsed |= MetaParsed.Height;                                  break;                              case TIFF.XPosition:                                  if (1 == count)                                      if (ReadOffsetValue (type' out pos_x))                                          parsed |= MetaParsed.PosX;                                  break;                              case TIFF.YPosition:                                  if (1 == count)                                      if (ReadOffsetValue (type' out pos_y))                                          parsed |= MetaParsed.PosY;                                  break;                              case TIFF.BitsPerSample:                                  if (count * GetTypeSize (type) > 4)                                  {                                      var bpp_offset = ReadUInt32();                                      m_file.Position = bpp_offset;                                  }                                  bpp = 0;                                  for (uint b = 0; b < count; ++b)                                  {                                      int plane = 0;                                      ReadValue (type' out plane);                                      bpp += plane;                                  }                                  parsed |= MetaParsed.BPP;                                  break;                              default:                                  break;                              }
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadMetaData,The following statement contains a magic number: ifd += 12;
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadOffsetValue,The following statement contains a magic number: GetTypeSize (type) > 4
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadFloat,The following statement contains a magic number: var convert_buffer = new byte[4];
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadFloat,The following statement contains a magic number: 4 != m_file.Read (convert_buffer' 0' 4)
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadFloat,The following statement contains a magic number: 4 != m_file.Read (convert_buffer' 0' 4)
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadDouble,The following statement contains a magic number: var convert_buffer = new byte[8];
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadDouble,The following statement contains a magic number: 8 != m_file.Read (convert_buffer' 0' 8)
Magic Number,GameRes,Parser,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ImageTIFF.cs,ReadDouble,The following statement contains a magic number: 8 != m_file.Read (convert_buffer' 0' 8)
Magic Number,GameRes.Utility,Crc32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,InitializeTable,The following statement contains a magic number: uint[] table = new uint[256];
Magic Number,GameRes.Utility,Crc32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,InitializeTable,The following statement contains a magic number: k < 8
Magic Number,GameRes.Utility,Crc32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,InitializeTable,The following statement contains a magic number: n < 256
Magic Number,GameRes.Utility,Crc32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,UpdateCrc,The following statement contains a magic number: c = crc_table[(c ^ buf[pos+n]) & 0xff] ^ (c >> 8);
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: uint sum2 = (adler >> 16) & 0xffff;
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: return adler | (sum2 << 16);
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: return adler | (sum2 << 16);
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: len < 16
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: int n = NMAX / 16;
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[2];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[3];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[4];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[5];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[6];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[7];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[8];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[9];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[10];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[11];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[12];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[13];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[14];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[15];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: buf += 16;
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: len -= 16;
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[2];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[3];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[4];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[5];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[6];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[7];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[8];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[9];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[10];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[11];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[12];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[13];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[14];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: adler += buf[15];
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: buf += 16;
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: len >= 16
Magic Number,GameRes.Utility,Adler32,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Checksum.cs,Update,The following statement contains a magic number: return adler | (sum2 << 16);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return u << 24 | (u & 0xff00) << 8 | (u & 0xff0000) >> 8 | u >> 24;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return u << 24 | (u & 0xff00) << 8 | (u & 0xff0000) >> 8 | u >> 24;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return u << 24 | (u & 0xff00) << 8 | (u & 0xff0000) >> 8 | u >> 24;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return u << 24 | (u & 0xff00) << 8 | (u & 0xff0000) >> 8 | u >> 24;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return (ushort)(u << 8 | u >> 8);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return (ushort)(u << 8 | u >> 8);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return (ulong)BigEndian((uint)(u & 0xffffffff)) << 32                   | (ulong)BigEndian((uint)(u >> 32));
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,BigEndian,The following statement contains a magic number: return (ulong)BigEndian((uint)(u & 0xffffffff)) << 32                   | (ulong)BigEndian((uint)(u >> 32));
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotR,The following statement contains a magic number: return v >> count | v << (32-count);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotL,The following statement contains a magic number: return v << count | v >> (32-count);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotR,The following statement contains a magic number: return v >> count | v << (64-count);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotL,The following statement contains a magic number: return v << count | v >> (64-count);
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotByteR,The following statement contains a magic number: count &= 7;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotByteR,The following statement contains a magic number: return (byte)(v >> count | v << (8-count));
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotByteL,The following statement contains a magic number: count &= 7;
Magic Number,GameRes.Utility,Binary,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,RotByteL,The following statement contains a magic number: return (byte)(v << count | v >> (8-count));
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt16,The following statement contains a magic number: return (ushort)(value[index] << 8 | value[index+1]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToInt16,The following statement contains a magic number: return (short)(value[index] << 8 | value[index+1]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] << 24 | value[index+1] << 16 | value[index+2] << 8 | value[index+3]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] << 24 | value[index+1] << 16 | value[index+2] << 8 | value[index+3]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] << 24 | value[index+1] << 16 | value[index+2] << 8 | value[index+3]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] << 24 | value[index+1] << 16 | value[index+2] << 8 | value[index+3]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] << 24 | value[index+1] << 16 | value[index+2] << 8 | value[index+3]);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index]   = (byte)(value >> 8);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index]   = (byte)(value >> 24);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+1] = (byte)(value >> 16);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+2] = (byte)(value >> 8);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+2] = (byte)(value >> 8);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+3] = (byte)(value);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: Pack ((uint)(value >> 32)' buf' index);
Magic Number,GameRes.Utility,BigEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: Pack ((uint)value' buf' index+4);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt16,The following statement contains a magic number: return (ushort)(value[index] | value[index+1] << 8);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToInt16,The following statement contains a magic number: return (short)(value[index] | value[index+1] << 8);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] | value[index+1] << 8 | value[index+2] << 16 | value[index+3] << 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] | value[index+1] << 8 | value[index+2] << 16 | value[index+3] << 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] | value[index+1] << 8 | value[index+2] << 16 | value[index+3] << 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] | value[index+1] << 8 | value[index+2] << 16 | value[index+3] << 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt32,The following statement contains a magic number: return (uint)(value[index] | value[index+1] << 8 | value[index+2] << 16 | value[index+3] << 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt64,The following statement contains a magic number: return (ulong)ToUInt32 (value' index) | ((ulong)ToUInt32 (value' index+4) << 32);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,ToUInt64,The following statement contains a magic number: return (ulong)ToUInt32 (value' index) | ((ulong)ToUInt32 (value' index+4) << 32);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+1] = (byte)(value >> 8);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+1] = (byte)(value >> 8);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+2] = (byte)(value >> 16);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+2] = (byte)(value >> 16);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+3] = (byte)(value >> 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: buf[index+3] = (byte)(value >> 24);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: Pack ((uint)(value >> 32)' buf' index+4);
Magic Number,GameRes.Utility,LittleEndian,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,Pack,The following statement contains a magic number: Pack ((uint)(value >> 32)' buf' index+4);
Magic Number,GameRes.Utility,AsciiString,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,GetHashCode,The following statement contains a magic number: int hash = 5381;
Magic Number,GameRes.Utility,AsciiString,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,GetHashCode,The following statement contains a magic number: hash = ((hash << 5) + hash) ^ Value[i];
Magic Number,GameRes.Utility,AsciiString,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\Utility.cs,GetHashCode,The following statement contains a magic number: return hash ^ (hash * 1566083941);
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitDecompress,The following statement contains a magic number: (0x78 != b1 && 0x58 != b1) || 0 != (b1 << 8 | b2) % 31
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitDecompress,The following statement contains a magic number: (0x78 != b1 && 0x58 != b1) || 0 != (b1 << 8 | b2) % 31
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitCompress,The following statement contains a magic number: int cmf = 0x7800 | flevel << 6;
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitCompress,The following statement contains a magic number: cmf = ((cmf + 30) / 31) * 31;
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitCompress,The following statement contains a magic number: cmf = ((cmf + 30) / 31) * 31;
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitCompress,The following statement contains a magic number: cmf = ((cmf + 30) / 31) * 31;
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,InitCompress,The following statement contains a magic number: stream.WriteByte ((byte)(cmf >> 8));
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,WriteCheckSum,The following statement contains a magic number: output.WriteByte ((byte)(checksum >> 24));
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,WriteCheckSum,The following statement contains a magic number: output.WriteByte ((byte)(checksum >> 16));
Magic Number,GameRes.Compression,ZLibStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ZLibStream.cs,WriteCheckSum,The following statement contains a magic number: output.WriteByte ((byte)(checksum >> 8));
Missing Default,GameRes,ArcViewStream,C:\research\architectureSmells\repos\morkt_GARbro\GameRes\ArcStream.cs,Seek,The following switch statement is missing a default case: switch (origin)             {             case SeekOrigin.Current:    offset += Position; break;             case SeekOrigin.End:        offset += m_size; break;             }
