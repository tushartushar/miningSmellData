Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitExchange,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitExchange.cs,RabbitExchange,The method has 5 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitQueue,The method has 5 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitQueue,The method has 8 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitQueue,The method has 10 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitQueue,The method has 11 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitDeadLetterQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitDeadLetterQueue,The method has 5 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitDeadLetterQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitDeadLetterQueue,The method has 8 parameters.
Long Parameter List,RabbitBus.Specs.Infrastructure,RabbitDeadLetterQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,RabbitDeadLetterQueue,The method has 9 parameters.
Long Statement,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,RepeatUntilSuccessfulOrTimeout,The length of the statement  "			Console.WriteLine ("Observation failed. Retrying observation for " + (Timeout - DateTime.Now.Subtract (start).Seconds) + " seconds."); " is 134.
Long Statement,RabbitBus.Specs.Infrastructure,RabbitExchange,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitExchange.cs,Publish,The length of the statement  "	Console.WriteLine (string.Format ("Publishing message to exchange:\'{0}\' routing key:\'{1}\'"' _exchangeName' routingKey)' TraceEventType.Information); " is 152.
Empty Catch Block,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,GetMessage,The method has an empty catch block.
Empty Catch Block,RabbitBus.Specs.Infrastructure,RabbitQueue,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\RabbitQueue.cs,GetMessageProperties,The method has an empty catch block.
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,BlockUntil,The following statement contains a magic number: return () => {  	DateTime start = DateTime.Now;  	action ();  	while (!predicate ()) {  		if (DateTime.Now.Subtract (start).Seconds >= Timeout) {  			Console.WriteLine ("Timeout");  			break;  		}  		Thread.Sleep (1000);  	}  };  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,BlockUntil,The following statement contains a magic number: while (!predicate ()) {  	if (DateTime.Now.Subtract (start).Seconds >= Timeout) {  		Console.WriteLine ("Timeout");  		break;  	}  	Thread.Sleep (1000);  }  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,BlockUntil,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,ExecuteUntil,The following statement contains a magic number: return () => {  	DateTime start = DateTime.Now;  	while (!predicate ()) {  		action ();  		if (DateTime.Now.Subtract (start).Seconds >= Timeout)  			break;  		Thread.Sleep (1000);  	}  };  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,ExecuteUntil,The following statement contains a magic number: while (!predicate ()) {  	action ();  	if (DateTime.Now.Subtract (start).Seconds >= Timeout)  		break;  	Thread.Sleep (1000);  }  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,ExecuteUntil,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,RepeatUntilSuccessfulOrTimeout,The following statement contains a magic number: do {  	try {  		exception = null;  		action ();  	} catch (Exception e) {  		Console.WriteLine ("Observation failed. Retrying observation for " + (Timeout - DateTime.Now.Subtract (start).Seconds) + " seconds.");  		exception = e;  		Thread.Sleep (1000);  	}  	if (DateTime.Now.Subtract (start).Seconds >= Timeout) {  		break;  	}  } while (exception != null);  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,RepeatUntilSuccessfulOrTimeout,The following statement contains a magic number: try {  	exception = null;  	action ();  } catch (Exception e) {  	Console.WriteLine ("Observation failed. Retrying observation for " + (Timeout - DateTime.Now.Subtract (start).Seconds) + " seconds.");  	exception = e;  	Thread.Sleep (1000);  }  
Magic Number,RabbitBus.Specs.Infrastructure,ActionExtensions,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\ActionExtensions.cs,RepeatUntilSuccessfulOrTimeout,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,RabbitBus.Specs.Infrastructure,Wait,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\Wait.cs,Until,The following statement contains a magic number: while (!predicate ()) {  	if (DateTime.Now.Subtract (start).Seconds >= Timeout) {  		Console.WriteLine ("Timeout exceeded.");  		break;  	}  	Thread.Sleep (1000);  }  
Magic Number,RabbitBus.Specs.Infrastructure,Wait,F:\newReposMay17\derekgreer_rabbitBus\src\RabbitBus.Specs\Infrastructure\Wait.cs,Until,The following statement contains a magic number: Thread.Sleep (1000);  
