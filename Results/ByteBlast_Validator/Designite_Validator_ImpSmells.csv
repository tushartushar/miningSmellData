Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsFqdn,Cyclomatic complexity of the method is 10
Long Parameter List,Validator,UrlOptions,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsUrl.cs,UrlOptions,The method has 5 parameters. Parameters: protocols' requireTld' requireProtocol' allowUnderscores' allowTrailingDot
Long Statement,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsUrl,The length of the statement  "            if (string.IsNullOrEmpty(url) || url.Length >= 2083 || url.StartsWith("mailto:"' StringComparison.InvariantCultureIgnoreCase)) " is 126.
Long Statement,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsUrl,The length of the statement  "            // as we trim down the url string to verify. In other words' most of these methods remove the portion of the string that they validate " is 134.
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsBase64,The following statement contains a magic number: input.Length == 0 || input.Length%4 != 0
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsBase64,The following statement contains a magic number: input.Length - valueWithoutPadding.Length > 2
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: var sumOfDigits = input                  .Where((e) => e >= '0' && e <= '9')                  .Reverse()                  .Select((e' i) => (e - 48) * (i % 2 == 0 ? 1 : 2))                  .Sum((e) => e / 10 + e % 10);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: var sumOfDigits = input                  .Where((e) => e >= '0' && e <= '9')                  .Reverse()                  .Select((e' i) => (e - 48) * (i % 2 == 0 ? 1 : 2))                  .Sum((e) => e / 10 + e % 10);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: var sumOfDigits = input                  .Where((e) => e >= '0' && e <= '9')                  .Reverse()                  .Select((e' i) => (e - 48) * (i % 2 == 0 ? 1 : 2))                  .Sum((e) => e / 10 + e % 10);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: var sumOfDigits = input                  .Where((e) => e >= '0' && e <= '9')                  .Reverse()                  .Select((e' i) => (e - 48) * (i % 2 == 0 ? 1 : 2))                  .Sum((e) => e / 10 + e % 10);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: var sumOfDigits = input                  .Where((e) => e >= '0' && e <= '9')                  .Reverse()                  .Select((e' i) => (e - 48) * (i % 2 == 0 ? 1 : 2))                  .Sum((e) => e / 10 + e % 10);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsCreditCard,The following statement contains a magic number: return sumOfDigits % 10 == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: var factor = new[] { 1' 3 };
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: checksum += factor[i % 2] * int.Parse(input[i].ToString());
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: i < 12
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: return int.Parse(input[12].ToString()) - ((10 - (checksum % 10)) % 10) == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: return int.Parse(input[12].ToString()) - ((10 - (checksum % 10)) % 10) == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: return int.Parse(input[12].ToString()) - ((10 - (checksum % 10)) % 10) == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn13,The following statement contains a magic number: return int.Parse(input[12].ToString()) - ((10 - (checksum % 10)) % 10) == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn10,The following statement contains a magic number: i < 9
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn10,The following statement contains a magic number: checksum += 10*10;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn10,The following statement contains a magic number: checksum += 10*10;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn10,The following statement contains a magic number: input[9] == 'X'
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn10,The following statement contains a magic number: return checksum % 11 == 0;
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsUrl,The following statement contains a magic number: string.IsNullOrEmpty(url) || url.Length >= 2083 || url.StartsWith("mailto:"' StringComparison.InvariantCultureIgnoreCase)
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,CheckProtocol,The following statement contains a magic number: output.NewUrl = url.Substring(protocolEndIndex + 3);
Magic Number,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIp,The following statement contains a magic number: return parts.Max() <= 255;
Missing Default,Validator,Validator,D:\research\architectureSmells\repos\ByteBlast_Validator\Validator\IsBase64.cs,IsIsbn,The following switch statement is missing a default case: switch (version)              {                  case IsbnVersion.Any:                      return IsIsbn10(input) || IsIsbn13(input);                  case IsbnVersion.Thirteen:                      return IsIsbn13(input);                  case IsbnVersion.Ten:                      return IsIsbn10(input);              }
