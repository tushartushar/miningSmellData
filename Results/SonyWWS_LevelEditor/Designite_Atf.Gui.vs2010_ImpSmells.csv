Implementation smell,Namespace,Class,File,Method,Description
Long Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,Initialize,The method has 120 lines of code.
Long Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPins,The method has 129 lines of code.
Long Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The method has 105 lines of code.
Long Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The method has 137 lines of code.
Long Method,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentIn,The method has 101 lines of code.
Long Method,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,SetSelection,The method has 281 lines of code.
Complex Method,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,SetActiveClient,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CompareTags,Cyclomatic complexity of the method is 15
Complex Method,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,RegisterUserSettings,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Applications,StandardFileCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardFileCommands.cs,GetNewDocumentUri,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications,StandardFileCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardFileCommands.cs,DoCommand,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,Initialize,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,CanDoCommand,Cyclomatic complexity of the method is 14
Complex Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoCommand,Cyclomatic complexity of the method is 12
Complex Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoCheckIn,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoRevert,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications,RecentDocumentCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\RecentDocumentCommands.cs,UpdateCommand,Cyclomatic complexity of the method is 14
Complex Method,Sce.Atf.Applications,RecentDocumentCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\RecentDocumentCommands.cs,UpdateRecentFilesMenuItems,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications,SelectionContexts,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ISelectionContext.cs,ToggleRange,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,GetStandardCommand,Cyclomatic complexity of the method is 43
Complex Method,Sce.Atf.Applications,StandardLockCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardLockCommands.cs,CanDoCommand,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Applications.NetworkTargetServices,TargetCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TargetCommands.cs,CanDoCommand,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Applications.NetworkTargetServices,TargetCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TargetCommands.cs,DoCommand,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications.NetworkTargetServices,TcpIpTargetInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TcpIpTargetInfo.cs,Validate,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Applications.NetworkTargetServices,TcpIpTargetProvider,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TcpIpTargetProvider.cs,settingsService_Saving,Cyclomatic complexity of the method is 12
Complex Method,Sce.Atf.Collections,ChildChangeListener,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\CollectionChangedListener.cs,ResetChildListener,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Collections,LinkedListExtensions,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\LinkedListExtensions.cs,FindNext,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Collections,LinkedListExtensions,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\LinkedListExtensions.cs,FindPrevious,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Controls.Adaptable,D2dDiagramTheme,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\D2dDiagramTheme.cs,GetOutLineBrush,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,CircuitUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\CircuitUtil.cs,GetDomNodeName,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,CircuitUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\CircuitUtil.cs,EdgeRouteTraverser,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPinInfo,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdatePinOrders,Cyclomatic complexity of the method is 16
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPins,Cyclomatic complexity of the method is 18
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,RemoveDanglingGroupPins,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,Cyclomatic complexity of the method is 16
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,CanExposePin,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,Cyclomatic complexity of the method is 17
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,ConstrainCoords,Cyclomatic complexity of the method is 10
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,GroupReference,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\GroupReference.cs,Refresh,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Controls.Adaptable.Graphs,Wire,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Wire.cs,SetPinTarget,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentOut,Cyclomatic complexity of the method is 21
Complex Method,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentIn,Cyclomatic complexity of the method is 22
Complex Method,Sce.Atf.Controls.CurveEditing,HermiteCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\HermiteCurveEvaluator.cs,Evaluate,Cyclomatic complexity of the method is 19
Complex Method,Sce.Atf.Controls.CurveEditing,LinearCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\LinearCurveEvaluator.cs,Evaluate,Cyclomatic complexity of the method is 17
Complex Method,Sce.Atf.Controls.PropertyEditing,FlagsTypeConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\FlagsTypeConverter.cs,ConvertFrom,Cyclomatic complexity of the method is 13
Complex Method,Sce.Atf.Controls.PropertyEditing,FlagsTypeConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\FlagsTypeConverter.cs,ConvertTo,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Controls.PropertyEditing,PropertyUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\PropertyUtils.cs,AreEqual,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,SetSelection,Cyclomatic complexity of the method is 38
Complex Method,Sce.Atf.Dom,HistoryContext,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\HistoryContext.cs,OnEnded,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,GetNode,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Dom,ChildPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildPropertyDescriptor.cs,SetValue,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,GetDescriptor,Cyclomatic complexity of the method is 11
Complex Method,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,CreateObject,Cyclomatic complexity of the method is 8
Complex Method,Sce.Atf.Input,KeysUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\KeysUtil.cs,KeysToString,Cyclomatic complexity of the method is 14
Complex Method,Sce.Atf.Rendering.Dom,RenderObjectList,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\RenderObjectList.cs,Add,Cyclomatic complexity of the method is 9
Complex Method,Sce.Atf.Rendering.Dom,SceneGraphBuilder,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\SceneGraphBuilder.cs,BuildNodeInternal,Cyclomatic complexity of the method is 10
Long Parameter List,Sce.Atf.Applications,ApplicationUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ApplicationUtil.cs,Insert,The method has 5 parameters. Parameters: context' parent' child' operationName' statusService
Long Parameter List,Sce.Atf.Applications,ApplicationUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ApplicationUtil.cs,InsertBetween,The method has 6 parameters. Parameters: context' parent' before' item' operationName' statusService
Long Parameter List,Sce.Atf.Applications,ListChangeCommand<T>,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\Commands\ListChangeCommand.cs,ListChangeCommand,The method has 5 parameters. Parameters: commandName' list' oldElement' newElement' index
Long Parameter List,Sce.Atf.Applications,SourceControlFileInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlFileInfo.cs,SourceControlFileInfo,The method has 6 parameters. Parameters: uri' status' headRevision' revision' isLocked' otherUsers
Long Parameter List,Sce.Atf.Applications,SourceControlFileInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlFileInfo.cs,SourceControlFileInfo,The method has 7 parameters. Parameters: uri' status' headRevision' revision' isLocked' otherUsers' otherLock
Long Parameter List,Sce.Atf.Applications,DocumentClientInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\DocumentClientInfo.cs,DocumentClientInfo,The method has 5 parameters. Parameters: fileType' extension' newIconName' openIconName' multiDocument
Long Parameter List,Sce.Atf.Applications,DocumentClientInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\DocumentClientInfo.cs,DocumentClientInfo,The method has 5 parameters. Parameters: fileType' extensions' newIconName' openIconName' multiDocument
Long Parameter List,Sce.Atf.Applications,DocumentClientInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\DocumentClientInfo.cs,DocumentClientInfo,The method has 5 parameters. Parameters: fileType' extension' newIconKey' openIconKey' multiDocument
Long Parameter List,Sce.Atf.Applications,DocumentClientInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\DocumentClientInfo.cs,DocumentClientInfo,The method has 5 parameters. Parameters: fileType' extensions' newIconKey' openIconKey' multiDocument
Long Parameter List,Sce.Atf.Applications,SetPropertyCommand,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\Commands\SetPropertyCommand.cs,SetPropertyCommand,The method has 5 parameters. Parameters: commandName' component' propertyName' oldValue' newValue
Long Parameter List,Sce.Atf.Applications,SetPropertyCommand,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\Commands\SetPropertyCommand.cs,SetPropertyCommand,The method has 5 parameters. Parameters: commandName' component' descriptor' oldValue' newValue
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 5 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 6 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcut
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 7 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcut' imageName
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 7 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcuts' imageName
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 9 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcut' imageName' visibility' helpUrl
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 9 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcuts' imageName' visibility' helpUrl
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 7 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcut' imageKey
Long Parameter List,Sce.Atf.Applications,CommandInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandInfo.cs,CommandInfo,The method has 8 parameters. Parameters: commandTag' menuTag' groupTag' menuText' description' shortcut' imageKey' visibility
Long Parameter List,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The method has 7 parameters. Parameters: commandService' commandTag' menuTag' groupTag' menuText' description' client
Long Parameter List,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The method has 9 parameters. Parameters: commandService' commandTag' menuTag' groupTag' menuText' description' shortcut' imageName' client
Long Parameter List,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The method has 10 parameters. Parameters: commandService' commandTag' menuTag' groupTag' menuText' description' shortcut' imageName' visibility' client
Long Parameter List,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The method has 9 parameters. Parameters: commandService' commandTag' menuTag' groupTag' menuText' description' shortcut' imageKey' client
Long Parameter List,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The method has 10 parameters. Parameters: commandService' commandTag' menuTag' groupTag' menuText' description' shortcut' imageKey' visibility' client
Long Parameter List,Sce.Atf,Gdi32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Gdi32.cs,CreateDIBSection,The method has 6 parameters. Parameters: hdc' bmi' usage' ppvBits' hSection' dwOffset
Long Parameter List,Sce.Atf,Gdi32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Gdi32.cs,GetDIBits,The method has 7 parameters. Parameters: hDC' hbm' StartScan' ScanLines' lpBits' bmi' usage
Long Parameter List,Sce.Atf,Gdi32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Gdi32.cs,GetDIBits,The method has 7 parameters. Parameters: hdc' hbm' StartScan' ScanLines' lpBits' bmi' usage
Long Parameter List,Sce.Atf,Gdi32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Gdi32.cs,BitBlt,The method has 9 parameters. Parameters: hObject' nXDest' nYDest' nWidth' nHeight' hObjectSource' nXSrc' nYSrc' dwRop
Long Parameter List,Sce.Atf,User32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\User32.cs,PeekMessage,The method has 5 parameters. Parameters: msg' hWnd' messageFilterMin' messageFilterMax' flags
Long Parameter List,Sce.Atf,User32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\User32.cs,MsgWaitForMultipleObjects,The method has 5 parameters. Parameters: nCount' pHandles' bWaitAll' dwMilliseconds' dwWakeMask
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,BeginsubmitBug,The method has 6 parameters. Parameters: shortcutName' title' description' priority' callback' asyncState
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,submitBugAsync,The method has 5 parameters. Parameters: shortcutName' title' description' priority' userState
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,submitBug,The method has 6 parameters. Parameters: shortcutName' username' password' title' description' priority
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,BeginsubmitBug1,The method has 8 parameters. Parameters: shortcutName' username' password' title' description' priority' callback' asyncState
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,submitBug1Async,The method has 6 parameters. Parameters: shortcutName' username' password' title' description' priority
Long Parameter List,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,submitBug1Async,The method has 7 parameters. Parameters: shortcutName' username' password' title' description' priority' userState
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,CircuitUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\CircuitUtil.cs,GetSubGraph,The method has 6 parameters. Parameters: graphContainer' objects' modules' internalConnections' incomingConnections' outgoingConnections
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,ElementType,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\ElementType.cs,ElementType,The method has 6 parameters. Parameters: name' isConnector' size' image' inputPins' outputPins
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,ElementType,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\ElementType.cs,Set,The method has 6 parameters. Parameters: name' isConnector' size' image' inputPins' outputPins
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,D2dGraphRenderer<TNode;TEdge;TEdgeRoute>,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\D2dGraphRenderer.cs,Draw,The method has 7 parameters. Parameters: fromNode' fromRoute' toNode' toRoute' label' endPoint' g
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,D2dGraphRenderer<TNode;TEdge;TEdgeRoute>,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\D2dGraphRenderer.cs,DrawPartialEdge,The method has 8 parameters. Parameters: fromNode' fromRoute' toNode' toRoute' label' startPoint' endPoint' g
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,D2dGraphRenderer<TNode;TEdge;TEdgeRoute>,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\D2dGraphRenderer.cs,Pick,The method has 5 parameters. Parameters: nodes' edges' priorityEdge' p' g
Long Parameter List,Sce.Atf.Controls.Adaptable.Graphs,IEditableGraph,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\IEditableGraph.cs,Connect,The method has 5 parameters. Parameters: fromNode' fromRoute' toNode' toRoute' existingEdge
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 5 parameters. Parameters: owner' expression' displayName' category' description
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 5 parameters. Parameters: ownerType' expression' displayName' category' description
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 7 parameters. Parameters: owner' expression' displayName' category' description' editor' converter
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 7 parameters. Parameters: ownerType' expression' displayName' category' description' editor' converter
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 5 parameters. Parameters: owner' name' displayName' category' description
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 6 parameters. Parameters: owner' name' displayName' category' description' editor
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 7 parameters. Parameters: owner' name' displayName' category' description' editor' converter
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 5 parameters. Parameters: ownerType' name' displayName' category' description
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 6 parameters. Parameters: ownerType' name' displayName' category' description' editor
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,BoundPropertyDescriptor,The method has 7 parameters. Parameters: ownerType' name' displayName' category' description' editor' converter
Long Parameter List,Sce.Atf.Controls.PropertyEditing,BoundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundPropertyDescriptor.cs,Init,The method has 6 parameters. Parameters: owner' ownerType' name' propertyInfo' editor' converter
Long Parameter List,Sce.Atf.Controls.PropertyEditing,CustomizeAttribute,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\CustomizeAttribute.cs,CustomizeAttribute,The method has 9 parameters. Parameters: propertyName' columnWidth' disableSort' disableDragging' disableResize' disableEditing' hideDisplayName' horizontalEditorOffset' nameHasWholeRow
Long Parameter List,Sce.Atf.Controls.PropertyEditing,UnboundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\UnboundPropertyDescriptor.cs,UnboundPropertyDescriptor,The method has 5 parameters. Parameters: type' name' displayName' category' description
Long Parameter List,Sce.Atf.Controls.PropertyEditing,UnboundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\UnboundPropertyDescriptor.cs,UnboundPropertyDescriptor,The method has 6 parameters. Parameters: type' name' displayName' category' description' editor
Long Parameter List,Sce.Atf.Controls.PropertyEditing,UnboundPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\UnboundPropertyDescriptor.cs,UnboundPropertyDescriptor,The method has 7 parameters. Parameters: type' name' displayName' category' description' editor' converter
Long Parameter List,Sce.Atf.Controls.Timelines,GhostInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Timelines\GhostInfo.cs,GhostInfo,The method has 6 parameters. Parameters: obj' target' start' length' bounds' valid
Long Parameter List,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextFormat,The method has 6 parameters. Parameters: fontFamilyName' fontWeight' fontStyle' fontStretch' fontSize' localeName
Long Parameter List,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextLayout,The method has 5 parameters. Parameters: text' textFormat' layoutWidth' layoutHeight' transform
Long Parameter List,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateLinearGradientBrush,The method has 5 parameters. Parameters: pt1' pt2' gradientStops' extendMode' gamma
Long Parameter List,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateRadialGradientBrush,The method has 5 parameters. Parameters: center' gradientOriginOffset' radiusX' radiusY' gradientStops
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawArc,The method has 6 parameters. Parameters: ellipse' brush' startAngle' sweepAngle' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawArc,The method has 6 parameters. Parameters: ellipse' color' startAngle' sweepAngle' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawBezier,The method has 7 parameters. Parameters: pt1' pt2' pt3' pt4' brush' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawBezier,The method has 7 parameters. Parameters: pt1' pt2' pt3' pt4' color' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawBitmap,The method has 5 parameters. Parameters: bmp' destRect' opacity' interpolationMode' sourceRect
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawLine,The method has 7 parameters. Parameters: pt1X' pt1Y' pt2X' pt2Y' brush' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawLine,The method has 7 parameters. Parameters: pt1X' pt1Y' pt2X' pt2Y' color' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pt1' pt2' brush' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawLine,The method has 5 parameters. Parameters: pt1' pt2' color' strokeWidth' strokeStyle
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,FillRectangle,The method has 5 parameters. Parameters: rect' pt1' pt2' color1' color2
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,CreateLinearGradientBrush,The method has 5 parameters. Parameters: pt1' pt2' gradientStops' extendMode' gamma
Long Parameter List,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,CreateRadialGradientBrush,The method has 5 parameters. Parameters: center' gradientOriginOffset' radiusX' radiusY' gradientStops
Long Parameter List,Sce.Atf.Direct2D,D2dLinearGradientBrush,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dLinearGradientBrush.cs,D2dLinearGradientBrush,The method has 6 parameters. Parameters: owner' pt1' pt2' gradientStops' extendMode' gamma
Long Parameter List,Sce.Atf.Direct2D,D2dRadialGradientBrush,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dRadialGradientBrush.cs,D2dRadialGradientBrush,The method has 6 parameters. Parameters: owner' center' gradientOriginOffset' radiusX' radiusY' gradientStops
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawExpander,The method has 6 parameters. Parameters: g' x' y' size' brush' expanded
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawVerticalScaleGrid,The method has 5 parameters. Parameters: g' transform' graphRect' majorSpacing' lineBrush
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The method has 9 parameters. Parameters: g' transform' graphRect' top' majorSpacing' minimumGraphStep' lineBrush' textFormat' textBrush
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,CalculateStep,The method has 5 parameters. Parameters: graphMin' graphMax' screenLength' majorScreenSpacing' minimumGraphSpacing
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawPin,The method has 6 parameters. Parameters: x' y' pinned' toLeft' pen' g
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The method has 6 parameters. Parameters: x' y' size' pen' pinned' g
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The method has 6 parameters. Parameters: x' y' size' pen' pinned' g
Long Parameter List,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The method has 5 parameters. Parameters: g' x' y' size' brush
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 6 parameters. Parameters: name' attributeInfos' childInfo' category' description' isReadOnly
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 7 parameters. Parameters: name' attributeInfos' childInfo' category' description' isReadOnly' editor
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 8 parameters. Parameters: name' attributeInfos' childInfo' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 9 parameters. Parameters: name' attributeInfos' childInfo' category' description' isReadOnly' editor' typeConverter' defaultValues
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 8 parameters. Parameters: name' attributeInfos' childInfos' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildAttributeCollectionPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributeCollectionPropertyDescriptor.cs,ChildAttributeCollectionPropertyDescriptor,The method has 9 parameters. Parameters: name' attributeInfos' childInfos' category' description' isReadOnly' editor' typeConverter' defaultValues
Long Parameter List,Sce.Atf.Dom,NodeTypePaletteItem,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\NodeTypePaletteItem.cs,NodeTypePaletteItem,The method has 6 parameters. Parameters: nodeType' name' description' imageName' category' menuText
Long Parameter List,Sce.Atf.Dom,AttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\AttributePropertyDescriptor.cs,AttributePropertyDescriptor,The method has 5 parameters. Parameters: name' attribute' category' description' isReadOnly
Long Parameter List,Sce.Atf.Dom,AttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\AttributePropertyDescriptor.cs,AttributePropertyDescriptor,The method has 6 parameters. Parameters: name' attribute' category' description' isReadOnly' editor
Long Parameter List,Sce.Atf.Dom,AttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\AttributePropertyDescriptor.cs,AttributePropertyDescriptor,The method has 7 parameters. Parameters: name' attribute' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,AttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\AttributePropertyDescriptor.cs,AttributePropertyDescriptor,The method has 8 parameters. Parameters: name' attribute' category' description' isReadOnly' editor' typeConverter' attributes
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 6 parameters. Parameters: name' attributeInfo' childInfo' category' description' isReadOnly
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 7 parameters. Parameters: name' attributeInfo' childInfo' category' description' isReadOnly' editor
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 8 parameters. Parameters: name' attributeInfo' childInfo' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 9 parameters. Parameters: name' attributeInfo' childInfo' childIndex' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 8 parameters. Parameters: name' attributeInfo' childPath' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildAttributePropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildAttributePropertyDescriptor.cs,ChildAttributePropertyDescriptor,The method has 9 parameters. Parameters: name' attributeInfo' childPath' childIndices' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,ChildPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildPropertyDescriptor.cs,ChildPropertyDescriptor,The method has 5 parameters. Parameters: name' childInfo' category' description' isReadOnly
Long Parameter List,Sce.Atf.Dom,ChildPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildPropertyDescriptor.cs,ChildPropertyDescriptor,The method has 6 parameters. Parameters: name' childInfo' category' description' isReadOnly' editor
Long Parameter List,Sce.Atf.Dom,ChildPropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\ChildPropertyDescriptor.cs,ChildPropertyDescriptor,The method has 7 parameters. Parameters: name' childInfo' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,PropertyDescriptor,The method has 5 parameters. Parameters: name' type' category' description' isReadOnly
Long Parameter List,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,PropertyDescriptor,The method has 6 parameters. Parameters: name' type' category' description' isReadOnly' editor
Long Parameter List,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,PropertyDescriptor,The method has 7 parameters. Parameters: name' type' category' description' isReadOnly' editor' typeConverter
Long Parameter List,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,PropertyDescriptor,The method has 8 parameters. Parameters: name' type' category' description' isReadOnly' editor' typeConverter' attributes
Long Parameter List,Sce.Atf.Input,DragEventArgs,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Input\DragEventArgs.cs,DragEventArgs,The method has 6 parameters. Parameters: data' keyState' x' y' allowedEffect' effect
Long Parameter List,Sce.Atf.Input,MouseEventArgs,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Input\MouseEventArgs.cs,MouseEventArgs,The method has 5 parameters. Parameters: button' clicks' x' y' delta
Long Parameter List,Sce.Atf.Rendering.Dom,IGeometricPick,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IGeometricPick.cs,IntersectRay,The method has 9 parameters. Parameters: ray' camera' renderState' localToWorld' renderAction' intersectionPoint' nearestVert' surfaceNormal' userData
Long Parameter List,Sce.Atf.Rendering.Dom,IIntersectable,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IIntersectable.cs,IntersectRay,The method has 5 parameters. Parameters: ray' backfaceCull' intersectionPoint' nearestVert' normal
Long Parameter List,Sce.Atf.Rendering.Dom,IManipulator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IManipulator.cs,OnHit,The method has 7 parameters. Parameters: hits' x' y' pickAction' renderAction' camera' context
Long Parameter List,Sce.Atf.Rendering.Dom,IManipulator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IManipulator.cs,OnDrag,The method has 7 parameters. Parameters: hits' x' y' pickAction' renderAction' camera' context
Long Parameter List,Sce.Atf.Rendering.Dom,IManipulator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IManipulator.cs,OnEndDrag,The method has 7 parameters. Parameters: hits' x' y' pickAction' renderAction' camera' context
Long Parameter List,Sce.Atf.Rendering.Dom,IPickAction,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IPickAction.cs,Init,The method has 7 parameters. Parameters: camera' x1' y1' x2' y2' multiPick' usePickingFrustum
Long Parameter List,Sce.Atf.Rendering.Dom,IPickAction,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IPickAction.cs,Intersect,The method has 5 parameters. Parameters: camera' x' y' scene' point
Long Parameter List,Sce.Atf.Rendering.Dom,IPickAction,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IPickAction.cs,Intersect,The method has 6 parameters. Parameters: camera' x' y' scene' point' surfaceNormal
Long Parameter List,Sce.Atf.Rendering.Dom,IPickAction,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IPickAction.cs,Intersect,The method has 6 parameters. Parameters: camera' x' y' scene' traverseList' point
Long Parameter List,Sce.Atf.Rendering.Dom,IPickAction,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\IPickAction.cs,Intersect,The method has 6 parameters. Parameters: camera' x' y' scene' point' firstHit
Long Parameter List,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcTransform,The method has 7 parameters. Parameters: translation' rotation' scale' scalePivot' scalePivotTranslate' rotatePivot' rotatePivotTranslate
Long Parameter List,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,GetState,The method has 8 parameters. Parameters: perspective' eye' lookAtPoint' upVector' yFov' nearZ' farZ' focusRadius
Long Parameter List,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetState,The method has 8 parameters. Parameters: viewType' eye' lookAtPoint' upVector' yFov' nearZ' farZ' focusRadius
Long Parameter List,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetOrthographic,The method has 6 parameters. Parameters: right' left' top' bottom' near' far
Long Identifier,Sce.Atf.Applications,WindowLayoutService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WindowLayoutService.cs,,The length of the parameter SettingsLayoutDataAttributeName is 31.
Long Identifier,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,,The length of the parameter getPackageIdOperationCompleted is 30.
Long Identifier,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,,The length of the parameter getLatestVersionInfoOperationCompleted is 38.
Long Identifier,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,,The length of the parameter getMappingPropertiesOperationCompleted is 38.
Long Identifier,Sce.Atf.Dom,PropertyDescriptor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\PropertyDescriptor.cs,,The length of the parameter AnnotationsDisplayNameAttribute is 31.
Long Statement,Sce.Atf.Applications,ScriptingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ScriptingService.cs,ExecuteStatement,The length of the statement  "                //  and if this exception occurs during application initialization (trying to import python modules' e.g. from system import * " is 126.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,CanDoCommand,The length of the statement  "            foreach (IResource anyResource in SourceControlContext.Resources) // only check when SourceControlContext has resources to take care " is 132.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,UpdateCommand,The length of the statement  "                    commandState.Text = SourceControlService.Enabled ? "Disable Source Control".Localize() : "Enable Source Control".Localize(); " is 124.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,documentService_DocumentSaved,The length of the statement  "                var result = MessageBoxes.Show(message' "Add Document to Version Control".Localize("this is the title of a dialog box that is asking a question")' " is 146.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,OnDocumentDirtyChanged,The length of the statement  "            if (SourceControlService == null || document == null || !document.Dirty || CheckoutOnEditBehavior == CheckoutOnEditBehavior.Never) " is 130.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,OnDocumentDirtyChanged,The length of the statement  "                var result = MessageBoxes.Show(message' "Check Out File".Localize("this is the title of a dialog box that is asking a question")' " is 129.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoRevert,The length of the statement  "                if (status != SourceControlStatus.CheckedOut && status != SourceControlStatus.Added && status != SourceControlStatus.Deleted) " is 125.
Long Statement,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoRevert,The length of the statement  "                        if (status == SourceControlStatus.CheckedOut || status == SourceControlStatus.Added || status == SourceControlStatus.Deleted) " is 125.
Long Statement,Sce.Atf.Applications,StandardEditHistoryCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardEditHistoryCommands.cs,UpdateCommand,The length of the statement  "                    commandState.Text = string.Format("Undo {0}".Localize("{0} is the name of the command")' historyContext.UndoDescription); " is 121.
Long Statement,Sce.Atf.Applications,StandardEditHistoryCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardEditHistoryCommands.cs,UpdateCommand,The length of the statement  "                    commandState.Text = string.Format("Redo {0}".Localize("{0} is the name of the command")' historyContext.RedoDescription); " is 121.
Long Statement,Sce.Atf.Applications,RecentDocumentCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\RecentDocumentCommands.cs,documentRegistry_DocumentAdded,The length of the statement  "            if (!File.Exists(document.Uri.LocalPath)) // only list documents that exist; exclude untitled new documents not saved yet " is 121.
Long Statement,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The length of the statement  "            CommandInfo info = new CommandInfo(commandTag' menuTag' groupTag' menuText' description' shortcut' imageName' visibility); " is 122.
Long Statement,Sce.Atf.Applications,CommandServices,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ICommandService.cs,RegisterCommand,The length of the statement  "            CommandInfo info = new CommandInfo(commandTag' menuTag' groupTag' menuText' description' shortcut' imageKey' visibility); " is 121.
Long Statement,Sce.Atf.Applications.NetworkTargetServices,TargetCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TargetCommands.cs,DoCommand,The length of the statement  "                // Invoke "Edit Vita Target in Neighborhood" command merely launches the PSP2 Neighborhood app that comes with  Vita SDK installer'  " is 131.
Long Statement,Sce.Atf.Applications.NetworkTargetServices,TargetCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TargetCommands.cs,DoCommand,The length of the statement  "                // This is intended just for a convenience helper to allow users directly bring up the PSP2 app without a detour to desktop first'  " is 130.
Long Statement,Sce.Atf.Applications.NetworkTargetServices,TargetInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TargetInfo.cs,ToString,The length of the statement  "            return string.Format("Name: {0}' Platform: {1}' Endpoint: {2}' Protocol: {3}' Scope: {4}"' Name' Platform' Endpoint' Protocol' Scope); " is 134.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,OnsubmitBugOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,OnsubmitBugOperationCompleted,The length of the statement  "                submitBugCompleted(this' new submitBugCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 140.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,OnsubmitBug1OperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.submitBug,BugReportingService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.submitBug\BugReportingService.cs,OnsubmitBug1OperationCompleted,The length of the statement  "                submitBug1Completed(this' new submitBug1CompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 142.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetPackageIdOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetPackageIdOperationCompleted,The length of the statement  "                getPackageIdCompleted(this' new getPackageIdCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 146.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetHomePageOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetHomePageOperationCompleted,The length of the statement  "                getHomePageCompleted(this' new getHomePageCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 144.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,getLatestVersionInfoAsync,The length of the statement  "                getLatestVersionInfoOperationCompleted = new System.Threading.SendOrPostCallback(OngetLatestVersionInfoOperationCompleted); " is 123.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetLatestVersionInfoOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetLatestVersionInfoOperationCompleted,The length of the statement  "                getLatestVersionInfoCompleted(this' new getLatestVersionInfoCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 162.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,getMappingPropertiesAsync,The length of the statement  "                getMappingPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(OngetMappingPropertiesOperationCompleted); " is 123.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetMappingPropertiesOperationCompleted,The length of the statement  "                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg)); " is 132.
Long Statement,Sce.Atf.Applications.WebServices.com.scea.ship.versionCheck,VersionCheckerService,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WebServices\Web References\com.scea.ship.versionCheck\VersionCheckerService.cs,OngetMappingPropertiesOperationCompleted,The length of the statement  "                getMappingPropertiesCompleted(this' new getMappingPropertiesCompletedEventArgs(invokeArgs.Results' invokeArgs.Error' invokeArgs.Cancelled' invokeArgs.UserState)); " is 162.
Long Statement,Sce.Atf.Collections,CollectionChangeListener,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\CollectionChangedListener.cs,ListenerPropertyChanged,The length of the statement  "            RaisePropertyChanged(sender' string.Format("{0}{1}{2}"' PropertyName' PropertyName != null ? "[]." : null' e.PropertyName)); " is 124.
Long Statement,Sce.Atf.Collections,ChildChangeListener,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\CollectionChangedListener.cs,ResetChildListener,The length of the statement  "                    throw new InvalidOperationException(string.Format("Was unable to get '{0}' property information from Type '{1}'"' propertyName' m_type.Name)); " is 142.
Long Statement,Sce.Atf.Collections,ChildChangeListener,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Collections\CollectionChangedListener.cs,RaisePropertyChanged,The length of the statement  "            base.RaisePropertyChanged(sender' string.Format("{0}{1}{2}"' PropertyName' PropertyName != null ? "." : null' propertyName)); " is 125.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Circuit,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Circuit.cs,DomNode_AttributeChanged,The length of the statement  "                    CircuitUtil.GetDomNodeName(DomNode)'  CircuitUtil.GetDomNodeName(e.DomNode)' e.AttributeInfo.Name' e.OldValue' e.NewValue); " is 123.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Update,The length of the statement  "            //if (DomNode.Parent != null && DomNode.Parent.Is<ICircuitContainer>()) // propagate changes up for newly added or removed floating pins " is 136.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The length of the statement  "                var orderdInputs = m_inputs.OrderBy(n => n.InternalElement.Bounds.Location.Y).ThenBy(n => n.InternalElement.PinDisplayOrder(n.InternalPinIndex' true)).ToList(); " is 160.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The length of the statement  "                var orderdOutputs = m_outputs.OrderBy(n => n.InternalElement.Bounds.Location.Y).ThenBy(n => n.InternalElement.PinDisplayOrder(n.InternalPinIndex' false)).ToList(); " is 163.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The length of the statement  "                    grpPin.Position = new Point(0' i * (CircuitGroupPinInfo.FloatingPinNodeHeight + CircuitGroupPinInfo.FloatingPinNodeMargin)); " is 124.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The length of the statement  "                    grpPin.Position = new Point(0' i * (CircuitGroupPinInfo.FloatingPinNodeHeight + CircuitGroupPinInfo.FloatingPinNodeMargin)); " is 124.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                    Debug.Assert(!duplicatedPins.Any()' "SubGraph " + Name + " module " + grpPins.Key.Name + " has duplicated output group pins"); " is 126.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                //Debug.Assert(grpPin.DomNode.Parent != null' "SubGraph " + Name + " Input Group Pin" + grpPin.Name + "Parent  not set"); " is 121.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                //Debug.Assert(grpPin.Position.Y <= 4096 && grpPin.Position.Y >= -4096' "SubGraph " + Name + " Input Group Pin" + grpPin.Name + "has suspicious large Y greater than 4k"); " is 170.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                Debug.Assert(grpPin.InternalPinIndex >= 0 && grpPin.InternalPinIndex < grpPin.InternalElement.Type.GetAllInputPins().Count()' " is 125.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                //Debug.Assert(grpPin.DomNode.Parent != null' "SubGraph " + Name + " Output Group Pin" + grpPin.Name + "Parent  not set"); " is 122.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                //Debug.Assert(grpPin.Position.Y <= 4096 && grpPin.Position.Y >= -4096' "SubGraph " + Name + " Input Group Pin" + grpPin.Name + "has suspicious large Y greater than 4k"); " is 170.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                Debug.Assert(grpPin.InternalPinIndex >= 0 && grpPin.InternalPinIndex < grpPin.InternalElement.Type.GetAllOutputPins().Count()' " is 126.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                        Debug.Assert(grpPin != null' "SubGraph " + Name + " missed an input group pin for " + module.Name + ":" + inputPin.Name); " is 121.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                        Debug.Assert(grpPin == null' "SubGraph " + Name + " should not expose an input group pin for " + module.Name + ":" + inputPin.Name); " is 132.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                        Debug.Assert(grpPin != null' "SubGraph " + Name + " missed an output group pin for " + module.Name + ":" + outputPin.Name); " is 123.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,Validate,The length of the statement  "                        Debug.Assert(grpPin == null' "SubGraph " + Name + " should not expose an output group pin for " + module.Name + ":" + outputPin.Name); " is 134.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,MatchedGroupPin,The length of the statement  "            return inputSide ? m_inputs.FirstOrDefault(x => x.InternalElement.DomNode == node.DomNode && x.InternalPinIndex == pinIndex) : " is 126.
Long Statement,Sce.Atf.Controls.Adaptable.Graphs,Wire,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Wire.cs,IsValid,The length of the statement  "            return OutputElement.Type.GetOutputPin(outputPinIndex) != null &&  InputElement.Type.GetInputPin(inputPinIndex) != null; " is 120.
Long Statement,Sce.Atf.Direct2D,D2dBitmap,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dBitmap.cs,Update,The length of the statement  "                data = m_bitmap.LockBits(new System.Drawing.Rectangle(0' 0' m_bitmap.Width' m_bitmap.Height)' System.Drawing.Imaging.ImageLockMode.ReadOnly' " is 140.
Long Statement,Sce.Atf.Direct2D,D2dBitmap,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dBitmap.cs,CopyFromMemory,The length of the statement  "                    bitmapdata = m_bitmap.LockBits(new System.Drawing.Rectangle(0' 0' m_bitmap.Width' m_bitmap.Height)' System.Drawing.Imaging.ImageLockMode.WriteOnly' " is 147.
Long Statement,Sce.Atf.Direct2D,D2dBitmap,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dBitmap.cs,Create,The length of the statement  "            props.PixelFormat = new SharpDX.Direct2D1.PixelFormat(SharpDX.DXGI.Format.B8G8R8A8_UNorm' SharpDX.Direct2D1.AlphaMode.Premultiplied); " is 133.
Long Statement,Sce.Atf.Direct2D,D2dBitmap,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dBitmap.cs,Create,The length of the statement  "            m_nativeBitmap = new SharpDX.Direct2D1.Bitmap(m_owner.D2dRenderTarget' new Size2(m_bitmap.Width' m_bitmap.Height)' props);                         " is 122.
Long Statement,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawBitmap,The length of the statement  "            m_renderTarget.DrawBitmap(bmp.NativeBitmap' destRect.ToSharpDX()' opacity' (BitmapInterpolationMode)interpolationMode' null); " is 125.
Long Statement,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawText,The length of the statement  "            using (var layout = new SharpDX.DirectWrite.TextLayout(D2dFactory.NativeDwFactory' text' textFormat.NativeTextFormat' layoutRect.Width' layoutRect.Height)) " is 155.
Long Statement,Sce.Atf.Direct2D,D2dLinearGradientBrush,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dLinearGradientBrush.cs,Create,The length of the statement  "            using (var stopcol = new GradientStopCollection(Owner.D2dRenderTarget' stops' (Gamma)m_gamma' (ExtendMode)m_extendMode)) " is 120.
Long Statement,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The length of the statement  "                g.DrawLine(x + 3 * rectWidth - 1' y' x + 3 * rectWidth - 1' y + rectHeight' pen); // a vertial line next to the right side of the rect " is 134.
Long Statement,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The length of the statement  "                g.DrawLine(x + size - rectHeight' y + (size - rectWidth) / 2 + 2 * rectWidth - 2' x + size' y + (size - rectWidth) / 2 + 2 * rectWidth - 2' pen); // a horizontal line next to the bottom side of the rect " is 202.
Long Statement,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The length of the statement  "                //g.DrawLine(pen' x + 3 * rectWidth - 1' y' x + 3 * rectWidth - 1' y + rectHeight); // a vertial line next to the right side of the rect " is 136.
Long Statement,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The length of the statement  "                g.DrawLine(x - size + rectHeight' y + (size - rectWidth) / 2 + 2 * rectWidth - 2' x - size' y + (size - rectWidth) / 2 + 2 * rectWidth - 2' pen); // a horizontal line next to the bottom side of the rect " is 202.
Long Statement,Sce.Atf.Direct2D,D2dWicGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dWicGraphics.cs,Copy,The length of the statement  "            System.Drawing.Imaging.BitmapData data = bitmap.LockBits(new System.Drawing.Rectangle(0' 0' bitmap.Width' bitmap.Height)' " is 121.
Complex Conditional,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,OnDocumentDirtyChanged,The conditional expression  "SourceControlService == null || document == null || !document.Dirty || CheckoutOnEditBehavior == CheckoutOnEditBehavior.Never"  is complex.
Complex Conditional,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoCheckIn,The conditional expression  "SourceControlService == null || ContextRegistry == null ||                  SourceControlContext == null || !SourceControlService.AllowCheckIn"  is complex.
Complex Conditional,Sce.Atf.Controls.PropertyEditing,BoundedFloatConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundedFloatConverter.cs,SetMinMax,The conditional expression  "(m_min.HasValue && m_min.Value != min) || (m_max.HasValue && m_max.Value != max)"  is complex.
Complex Conditional,Sce.Atf.Controls.PropertyEditing,BoundedIntConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundedIntConverter.cs,SetMinMax,The conditional expression  "(m_min.HasValue && m_min.Value != min) || (m_max.HasValue && m_max.Value != max)"  is complex.
Complex Conditional,Sce.Atf.Controls.PropertyEditing,IntEnumTypeConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\IntEnumTypeConverter.cs,DefineEnums,The conditional expression  "names == null                  || names.Length == 0                  || values == null                  || names.Length != values.Length"  is complex.
Complex Conditional,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,EndDraw,The conditional expression  "ex.ResultCode == D2DERR_RECREATE_TARGET                   || ex.ResultCode == D2DERR_WRONG_RESOURCE_DOMAIN                   || ex.ResultCode == D2DERR_DISPLAY_STATE_INVALID                   || ex.ResultCode == E_HANDLE"  is complex.
Complex Conditional,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,SetSelection,The conditional expression  "absolutePosition >= 1                          && absolutePosition < TextLayout.Text.Length                          && TextLayout.Text[absolutePosition - 1] == '\r'                          && TextLayout.Text[absolutePosition] == '\n'"  is complex.
Complex Conditional,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,SetSelection,The conditional expression  "absolutePosition >= 1                      && absolutePosition < TextLayout.Text.Length                      && TextLayout.Text[absolutePosition - 1] == '\r'                      && TextLayout.Text[absolutePosition] == '\n'"  is complex.
Complex Conditional,Sce.Atf.Dom,EditingContext,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\EditingContext.cs,selection_Changing,The conditional expression  "RecordSelectionChanges && Recording && !InTransaction && !UndoingOrRedoing"  is complex.
Complex Conditional,Sce.Atf.Dom,EditingContext,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Dom\EditingContext.cs,selection_Changed,The conditional expression  "RecordSelectionChanges && Recording && !InTransaction && !UndoingOrRedoing"  is complex.
Complex Conditional,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetPerspective,The conditional expression  "yFov <= 0 || aspectRatio <= 0 || nearZ <= 0 || farZ <= 0"  is complex.
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Virtual Method Call from Constructor,Sce.Atf.Applications,CommandServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CommandServiceBase.cs,CommandServiceBase,The constructor "CommandServiceBase" calls a virtual method "RegisterMenuInfo".
Empty Catch Block,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,SaveSettings,The method has an empty catch block.
Empty Catch Block,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,EndDraw,The method has an empty catch block.
Magic Number,Sce.Atf.Applications,SelectionPathProviders,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\ISelectionPathProvider.cs,Parent,The following statement contains a magic number: return selectionPath[selectionPath.Count - 2];
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,RegisterUserSettings,The following statement contains a magic number: string[] path = pathName.Split(s_delimiters' 16);
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,GetSettingsPath,The following statement contains a magic number: string[] pathSegments = pathName.Split(s_delimiters' 16);
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,StringToXmlDoc,The following statement contains a magic number: int len = (strXml.Length > 20) ? 20 : strXml.Length;
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,StringToXmlDoc,The following statement contains a magic number: int len = (strXml.Length > 20) ? 20 : strXml.Length;
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,GetMutexName,The following statement contains a magic number: safeName = safeName.Substring(safeName.Length - 250);
Magic Number,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,GetMutexName,The following statement contains a magic number: safeName.Length > 250
Magic Number,Sce.Atf.Applications,TextPrintDocument,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\TextPrintDocument.cs,OnBeginPrint,The following statement contains a magic number: m_font = new Font("Courier"' 10);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,GetShade,The following statement contains a magic number: var r = (int)Math.Min(255' color.R * amount);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,GetShade,The following statement contains a magic number: var g = (int)Math.Min(255' color.G * amount);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,GetShade,The following statement contains a magic number: var b = (int)Math.Min(255' color.B * amount);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: int level = Convert.ToInt32(b*255);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: 0.5 < b
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: var iSextant = (int)Math.Floor(h / 60f);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: h -= 360f;
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: 300f <= h
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: h /= 60f;
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: h -= 2f * (float)Math.Floor(((iSextant + 1f) % 6f) / 2f);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: h -= 2f * (float)Math.Floor(((iSextant + 1f) % 6f) / 2f);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: h -= 2f * (float)Math.Floor(((iSextant + 1f) % 6f) / 2f);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: 0 == iSextant % 2
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: var iMax = Convert.ToInt32(fMax * 255);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: var iMid = Convert.ToInt32(fMid * 255);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: var iMin = Convert.ToInt32(fMin * 255);
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: switch (iSextant)               {                  case 1:                      return Color.FromArgb(a' iMid' iMax' iMin);                  case 2:                      return Color.FromArgb(a' iMin' iMax' iMid);                  case 3:                      return Color.FromArgb(a' iMin' iMid' iMax);                  case 4:                      return Color.FromArgb(a' iMid' iMin' iMax);                  case 5:                      return Color.FromArgb(a' iMax' iMin' iMid);                  default:                      return Color.FromArgb(a' iMax' iMid' iMin);              }
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: switch (iSextant)               {                  case 1:                      return Color.FromArgb(a' iMid' iMax' iMin);                  case 2:                      return Color.FromArgb(a' iMin' iMax' iMid);                  case 3:                      return Color.FromArgb(a' iMin' iMid' iMax);                  case 4:                      return Color.FromArgb(a' iMid' iMin' iMax);                  case 5:                      return Color.FromArgb(a' iMax' iMin' iMid);                  default:                      return Color.FromArgb(a' iMax' iMid' iMin);              }
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: switch (iSextant)               {                  case 1:                      return Color.FromArgb(a' iMid' iMax' iMin);                  case 2:                      return Color.FromArgb(a' iMin' iMax' iMid);                  case 3:                      return Color.FromArgb(a' iMin' iMid' iMax);                  case 4:                      return Color.FromArgb(a' iMid' iMin' iMax);                  case 5:                      return Color.FromArgb(a' iMax' iMin' iMid);                  default:                      return Color.FromArgb(a' iMax' iMid' iMin);              }
Magic Number,Sce.Atf,ColorUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\ColorUtil.cs,FromAhsb,The following statement contains a magic number: switch (iSextant)               {                  case 1:                      return Color.FromArgb(a' iMid' iMax' iMin);                  case 2:                      return Color.FromArgb(a' iMin' iMax' iMid);                  case 3:                      return Color.FromArgb(a' iMin' iMid' iMax);                  case 4:                      return Color.FromArgb(a' iMid' iMin' iMax);                  case 5:                      return Color.FromArgb(a' iMax' iMin' iMid);                  default:                      return Color.FromArgb(a' iMax' iMid' iMin);              }
Magic Number,Sce.Atf,User32,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\User32.cs,HIWORD,The following statement contains a magic number: return (n >> 16) & 0xffff;
Magic Number,Sce.Atf.Applications.NetworkTargetServices,Deci4pTargetProvider,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\Deci4pTargetProvider.cs,Initialize,The following statement contains a magic number: m_timer = new Timer(TimerTick' "Deci4pTicker"' 1000' 1000);
Magic Number,Sce.Atf.Applications.NetworkTargetServices,Deci4pTargetProvider,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\Deci4pTargetProvider.cs,Initialize,The following statement contains a magic number: m_timer = new Timer(TimerTick' "Deci4pTicker"' 1000' 1000);
Magic Number,Sce.Atf.Applications.NetworkTargetServices,Deci4pTargetProvider,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\Deci4pTargetProvider.cs,FindTargets,The following statement contains a magic number: const uint buildVersion = 18;
Magic Number,Sce.Atf.Applications.NetworkTargetServices,TcpIpTargetInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\TcpIpTargetInfo.cs,TryParseIPAddress,The following statement contains a magic number: ep.Length > 2
Magic Number,Sce.Atf.Controls.Adaptable,D2dDiagramTheme,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\D2dDiagramTheme.cs,D2dDiagramTheme,The following statement contains a magic number: m_pinOffset = (fontHeight - m_pinSize) / 2;
Magic Number,Sce.Atf.Controls.Adaptable,D2dDiagramTheme,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\D2dDiagramTheme.cs,D2dDiagramTheme,The following statement contains a magic number: StrokeWidth = 2;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,CircuitGroupPinInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\CircuitGroupPinInfo.cs,CircuitGroupPinInfo,The following statement contains a magic number: FloatingPinNodeHeight = 28;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,CircuitGroupPinInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\CircuitGroupPinInfo.cs,CircuitGroupPinInfo,The following statement contains a magic number: FloatingPinNodeMargin = 2;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,CircuitGroupPinInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\CircuitGroupPinInfo.cs,CircuitGroupPinInfo,The following statement contains a magic number: FloatingPinElementMargin = 28;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,CircuitGroupPinInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\CircuitGroupPinInfo.cs,CircuitGroupPinInfo,The following statement contains a magic number: FloatingPinBoxHeight = 15;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,CircuitGroupPinInfo,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\CircuitGroupPinInfo.cs,CircuitGroupPinInfo,The following statement contains a magic number: FloatingPinBoxWidth = 22;
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdatePinOrders,The following statement contains a magic number: pass < 2
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPins,The following statement contains a magic number: groupPin.Position = new Point(0' (groupPin.InternalPinIndex + 1) * 16 + connection.InputElement.Bounds.Location.Y);
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPins,The following statement contains a magic number: groupPin.Position = new Point(0' (groupPin.InternalPinIndex + 1) * 16 + module.Bounds.Location.Y);
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,UpdateGroupPins,The following statement contains a magic number: groupPin.Position = new Point(0' (groupPin.InternalPinIndex + 1) * 16 + module.Bounds.Location.Y);
Magic Number,Sce.Atf.Controls.Adaptable.Graphs,EdgeStyleData,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\EdgeStyleData.cs,EdgeStyleData,The following statement contains a magic number: Thickness = 1.5f;
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,IsValid,The following statement contains a magic number: points.Count < 2
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ForceMinDistance,The following statement contains a magic number: points.Count < 2
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentOut,The following statement contains a magic number: (ny <= 0.05f) || (py <= 0.05f)
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentOut,The following statement contains a magic number: (ny <= 0.05f) || (py <= 0.05f)
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentIn,The following statement contains a magic number: (ny <= 0.05f) || (py <= 0.05f)
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,ComputeTangentIn,The following statement contains a magic number: (ny <= 0.05f) || (py <= 0.05f)
Magic Number,Sce.Atf.Controls.CurveEditing,CurveUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\CurveUtils.cs,Sort,The following statement contains a magic number: points.Count < 2
Magic Number,Sce.Atf.Controls.CurveEditing,HermiteCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\HermiteCurveEvaluator.cs,CubicPolyEval,The following statement contains a magic number: return (t * (t * (t * Coeff[0] + Coeff[1]) + Coeff[2]) + Coeff[3]);
Magic Number,Sce.Atf.Controls.CurveEditing,HermiteCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\HermiteCurveEvaluator.cs,CubicPolyEval,The following statement contains a magic number: return (t * (t * (t * Coeff[0] + Coeff[1]) + Coeff[2]) + Coeff[3]);
Magic Number,Sce.Atf.Controls.CurveEditing,HermiteCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\HermiteCurveEvaluator.cs,ComputeHermiteCoeff,The following statement contains a magic number: Coeff[2] = m1;
Magic Number,Sce.Atf.Controls.CurveEditing,HermiteCurveEvaluator,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\CurveEditing\HermiteCurveEvaluator.cs,ComputeHermiteCoeff,The following statement contains a magic number: Coeff[3] = p1.Y;
Magic Number,Sce.Atf.Controls.PropertyEditing,BoundedFloatConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundedFloatConverter.cs,Initialize,The following statement contains a magic number: parameters.Length < 2
Magic Number,Sce.Atf.Controls.PropertyEditing,BoundedIntConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\BoundedIntConverter.cs,Initialize,The following statement contains a magic number: parameters.Length < 2
Magic Number,Sce.Atf.Controls.PropertyEditing,PropertyUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\PropertyUtils.cs,GetPropertyDescriptorHash,The following statement contains a magic number: return                  propertyDescriptor.Name.GetHashCode() ^                  (GetCategoryName(propertyDescriptor).GetHashCode() << 8) ^                  propertyDescriptor.PropertyType.GetHashCode();
Magic Number,Sce.Atf.Controls.PropertyEditing,PropertyUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\PropertyUtils.cs,GetPropertyDescriptorKey,The following statement contains a magic number: int capacity = name.Length + category.Length + typeString.Length + 2;
Magic Number,Sce.Atf.Controls.PropertyEditing,PropertyUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\PropertyEditing\PropertyUtils.cs,AreEqual,The following statement contains a magic number: return                      value2 is Single &&                      MathUtil.AreApproxEqual((Single)value1' (Single)value2' 0.000001);
Magic Number,Sce.Atf.Direct2D,D2dBitmap,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dBitmap.cs,CopyFromMemory,The following statement contains a magic number: int stride = PixelSize.Width * 4;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateD2dHwndGraphics,The following statement contains a magic number: hwnProps.PixelSize = new SharpDX.Size2(16' 16);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateD2dHwndGraphics,The following statement contains a magic number: hwnProps.PixelSize = new SharpDX.Size2(16' 16);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateD2dHwndGraphics,The following statement contains a magic number: s_rtprops.DpiX = 96.0f;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateD2dHwndGraphics,The following statement contains a magic number: s_rtprops.DpiY = 96.0f;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateWicGraphics,The following statement contains a magic number: var rtprops = new RenderTargetProperties               {                  Type = RenderTargetType.Default'                  DpiX = 96.0f'                   DpiY = 96.0f'                  PixelFormat = new PixelFormat(Format.Unknown' SharpDX.Direct2D1.AlphaMode.Unknown)'                   Usage = RenderTargetUsage.None'                  MinLevel = FeatureLevel.Level_DEFAULT              };
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateWicGraphics,The following statement contains a magic number: var rtprops = new RenderTargetProperties               {                  Type = RenderTargetType.Default'                  DpiX = 96.0f'                   DpiY = 96.0f'                  PixelFormat = new PixelFormat(Format.Unknown' SharpDX.Direct2D1.AlphaMode.Unknown)'                   Usage = RenderTargetUsage.None'                  MinLevel = FeatureLevel.Level_DEFAULT              };
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextFormat,The following statement contains a magic number: float fontsize = (font.SizeInPoints * 96.0f) / 72.0f;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextFormat,The following statement contains a magic number: float fontsize = (font.SizeInPoints * 96.0f) / 72.0f;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextLayout,The following statement contains a magic number: return CreateTextLayout(text' textFormat' 2048' 2048);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextLayout,The following statement contains a magic number: return CreateTextLayout(text' textFormat' 2048' 2048);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextLayout,The following statement contains a magic number: return CreateTextLayout(text' textFormat' 2048' 2048' transform);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,CreateTextLayout,The following statement contains a magic number: return CreateTextLayout(text' textFormat' 2048' 2048' transform);
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,FontSizeToPixel,The following statement contains a magic number: float lg = point / 72.0f;
Magic Number,Sce.Atf.Direct2D,D2dFactory,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dFactory,The following statement contains a magic number: Environment.OSVersion.Version.Major < 6
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following statement contains a magic number: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: Abord = new D2dResult(-2147467260);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: AccessDenied = new D2dResult(-2147024891);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: Fail = new D2dResult(-2147467259);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: Handle = new D2dResult(-2147024890);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: InvalidArg = new D2dResult(-2147024809);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: NoInterface = new D2dResult(-2147467262);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: NotImplemented = new D2dResult(-2147467263);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: OutOfMemory = new D2dResult(-2147024882);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: InvalidPointer = new D2dResult(-2147467261);
Magic Number,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,D2dResult,The following statement contains a magic number: UnexpectedFailure = new D2dResult(-2147418113);
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawEllipse,The following statement contains a magic number: tmpEllipse.RadiusX = rect.Width * 0.5f;
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawEllipse,The following statement contains a magic number: tmpEllipse.RadiusY = rect.Height * 0.5f;
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,DrawLines,The following statement contains a magic number: transparent = sbrush.Color.A < 255;
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,MeasureText,The following statement contains a magic number: return MeasureText(text' format' new SizeF(2024' 2024));
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,MeasureText,The following statement contains a magic number: return MeasureText(text' format' new SizeF(2024' 2024));
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,FillEllipse,The following statement contains a magic number: var tmpEllipse = new Ellipse               {                  RadiusX = rect.Width * 0.5f'                   RadiusY = rect.Height * 0.5f              };
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,FillEllipse,The following statement contains a magic number: var tmpEllipse = new Ellipse               {                  RadiusX = rect.Width * 0.5f'                   RadiusY = rect.Height * 0.5f              };
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,GetCachedLinearGradientBrush,The following statement contains a magic number: var colorKey = (kh << 32) | kl;
Magic Number,Sce.Atf.Direct2D,D2dGraphics,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dGraphics.cs,GetCachedLinearGradientBrush,The following statement contains a magic number: var stops = new GradientStop[2];
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawExpander,The following statement contains a magic number: s_expanderPoints[2] = new PointF(x + size' y);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: float delta = rect.Width / 3;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var p1 = new PointF(rect.X' rect.Y + rect.Height / 2);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var p3 = new PointF(p1.X + 2 * delta' rect.Y);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var p4 = new PointF(rect.X + rect.Width' rect.Y + rect.Height / 2);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var irisCenter = new PointF(rect.X + rect.Width / 2' rect.Y + rect.Height / 2);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var irisCenter = new PointF(rect.X + rect.Width / 2' rect.Y + rect.Height / 2);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: float irisRadius = 0.2f * Math.Min(rect.Width' rect.Height);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var irisRect = new RectangleF(irisCenter.X - irisRadius' irisCenter.Y - irisRadius' 2 * irisRadius' 2 * irisRadius);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: var irisRect = new RectangleF(irisCenter.X - irisRadius' irisCenter.Y - irisRadius' 2 * irisRadius' 2 * irisRadius);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawEyeIcon,The following statement contains a magic number: g.DrawEllipse(irisRect' pen' strokeWidth * 1.8f);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The following statement contains a magic number: majorTickStart = tickEnd + 12;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The following statement contains a magic number: minorTickStart = tickEnd + 6;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The following statement contains a magic number: textStart = tickEnd + 8;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The following statement contains a magic number: int numMinorTicks = CalculateNumMinorTicks(majorGraphStep' minimumGraphStep' 5);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawHorizontalScale,The following statement contains a magic number: string xString = String.Format("{0:G8}"' Math.Round(x' 6));
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,CalculateTickAnchor,The following statement contains a magic number: double tickAnchor = min * max <= 0 ? 0 : Math.Pow(10.0' Math.Floor(Math.Log10(Snap10(Math.Abs(max)))));
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,Snap10,The following statement contains a magic number: double lesserPowerOf10 = Math.Pow(10.0' Math.Floor(Math.Log10(proposed)));
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,Snap10,The following statement contains a magic number: int msd = (int)(proposed / lesserPowerOf10 + .5);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,Snap10,The following statement contains a magic number: msd = 10;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,Snap10,The following statement contains a magic number: msd > 5
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: int rectWidth = size / 4;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: int rectHeight = 2 * size / 3;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: int rectHeight = 2 * size / 3;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: int center = size / 2;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: g.DrawRectangle(new RectangleF(x+rectWidth' y' 2 * rectWidth' rectHeight)' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: g.DrawLine(x + 3 * rectWidth - 1' y' x + 3 * rectWidth - 1' y + rectHeight' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLeftPin,The following statement contains a magic number: g.DrawLine(x + 3 * rectWidth - 1' y' x + 3 * rectWidth - 1' y + rectHeight' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: int rectWidth = size / 4;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: int rectHeight = 2 * size / 3;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: int rectHeight = 2 * size / 3;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: int center = size / 2;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: g.DrawRectangle(new RectangleF(x + rectWidth - size' y' 2 * rectWidth' rectHeight)' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: g.DrawLine(x + 3 * rectWidth - 1 - size' y'                                 x + 3 * rectWidth - 1 - size' y + rectHeight' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawRightPin,The following statement contains a magic number: g.DrawLine(x + 3 * rectWidth - 1 - size' y'                                 x + 3 * rectWidth - 1 - size' y + rectHeight' pen);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: var path = new EdgeStyleData[5];
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: var pathData = new PointF[16];
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: i < 16
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: var edgeData = new EdgeStyleData             {                 ShapeType = EdgeStyleData.EdgeShape.Line'                 EdgeData = new PointF[] { pathData[0]' pathData[1]' pathData[2]' pathData[3] }             };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: var edgeData = new EdgeStyleData             {                 ShapeType = EdgeStyleData.EdgeShape.Line'                 EdgeData = new PointF[] { pathData[0]' pathData[1]' pathData[2]' pathData[3] }             };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[3]' pathData[4]' pathData[5]' pathData[6])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[3]' pathData[4]' pathData[5]' pathData[6])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[3]' pathData[4]' pathData[5]' pathData[6])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[3]' pathData[4]' pathData[5]' pathData[6])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[6]' pathData[7]' pathData[8]' pathData[9])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[6]' pathData[7]' pathData[8]' pathData[9])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[6]' pathData[7]' pathData[8]' pathData[9])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[6]' pathData[7]' pathData[8]' pathData[9])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: path[2] = edgeData;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[9]' pathData[10]' pathData[11]' pathData[12])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[9]' pathData[10]' pathData[11]' pathData[12])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[9]' pathData[10]' pathData[11]' pathData[12])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[9]' pathData[10]' pathData[11]' pathData[12])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: path[3] = edgeData;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[12]' pathData[13]' pathData[14]' pathData[15])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[12]' pathData[13]' pathData[14]' pathData[15])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[12]' pathData[13]' pathData[14]' pathData[15])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: edgeData = new EdgeStyleData              {                  ShapeType = EdgeStyleData.EdgeShape.Bezier'                  EdgeData = new BezierCurve2F(pathData[12]' pathData[13]' pathData[14]' pathData[15])              };
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,DrawLink,The following statement contains a magic number: path[4] = edgeData;
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,ToColor4,The following statement contains a magic number: uint abgr =                  (argb & 0xff00ff00) |       //alpha and green stay in place                  ((argb >> 16) & 0xff) |     //red goes down 16 bits                  ((argb & 0xff) << 16);
Magic Number,Sce.Atf.Direct2D,D2dUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dUtil.cs,ToColor4,The following statement contains a magic number: uint abgr =                  (argb & 0xff00ff00) |       //alpha and green stay in place                  ((argb >> 16) & 0xff) |     //red goes down 16 bits                  ((argb & 0xff) << 16);
Magic Number,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,GetCaretRect,The following statement contains a magic number: return new RectangleF(caretX - caretThickness/2.0f' caretY' caretThickness' caretMetrics.Height);
Magic Number,Sce.Atf.Input,Message,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Input\Message.cs,GetHashCode,The following statement contains a magic number: return (int)hWnd << 4 | msg;
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,CalcSnapFromOffset,The following statement contains a magic number: switch (snapFromMode)              {                  case SnapFromMode.Pivot:                      {                          Vec3F offset;                          Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().Ancestry);                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          node.Transform.TransformVector(pivot' out offset); //local-to-parent                          parentToWorld.TransformVector(offset' out offset); //parent-to-world                          return offset; //world                      }                  case SnapFromMode.Origin:                      return new Vec3F(0' 0' 0);                  case SnapFromMode.BottomCenter:                      {                          Box box = node.BoundingBox;                          Vec3F btmWorld;                          if (axisType == AxisSystemType.YIsUp)                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  box.Min.Y'                                  (box.Min.Z + box.Max.Z) * 0.5f);                          }                          else                          {                              btmWorld = new Vec3F(                                  (box.Min.X + box.Max.X) * 0.5f'                                  (box.Min.Y + box.Max.Y) * 0.5f'                                  box.Min.Z);                          }                          Vec3F origin = node.Transform.Translation;                          Vec3F offset = btmWorld - origin; //local space offset                            Path<DomNode> path = new Path<DomNode>(node.Cast<DomNode>().GetPath());                          Matrix4F parentToWorld = TransformUtils.CalcPathTransform(path' path.Count - 2);                          parentToWorld.TransformVector(offset' out offset);                            return offset;                      }                  default:                      throw new ArgumentException("Invalid snap-from node");              }
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,TransformToViewport,The following statement contains a magic number: Vec2F xViewport = new Vec2F(                  (xScreen.X + 1) * 0.5f * viewportWidth'                  (1 - (xScreen.Y + 1) * 0.5f) * viewportHeight);
Magic Number,Sce.Atf.Rendering.Dom,TransformUtils,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\TransformUtils.cs,TransformToViewport,The following statement contains a magic number: Vec2F xViewport = new Vec2F(                  (xScreen.X + 1) * 0.5f * viewportWidth'                  (1 - (xScreen.Y + 1) * 0.5f) * viewportHeight);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,Camera,The following statement contains a magic number: SetPerspective(                  (float)Math.PI / 4.0f'  // y FOV                  1.0f'                   // aspect ratio                  0.01f'                  // near Z                  2048.0f);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,Camera,The following statement contains a magic number: SetPerspective(                  (float)Math.PI / 4.0f'  // y FOV                  1.0f'                   // aspect ratio                  0.01f'                  // near Z                  2048.0f);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,Camera,The following statement contains a magic number: SetPerspective(                  (float)Math.PI / 4.0f'  // y FOV                  1.0f'                   // aspect ratio                  0.01f'                  // near Z                  2048.0f);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetOrthographic,The following statement contains a magic number: SetOrthographic(                  d * m_aspectRatio / 2'                  -d * m_aspectRatio / 2'                  d / 2'                  -d / 2'                  m_orthographicNearZ'                  m_frustum.FarZ);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetOrthographic,The following statement contains a magic number: SetOrthographic(                  d * m_aspectRatio / 2'                  -d * m_aspectRatio / 2'                  d / 2'                  -d / 2'                  m_orthographicNearZ'                  m_frustum.FarZ);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetOrthographic,The following statement contains a magic number: SetOrthographic(                  d * m_aspectRatio / 2'                  -d * m_aspectRatio / 2'                  d / 2'                  -d / 2'                  m_orthographicNearZ'                  m_frustum.FarZ);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,SetOrthographic,The following statement contains a magic number: SetOrthographic(                  d * m_aspectRatio / 2'                  -d * m_aspectRatio / 2'                  d / 2'                  -d / 2'                  m_orthographicNearZ'                  m_frustum.FarZ);
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,ZoomOnSphere,The following statement contains a magic number: float nearZ = Math.Abs(sphere.Radius) * 0.1f;
Magic Number,Sce.Atf.Rendering,Camera,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\Camera.cs,ZoomOnSphere,The following statement contains a magic number: nearZ = Math.Max(nearZ' 0.001f);
Magic Number,Sce.Atf.Rendering,RenderStateGuardian,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Rendering\RenderStateGuardian.cs,Clear,The following statement contains a magic number: i < 32
Duplicate Code,Sce.Atf.Controls.Adaptable.Graphs,Group,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Controls\Adaptable\Graphs\Circuit\Group.cs,InitializeGroupPinIndexes,The method contains a code clone-set at the following line numbers (starting from the method definition): ((25' 46)' (51' 72))
Missing Default,Sce.Atf.Applications,CanvasPrintDocument,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\CanvasPrintDocument.cs,OnBeginPrint,The following switch statement is missing a default case: switch (PrinterSettings.PrintRange)              {                  case PrintRange.AllPages:                  case PrintRange.SomePages:                      m_bounds = GetAllPagesBounds();                      break;                    case PrintRange.Selection:                      m_bounds = GetSelectionBounds();                      PrinterSettings.FromPage = PrinterSettings.ToPage = 1;                      break;                    case PrintRange.CurrentPage:                      m_bounds = GetCurrentPageBounds();                      PrinterSettings.FromPage = PrinterSettings.ToPage = 1;                      break;              }
Missing Default,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,CanDoCommand,The following switch statement is missing a default case: switch ((CommandId)tag)                  {                      case CommandId.EditPreferences:                      case CommandId.EditImportExportSettings:                          enabled = true;                          break;                  }
Missing Default,Sce.Atf.Applications,SettingsServiceBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\SettingsServiceBase.cs,DoCommand,The following switch statement is missing a default case: switch ((CommandId)tag)                  {                      case CommandId.EditPreferences:                          PresentUserSettings(null);                          break;                        case CommandId.EditImportExportSettings:                          PresentLoadSaveSettings();                          break;                  }
Missing Default,Sce.Atf.Applications,StandardFileCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardFileCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      // keep this logic in sync with ActiveDocumentChanged and ActiveDocumentDirtyChanged                      case StandardCommand.FileClose:                      case StandardCommand.FileSaveAs:                      case StandardCommand.FileSaveAll:                          enabled = DocumentRegistry.ActiveDocument != null;                          break;                      case StandardCommand.FileSave:                          enabled =                              DocumentRegistry.ActiveDocument != null                              && DocumentRegistry.ActiveDocument.Dirty;                          break;                  }
Missing Default,Sce.Atf.Applications,StandardFileCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardFileCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.FileClose:                          Close(activeDocument);                          break;                        case StandardCommand.FileSave:                          success = Save(activeDocument);                          if (success)                              ShowStatus("Document Saved".Localize());                          break;                        case StandardCommand.FileSaveAs:                          success = SaveAs(activeDocument);                          if (success)                              ShowStatus("Document Saved As".Localize() + " " + activeDocument.Uri.LocalPath);                          break;                        case StandardCommand.FileSaveAll:                          success = true;                          List<IDocument> docs = new List<IDocument>(DocumentRegistry.Documents);                          foreach (IDocument document in docs)                          {                              if (!Save(document))                                  success = false;                          }                          ShowStatus(                              success ?                              "All documents saved".Localize() :                              "Couldn't save all documents".Localize());                          break;                  }
Missing Default,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,CanDoCommand,The following switch statement is missing a default case: switch ((Command)commandTag)                  {                      case Command.Refresh:                          canDo = WrapCommandFunction((Command)commandTag' DoRefresh' doing);                          break;                        case Command.Reconcile:                          canDo = WrapCommandFunction((Command)commandTag' DoReconcile' doing);                          break;                        case Command.CheckOut:                          canDo = WrapCommandFunction((Command)commandTag' DoCheckOut' doing);                          break;                        case Command.CheckIn:                          canDo = WrapCommandFunction((Command)commandTag' DoCheckIn' doing);                          break;                        case Command.Sync:                          canDo = WrapCommandFunction((Command)commandTag' DoSync' doing);                          break;                        case Command.Revert:                          canDo = WrapCommandFunction((Command)commandTag' DoRevert' doing);                          break;                  }
Missing Default,Sce.Atf.Applications,SourceControlCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\VersionControl\SourceControlCommandsBase.cs,DoCommand,The following switch statement is missing a default case: switch ((Command)commandTag)              {                  case Command.Refresh:                      WrapCommandFunction((Command)commandTag' DoRefresh' doing);                      break;                    case Command.Reconcile:                      WrapCommandFunction((Command)commandTag' DoReconcile' doing);                      break;                    case Command.Add:                      WrapCommandFunction((Command)commandTag' DoAdd' doing);                      break;                    case Command.CheckOut:                      WrapCommandFunction((Command)commandTag' DoCheckOut' doing);                      break;                    case Command.CheckIn:                      WrapCommandFunction((Command)commandTag' DoCheckIn' doing);                      break;                    case Command.Sync:                      WrapCommandFunction((Command)commandTag' DoSync' doing);                      break;                    case Command.Revert:                      WrapCommandFunction((Command)commandTag' DoRevert' doing);                      break;              }
Missing Default,Sce.Atf.Applications,StandardEditHistoryCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardEditHistoryCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)              {                  case StandardCommand.EditUndo:                      canDo = historyContext != null && historyContext.CanUndo;                      break;                    case StandardCommand.EditRedo:                      canDo = historyContext != null && historyContext.CanRedo;                      break;              }
Missing Default,Sce.Atf.Applications,StandardEditHistoryCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardEditHistoryCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)              {                  case StandardCommand.EditUndo:                      historyContext.Undo();                      break;                    case StandardCommand.EditRedo:                      historyContext.Redo();                      break;              }
Missing Default,Sce.Atf.Applications,StandardShowCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardShowCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.ViewHide:                          return (selectionContext != null && selectionContext.SelectionCount > 0);                      case StandardCommand.ViewShow:                          return (selectionContext != null && selectionContext.SelectionCount > 0);                      case StandardCommand.ViewShowLast:                          return (m_hideStack != null && m_hideStack.Count > 0);                      case StandardCommand.ViewShowAll:                          return (enumerableContext != null);                      case StandardCommand.ViewIsolate:                          return (selectionContext != null && selectionContext.SelectionCount > 0);                  }
Missing Default,Sce.Atf.Applications,StandardShowCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardShowCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.ViewHide:                          HideSelection(selection' visibilityContext);                          break;                      case StandardCommand.ViewShow:                          ShowSelection(selection' visibilityContext);                          break;                      case StandardCommand.ViewShowLast:                          ShowLastHidden(visibilityContext);                          break;                      case StandardCommand.ViewShowAll:                          ShowAll(visibilityContext' enumerableContext);                          break;                      case StandardCommand.ViewIsolate:                          IsolateSelection(selection' visibilityContext' enumerableContext);                          break;                  }
Missing Default,Sce.Atf.Applications,StandardViewCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardViewCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.ViewFrameSelection:                          ISelectionContext selectionContext = m_contextRegistry.GetActiveContext<ISelectionContext>();                          if (viewingContext != null && selectionContext != null)                              canDo = viewingContext.CanFrame(selectionContext.Selection);                          break;                        case StandardCommand.ViewFrameAll:                          IEnumerableContext enumerableContext = m_contextRegistry.GetActiveContext<IEnumerableContext>();                          if (viewingContext != null && enumerableContext != null)                              canDo = viewingContext.CanFrame(enumerableContext.Items);                          break;                  }
Missing Default,Sce.Atf.Applications,StandardViewCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardViewCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.ViewFrameSelection:                          FrameSelection();                          break;                        case StandardCommand.ViewFrameAll:                          FrameAll();                          break;                  }
Missing Default,Sce.Atf.Applications,WindowLayoutServiceCommandsBase,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\WindowLayoutServiceCommandsBase.cs,DoCommand,The following switch statement is missing a default case: switch (cmd)              {                  case Command.SaveLayoutAs:                      ShowSaveLayoutAsDialog();                      break;                    case Command.ManageLayouts:                      ShowManageLayoutsDialog();                      break;              }
Missing Default,Sce.Atf.Applications,StandardLockCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardLockCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                      {                          case StandardCommand.EditLock:                              foreach (object item in selectionContext.Selection)                              {                                  if (lockingContext.CanSetLocked(item) &&                                      !lockingContext.IsLocked(item))                                  {                                      canDo = true;                                      break;                                  }                              }                              break;                            case StandardCommand.EditUnlock:                              foreach (object item in selectionContext.Selection)                              {                                  if (lockingContext.CanSetLocked(item) &&                                      lockingContext.IsLocked(item))                                  {                                      canDo = true;                                      break;                                  }                              }                              break;                      }
Missing Default,Sce.Atf.Applications,StandardLockCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardLockCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.EditLock:                          transactionContext.DoTransaction(delegate                              {                                  Lock(selectionContext.Selection' lockingContext);                              }'                              CommandInfo.EditLock.MenuText);                          break;                        case StandardCommand.EditUnlock:                          transactionContext.DoTransaction(delegate                              {                                  Unlock(selectionContext.Selection' lockingContext);                              }'                              CommandInfo.EditUnlock.MenuText);                          break;                  }
Missing Default,Sce.Atf.Applications,StandardSelectionCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardSelectionCommands.cs,CanDoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.EditDeselectAll:                          canDo =                              selectionContext != null &&                              selectionContext.LastSelected != null;                          break;                        case StandardCommand.EditSelectAll:                      case StandardCommand.EditInvertSelection:                          // Doing an exact test to see if these commands are useful is expensive.                          // Let's enable them if there is a selection and enumerable context.                          canDo =                              selectionContext != null &&                              enumerableContext != null;                          break;                  }
Missing Default,Sce.Atf.Applications,StandardSelectionCommands,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\StandardSelectionCommands.cs,DoCommand,The following switch statement is missing a default case: switch ((StandardCommand)commandTag)                  {                      case StandardCommand.EditSelectAll:                          SelectAll();                          break;                        case StandardCommand.EditDeselectAll:                          DeselectAll();                          break;                        case StandardCommand.EditInvertSelection:                          InvertSelection();                          break;                  }
Missing Default,Psp2TmApilib,PowerStatusEnumConverter,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Applications\NetworkTargetServices\Deci4pTargetProvider.cs,ConvertTo,The following switch statement is missing a default case: switch ((ePowerStatus)value)                      {                          case ePowerStatus.POWER_STATUS_NO_SUPPLY:                              return "No Supply";                          case ePowerStatus.POWER_STATUS_OFF:                              return "Off";                          case ePowerStatus.POWER_STATUS_ON:                              return "On";                          case ePowerStatus.POWER_STATUS_SUSPENDED:                              return "Suspended";                      }
Missing Default,Sce.Atf.Direct2D,D2dResult,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\Direct2D\D2dFactory.cs,ToString,The following switch statement is missing a default case: switch (m_code)              {                  case 0: return "OK";                  case -2147467260: return "Abord? Is that supposed to be Abort?";                  case -2147024891: return "Access denied";                  case -2147467259: return "Fail";                  case -2147024890: return "Handle";                  case -2147024809: return "Invalid argument";                  case -2147467262: return "No interface";                  case -2147467263: return "Not implemented";                  case -2147024882: return "Out of memory";                  case -2147467261: return "Invalid pointer";                  case -2147418113: return "Unexpected failure";              }
Missing Default,Sce.Atf.DirectWrite,TextEditor,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\DirectWrite\TextEditor.cs,SetSelection,The following switch statement is missing a default case: switch (moveMode)              {                  case SelectionMode.Left:                      m_caretPosition += m_caretPositionOffset;                      if (m_caretPosition > 0)                      {                          --m_caretPosition;                          AlignCaretToNearestCluster(false' true);                            // special check for CR/LF pair                          absolutePosition = m_caretPosition + m_caretPositionOffset;                          if (absolutePosition >= 1                          && absolutePosition < TextLayout.Text.Length                          && TextLayout.Text[absolutePosition - 1] == '\r'                          && TextLayout.Text[absolutePosition] == '\n')                          {                              m_caretPosition = absolutePosition - 1;                              AlignCaretToNearestCluster(false' true);                          }                      }                      break;                    case SelectionMode.Right:                      m_caretPosition = absolutePosition;                      AlignCaretToNearestCluster(true' true);                        // special check for CR/LF pair                      absolutePosition = m_caretPosition + m_caretPositionOffset;                      if (absolutePosition >= 1                      && absolutePosition < TextLayout.Text.Length                      && TextLayout.Text[absolutePosition - 1] == '\r'                      && TextLayout.Text[absolutePosition] == '\n')                      {                          m_caretPosition = absolutePosition + 1;                          AlignCaretToNearestCluster(false' true);                      }                      break;                    case SelectionMode.LeftChar:                      m_caretPosition = absolutePosition;                      m_caretPosition -= Math.Min(advance' absolutePosition);                      m_caretPositionOffset = 0;                      break;                    case SelectionMode.RightChar:                      m_caretPosition = absolutePosition + advance;                      m_caretPositionOffset = 0;                      {                          // Use hit-testing to limit text position.                                   HitTestMetrics hitTestMetrics = TextLayout.HitTestTextPosition(                              m_caretPosition'                              false);                          m_caretPosition = Math.Min(m_caretPosition' hitTestMetrics.TextPosition + hitTestMetrics.Length);                      }                      break;                    case SelectionMode.Up:                  case SelectionMode.Down:                      {                          // Retrieve the line metrics to figure out what line we are on.                          var lineMetrics = TextLayout.GetLineMetrics();                          int linePosition;                          GetLineFromPosition(lineMetrics' m_caretPosition' out  line' out linePosition);                            // Move up a line or down                          if (moveMode == SelectionMode.Up)                          {                              if (line <= 0)                                  break; // already top line                              line--;                              linePosition -= lineMetrics[line].Length;                              if (line <= TopLine)                                  TopLine = TopLine - 1 >= 0 ? TopLine - 1 : 0; // scroll down a line of text                           }                          else                          {                              linePosition += lineMetrics[line].Length;                              line++;                              if (line >= lineMetrics.Length)                                  break; // already bottom line                                // scroll up a line of text                               TopLine = TopLine + 1;                          }                            // To move up or down' we need three hit-testing calls to determine:                          // 1. The x of where we currently are.                          // 2. The y of the new line.                          // 3. New text position from the determined x and y.                          // This is because the characters are variable size.                              float caretX' caretY;                          // Get x of current text position                          var hitTestMetrics = TextLayout.HitTestTextPosition(                             m_caretPosition'                             m_caretPositionOffset > 0 // trailing if nonzero' else leading edge                                        );                          caretX = hitTestMetrics.Point.X;                            // Get y of new position                          hitTestMetrics = TextLayout.HitTestTextPosition(                             linePosition'                             false// leading edge                                         );                          caretY = hitTestMetrics.Point.Y;                            // Now get text position of new x'y                          hitTestMetrics = TextLayout.HitTestPoint(caretX' caretY);                              m_caretPosition = hitTestMetrics.TextPosition;                          m_caretPositionOffset = hitTestMetrics.IsTrailingHit ? (hitTestMetrics.Length > 0) ? 1 : 0 : 0;                      }                      break;                    case SelectionMode.LeftWord:                  case SelectionMode.RightWord:                      {                          // To navigate by whole words' we look for the canWrapLineAfter                          // flag in the cluster metrics.                            // Now we actually read them.                          var clusterMetrics = TextLayout.GetClusterMetrics();                          if (clusterMetrics.Length == 0)                              break;                            m_caretPosition = absolutePosition;                            int clusterPosition = 0;                          int oldCaretPosition = m_caretPosition;                            if (moveMode == SelectionMode.LeftWord)                          {                              // Read through the clusters' keeping track of the farthest valid                              // stopping point just before the old position.                              m_caretPosition = 0;                              m_caretPositionOffset = 0; // leading edge                              for (int cluster = 0; cluster < clusterMetrics.Length; ++cluster)                              {                                  clusterPosition += clusterMetrics[cluster].Length;                                  if (clusterMetrics[cluster].CanWrapLineAfter)                                  {                                      if (clusterPosition >= oldCaretPosition)                                          break;                                        // Update in case we pass this point next loop.                                      m_caretPosition = clusterPosition;                                  }                              }                          }                          else // SetSelectionModeRightWord                          {                              // Read through the clusters' looking for the first stopping point                              // after the old position.                              for (int cluster = 0; cluster < clusterMetrics.Length; ++cluster)                              {                                  int clusterLength = clusterMetrics[cluster].Length;                                  m_caretPosition = clusterPosition;                                  m_caretPositionOffset = clusterLength; // trailing edge                                  if (clusterPosition >= oldCaretPosition && clusterMetrics[cluster].CanWrapLineAfter)                                      break; // first stopping point after old position.                                    clusterPosition += clusterLength;                              }                          }                      }                      break;                  case SelectionMode.SingleWord:                      {                          var clusterMetrics = TextLayout.GetClusterMetrics();                          if (clusterMetrics.Length == 0)                              break;                            // Left of word                          m_caretPosition = absolutePosition;                            int clusterPosition = 0;                          int oldCaretPosition = m_caretPosition;                            // Read through the clusters' keeping track of the farthest valid                          // stopping point just before the old position.                          m_caretPosition = 0;                          m_caretPositionOffset = 0; // leading edge                          for (int cluster = 0; cluster < clusterMetrics.Length; ++cluster)                          {                              clusterPosition += clusterMetrics[cluster].Length;                              if (clusterMetrics[cluster].CanWrapLineAfter)                              {                                  if (clusterPosition >= oldCaretPosition)                                      break;                                    // Update in case we pass this point next loop.                                  m_caretPosition = clusterPosition;                              }                          }                            int leftOfWord = m_caretPosition;                              // Right of word                          // Read through the clusters' looking for the first stopping point                          // after the old position.                          for (int cluster = 0; cluster < clusterMetrics[cluster].Length; ++cluster)                          {                              int clusterLength = clusterMetrics[cluster].Length;                              m_caretPosition = clusterPosition;                              m_caretPositionOffset = clusterLength; // trailing edge                              if (clusterPosition >= oldCaretPosition && clusterMetrics[cluster].CanWrapLineAfter)                                  break; // first stopping point after old position.                                clusterPosition += clusterLength;                          }                                          int rightOfWord = m_caretPosition -1;                          m_caretPositionOffset = 0;                          m_caretAnchor = leftOfWord;                            //while (rightOfWord > leftOfWord)                          //{                          //    char c = TextLayout.Text[rightOfWord];                          //    if (!(char.IsWhiteSpace(c) || char.IsPunctuation(c)))                          //        break;                          //    --rightOfWord;                          //}                          m_caretPosition = rightOfWord;                                                 }                      break;                    case SelectionMode.Home:                  case SelectionMode.End:                      {                          // Retrieve the line metrics to know first and last position                          // on the current line.                          var lineMetrics = TextLayout.GetLineMetrics();                          int linePosition;                          GetLineFromPosition(lineMetrics' m_caretPosition' out  line' out linePosition);                          m_caretPosition = linePosition;                            m_caretPositionOffset = 0;                          if (moveMode == SelectionMode.End)                          {                              // Place the caret at the last character on the line'                              // excluding line breaks. In the case of wrapped lines'                              // newlineLength will be 0.                              int lineLength = lineMetrics[line].Length - lineMetrics[line].NewlineLength;                              m_caretPositionOffset = Math.Min(lineLength' 1);                              m_caretPosition += lineLength - m_caretPositionOffset;                              AlignCaretToNearestCluster(true' false);                          }                      }                      break;                    case SelectionMode.First:                      m_caretPosition = 0;                      m_caretPositionOffset = 0;                      break;                    case SelectionMode.All:                      m_caretAnchor = 0;                      extendSelection = true;                      goto fallthrough;                     case SelectionMode.Last:              fallthrough:                      m_caretPosition = int.MaxValue;                      m_caretPositionOffset = 0;                      AlignCaretToNearestCluster(true' false);                      break;                    case SelectionMode.AbsoluteLeading:                      m_caretPosition = advance;                      m_caretPositionOffset = 0;                      break;                    case SelectionMode.AbsoluteTrailing:                      m_caretPosition = advance;                      AlignCaretToNearestCluster(true' false);                      break;              }
Missing Default,Sce.Atf.Input,KeysUtil,D:\research\architectureSmells\repos1\SonyWWS_LevelEditor\ATF\Framework\Atf.Gui\KeysUtil.cs,IsTextBoxInput,The following switch statement is missing a default case: switch (k)              {                  //This commented out code is from TextBoxBase and indicates the shortcuts that it cares about.                  //  Some are so obscure' like the text justification shortcuts' that they shouldn't be consumed                  //  by default and should be available to ControlHostService' CommandService' etc. Ctrl+Back                  //  doesn't do anything in practice; not sure why it's in this list. Others' like Shift+Home and                  //  Shift+End are used by TextBox' so let's check for those.                  //shortcutsToDisable = new int[] {(int)Shortcut.CtrlZ' (int)Shortcut.CtrlC' (int)Shortcut.CtrlX'                  //(int)Shortcut.CtrlV' (int)Shortcut.CtrlA' (int)Shortcut.CtrlL' (int)Shortcut.CtrlR'                  //(int)Shortcut.CtrlE' (int)Shortcut.CtrlY' (int)Keys.Control + (int)Keys.Back'                  //(int)Shortcut.CtrlDel' (int)Shortcut.ShiftDel' (int)Shortcut.ShiftIns' (int)Shortcut.CtrlJ};                    case Keys.Control | Keys.C:     //copy                  case Keys.Control | Keys.X:     //cut                  case Keys.Control | Keys.V:     //paste                  case Keys.Control | Keys.A:     //select all the text                  case Keys.Control | Keys.Delete://delete the next word                  case Keys.Shift | Keys.Delete:  //delete the previous character. Too obscure?                  case Keys.Shift | Keys.Insert:  //paste. Too obscure?                  case Keys.Delete:               //delete the next character or the entire selection                  case Keys.Back:                 //delete the previous character or the entire selection                  case Keys.Home:                 //move the caret to the beginning                  case Keys.End:                  //move the caret to the end                  case Keys.Shift | Keys.Home:    //select everything from the current position to the beginning                  case Keys.Shift | Keys.End:     //select everything from the current position to the end                  case Keys.Up:                   //TextBox's IsInputKey override should return false to allow for special navigation.                  case Keys.Down:                 //TextBox's IsInputKey override should return false to allow for special navigation.                  case Keys.Right:                  case Keys.Left:                      return true;                    case Keys.Return:                      if (isMultiline)                      {                          return true;                      }                      break;              }
