Implementation smell,Namespace,Class,File,Method,Description
Long Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygonAndCircle,The method has 111 lines of code.
Long Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The method has 100 lines of code.
Long Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollideEdgeAndCircle,The method has 118 lines of code.
Long Method,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,The method has 366 lines of code.
Long Method,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The method has 119 lines of code.
Long Method,FarseerPhysics.Collision,Distance,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ComputeDistance,The method has 128 lines of code.
Long Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,InsertLeaf,The method has 117 lines of code.
Long Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,Balance,The method has 122 lines of code.
Long Method,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,The method has 170 lines of code.
Long Method,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The method has 106 lines of code.
Long Method,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The method has 114 lines of code.
Long Method,FarseerPhysics.Common,WorldXmlSerializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,SerializeJoint,The method has 133 lines of code.
Long Method,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The method has 620 lines of code.
Long Method,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The method has 253 lines of code.
Long Method,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The method has 100 lines of code.
Long Method,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The method has 186 lines of code.
Long Method,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,Solve,The method has 175 lines of code.
Long Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,Solve,The method has 213 lines of code.
Long Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The method has 315 lines of code.
Long Method,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Update,The method has 115 lines of code.
Long Method,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveVelocityConstraints,The method has 252 lines of code.
Long Method,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,InitVelocityConstraints,The method has 117 lines of code.
Long Method,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,SolvePositionConstraints,The method has 105 lines of code.
Long Method,FarseerPhysics.Dynamics.Joints,RevoluteJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RevoluteJoint.cs,InitVelocityConstraints,The method has 100 lines of code.
Long Method,FarseerPhysics.Dynamics.Joints,WheelJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WheelJoint.cs,InitVelocityConstraints,The method has 113 lines of code.
Complex Method,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,RayCast,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygonAndCircle,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollideEdgeAndCircle,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,FindMaxSeparation,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,Cyclomatic complexity of the method is 36
Complex Method,FarseerPhysics.Collision,Distance,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ComputeDistance,Cyclomatic complexity of the method is 16
Complex Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,RayCast,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,InsertLeaf,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,Balance,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,RebuildBottomUp,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,Cyclomatic complexity of the method is 22
Complex Method,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,RayCast,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Common.ConvexHull,ChainHull,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\ChainHull.cs,GetConvexHull,Cyclomatic complexity of the method is 20
Complex Method,FarseerPhysics.Common.ConvexHull,GiftWrap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\GiftWrap.cs,GetConvexHull,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,Cyclomatic complexity of the method is 14
Complex Method,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,Cyclomatic complexity of the method is 18
Complex Method,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,Cyclomatic complexity of the method is 16
Complex Method,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,ResolvePinchPoint,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,IsEar,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ConvexPartition,Cyclomatic complexity of the method is 17
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,AdvancingFront,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\AdvancingFront.cs,LocatePoint,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,EdgeEvent,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,FlipEdgeEvent,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,FillAdvancingFront,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,FillBasinReq,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,Legalize,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,BoundingBox,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.Decomposition.Seidel,Triangulator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\Triangulator.cs,Process,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,GetPosition,Cyclomatic complexity of the method is 19
Complex Method,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common,WorldXmlSerializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,SerializeJoint,Cyclomatic complexity of the method is 13
Complex Method,FarseerPhysics.Common,WorldXmlSerializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Serialize,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,Cyclomatic complexity of the method is 139
Complex Method,FarseerPhysics.Common,XMLFragmentParser,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,NextToken,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common,XMLFragmentParser,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,TryParseNode,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,CheckPolygon,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.PhysicsLogic,FilterData,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\FilterData.cs,IsActiveOn,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,Cyclomatic complexity of the method is 31
Complex Method,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,Cyclomatic complexity of the method is 18
Complex Method,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,Cut,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.PolygonManipulation,SimpleCombiner,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimpleCombiner.cs,PolygonizeTriangles,Cyclomatic complexity of the method is 20
Complex Method,FarseerPhysics.Common.PolygonManipulation,SimpleCombiner,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimpleCombiner.cs,AddTriangle,Cyclomatic complexity of the method is 14
Complex Method,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,MergeParallelEdges,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,CalculateIntersections,Cyclomatic complexity of the method is 12
Complex Method,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,CalculateResultChain,Cyclomatic complexity of the method is 17
Complex Method,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,BuildPolygonsFromChain,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,Cyclomatic complexity of the method is 35
Complex Method,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,Cyclomatic complexity of the method is 16
Complex Method,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,combLeft,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,Initialize,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchHoleEntrance,Cyclomatic complexity of the method is 15
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DistanceToHullAcceptable,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchCrossingEdges,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SplitPolygonEdge,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,GetDecayMultiplier,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,Update,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Controllers,GravityController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\GravityController.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,AddPair,Cyclomatic complexity of the method is 15
Complex Method,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,Destroy,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,Collide,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,ShouldCollide,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,Solve,Cyclomatic complexity of the method is 31
Complex Method,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,SolveTOI,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,ProcessRemovedJoints,Cyclomatic complexity of the method is 16
Complex Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,ProcessAddedJoints,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,Solve,Cyclomatic complexity of the method is 26
Complex Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,Cyclomatic complexity of the method is 35
Complex Method,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,Step,Cyclomatic complexity of the method is 15
Complex Method,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Update,Cyclomatic complexity of the method is 27
Complex Method,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveVelocityConstraints,Cyclomatic complexity of the method is 9
Complex Method,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,InitVelocityConstraints,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,SolvePositionConstraints,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Dynamics.Joints,RevoluteJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RevoluteJoint.cs,InitVelocityConstraints,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Dynamics.Joints,RevoluteJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RevoluteJoint.cs,SolveVelocityConstraints,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Dynamics.Joints,WheelJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WheelJoint.cs,InitVelocityConstraints,Cyclomatic complexity of the method is 9
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,TestOverlap,The method has 6 parameters. Parameters: shapeA' indexA' shapeB' indexB' xfA' xfB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollideCircles,The method has 5 parameters. Parameters: manifold' circleA' xfA' circleB' xfB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygonAndCircle,The method has 5 parameters. Parameters: manifold' polygonA' xfA' circleB' xfB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The method has 5 parameters. Parameters: manifold' polyA' transformA' polyB' transformB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollideEdgeAndCircle,The method has 5 parameters. Parameters: manifold' edgeA' transformA' circleB' transformB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollideEdgeAndPolygon,The method has 5 parameters. Parameters: manifold' edgeA' xfA' polygonB' xfB
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,ClipSegmentToLine,The method has 5 parameters. Parameters: vOut' vIn' normal' offset' vertexIndexA
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,EdgeSeparation,The method has 5 parameters. Parameters: poly1' xf1' edge1' poly2' xf2
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,FindMaxSeparation,The method has 5 parameters. Parameters: edgeIndex' poly1' xf1' poly2' xf2
Long Parameter List,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,FindIncidentEdge,The method has 6 parameters. Parameters: c' poly1' xf1' edge1' poly2' xf2
Long Parameter List,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,The method has 5 parameters. Parameters: manifold' edgeA' xfA' polygonB' xfB
Long Parameter List,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ReadCache,The method has 5 parameters. Parameters: cache' proxyA' transformA' proxyB' transformB
Long Parameter List,FarseerPhysics.Collision,SeparationFunction,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,Set,The method has 6 parameters. Parameters: cache' proxyA' sweepA' proxyB' sweepB' t1
Long Parameter List,FarseerPhysics.Common.Decomposition,Triangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,Triangle,The method has 6 parameters. Parameters: x1' y1' x2' y2' x3' y3
Long Parameter List,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,Snip,The method has 6 parameters. Parameters: contour' u' v' w' n' V
Long Parameter List,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,EdgeEvent,The method has 5 parameters. Parameters: tcx' ep' eq' triangle' point
Long Parameter List,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,FlipEdgeEvent,The method has 5 parameters. Parameters: tcx' ep' eq' t' p
Long Parameter List,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,NextFlipTriangle,The method has 6 parameters. Parameters: tcx' o' t' ot' p' op
Long Parameter List,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,FlipScanEdgeEvent,The method has 6 parameters. Parameters: tcx' ep' eq' flipTriangle' t' p
Long Parameter List,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect2,The method has 5 parameters. Parameters: a0' a1' b0' b1' intersectionPoint
Long Parameter List,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect,The method has 7 parameters. Parameters: point1' point2' point3' point4' firstIsSegment' secondIsSegment' point
Long Parameter List,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect,The method has 7 parameters. Parameters: point1' point2' point3' point4' firstIsSegment' secondIsSegment' intersectionPoint
Long Parameter List,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect,The method has 5 parameters. Parameters: point1' point2' point3' point4' intersectionPoint
Long Parameter List,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect,The method has 5 parameters. Parameters: point1' point2' point3' point4' intersectionPoint
Long Parameter List,FarseerPhysics.Common,PathManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PathManager.cs,EvenlyDistributeShapesAlongPath,The method has 6 parameters. Parameters: world' path' shapes' type' copies' userData
Long Parameter List,FarseerPhysics.Common,PathManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PathManager.cs,EvenlyDistributeShapesAlongPath,The method has 6 parameters. Parameters: world' path' shape' type' copies' userData
Long Parameter List,FarseerPhysics.Common,PathManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PathManager.cs,EvenlyDistributeShapesAlongPath,The method has 5 parameters. Parameters: world' path' shape' type' copies
Long Parameter List,FarseerPhysics.Common,PathManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PathManager.cs,MoveBodyOnPath,The method has 5 parameters. Parameters: path' body' time' strength' timeStep
Long Parameter List,FarseerPhysics.Common,PathManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PathManager.cs,AttachBodiesWithRevoluteJoint,The method has 6 parameters. Parameters: world' bodies' localAnchorA' localAnchorB' connectFirstAndLast' collideConnected
Long Parameter List,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The method has 5 parameters. Parameters: width' height' xRadius' yRadius' segments
Long Parameter List,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The method has 5 parameters. Parameters: height' topRadius' topEdges' bottomRadius' bottomEdges
Long Parameter List,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreatePolygon,The method has 6 parameters. Parameters: data' width' hullTolerance' alphaTolerance' multiPartDetection' holeDetection
Long Parameter List,FarseerPhysics.Common.PhysicsLogic,SimpleExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\SimpleExplosion.cs,ApplyImpulse,The method has 5 parameters. Parameters: pos' radius' force' maxForce' overlappingBodies
Long Parameter List,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The method has 5 parameters. Parameters: fixture' entryPoint' exitPoint' first' second
Long Parameter List,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,SimplifySection,The method has 5 parameters. Parameters: vertices' i' j' usePoint' distanceTolerance
Long Parameter List,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,CalculateResultChain,The method has 6 parameters. Parameters: poly1Coeff' poly1Simplicies' poly2Coeff' poly2Simplicies' clipType' resultSimplices
Long Parameter List,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The method has 6 parameters. Parameters: domain' cellWidth' cellHeight' f' lerpCount' combine
Long Parameter List,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,Xlerp,The method has 7 parameters. Parameters: x0' x1' y' v0' v1' f' c
Long Parameter List,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,Ylerp,The method has 7 parameters. Parameters: y0' y1' x' v0' v1' f' c
Long Parameter List,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The method has 10 parameters. Parameters: f' fs' poly' ax' ay' x0' y0' x1' y1' bin
Long Parameter List,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,TextureConverter,The method has 6 parameters. Parameters: alphaTolerance' hullTolerance' holeDetection' multipartDetection' pixelOffsetOptimization' transform
Long Parameter List,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,TextureConverter,The method has 8 parameters. Parameters: data' width' alphaTolerance' hullTolerance' holeDetection' multipartDetection' pixelOffsetOptimization' transform
Long Parameter List,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,Initialize,The method has 8 parameters. Parameters: data' width' alphaTolerance' hullTolerance' holeDetection' multipartDetection' pixelOffsetOptimization' transform
Long Parameter List,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The method has 6 parameters. Parameters: data' width' hullTolerance' alphaTolerance' multiPartDetection' holeDetection
Long Parameter List,FarseerPhysics.Controllers,BuoyancyController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\BuoyancyController.cs,BuoyancyController,The method has 5 parameters. Parameters: container' density' linearDragCoefficient' rotationalDragCoefficient' gravity
Long Parameter List,FarseerPhysics,DebugViewBase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\DebugViewBase.cs,DrawPolygon,The method has 6 parameters. Parameters: vertices' count' red' blue' green' closed
Long Parameter List,FarseerPhysics,DebugViewBase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\DebugViewBase.cs,DrawSolidPolygon,The method has 5 parameters. Parameters: vertices' count' red' blue' green
Long Parameter List,FarseerPhysics,DebugViewBase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\DebugViewBase.cs,DrawCircle,The method has 5 parameters. Parameters: center' radius' red' blue' green
Long Parameter List,FarseerPhysics,DebugViewBase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\DebugViewBase.cs,DrawSolidCircle,The method has 6 parameters. Parameters: center' radius' axis' red' blue' green
Long Parameter List,FarseerPhysics,DebugViewBase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\DebugViewBase.cs,DrawSegment,The method has 5 parameters. Parameters: start' end' red' blue' green
Long Parameter List,FarseerPhysics.Dynamics,Body,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Body.cs,Body,The method has 5 parameters. Parameters: world' position' rotation' bodyType' userdata
Long Parameter List,FarseerPhysics.Dynamics,BreakableBody,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\BreakableBody.cs,BreakableBody,The method has 5 parameters. Parameters: world' vertices' density' position' rotation
Long Parameter List,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Reset,The method has 6 parameters. Parameters: step' count' contacts' positions' velocities' warmstarting
Long Parameter List,FarseerPhysics.Dynamics.Contacts,WorldManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The method has 7 parameters. Parameters: manifold' xfA' radiusA' xfB' radiusB' normal' points
Long Parameter List,FarseerPhysics.Dynamics.Contacts,PositionSolverManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The method has 7 parameters. Parameters: pc' xfA' xfB' index' normal' point' separation
Long Parameter List,FarseerPhysics.Dynamics.Joints,DistanceJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\DistanceJoint.cs,DistanceJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,GearJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\GearJoint.cs,GearJoint,The method has 5 parameters. Parameters: bodyA' bodyB' jointA' jointB' ratio
Long Parameter List,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,PrismaticJoint,The method has 6 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' axis' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,PrismaticJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchor' axis' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,PulleyJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PulleyJoint.cs,PulleyJoint,The method has 8 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' worldAnchorA' worldAnchorB' ratio' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,RevoluteJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RevoluteJoint.cs,RevoluteJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,RopeJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RopeJoint.cs,RopeJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,WeldJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WeldJoint.cs,WeldJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Dynamics.Joints,WheelJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WheelJoint.cs,WheelJoint,The method has 5 parameters. Parameters: bodyA' bodyB' anchor' axis' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateBody,The method has 5 parameters. Parameters: world' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateRectangle,The method has 8 parameters. Parameters: world' width' height' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCircle,The method has 6 parameters. Parameters: world' radius' density' position' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateEllipse,The method has 9 parameters. Parameters: world' xRadius' yRadius' edges' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreatePolygon,The method has 7 parameters. Parameters: world' vertices' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCompoundPolygon,The method has 7 parameters. Parameters: world' list' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateGear,The method has 10 parameters. Parameters: world' radius' numberOfTeeth' tipPercentage' toothHeight' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCapsule,The method has 11 parameters. Parameters: world' height' topRadius' topEdges' bottomRadius' bottomEdges' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCapsule,The method has 8 parameters. Parameters: world' height' endRadius' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateRoundedRectangle,The method has 11 parameters. Parameters: world' width' height' xRadius' yRadius' segments' density' position' rotation' bodyType' userData
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateLineArc,The method has 8 parameters. Parameters: world' radians' sides' radius' closed' position' rotation' bodyType
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateSolidArc,The method has 8 parameters. Parameters: world' density' radians' sides' radius' position' rotation' bodyType
Long Parameter List,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateBreakableBody,The method has 5 parameters. Parameters: world' vertices' density' position' rotation
Long Parameter List,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachRectangle,The method has 6 parameters. Parameters: width' height' density' offset' body' userData
Long Parameter List,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachCircle,The method has 5 parameters. Parameters: radius' density' body' offset' userData
Long Parameter List,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachEllipse,The method has 6 parameters. Parameters: xRadius' yRadius' edges' density' body' userData
Long Parameter List,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachLineArc,The method has 5 parameters. Parameters: radians' sides' radius' closed' body
Long Parameter List,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachSolidArc,The method has 5 parameters. Parameters: density' radians' sides' radius' body
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateRevoluteJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateRopeJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateWeldJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreatePrismaticJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchor' axis' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateWheelJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchor' axis' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateDistanceJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' anchorA' anchorB' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateFrictionJoint,The method has 5 parameters. Parameters: world' bodyA' bodyB' anchor' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreateGearJoint,The method has 6 parameters. Parameters: world' bodyA' bodyB' jointA' jointB' ratio
Long Parameter List,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreatePulleyJoint,The method has 9 parameters. Parameters: world' bodyA' bodyB' anchorA' anchorB' worldAnchorA' worldAnchorB' ratio' useWorldCoordinates
Long Parameter List,FarseerPhysics.Factories,LinkFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\LinkFactory.cs,CreateChain,The method has 8 parameters. Parameters: world' start' end' linkWidth' linkHeight' numberOfLinks' linkDensity' attachRopeJoint
Long Identifier,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,AngleExceedsPlus90DegreesOrIsNegative,The length of the parameter exceedsPlus90DegreesOrIsNegative is 32.
Long Identifier,FarseerPhysics,Settings,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Settings.cs,,The length of the parameter DefaultFixtureCollisionCategories is 33.
Long Statement,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,The length of the statement  "            Vector2 intoVec = new Vector2(Vertices[intoIndex].X * (1 - intoLambda) + Vertices[intoIndex2].X * intoLambda' Vertices[intoIndex].Y * (1 - intoLambda) + Vertices[intoIndex2].Y * intoLambda); " is 190.
Long Statement,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,The length of the statement  "            Vector2 outoVec = new Vector2(Vertices[outoIndex].X * (1 - outoLambda) + Vertices[outoIndex2].X * outoLambda' Vertices[outoIndex].Y * (1 - outoLambda) + Vertices[outoIndex2].Y * outoLambda); " is 190.
Long Statement,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The length of the statement  "                if (MathUtils.Area(ref deque[qfm1]' ref deque[qf]' ref nextPt) > 0 && MathUtils.Area(ref deque[qb]' ref deque[qbm1]' ref nextPt) > 0) " is 133.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The length of the statement  "                        if (Left(At(i - 1' vertices)' At(i' vertices)' At(j' vertices)) && RightOn(At(i - 1' vertices)' At(i' vertices)' At(j - 1' vertices))) " is 134.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The length of the statement  "                        if (Left(At(i + 1' vertices)' At(i' vertices)' At(j + 1' vertices)) && RightOn(At(i + 1' vertices)' At(i' vertices)' At(j' vertices))) " is 134.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The length of the statement  "                                    if (RightOn(At(j - 1' vertices)' At(j' vertices)' At(i' vertices)) && LeftOn(At(j + 1' vertices)' At(j' vertices)' At(i' vertices))) " is 132.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The length of the statement  "                if (LeftOn(At(i' vertices)' At(i - 1' vertices)' At(j' vertices)) && RightOn(At(i' vertices)' At(i + 1' vertices)' At(j' vertices))) " is 132.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The length of the statement  "                if (RightOn(At(i' vertices)' At(i + 1' vertices)' At(j' vertices)) || LeftOn(At(i' vertices)' At(i - 1' vertices)' At(j' vertices))) " is 132.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The length of the statement  "                if (LeftOn(At(j' vertices)' At(j - 1' vertices)' At(i' vertices)) && RightOn(At(j' vertices)' At(j + 1' vertices)' At(i' vertices))) " is 132.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The length of the statement  "                if (RightOn(At(j' vertices)' At(j + 1' vertices)' At(i' vertices)) || LeftOn(At(j' vertices)' At(j - 1' vertices)' At(i' vertices))) " is 132.
Long Statement,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The length of the statement  "                if (LineTools.LineIntersect(At(i' vertices)' At(j' vertices)' At(k' vertices)' At(k + 1' vertices)' out intersectionPoint)) " is 123.
Long Statement,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ConvexPartition,The length of the statement  "                        Debug.Assert(vertices.IsCounterClockWise()' "The polygon is not counter clockwise. This is needed for Bayazit to work correctly."); " is 131.
Long Statement,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ConvexPartition,The length of the statement  "                        Debug.Assert(vertices.IsCounterClockWise()' "The polygon is not counter clockwise. This is needed for Bayazit to work correctly."); " is 131.
Long Statement,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ValidatePolygon,The length of the statement  "            if (errorCode == PolygonError.InvalidAmountOfVertices || errorCode == PolygonError.AreaTooSmall || errorCode == PolygonError.SideTooSmall || errorCode == PolygonError.NotSimple) " is 177.
Long Statement,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ValidatePolygon,The length of the statement  "            if (errorCode == PolygonError.NotCounterClockWise) //NotCounterCloseWise is the last check in CheckPolygon()' thus we don't need to call ValidatePolygon again. " is 159.
Long Statement,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect,The length of the statement  "            return LineIntersect(ref point1' ref point2' ref point3' ref point4' firstIsSegment' secondIsSegment' out intersectionPoint); " is 125.
Long Statement,FarseerPhysics.Common,Mat33,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Math.cs,Solve33,The length of the statement  "            return new Vector3(det * Vector3.Dot(b' Vector3.Cross(ey' ez))' det * Vector3.Dot(ex' Vector3.Cross(b' ez))' det * Vector3.Dot(ex' Vector3.Cross(ey' b))); " is 154.
Long Statement,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The length of the statement  "                    "The top radius must be lower than height / 2. Higher values of top radius would create a circle' and not a half circle."' " is 122.
Long Statement,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The length of the statement  "                    "The bottom radius must be lower than height / 2. Higher values of bottom radius would create a circle' and not a half circle."' " is 128.
Long Statement,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,Translate,The length of the statement  "            Debug.Assert(!AttachedToBody' "Translating vertices that are used by a Body can result in unstable behavior. Use Body.Position instead."); " is 138.
Long Statement,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The length of the statement  "                        float impulse = (arclen / (MinRays + insertedRays)) * maxForce * 180.0f / MathHelper.Pi * (1.0f - Math.Min(1.0f' minlambda)); " is 125.
Long Statement,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The length of the statement  "                        Vector2 vectImp = Vector2.Dot(impulse * new Vector2((float)Math.Cos(j)' (float)Math.Sin(j))' -ro.Normal) * new Vector2((float)Math.Cos(j)' (float)Math.Sin(j)); " is 159.
Long Statement,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The length of the statement  "                if (Vector2.Dot(MathUtils.Cross(localExitPoint - localEntryPoint' 1)' vertices[i] - localEntryPoint) > Settings.Epsilon) " is 120.
Long Statement,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,Execute,The length of the statement  "      Debug.Assert(subject.IsSimple() && clip.IsSimple()' "Non simple input!"' "Input polygons must be simple (cannot intersect themselves)."); " is 137.
Long Statement,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,GenerateTerrain,The length of the statement  "            List<Vertices> polys = MarchingSquares.DetectSquares(new AABB(new Vector2(ax' ay)' new Vector2(ax + CellSize' ay + CellSize))' SubCellSize' SubCellSize' _terrainMap' Iterations' true); " is 184.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SetTextureData,The length of the statement  "                throw new ArgumentOutOfRangeException("data"' "'data' length can't be less then 4. Your texture must be at least 2 x 2 pixels in size."); " is 137.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SetTextureData,The length of the statement  "                throw new ArgumentOutOfRangeException("width"' "'width' can't be less then 2. Your texture must be at least 2 x 2 pixels in size."); " is 132.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The length of the statement  "                throw new Exception("'_data' can't be null. You have to use SetTextureData(uint[] data' int width) before calling this method."); " is 129.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The length of the statement  "                throw new Exception("'_width' has an invalid value. You have to use SetTextureData(uint[] data' int width) before calling this method."); " is 137.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The length of the statement  "                    polygon = new Vertices(CreateSimplePolygon(polygonEntrance.Value' new Vector2(polygonEntrance.Value.X - 1f' polygonEntrance.Value.Y))); " is 135.
Long Statement,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DistanceToHullAcceptable,The length of the statement  "                    if (LineTools.DistanceBetweenPointAndLineSegment(ref point' ref edgeVertex1' ref edgeVertex2) <= _hullTolerance || Vector2.Distance(point' edgeVertex1) <= _hullTolerance) " is 170.
Long Statement,FarseerPhysics.Controllers,SimpleWindForce,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\SimpleWindForce.cs,ApplyForce,The length of the statement  "                    //forceVector = Vector2.Transform(forceVector' Matrix.CreateRotationZ((MathHelper.Pi - MathHelper.Pi/2) * (float)Randomize.NextDouble())); " is 138.
Long Statement,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,Solve,The length of the statement  "                    if (!b.SleepingAllowed || b._angularVelocity * b._angularVelocity > AngTolSqr || Vector2.Dot(b._linearVelocity' b._linearVelocity) > LinTolSqr) " is 143.
Long Statement,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The length of the statement  "                        bool collideA = (bA.IsBullet || typeA != BodyType.Dynamic) && ((fA.IgnoreCCDWith & fB.CollisionCategories) == 0) && !bA.IgnoreCCD; " is 130.
Long Statement,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The length of the statement  "                        bool collideB = (bB.IsBullet || typeB != BodyType.Dynamic) && ((fB.IgnoreCCDWith & fA.CollisionCategories) == 0) && !bB.IgnoreCCD; " is 130.
Long Statement,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,RemoveBody,The length of the statement  "            Debug.Assert(!_bodyRemoveList.Contains(body)' "The body is already marked for removal. You are removing the body more than once."); " is 131.
Long Statement,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,Step,The length of the statement  "                ContinuousPhysicsTime = _watch.ElapsedTicks - (AddRemoveTime + NewContactsTime + ControllersUpdateTime + ContactsUpdateTime + SolveUpdateTime); " is 143.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,GetWorldManifold,The length of the statement  "            ContactSolver.WorldManifold.Initialize(ref Manifold' ref bodyA._xf' shapeA.Radius' ref bodyB._xf' shapeB.Radius' out normal' out points); " is 137.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollidePolygons(ref manifold' (PolygonShape)FixtureA.Shape' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB); " is 142.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollidePolygonAndCircle(ref manifold' (PolygonShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB); " is 149.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollideEdgeAndCircle(ref manifold' (EdgeShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB); " is 143.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollideEdgeAndPolygon(ref manifold' (EdgeShape)FixtureA.Shape' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB); " is 145.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollideEdgeAndCircle(ref manifold' _edge' ref transformA' (CircleShape)FixtureB.Shape' ref transformB); " is 123.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollideEdgeAndPolygon(ref manifold' _edge' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB); " is 125.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The length of the statement  "                    Collision.Collision.CollideCircles(ref manifold' (CircleShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB); " is 139.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Create,The length of the statement  "                if ((type1 >= type2 || (type1 == ShapeType.Edge && type2 == ShapeType.Polygon)) && !(type2 == ShapeType.Edge && type1 == ShapeType.Polygon)) " is 140.
Long Statement,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Create,The length of the statement  "                if ((type1 >= type2 || (type1 == ShapeType.Edge && type2 == ShapeType.Polygon)) && !(type2 == ShapeType.Edge && type1 == ShapeType.Polygon)) " is 140.
Long Statement,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveVelocityConstraints,The length of the statement  "                    // In order to account of the accumulated impulse 'a' (because of the iterative nature of the solver which only requires " is 120.
Long Statement,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolvePositionConstraints,The length of the statement  "                    float C = MathUtils.Clamp(Settings.Baumgarte * (separation + Settings.LinearSlop)' -Settings.MaxLinearCorrection' 0.0f); " is 120.
Long Statement,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveTOIPositionConstraints,The length of the statement  "                    float C = MathUtils.Clamp(Settings.Baumgarte * (separation + Settings.LinearSlop)' -Settings.MaxLinearCorrection' 0.0f); " is 120.
Long Statement,FarseerPhysics.Factories,JointFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\JointFactory.cs,CreatePulleyJoint,The length of the statement  "            PulleyJoint pulleyJoint = new PulleyJoint(bodyA' bodyB' anchorA' anchorB' worldAnchorA' worldAnchorB' ratio' useWorldCoordinates); " is 130.
Long Statement,FarseerPhysics.Factories,LinkFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\LinkFactory.cs,CreateChain,The length of the statement  "            List<Body> chainLinks = PathManager.EvenlyDistributeShapesAlongPath(world' path' shape' BodyType.Dynamic' numberOfLinks); " is 121.
Long Statement,FarseerPhysics.Factories,LinkFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\LinkFactory.cs,CreateChain,The length of the statement  "            PathManager.AttachBodiesWithRevoluteJoint(world' chainLinks' new Vector2(0' -linkHeight)' new Vector2(0' linkHeight)' false' false); " is 132.
Complex Conditional,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,CanSee,The conditional expression  "(k + 1) % vertices.Count == i || k == i || (k + 1) % vertices.Count == j || k == j"  is complex.
Complex Conditional,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ValidatePolygon,The conditional expression  "errorCode == PolygonError.InvalidAmountOfVertices || errorCode == PolygonError.AreaTooSmall || errorCode == PolygonError.SideTooSmall || errorCode == PolygonError.NotSimple"  is complex.
Complex Conditional,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The conditional expression  "(p1 == Points[2] && p2 == Points[1]) || (p1 == Points[1] && p2 == Points[2])"  is complex.
Complex Conditional,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The conditional expression  "(p1 == Points[0] && p2 == Points[2]) || (p1 == Points[2] && p2 == Points[0])"  is complex.
Complex Conditional,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The conditional expression  "(p1 == Points[0] && p2 == Points[1]) || (p1 == Points[1] && p2 == Points[0])"  is complex.
Complex Conditional,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect2,The conditional expression  "a0 == b0 || a0 == b1 || a1 == b0 || a1 == b1"  is complex.
Complex Conditional,FarseerPhysics.Common,LineTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\LineTools.cs,LineIntersect2,The conditional expression  "(0 < ua) && (ua < 1) && (0 < ub) && (ub < 1)"  is complex.
Complex Conditional,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The conditional expression  "(_data.Count > 1)                          && (i == valIndex - 1)                          && (_data.Last().Body == _data.First().Body)                          && (_data.Last().Max == _data.First().Min)"  is complex.
Complex Conditional,FarseerPhysics.Common.PolygonManipulation,SimpleCombiner,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimpleCombiner.cs,PolygonizeTriangles,The conditional expression  "(a.X == b.X && a.Y == b.Y) || (b.X == c.X && b.Y == c.Y) || (a.X == c.X && a.Y == c.Y)"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,ApplyData,The conditional expression  "x + offset.X >= 0 && x + offset.X < _localWidth && y + offset.Y >= 0 && y + offset.Y < _localHeight"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,ModifyTerrain,The conditional expression  "p.X >= 0 && p.X < _localWidth && p.Y >= 0 && p.Y < _localHeight"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,IsSolid,The conditional expression  "_tempIsSolidX >= 0 && _tempIsSolidX < _width && _tempIsSolidY >= 0 && _tempIsSolidY < _height"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,IsSolid,The conditional expression  "x >= 0 && x < _width && y >= 0 && y < _height"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchHoleEntrance,The conditional expression  "startY > 0 && startY < _height && endY > 0 && endY < _height"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchCrossingEdges,The conditional expression  "(vertex1.Y >= y && vertex2.Y <= y) ||                          (vertex1.Y <= y && vertex2.Y >= y)"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,IsNearPixel,The conditional expression  "x >= 0 && x <= _width && y >= 0 && y <= _height"  is complex.
Complex Conditional,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetNextHullPoint,The conditional expression  "x >= 0 && x < _width && y >= 0 && y <= _height"  is complex.
Complex Conditional,FarseerPhysics.Controllers,GravityController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\GravityController.cs,Update,The conditional expression  "worldBody == controllerBody || (worldBody.IsStatic && controllerBody.IsStatic) || !controllerBody.Enabled"  is complex.
Complex Conditional,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,AddPair,The conditional expression  "fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB"  is complex.
Complex Conditional,FarseerPhysics.Dynamics,ContactManager,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\ContactManager.cs,AddPair,The conditional expression  "fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA"  is complex.
Complex Conditional,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Create,The conditional expression  "(type1 >= type2 || (type1 == ShapeType.Edge && type2 == ShapeType.Polygon)) && !(type2 == ShapeType.Edge && type1 == ShapeType.Polygon)"  is complex.
Complex Conditional,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Create,The conditional expression  "(type1 >= type2 || (type1 == ShapeType.Edge && type2 == ShapeType.Polygon)) && !(type2 == ShapeType.Edge && type1 == ShapeType.Polygon)"  is complex.
Virtual Method Call from Constructor,FarseerPhysics.Dynamics,Fixture,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Fixture.cs,Fixture,The constructor "Fixture" calls a virtual method "Clone".
Magic Number,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,AABB,The following statement contains a magic number: LowerBound = center - new Vector2(width / 2' height / 2);
Magic Number,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,AABB,The following statement contains a magic number: LowerBound = center - new Vector2(width / 2' height / 2);
Magic Number,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,AABB,The following statement contains a magic number: UpperBound = center + new Vector2(width / 2' height / 2);
Magic Number,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,AABB,The following statement contains a magic number: UpperBound = center + new Vector2(width / 2' height / 2);
Magic Number,FarseerPhysics.Collision,AABB,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,RayCast,The following statement contains a magic number: i < 2
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,TestOverlap,The following statement contains a magic number: return output.Distance < 10.0f * Settings.Epsilon;
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygonAndCircle,The following statement contains a magic number: manifold.LocalPoint = 0.5f * (v1 + v2);
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The following statement contains a magic number: const float k_relativeTol = 0.98f;
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The following statement contains a magic number: const float k_absoluteTol = 0.001f;
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The following statement contains a magic number: Vector2 planePoint = 0.5f * (v11 + v12);
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The following statement contains a magic number: np < 2
Magic Number,FarseerPhysics.Collision,Collision,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,CollidePolygons,The following statement contains a magic number: np < 2
Magic Number,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,The following statement contains a magic number: _radius = 2.0f * Settings.PolygonRadius;
Magic Number,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,The following statement contains a magic number: const float k_relativeTol = 0.98f;
Magic Number,FarseerPhysics.Collision,EPCollider,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Collision.cs,Collide,The following statement contains a magic number: const float k_absoluteTol = 0.001f;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ReadCache,The following statement contains a magic number: Debug.Assert(cache.Count <= 3);
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ReadCache,The following statement contains a magic number: metric2 < 0.5f * metric1 || 2.0f * metric1 < metric2 || metric2 < Settings.Epsilon
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ReadCache,The following statement contains a magic number: metric2 < 0.5f * metric1 || 2.0f * metric1 < metric2 || metric2 < Settings.Epsilon
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetSearchDirection,The following statement contains a magic number: switch (Count)              {                  case 1:                      return -V[0].W;                    case 2:                      {                          Vector2 e12 = V[1].W - V[0].W;                          float sgn = MathUtils.Cross(e12' -V[0].W);                          if (sgn > 0.0f)                          {                              // Origin is left of e12.                              return new Vector2(-e12.Y' e12.X);                          }                          else                          {                              // Origin is right of e12.                              return new Vector2(e12.Y' -e12.X);                          }                      }                    default:                      Debug.Assert(false);                      return Vector2.Zero;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetClosestPoint,The following statement contains a magic number: switch (Count)              {                  case 0:                      Debug.Assert(false);                      return Vector2.Zero;                    case 1:                      return V[0].W;                    case 2:                      return V[0].A * V[0].W + V[1].A * V[1].W;                    case 3:                      return Vector2.Zero;                    default:                      Debug.Assert(false);                      return Vector2.Zero;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetClosestPoint,The following statement contains a magic number: switch (Count)              {                  case 0:                      Debug.Assert(false);                      return Vector2.Zero;                    case 1:                      return V[0].W;                    case 2:                      return V[0].A * V[0].W + V[1].A * V[1].W;                    case 3:                      return Vector2.Zero;                    default:                      Debug.Assert(false);                      return Vector2.Zero;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetWitnessPoints,The following statement contains a magic number: switch (Count)              {                  case 0:                      pA = Vector2.Zero;                      pB = Vector2.Zero;                      Debug.Assert(false);                      break;                    case 1:                      pA = V[0].WA;                      pB = V[0].WB;                      break;                    case 2:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA;                      pB = V[0].A * V[0].WB + V[1].A * V[1].WB;                      break;                    case 3:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA + V[2].A * V[2].WA;                      pB = pA;                      break;                    default:                      throw new Exception();              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetWitnessPoints,The following statement contains a magic number: switch (Count)              {                  case 0:                      pA = Vector2.Zero;                      pB = Vector2.Zero;                      Debug.Assert(false);                      break;                    case 1:                      pA = V[0].WA;                      pB = V[0].WB;                      break;                    case 2:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA;                      pB = V[0].A * V[0].WB + V[1].A * V[1].WB;                      break;                    case 3:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA + V[2].A * V[2].WA;                      pB = pA;                      break;                    default:                      throw new Exception();              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetWitnessPoints,The following statement contains a magic number: switch (Count)              {                  case 0:                      pA = Vector2.Zero;                      pB = Vector2.Zero;                      Debug.Assert(false);                      break;                    case 1:                      pA = V[0].WA;                      pB = V[0].WB;                      break;                    case 2:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA;                      pB = V[0].A * V[0].WB + V[1].A * V[1].WB;                      break;                    case 3:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA + V[2].A * V[2].WA;                      pB = pA;                      break;                    default:                      throw new Exception();              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetWitnessPoints,The following statement contains a magic number: switch (Count)              {                  case 0:                      pA = Vector2.Zero;                      pB = Vector2.Zero;                      Debug.Assert(false);                      break;                    case 1:                      pA = V[0].WA;                      pB = V[0].WB;                      break;                    case 2:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA;                      pB = V[0].A * V[0].WB + V[1].A * V[1].WB;                      break;                    case 3:                      pA = V[0].A * V[0].WA + V[1].A * V[1].WA + V[2].A * V[2].WA;                      pB = pA;                      break;                    default:                      throw new Exception();              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetMetric,The following statement contains a magic number: switch (Count)              {                  case 0:                      Debug.Assert(false);                      return 0.0f;                  case 1:                      return 0.0f;                    case 2:                      return (V[0].W - V[1].W).Length();                    case 3:                      return MathUtils.Cross(V[1].W - V[0].W' V[2].W - V[0].W);                    default:                      Debug.Assert(false);                      return 0.0f;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetMetric,The following statement contains a magic number: switch (Count)              {                  case 0:                      Debug.Assert(false);                      return 0.0f;                  case 1:                      return 0.0f;                    case 2:                      return (V[0].W - V[1].W).Length();                    case 3:                      return MathUtils.Cross(V[1].W - V[0].W' V[2].W - V[0].W);                    default:                      Debug.Assert(false);                      return 0.0f;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,GetMetric,The following statement contains a magic number: switch (Count)              {                  case 0:                      Debug.Assert(false);                      return 0.0f;                  case 1:                      return 0.0f;                    case 2:                      return (V[0].W - V[1].W).Length();                    case 3:                      return MathUtils.Cross(V[1].W - V[0].W' V[2].W - V[0].W);                    default:                      Debug.Assert(false);                      return 0.0f;              }
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve2,The following statement contains a magic number: Count = 2;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: Vector2 w3 = V[2].W;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: Count = 2;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: SimplexVertex v2_3 = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[2] = v2_3;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: Count = 2;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[1] = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: SimplexVertex v2_5 = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[2] = v2_5;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[0] = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: SimplexVertex v2_6 = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[2] = v2_6;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: Count = 2;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[0] = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: SimplexVertex v2_7 = V[2];
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: V[2] = v2_7;
Magic Number,FarseerPhysics.Collision,Simplex,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,Solve3,The following statement contains a magic number: Count = 3;
Magic Number,FarseerPhysics.Collision,Distance,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ComputeDistance,The following statement contains a magic number: switch (simplex.Count)                  {                      case 1:                          break;                      case 2:                          simplex.Solve2();                          break;                      case 3:                          simplex.Solve3();                          break;                      default:                          Debug.Assert(false);                          break;                  }
Magic Number,FarseerPhysics.Collision,Distance,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ComputeDistance,The following statement contains a magic number: switch (simplex.Count)                  {                      case 1:                          break;                      case 2:                          simplex.Solve2();                          break;                      case 3:                          simplex.Solve3();                          break;                      default:                          Debug.Assert(false);                          break;                  }
Magic Number,FarseerPhysics.Collision,Distance,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Distance.cs,ComputeDistance,The following statement contains a magic number: simplex.Count == 3
Magic Number,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,DynamicTree,The following statement contains a magic number: _nodeCapacity = 16;
Magic Number,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,AllocateNode,The following statement contains a magic number: _nodeCapacity *= 2;
Magic Number,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,InsertLeaf,The following statement contains a magic number: float cost = 2.0f * combinedArea;
Magic Number,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,InsertLeaf,The following statement contains a magic number: float inheritanceCost = 2.0f * (combinedArea - area);
Magic Number,FarseerPhysics.Collision,DynamicTree<T>,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTree.cs,Balance,The following statement contains a magic number: A.IsLeaf() || A.Height < 2
Magic Number,FarseerPhysics.Collision,DynamicTreeBroadPhase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTreeBroadPhase.cs,DynamicTreeBroadPhase,The following statement contains a magic number: _pairCapacity = 16;
Magic Number,FarseerPhysics.Collision,DynamicTreeBroadPhase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTreeBroadPhase.cs,DynamicTreeBroadPhase,The following statement contains a magic number: _moveCapacity = 16;
Magic Number,FarseerPhysics.Collision,DynamicTreeBroadPhase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTreeBroadPhase.cs,BufferMove,The following statement contains a magic number: _moveCapacity *= 2;
Magic Number,FarseerPhysics.Collision,DynamicTreeBroadPhase,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\DynamicTreeBroadPhase.cs,QueryCallback,The following statement contains a magic number: _pairCapacity *= 2;
Magic Number,FarseerPhysics.Collision,SeparationFunction,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,Set,The following statement contains a magic number: Debug.Assert(0 < count && count < 3);
Magic Number,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,The following statement contains a magic number: float target = Math.Max(Settings.LinearSlop' totalRadius - 3.0f * Settings.LinearSlop);
Magic Number,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,The following statement contains a magic number: const float tolerance = 0.25f * Settings.LinearSlop;
Magic Number,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,The following statement contains a magic number: const int k_maxIterations = 20;
Magic Number,FarseerPhysics.Collision,TimeOfImpact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\TimeOfImpact.cs,CalculateTimeOfImpact,The following statement contains a magic number: rootIterCount == 50
Magic Number,FarseerPhysics.Collision.Shapes,ChainShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\ChainShape.cs,ChainShape,The following statement contains a magic number: Debug.Assert(vertices != null && vertices.Count >= 3);
Magic Number,FarseerPhysics.Collision.Shapes,ChainShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\ChainShape.cs,ChainShape,The following statement contains a magic number: PrevVertex = Vertices[Vertices.Count - 2];
Magic Number,FarseerPhysics.Collision.Shapes,ChainShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\ChainShape.cs,GetChildEdge,The following statement contains a magic number: edge.Vertex3 = Vertices[index + 2];
Magic Number,FarseerPhysics.Collision.Shapes,ChainShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\ChainShape.cs,GetChildEdge,The following statement contains a magic number: index < Vertices.Count - 2
Magic Number,FarseerPhysics.Collision.Shapes,CircleShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\CircleShape.cs,ComputeProperties,The following statement contains a magic number: MassData.Inertia = MassData.Mass * (0.5f * _2radius + Vector2.Dot(Position' Position));
Magic Number,FarseerPhysics.Collision.Shapes,CircleShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\CircleShape.cs,ComputeSubmergedArea,The following statement contains a magic number: float area = _2radius * (float)((Math.Asin(l / Radius) + Settings.Pi / 2) + l * Math.Sqrt(_2radius - l2));
Magic Number,FarseerPhysics.Collision.Shapes,CircleShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\CircleShape.cs,ComputeSubmergedArea,The following statement contains a magic number: float com = -2.0f / 3.0f * (float)Math.Pow(_2radius - l2' 1.5f) / area;
Magic Number,FarseerPhysics.Collision.Shapes,CircleShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\CircleShape.cs,ComputeSubmergedArea,The following statement contains a magic number: float com = -2.0f / 3.0f * (float)Math.Pow(_2radius - l2' 1.5f) / area;
Magic Number,FarseerPhysics.Collision.Shapes,CircleShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\CircleShape.cs,ComputeSubmergedArea,The following statement contains a magic number: float com = -2.0f / 3.0f * (float)Math.Pow(_2radius - l2' 1.5f) / area;
Magic Number,FarseerPhysics.Collision.Shapes,EdgeShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\EdgeShape.cs,ComputeProperties,The following statement contains a magic number: MassData.Centroid = 0.5f * (_vertex1 + _vertex2);
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeProperties,The following statement contains a magic number: Debug.Assert(Vertices.Count >= 3);
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeProperties,The following statement contains a magic number: const float k_inv3 = 1.0f / 3.0f;
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeProperties,The following statement contains a magic number: float triangleArea = 0.5f * D;
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeProperties,The following statement contains a magic number: I += (0.25f * k_inv3 * D) * (intx2 + inty2);
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,The following statement contains a magic number: const float k_inv3 = 1.0f / 3.0f;
Magic Number,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,The following statement contains a magic number: float triangleArea = 0.5f * D;
Magic Number,FarseerPhysics.Collision.Shapes,MassData,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\Shape.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Centroid.GetHashCode();
Magic Number,FarseerPhysics.Collision.Shapes,MassData,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\Shape.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Inertia.GetHashCode();
Magic Number,FarseerPhysics.Collision.Shapes,MassData,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\Shape.cs,GetHashCode,The following statement contains a magic number: result = (result * 397) ^ Mass.GetHashCode();
Magic Number,FarseerPhysics.Common.ConvexHull,ChainHull,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\ChainHull.cs,GetConvexHull,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.ConvexHull,GiftWrap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\GiftWrap.cs,GetConvexHull,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: int qf = 3' qb = 0;
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: int startIndex = 3;
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: float k = MathUtils.Area(vertices[0]' vertices[1]' vertices[2]);
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: deque[1] = vertices[2];
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: deque[2] = vertices[0];
Magic Number,FarseerPhysics.Common.ConvexHull,Melkman,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\ConvexHull\Melkman.cs,GetConvexHull,The following statement contains a magic number: qf = 2;
Magic Number,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,ConvexPartition,The following statement contains a magic number: Debug.Assert(vertices.Count > 3);
Magic Number,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: Vector2 p = ((lowerInt + upperInt) / 2);
Magic Number,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: lowerPoly = Copy(0' vertices.Count / 2' vertices);
Magic Number,FarseerPhysics.Common.Decomposition,BayazitDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\BayazitDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: upperPoly = Copy(vertices.Count / 2' 0' vertices);
Magic Number,FarseerPhysics.Common.Decomposition,CDTDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDTDecomposer.cs,ConvexPartition,The following statement contains a magic number: Debug.Assert(vertices.Count > 3);
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,ConvexPartition,The following statement contains a magic number: Debug.Assert(vertices.Count > 3);
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: vertices.Count < 3
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: Vertices[] buffer = new Vertices[vertices.Count - 2];
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: float earMaxMinCross = -10.0f;
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: vNum > 3
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: Triangle tooAdd = new Triangle(xrem[1]' yrem[1]' xrem[2]' yrem[2]' xrem[0]' yrem[0]);
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,TriangulatePolygon,The following statement contains a magic number: Triangle tooAdd = new Triangle(xrem[1]' yrem[1]' xrem[2]' yrem[2]' xrem[0]' yrem[0]);
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,ResolvePinchPoint,The following statement contains a magic number: pin.Count < 3
Magic Number,FarseerPhysics.Common.Decomposition,EarclipDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,IsEar,The following statement contains a magic number: i >= xvLength || i < 0 || xvLength < 3
Magic Number,FarseerPhysics.Common.Decomposition,Triangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\EarclipDecomposer.cs,IsInside,The following statement contains a magic number: Vector2 c = this[2];
Magic Number,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,The following statement contains a magic number: Debug.Assert(vertices.Count > 3);
Magic Number,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,The following statement contains a magic number: int count = 2 * nv;
Magic Number,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,The following statement contains a magic number: Vertices triangle = new Vertices(3);
Magic Number,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,The following statement contains a magic number: count = 2 * nv;
Magic Number,FarseerPhysics.Common.Decomposition,FlipcodeDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\FlipcodeDecomposer.cs,ConvexPartition,The following statement contains a magic number: nv > 2
Magic Number,FarseerPhysics.Common.Decomposition,SeidelDecomposer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\SeidelDecomposer.cs,ConvexPartition,The following statement contains a magic number: Debug.Assert(vertices.Count > 3);
Magic Number,FarseerPhysics.Common.Decomposition,Triangulate,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Triangulate.cs,ConvexPartition,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,DelaunayTriangle,The following statement contains a magic number: Points[2] = p3;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,IndexCW,The following statement contains a magic number: switch (index)              {                  case 0:                      return 2;                  case 1:                      return 0;                  default:                      return 1;              }
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,IndexCCW,The following statement contains a magic number: switch (index)              {                  case 0:                      return 1;                  case 1:                      return 2;                  default:                      return 0;              }
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Contains,The following statement contains a magic number: return (p == Points[0] || p == Points[1] || p == Points[2]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The following statement contains a magic number: (p1 == Points[2] && p2 == Points[1]) || (p1 == Points[1] && p2 == Points[2])
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The following statement contains a magic number: (p1 == Points[2] && p2 == Points[1]) || (p1 == Points[1] && p2 == Points[2])
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The following statement contains a magic number: t.MarkNeighbor(Points[1]' Points[2]' this);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighbor,The following statement contains a magic number: t.Contains(Points[1]' Points[2])
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,ClearNeighbors,The following statement contains a magic number: Neighbors[0] = Neighbors[1] = Neighbors[2] = null;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Clear,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Clear,The following statement contains a magic number: Points[0] = Points[1] = Points[2] = null;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,NeighborCW,The following statement contains a magic number: return Neighbors[(Points.IndexOf(point) + 1)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,NeighborCCW,The following statement contains a magic number: return Neighbors[(Points.IndexOf(point) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,NeighborCCW,The following statement contains a magic number: return Neighbors[(Points.IndexOf(point) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,PointCCW,The following statement contains a magic number: return Points[(IndexOf(point) + 1)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,PointCW,The following statement contains a magic number: return Points[(IndexOf(point) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,PointCW,The following statement contains a magic number: return Points[(IndexOf(point) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,RotateCW,The following statement contains a magic number: var t = Points[2];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,RotateCW,The following statement contains a magic number: Points[2] = Points[1];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,ToString,The following statement contains a magic number: return Points[0] + "'" + Points[1] + "'" + Points[2];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighborEdges,The following statement contains a magic number: Neighbors[i].MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighborEdges,The following statement contains a magic number: Neighbors[i].MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighborEdges,The following statement contains a magic number: Neighbors[i].MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkNeighborEdges,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: triangle.MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: triangle.MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: triangle.MarkConstrainedEdge(Points[(i + 1)%3]' Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: MarkConstrainedEdge(t.Points[(i + 1)%3]' t.Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: MarkConstrainedEdge(t.Points[(i + 1)%3]' t.Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,MarkEdge,The following statement contains a magic number: MarkConstrainedEdge(t.Points[(i + 1)%3]' t.Points[(i + 2)%3]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Area,The following statement contains a magic number: double h = Points[2].Y - Points[1].Y;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Area,The following statement contains a magic number: return Math.Abs((b*h*0.5f));
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Centroid,The following statement contains a magic number: double cx = (Points[0].X + Points[1].X + Points[2].X)/3f;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Centroid,The following statement contains a magic number: double cx = (Points[0].X + Points[1].X + Points[2].X)/3f;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Centroid,The following statement contains a magic number: double cy = (Points[0].Y + Points[1].Y + Points[2].Y)/3f;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,Centroid,The following statement contains a magic number: double cy = (Points[0].Y + Points[1].Y + Points[2].Y)/3f;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,EdgeIndex,The following statement contains a magic number: bool c = (i1 == 2 || i2 == 2);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,EdgeIndex,The following statement contains a magic number: bool c = (i1 == 2 || i2 == 2);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,EdgeIndex,The following statement contains a magic number: return 2;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetConstrainedEdgeCCW,The following statement contains a magic number: return EdgeIsConstrained[(IndexOf(p) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetConstrainedEdgeCCW,The following statement contains a magic number: return EdgeIsConstrained[(IndexOf(p) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetConstrainedEdgeCW,The following statement contains a magic number: return EdgeIsConstrained[(IndexOf(p) + 1)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetConstrainedEdgeCCW,The following statement contains a magic number: EdgeIsConstrained[(IndexOf(p) + 2)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetConstrainedEdgeCCW,The following statement contains a magic number: EdgeIsConstrained[(IndexOf(p) + 2)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetConstrainedEdgeCW,The following statement contains a magic number: EdgeIsConstrained[(IndexOf(p) + 1)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetDelaunayEdgeCCW,The following statement contains a magic number: return EdgeIsDelaunay[(IndexOf(p) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetDelaunayEdgeCCW,The following statement contains a magic number: return EdgeIsDelaunay[(IndexOf(p) + 2)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,GetDelaunayEdgeCW,The following statement contains a magic number: return EdgeIsDelaunay[(IndexOf(p) + 1)%3];
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetDelaunayEdgeCCW,The following statement contains a magic number: EdgeIsDelaunay[(IndexOf(p) + 2)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetDelaunayEdgeCCW,The following statement contains a magic number: EdgeIsDelaunay[(IndexOf(p) + 2)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay,DelaunayTriangle,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\DelaunayTriangle.cs,SetDelaunayEdgeCW,The following statement contains a magic number: EdgeIsDelaunay[(IndexOf(p) + 1)%3] = ce;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweep,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweep.cs,Legalize,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweepContext,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweepContext.cs,MeshCleanReq,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweepContext,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweepContext.cs,CreateAdvancingFront,The following statement contains a magic number: tail = new AdvancingFrontNode(iTriangle.Points[2]);
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Delaunay.Sweep,DTSweepContext,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Delaunay\Sweep\DTSweepContext.cs,MapTriangleToNodes,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Polygon,Polygon,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Polygon\Polygon.cs,Polygon,The following statement contains a magic number: points.Count < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedArray3.cs,Contains,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedArray3.cs,IndexOf,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedArray3.cs,Clear,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedArray3.cs,Enumerate,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedBitArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedBitArray3.cs,Contains,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedBitArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedBitArray3.cs,IndexOf,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedBitArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedBitArray3.cs,Clear,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,FixedBitArray3,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\FixedBitArray3.cs,Enumerate,The following statement contains a magic number: i < 3
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PointGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PointGenerator.cs,UniformDistribution,The following statement contains a magic number: points.Add(new TriangulationPoint(scale*(0.5 - RNG.NextDouble())' scale*(0.5 - RNG.NextDouble())));
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PointGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PointGenerator.cs,UniformDistribution,The following statement contains a magic number: points.Add(new TriangulationPoint(scale*(0.5 - RNG.NextDouble())' scale*(0.5 - RNG.NextDouble())));
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PointGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PointGenerator.cs,UniformGrid,The following statement contains a magic number: double halfScale = 0.5*scale;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: double radius = scale/4;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius += scale/2*(0.5 - RNG.NextDouble());
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius += scale/2*(0.5 - RNG.NextDouble());
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: i%250 == 0
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius = radius > scale/2 ? scale/2 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius = radius > scale/2 ? scale/2 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius = radius < scale/10 ? scale/10 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep,The following statement contains a magic number: radius = radius < scale/10 ? scale/10 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: double radius = scale/4;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius += scale/5*(0.5 - RNG.NextDouble());
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius += scale/5*(0.5 - RNG.NextDouble());
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius = radius > scale/2 ? scale/2 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius = radius > scale/2 ? scale/2 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius = radius < scale/10 ? scale/10 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.CDT.Util,PolygonGenerator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\CDT\Util\PolygonGenerator.cs,RandomCircleSweep2,The following statement contains a magic number: radius = radius < scale/10 ? scale/10 : radius;
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,MonotoneMountain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\MonotoneMountain.cs,Triangulate,The following statement contains a magic number: List<Point> triangle = new List<Point>(3);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,MonotoneMountain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\MonotoneMountain.cs,Triangulate,The following statement contains a magic number: Debug.Assert(_size <= 3' "Triangulation bug' please report");
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,QueryGraph,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\QueryGraph.cs,Case1,The following statement contains a magic number: YNode yNode = new YNode(edge' Sink.Isink(tList[1])' Sink.Isink(tList[2]));
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,QueryGraph,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\QueryGraph.cs,Case1,The following statement contains a magic number: XNode qNode = new XNode(edge.Q' yNode' Sink.Isink(tList[3]));
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,QueryGraph,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\QueryGraph.cs,Case2,The following statement contains a magic number: YNode yNode = new YNode(edge' Sink.Isink(tList[1])' Sink.Isink(tList[2]));
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,QueryGraph,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\QueryGraph.cs,Case4,The following statement contains a magic number: XNode qNode = new XNode(edge.Q' yNode' Sink.Isink(tList[2]));
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,Trapezoid,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\Trapezoid.cs,GetVertices,The following statement contains a magic number: List<Point> verts = new List<Point>(4);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,TrapezoidalMap,The following statement contains a magic number: _margin = 50.0f;
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: Trapezoid[] trapezoids = new Trapezoid[4];
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[2] = new Trapezoid(e.P' e.Q' e' t.Bottom);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[3] = new Trapezoid(e.Q' t.RightPoint' t.Top' t.Bottom);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[1].UpdateLeftRight(trapezoids[0]' null' trapezoids[3]' null);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[2].UpdateLeftRight(null' trapezoids[0]' null' trapezoids[3]);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[2].UpdateLeftRight(null' trapezoids[0]' null' trapezoids[3]);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case1,The following statement contains a magic number: trapezoids[3].UpdateRight(t.UpperRight' t.LowerRight);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case2,The following statement contains a magic number: Trapezoid[] trapezoids = new Trapezoid[3];
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case2,The following statement contains a magic number: trapezoids[2] = new Trapezoid(e.P' rp' e' t.Bottom);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case2,The following statement contains a magic number: trapezoids[2].UpdateLeftRight(null' trapezoids[0]' null' t.LowerRight);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case2,The following statement contains a magic number: e.Below = trapezoids[2];
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case3,The following statement contains a magic number: Trapezoid[] trapezoids = new Trapezoid[2];
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case4,The following statement contains a magic number: Trapezoid[] trapezoids = new Trapezoid[3];
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case4,The following statement contains a magic number: trapezoids[2] = new Trapezoid(e.Q' t.RightPoint' t.Top' t.Bottom);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,TrapezoidalMap,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\TrapezoidalMap.cs,Case4,The following statement contains a magic number: trapezoids[2].UpdateLeftRight(trapezoids[0]' trapezoids[1]' t.UpperRight' t.LowerRight);
Magic Number,FarseerPhysics.Common.Decomposition.Seidel,Triangulator,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Decomposition\Seidel\Triangulator.cs,CreateMountains,The following statement contains a magic number: edge.MPoints.Count > 2
Magic Number,FarseerPhysics.Common,MathUtils,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Math.cs,InvSqrt,The following statement contains a magic number: float xhalf = 0.5f * x;
Magic Number,FarseerPhysics.Common,MathUtils,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Math.cs,InvSqrt,The following statement contains a magic number: x = x * (1.5f - xhalf * x * x);
Magic Number,FarseerPhysics.Common,MathUtils,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Math.cs,VectorAngle,The following statement contains a magic number: dtheta -= (2 * Math.PI);
Magic Number,FarseerPhysics.Common,MathUtils,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Math.cs,VectorAngle,The following statement contains a magic number: dtheta += (2 * Math.PI);
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,GetPosition,The following statement contains a magic number: ControlPoints.Count < 2
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,GetPosition,The following statement contains a magic number: int p3 = p + 2;
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,GetPositionNormal,The following statement contains a magic number: float offsetTime = time + 0.0001f;
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,GetLength,The following statement contains a magic number: List<Vector2> verts = GetVertices(ControlPoints.Count * 25);
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,SubdivideEvenly,The following statement contains a magic number: float deltaLength = length / divisions + 0.001f;
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,SubdivideEvenly,The following statement contains a magic number: t += 0.0001f;
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,SubdivideEvenly,The following statement contains a magic number: deltaLength * 0.5f >= Vector2.Distance(start' end)
Magic Number,FarseerPhysics.Common,Path,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Path.cs,SubdivideEvenly,The following statement contains a magic number: t += 0.00001f;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRectangle,The following statement contains a magic number: Vertices vertices = new Vertices(4);
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRectangle,The following statement contains a magic number: i < 4
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: yRadius > height / 2 || xRadius > width / 2
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: yRadius > height / 2 || xRadius > width / 2
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: Debug.Assert(Settings.MaxPolygonVertices >= 8);
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f - xRadius' -height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f - xRadius' -height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f' -height * .5f + yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f' -height * .5f + yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f' height * .5f - yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f' height * .5f - yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f - xRadius' height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(width * .5f - xRadius' height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f + xRadius' height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f + xRadius' height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f' height * .5f - yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f' height * .5f - yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f' -height * .5f + yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f' -height * .5f + yRadius));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f + xRadius' -height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateRoundedRectangle,The following statement contains a magic number: vertices.Add(new Vector2(-width * .5f + xRadius' -height * .5f));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateLine,The following statement contains a magic number: Vertices vertices = new Vertices(2);
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The following statement contains a magic number: endRadius >= height / 2
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The following statement contains a magic number: topRadius >= height / 2
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The following statement contains a magic number: bottomRadius >= height / 2
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateCapsule,The following statement contains a magic number: float newHeight = (height - topRadius - bottomRadius) * 0.5f;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: tipPercentage /= 100f;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: float toothTipStepSize = (stepSize / 2f) * tipPercentage;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: float toothAngleStepSize = (stepSize - (toothTipStepSize * 2f)) / 2f;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: float toothAngleStepSize = (stepSize - (toothTipStepSize * 2f)) / 2f;
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: vertices.Add(                          new Vector2(radius *                                      (float)Math.Cos(stepSize * i + toothAngleStepSize * 2f + toothTipStepSize)'                                      -radius *                                      (float)Math.Sin(stepSize * i + toothAngleStepSize * 2f + toothTipStepSize)));
Magic Number,FarseerPhysics.Common,PolygonTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonTools.cs,CreateGear,The following statement contains a magic number: vertices.Add(                          new Vector2(radius *                                      (float)Math.Cos(stepSize * i + toothAngleStepSize * 2f + toothTipStepSize)'                                      -radius *                                      (float)Math.Sin(stepSize * i + toothAngleStepSize * 2f + toothTipStepSize)));
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,GetSignedArea,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,GetSignedArea,The following statement contains a magic number: area /= 2.0f;
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,GetCentroid,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,GetCentroid,The following statement contains a magic number: const float inv3 = 1.0f / 3.0f;
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,GetCentroid,The following statement contains a magic number: float triangleArea = 0.5f * (current.X * next.Y - current.Y * next.X);
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,IsConvex,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,IsConvex,The following statement contains a magic number: Count == 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,IsCounterClockWise,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,ForceCounterClockWise,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,IsSimple,The following statement contains a magic number: Count < 3
Magic Number,FarseerPhysics.Common,Vertices,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Vertices.cs,CheckPolygon,The following statement contains a magic number: Count < 3 || Count > Settings.MaxPolygonVertices
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: Fixture[] containedShapes = new Fixture[5];
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: float[] vals = new float[shapeCount * 2];
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: diff = (diff - MathHelper.Pi) % (2 * MathHelper.Pi);
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: diff += 2 * MathHelper.Pi;
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: midpt = (vals[0] + MathHelper.Pi * 2 + vals[i]);
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: midpt = midpt / 2;
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: fi.Min -= MathHelper.Pi * 2;
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: last.Min = _data.Last().Min - 2 * MathHelper.Pi;
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: int insertedRays = (int)Math.Ceiling(((arclen - 2.0f * first) - (MinRays - 1) * MaxAngle) / MaxAngle);
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: float offset = (arclen - first * 2.0f) / ((float)MinRays + insertedRays - 1);
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: ri.MaxFraction = 50f;
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: float impulse = (arclen / (MinRays + insertedRays)) * maxForce * 180.0f / MathHelper.Pi * (1.0f - Math.Min(1.0f' minlambda));
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: j < _data[i].Max || MathUtils.FloatEquals(j' _data[i].Max' 0.0001f)
Magic Number,FarseerPhysics.Common.PhysicsLogic,RealExplosion,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PhysicsLogic\RealExplosion.cs,Activate,The following statement contains a magic number: float impulse = MinRays * maxForce * 180.0f / MathHelper.Pi;
Magic Number,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The following statement contains a magic number: Vertices[] newPolygon = new Vertices[2];
Magic Number,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The following statement contains a magic number: offset = (newPolygon[n][cutAdded[n] + 2] - newPolygon[n][cutAdded[n] + 1]);
Magic Number,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The following statement contains a magic number: cutAdded[n] < newPolygon[n].Count - 2
Magic Number,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,SplitShape,The following statement contains a magic number: n < 2
Magic Number,FarseerPhysics.Common.PolygonManipulation,CuttingTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\CuttingTools.cs,Cut,The following statement contains a magic number: entryPoints.Count + exitPoints.Count < 2
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimpleCombiner,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimpleCombiner.cs,PolygonizeTriangles,The following statement contains a magic number: Vector2 c = triangle[2];
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimpleCombiner,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimpleCombiner.cs,AddTriangle,The following statement contains a magic number: tipT = 2;
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,CollinearSimplify,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,DouglasPeuckerSimplify,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,MergeParallelEdges,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,MergeParallelEdges,The following statement contains a magic number: !(norm0 > 0.0f && norm1 > 0.0f) && newNVertices > 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,MergeParallelEdges,The following statement contains a magic number: Math.Abs(cross) < tolerance && dot > 0 && newNVertices > 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,ReduceByDistance,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,ReduceByNth,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,ReduceByArea,The following statement contains a magic number: vertices.Count <= 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,ReduceByArea,The following statement contains a magic number: Vector2 v1 = vertices[vertices.Count - 2];
Magic Number,FarseerPhysics.Common.PolygonManipulation,SimplifyTools,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\SimplifyTools.cs,ReduceByArea,The following statement contains a magic number: areaTolerance *= 2;
Magic Number,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,BuildPolygonsFromChain,The following statement contains a magic number: output.Count < 3
Magic Number,FarseerPhysics.Common.PolygonManipulation,YuPengClipper,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,CalculateBeta,The following statement contains a magic number: result = .5f * coefficient;
Magic Number,FarseerPhysics.Common.PolygonManipulation,Edge,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\PolygonManipulation\YuPengClipper.cs,GetCenter,The following statement contains a magic number: return (EdgeStart + EdgeEnd) / 2f;
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: int xn = (int)(domain.Extents.X * 2 / cellWidth);
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: bool xp = xn == (domain.Extents.X * 2 / cellWidth);
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: int yn = (int)(domain.Extents.Y * 2 / cellHeight);
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: bool yp = yn == (domain.Extents.Y * 2 / cellHeight);
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: combine && pre != null && (key & 9) != 0
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: (p.Key & 12) == 0
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,DetectSquares,The following statement contains a magic number: (u.Key & 3) == 0
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,Lerp,The following statement contains a magic number: t = 0.5f;
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The following statement contains a magic number: key |= 8;
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The following statement contains a magic number: key |= 4;
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The following statement contains a magic number: key |= 2;
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The following statement contains a magic number: i == 7 && (val & 1) == 0
Magic Number,FarseerPhysics.Common.TextureTools,MarchingSquares,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\MarchingSquares.cs,MarchSquare,The following statement contains a magic number: i < 8
Magic Number,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,Initialize,The following statement contains a magic number: _topLeft = new Vector2(Center.X - (Width * 0.5f)' Center.Y - (-Height * 0.5f));
Magic Number,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,Initialize,The following statement contains a magic number: _topLeft = new Vector2(Center.X - (Width * 0.5f)' Center.Y - (-Height * 0.5f));
Magic Number,FarseerPhysics.Common.TextureTools,Terrain,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\Terrain.cs,GenerateTerrain,The following statement contains a magic number: poly.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SetTextureData,The following statement contains a magic number: data.Length < 4
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SetTextureData,The following statement contains a magic number: width < 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: _data.Length < 4
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: _width < 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: polygon.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: holePolygon != null && holePolygon.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: polygon.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following statement contains a magic number: _multipartDetection || polygon.Count <= 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchHoleEntrance,The following statement contains a magic number: polygon.Count < 3
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchHoleEntrance,The following statement contains a magic number: xCoords.Count > 1 && xCoords.Count % 2 == 0
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DistanceToHullAcceptableHoles,The following statement contains a magic number: polygon.Count < 3
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DistanceToHullAcceptable,The following statement contains a magic number: polygon.Count < 3
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,InPolygon,The following statement contains a magic number: xCoords.Count > 0 && xCoords.Count % 2 == 0
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchCrossingEdgesHoles,The following statement contains a magic number: polygon.Count < 3
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchCrossingEdges,The following statement contains a magic number: polygon.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SplitPolygonEdge,The following statement contains a magic number: xCoords != null && xCoords.Count > 1 && xCoords.Count % 2 == 0
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,CreateSimplePolygon,The following statement contains a magic number: Vertices polygon = new Vertices(32);
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,CreateSimplePolygon,The following statement contains a magic number: Vertices hullArea = new Vertices(32);
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,CreateSimplePolygon,The following statement contains a magic number: Vertices endOfHullArea = new Vertices(32);
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,SearchForOutstandingVertex,The following statement contains a magic number: hullArea.Count > 2
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following statement contains a magic number: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: MaximumSpeed = 100.0f;
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: Randomize = new Random(1234);
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: StrengthCurve.Keys.Add(new CurveKey(0' 5));
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: StrengthCurve.Keys.Add(new CurveKey(0.1f' 5));
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: StrengthCurve.Keys.Add(new CurveKey(0.1f' 5));
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: StrengthCurve.Keys.Add(new CurveKey(0.2f' -4));
Magic Number,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following statement contains a magic number: StrengthCurve.Keys.Add(new CurveKey(0.2f' -4));
Magic Number,FarseerPhysics.Dynamics,Fixture,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Fixture.cs,Fixture,The following statement contains a magic number: Friction = 0.2f;
Magic Number,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,Reset,The following statement contains a magic number: _contacts = new Contact[contactCapacity * 2];
Magic Number,FarseerPhysics.Dynamics,Island,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Island.cs,Reset,The following statement contains a magic number: _joints = new Joint[jointCapacity * 2];
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,World,The following statement contains a magic number: BodyList = new List<Body>(32);
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,World,The following statement contains a magic number: JointList = new List<Joint>(32);
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,Solve,The following statement contains a magic number: _stack = new Body[Math.Max(_stack.Length * 2' stackSize)];
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The following statement contains a magic number: Island.Reset(2 * Settings.MaxTOIContacts' Settings.MaxTOIContacts' 0' ContactManager);
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The following statement contains a magic number: minContact == null || 1.0f - 10.0f * Settings.Epsilon < minAlpha
Magic Number,FarseerPhysics.Dynamics,World,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\World.cs,SolveTOI,The following statement contains a magic number: i < 2
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Reset,The following statement contains a magic number: _velocityConstraints = new ContactVelocityConstraint[count * 2];
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Reset,The following statement contains a magic number: _positionConstraints = new ContactPositionConstraint[count * 2];
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,InitializeVelocityConstraints,The following statement contains a magic number: const float k_maxConditionNumber = 1000.0f;
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,InitializeVelocityConstraints,The following statement contains a magic number: vc.pointCount == 2
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveVelocityConstraints,The following statement contains a magic number: Debug.Assert(pointCount == 1 || pointCount == 2);
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolvePositionConstraints,The following statement contains a magic number: return minSeparation >= -3.0f * Settings.LinearSlop;
Magic Number,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveTOIPositionConstraints,The following statement contains a magic number: return minSeparation >= -1.5f * Settings.LinearSlop;
Magic Number,FarseerPhysics.Dynamics.Contacts,WorldManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The following statement contains a magic number: switch (manifold.Type)                  {                      case ManifoldType.Circles:                          {                              normal = new Vector2(1.0f' 0.0f);                              Vector2 pointA = MathUtils.Mul(ref xfA' manifold.LocalPoint);                              Vector2 pointB = MathUtils.Mul(ref xfB' manifold.Points[0].LocalPoint);                              if (Vector2.DistanceSquared(pointA' pointB) > Settings.Epsilon * Settings.Epsilon)                              {                                  normal = pointB - pointA;                                  normal.Normalize();                              }                                Vector2 cA = pointA + radiusA * normal;                              Vector2 cB = pointB - radiusB * normal;                              points[0] = 0.5f * (cA + cB);                          }                          break;                        case ManifoldType.FaceA:                          {                              normal = MathUtils.Mul(xfA.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfA' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfB' manifold.Points[i].LocalPoint);                                  Vector2 cA = clipPoint + (radiusA - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cB = clipPoint - radiusB * normal;                                  points[i] = 0.5f * (cA + cB);                              }                          }                          break;                        case ManifoldType.FaceB:                          {                              normal = MathUtils.Mul(xfB.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfB' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfA' manifold.Points[i].LocalPoint);                                  Vector2 cB = clipPoint + (radiusB - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cA = clipPoint - radiusA * normal;                                  points[i] = 0.5f * (cA + cB);                              }                                // Ensure normal points from A to B.                              normal = -normal;                          }                          break;                  }
Magic Number,FarseerPhysics.Dynamics.Contacts,WorldManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The following statement contains a magic number: switch (manifold.Type)                  {                      case ManifoldType.Circles:                          {                              normal = new Vector2(1.0f' 0.0f);                              Vector2 pointA = MathUtils.Mul(ref xfA' manifold.LocalPoint);                              Vector2 pointB = MathUtils.Mul(ref xfB' manifold.Points[0].LocalPoint);                              if (Vector2.DistanceSquared(pointA' pointB) > Settings.Epsilon * Settings.Epsilon)                              {                                  normal = pointB - pointA;                                  normal.Normalize();                              }                                Vector2 cA = pointA + radiusA * normal;                              Vector2 cB = pointB - radiusB * normal;                              points[0] = 0.5f * (cA + cB);                          }                          break;                        case ManifoldType.FaceA:                          {                              normal = MathUtils.Mul(xfA.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfA' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfB' manifold.Points[i].LocalPoint);                                  Vector2 cA = clipPoint + (radiusA - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cB = clipPoint - radiusB * normal;                                  points[i] = 0.5f * (cA + cB);                              }                          }                          break;                        case ManifoldType.FaceB:                          {                              normal = MathUtils.Mul(xfB.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfB' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfA' manifold.Points[i].LocalPoint);                                  Vector2 cB = clipPoint + (radiusB - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cA = clipPoint - radiusA * normal;                                  points[i] = 0.5f * (cA + cB);                              }                                // Ensure normal points from A to B.                              normal = -normal;                          }                          break;                  }
Magic Number,FarseerPhysics.Dynamics.Contacts,WorldManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The following statement contains a magic number: switch (manifold.Type)                  {                      case ManifoldType.Circles:                          {                              normal = new Vector2(1.0f' 0.0f);                              Vector2 pointA = MathUtils.Mul(ref xfA' manifold.LocalPoint);                              Vector2 pointB = MathUtils.Mul(ref xfB' manifold.Points[0].LocalPoint);                              if (Vector2.DistanceSquared(pointA' pointB) > Settings.Epsilon * Settings.Epsilon)                              {                                  normal = pointB - pointA;                                  normal.Normalize();                              }                                Vector2 cA = pointA + radiusA * normal;                              Vector2 cB = pointB - radiusB * normal;                              points[0] = 0.5f * (cA + cB);                          }                          break;                        case ManifoldType.FaceA:                          {                              normal = MathUtils.Mul(xfA.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfA' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfB' manifold.Points[i].LocalPoint);                                  Vector2 cA = clipPoint + (radiusA - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cB = clipPoint - radiusB * normal;                                  points[i] = 0.5f * (cA + cB);                              }                          }                          break;                        case ManifoldType.FaceB:                          {                              normal = MathUtils.Mul(xfB.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfB' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfA' manifold.Points[i].LocalPoint);                                  Vector2 cB = clipPoint + (radiusB - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cA = clipPoint - radiusA * normal;                                  points[i] = 0.5f * (cA + cB);                              }                                // Ensure normal points from A to B.                              normal = -normal;                          }                          break;                  }
Magic Number,FarseerPhysics.Dynamics.Contacts,PositionSolverManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The following statement contains a magic number: switch (pc.type)                  {                      case ManifoldType.Circles:                          {                              Vector2 pointA = MathUtils.Mul(ref xfA' pc.localPoint);                              Vector2 pointB = MathUtils.Mul(ref xfB' pc.localPoints[0]);                              normal = pointB - pointA;                              normal.Normalize();                              point = 0.5f * (pointA + pointB);                              separation = Vector2.Dot(pointB - pointA' normal) - pc.radiusA - pc.radiusB;                          }                          break;                        case ManifoldType.FaceA:                          {                              normal = MathUtils.Mul(xfA.q' pc.localNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfA' pc.localPoint);                                Vector2 clipPoint = MathUtils.Mul(ref xfB' pc.localPoints[index]);                              separation = Vector2.Dot(clipPoint - planePoint' normal) - pc.radiusA - pc.radiusB;                              point = clipPoint;                          }                          break;                        case ManifoldType.FaceB:                          {                              normal = MathUtils.Mul(xfB.q' pc.localNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfB' pc.localPoint);                                Vector2 clipPoint = MathUtils.Mul(ref xfA' pc.localPoints[index]);                              separation = Vector2.Dot(clipPoint - planePoint' normal) - pc.radiusA - pc.radiusB;                              point = clipPoint;                                // Ensure normal points from A to B                              normal = -normal;                          }                          break;                      default:                          normal = Vector2.Zero;                          point = Vector2.Zero;                          separation = 0;                          break;                    }
Magic Number,FarseerPhysics.Dynamics.Joints,AngleJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\AngleJoint.cs,AngleJoint,The following statement contains a magic number: BiasFactor = .2f;
Magic Number,FarseerPhysics.Dynamics.Joints,DistanceJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\DistanceJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float omega = 2.0f * Settings.Pi * Frequency;
Magic Number,FarseerPhysics.Dynamics.Joints,DistanceJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\DistanceJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float d = 2.0f * _mass * DampingRatio * omega;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,FixedMouseJoint,The following statement contains a magic number: Frequency = 5.0f;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,FixedMouseJoint,The following statement contains a magic number: DampingRatio = 0.7f;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,FixedMouseJoint,The following statement contains a magic number: MaxForce = 1000 * body.Mass;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float omega = 2.0f * Settings.Pi * Frequency;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float d = 2.0f * mass * DampingRatio * omega;
Magic Number,FarseerPhysics.Dynamics.Joints,FixedMouseJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\FixedMouseJoint.cs,InitVelocityConstraints,The following statement contains a magic number: wA *= 0.98f;
Magic Number,FarseerPhysics.Dynamics.Joints,MotorJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\MotorJoint.cs,MotorJoint,The following statement contains a magic number: CorrectionFactor = 0.3f;
Magic Number,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,InitVelocityConstraints,The following statement contains a magic number: Math.Abs(_upperTranslation - _lowerTranslation) < 2.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,PrismaticJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PrismaticJoint.cs,SolvePositionConstraints,The following statement contains a magic number: Math.Abs(_upperTranslation - _lowerTranslation) < 2.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,PulleyJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PulleyJoint.cs,InitVelocityConstraints,The following statement contains a magic number: lengthA > 10.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,PulleyJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PulleyJoint.cs,InitVelocityConstraints,The following statement contains a magic number: lengthB > 10.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,PulleyJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PulleyJoint.cs,SolvePositionConstraints,The following statement contains a magic number: lengthA > 10.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,PulleyJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\PulleyJoint.cs,SolvePositionConstraints,The following statement contains a magic number: lengthB > 10.0f * Settings.LinearSlop
Magic Number,FarseerPhysics.Dynamics.Joints,RevoluteJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\RevoluteJoint.cs,InitVelocityConstraints,The following statement contains a magic number: Math.Abs(_upperAngle - _lowerAngle) < 2.0f * Settings.AngularSlop
Magic Number,FarseerPhysics.Dynamics.Joints,WeldJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WeldJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float omega = 2.0f * Settings.Pi * FrequencyHz;
Magic Number,FarseerPhysics.Dynamics.Joints,WeldJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WeldJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float d = 2.0f * m * DampingRatio * omega;
Magic Number,FarseerPhysics.Dynamics.Joints,WheelJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WheelJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float omega = 2.0f * Settings.Pi * Frequency;
Magic Number,FarseerPhysics.Dynamics.Joints,WheelJoint,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Joints\WheelJoint.cs,InitVelocityConstraints,The following statement contains a magic number: float d = 2.0f * _springMass * DampingRatio * omega;
Magic Number,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateRectangle,The following statement contains a magic number: Vertices rectangleVertices = PolygonTools.CreateRectangle(width / 2' height / 2);
Magic Number,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateRectangle,The following statement contains a magic number: Vertices rectangleVertices = PolygonTools.CreateRectangle(width / 2' height / 2);
Magic Number,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCapsule,The following statement contains a magic number: Vertices rectangle = PolygonTools.CreateRectangle(endRadius' height / 2);
Magic Number,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCapsule,The following statement contains a magic number: FixtureFactory.AttachCircle(endRadius' density' body' new Vector2(0' height / 2));
Magic Number,FarseerPhysics.Factories,BodyFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\BodyFactory.cs,CreateCapsule,The following statement contains a magic number: FixtureFactory.AttachCircle(endRadius' density' body' new Vector2(0' -(height / 2)));
Magic Number,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachRectangle,The following statement contains a magic number: Vertices rectangleVertices = PolygonTools.CreateRectangle(width / 2' height / 2);
Magic Number,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachRectangle,The following statement contains a magic number: Vertices rectangleVertices = PolygonTools.CreateRectangle(width / 2' height / 2);
Magic Number,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachCompoundPolygon,The following statement contains a magic number: vertices.Count == 2
Magic Number,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachLineArc,The following statement contains a magic number: arc.Rotate((MathHelper.Pi - radians) / 2);
Magic Number,FarseerPhysics.Factories,FixtureFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\FixtureFactory.cs,AttachSolidArc,The following statement contains a magic number: arc.Rotate((MathHelper.Pi - radians) / 2);
Magic Number,FarseerPhysics.Factories,LinkFactory,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Factories\LinkFactory.cs,CreateChain,The following statement contains a magic number: Debug.Assert(numberOfLinks >= 2);
Duplicate Code,FarseerPhysics.Dynamics.Contacts,ContactSolver,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,SolveVelocityConstraints,The method contains a code clone-set at the following line numbers (starting from the method definition): ((152' 171)' (196' 215))
Missing Default,FarseerPhysics.Collision.Shapes,PolygonShape,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Collision\Shapes\PolygonShape.cs,ComputeSubmergedArea,The following switch statement is missing a default case: switch (diveCount)              {                  case 0:                      if (lastSubmerged)                      {                          //Completely submerged                          sc = MathUtils.Mul(ref xf' MassData.Centroid);                          return MassData.Mass / Density;                      }                        //Completely dry                      return 0;                  case 1:                      if (intoIndex == -1)                      {                          intoIndex = Vertices.Count - 1;                      }                      else                      {                          outoIndex = Vertices.Count - 1;                      }                      break;              }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "vertices":                                                  {                                                      List<Vector2> verts = new List<Vector2>(sn.Elements.Count);                                                        foreach (XMLFragmentElement vert in sn.Elements)                                                          verts.Add(ReadVector(vert));                                                        shape.Vertices = new Vertices(verts);                                                  }                                                  break;                                              case "centroid":                                                  shape.MassData.Centroid = ReadVector(sn);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                              {                                  case "filterdata":                                      foreach (XMLFragmentElement ssn in sn.Elements)                                      {                                          switch (ssn.Name.ToLower())                                          {                                              case "categorybits":                                                  fixture._collisionCategories = (Category)int.Parse(ssn.Value);                                                  break;                                              case "maskbits":                                                  fixture._collidesWith = (Category)int.Parse(ssn.Value);                                                  break;                                              case "groupindex":                                                  fixture._collisionGroup = short.Parse(ssn.Value);                                                  break;                                              case "CollisionIgnores":                                                  string[] split = ssn.Value.Split('|');                                                  foreach (string s in split)                                                  {                                                      fixture._collisionIgnores.Add(int.Parse(s));                                                  }                                                  break;                                          }                                      }                                        break;                                  case "friction":                                      fixture.Friction = float.Parse(sn.Value);                                      break;                                  case "issensor":                                      fixture.IsSensor = bool.Parse(sn.Value);                                      break;                                  case "restitution":                                      fixture.Restitution = float.Parse(sn.Value);                                      break;                                  case "userdata":                                      fixture.UserData = ReadSimpleType(sn' null' false);                                      break;                              }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (ssn.Name.ToLower())                                          {                                              case "categorybits":                                                  fixture._collisionCategories = (Category)int.Parse(ssn.Value);                                                  break;                                              case "maskbits":                                                  fixture._collidesWith = (Category)int.Parse(ssn.Value);                                                  break;                                              case "groupindex":                                                  fixture._collisionGroup = short.Parse(ssn.Value);                                                  break;                                              case "CollisionIgnores":                                                  string[] split = ssn.Value.Split('|');                                                  foreach (string s in split)                                                  {                                                      fixture._collisionIgnores.Add(int.Parse(s));                                                  }                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                              {                                  case "active":                                      body._enabled = bool.Parse(sn.Value);                                      break;                                  case "allowsleep":                                      body.SleepingAllowed = bool.Parse(sn.Value);                                      break;                                  case "angle":                                      {                                          Vector2 position = body.Position;                                          body.SetTransformIgnoreContacts(ref position' float.Parse(sn.Value));                                      }                                      break;                                  case "angulardamping":                                      body.AngularDamping = float.Parse(sn.Value);                                      break;                                  case "angularvelocity":                                      body.AngularVelocity = float.Parse(sn.Value);                                      break;                                  case "awake":                                      body.Awake = bool.Parse(sn.Value);                                      break;                                  case "bullet":                                      body.IsBullet = bool.Parse(sn.Value);                                      break;                                  case "fixedrotation":                                      body.FixedRotation = bool.Parse(sn.Value);                                      break;                                  case "lineardamping":                                      body.LinearDamping = float.Parse(sn.Value);                                      break;                                  case "linearvelocity":                                      body.LinearVelocity = ReadVector(sn);                                      break;                                  case "position":                                      {                                          float rotation = body.Rotation;                                          Vector2 position = ReadVector(sn);                                          body.SetTransformIgnoreContacts(ref position' rotation);                                      }                                      break;                                  case "userdata":                                      body.UserData = ReadSimpleType(sn' null' false);                                      break;                                  case "bindings":                                      {                                          foreach (XMLFragmentElement pair in sn.Elements)                                          {                                              Fixture fix = fixtures[int.Parse(pair.Attributes[0].Value)];                                              fix.Shape = shapes[int.Parse(pair.Attributes[1].Value)].Clone();                                              fix.CloneOnto(body);                                          }                                          break;                                      }                              }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                              {                                  case "bodya":                                      bodyAIndex = int.Parse(sn.Value);                                      break;                                  case "bodyb":                                      bodyBIndex = int.Parse(sn.Value);                                      break;                                  case "collideconnected":                                      collideConnected = bool.Parse(sn.Value);                                      break;                                  case "userdata":                                      userData = ReadSimpleType(sn' null' false);                                      break;                              }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (type)                              {                                  case JointType.Distance:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "dampingratio":                                                  ((DistanceJoint)joint).DampingRatio = float.Parse(sn.Value);                                                  break;                                              case "frequencyhz":                                                  ((DistanceJoint)joint).Frequency = float.Parse(sn.Value);                                                  break;                                              case "length":                                                  ((DistanceJoint)joint).Length = float.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((DistanceJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((DistanceJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                          }                                      }                                      break;                                  case JointType.Friction:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((FrictionJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((FrictionJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxforce":                                                  ((FrictionJoint)joint).MaxForce = float.Parse(sn.Value);                                                  break;                                              case "maxtorque":                                                  ((FrictionJoint)joint).MaxTorque = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Wheel:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "enablemotor":                                                  ((WheelJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((WheelJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((WheelJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "motorspeed":                                                  ((WheelJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "dampingratio":                                                  ((WheelJoint)joint).DampingRatio = float.Parse(sn.Value);                                                  break;                                              case "maxmotortorque":                                                  ((WheelJoint)joint).MaxMotorTorque = float.Parse(sn.Value);                                                  break;                                              case "frequencyhz":                                                  ((WheelJoint)joint).Frequency = float.Parse(sn.Value);                                                  break;                                              case "axis":                                                  ((WheelJoint)joint).Axis = ReadVector(sn);                                                  break;                                          }                                      }                                      break;                                  case JointType.Prismatic:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "enablelimit":                                                  ((PrismaticJoint)joint).LimitEnabled = bool.Parse(sn.Value);                                                  break;                                              case "enablemotor":                                                  ((PrismaticJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((PrismaticJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((PrismaticJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "axis":                                                  ((PrismaticJoint)joint).Axis = ReadVector(sn);                                                  break;                                              case "maxmotorforce":                                                  ((PrismaticJoint)joint).MaxMotorForce = float.Parse(sn.Value);                                                  break;                                              case "motorspeed":                                                  ((PrismaticJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "lowertranslation":                                                  ((PrismaticJoint)joint).LowerLimit = float.Parse(sn.Value);                                                  break;                                              case "uppertranslation":                                                  ((PrismaticJoint)joint).UpperLimit = float.Parse(sn.Value);                                                  break;                                              case "referenceangle":                                                  ((PrismaticJoint)joint).ReferenceAngle = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Pulley:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "worldanchora":                                                  ((PulleyJoint)joint).WorldAnchorA = ReadVector(sn);                                                  break;                                              case "worldanchorb":                                                  ((PulleyJoint)joint).WorldAnchorB = ReadVector(sn);                                                  break;                                              case "lengtha":                                                  ((PulleyJoint)joint).LengthA = float.Parse(sn.Value);                                                  break;                                              case "lengthb":                                                  ((PulleyJoint)joint).LengthB = float.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((PulleyJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((PulleyJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "ratio":                                                  ((PulleyJoint)joint).Ratio = float.Parse(sn.Value);                                                  break;                                              case "constant":                                                  ((PulleyJoint)joint).Constant = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Revolute:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "enablelimit":                                                  ((RevoluteJoint)joint).LimitEnabled = bool.Parse(sn.Value);                                                  break;                                              case "enablemotor":                                                  ((RevoluteJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((RevoluteJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((RevoluteJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxmotortorque":                                                  ((RevoluteJoint)joint).MaxMotorTorque = float.Parse(sn.Value);                                                  break;                                              case "motorspeed":                                                  ((RevoluteJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "lowerangle":                                                  ((RevoluteJoint)joint).LowerLimit = float.Parse(sn.Value);                                                  break;                                              case "upperangle":                                                  ((RevoluteJoint)joint).UpperLimit = float.Parse(sn.Value);                                                  break;                                              case "referenceangle":                                                  ((RevoluteJoint)joint).ReferenceAngle = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Weld:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((WeldJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((WeldJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                          }                                      }                                      break;                                  case JointType.Rope:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((RopeJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((RopeJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxlength":                                                  ((RopeJoint)joint).MaxLength = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Gear:                                      throw new Exception("Gear joint is unsupported");                                  case JointType.Angle:                                      {                                          switch (sn.Name.ToLower())                                          {                                              case "biasfactor":                                                  ((AngleJoint)joint).BiasFactor = float.Parse(sn.Value);                                                  break;                                              case "maximpulse":                                                  ((AngleJoint)joint).MaxImpulse = float.Parse(sn.Value);                                                  break;                                              case "softness":                                                  ((AngleJoint)joint).Softness = float.Parse(sn.Value);                                                  break;                                              case "targetangle":                                                  ((AngleJoint)joint).TargetAngle = float.Parse(sn.Value);                                                  break;                                          }                                      }                                      break;                                  case JointType.Motor:                                      switch (sn.Name.ToLower())                                      {                                          case "angularoffset":                                              ((MotorJoint)joint).AngularOffset = float.Parse(sn.Value);                                              break;                                          case "linearoffset":                                              ((MotorJoint)joint).LinearOffset = ReadVector(sn);                                              break;                                          case "maxforce":                                              ((MotorJoint)joint).MaxForce = float.Parse(sn.Value);                                              break;                                          case "maxtorque":                                              ((MotorJoint)joint).MaxTorque = float.Parse(sn.Value);                                              break;                                          case "correctionfactor":                                              ((MotorJoint)joint).CorrectionFactor = float.Parse(sn.Value);                                              break;                                      }                                      break;                              }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "dampingratio":                                                  ((DistanceJoint)joint).DampingRatio = float.Parse(sn.Value);                                                  break;                                              case "frequencyhz":                                                  ((DistanceJoint)joint).Frequency = float.Parse(sn.Value);                                                  break;                                              case "length":                                                  ((DistanceJoint)joint).Length = float.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((DistanceJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((DistanceJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((FrictionJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((FrictionJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxforce":                                                  ((FrictionJoint)joint).MaxForce = float.Parse(sn.Value);                                                  break;                                              case "maxtorque":                                                  ((FrictionJoint)joint).MaxTorque = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "enablemotor":                                                  ((WheelJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((WheelJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((WheelJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "motorspeed":                                                  ((WheelJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "dampingratio":                                                  ((WheelJoint)joint).DampingRatio = float.Parse(sn.Value);                                                  break;                                              case "maxmotortorque":                                                  ((WheelJoint)joint).MaxMotorTorque = float.Parse(sn.Value);                                                  break;                                              case "frequencyhz":                                                  ((WheelJoint)joint).Frequency = float.Parse(sn.Value);                                                  break;                                              case "axis":                                                  ((WheelJoint)joint).Axis = ReadVector(sn);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "enablelimit":                                                  ((PrismaticJoint)joint).LimitEnabled = bool.Parse(sn.Value);                                                  break;                                              case "enablemotor":                                                  ((PrismaticJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((PrismaticJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((PrismaticJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "axis":                                                  ((PrismaticJoint)joint).Axis = ReadVector(sn);                                                  break;                                              case "maxmotorforce":                                                  ((PrismaticJoint)joint).MaxMotorForce = float.Parse(sn.Value);                                                  break;                                              case "motorspeed":                                                  ((PrismaticJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "lowertranslation":                                                  ((PrismaticJoint)joint).LowerLimit = float.Parse(sn.Value);                                                  break;                                              case "uppertranslation":                                                  ((PrismaticJoint)joint).UpperLimit = float.Parse(sn.Value);                                                  break;                                              case "referenceangle":                                                  ((PrismaticJoint)joint).ReferenceAngle = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "worldanchora":                                                  ((PulleyJoint)joint).WorldAnchorA = ReadVector(sn);                                                  break;                                              case "worldanchorb":                                                  ((PulleyJoint)joint).WorldAnchorB = ReadVector(sn);                                                  break;                                              case "lengtha":                                                  ((PulleyJoint)joint).LengthA = float.Parse(sn.Value);                                                  break;                                              case "lengthb":                                                  ((PulleyJoint)joint).LengthB = float.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((PulleyJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((PulleyJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "ratio":                                                  ((PulleyJoint)joint).Ratio = float.Parse(sn.Value);                                                  break;                                              case "constant":                                                  ((PulleyJoint)joint).Constant = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "enablelimit":                                                  ((RevoluteJoint)joint).LimitEnabled = bool.Parse(sn.Value);                                                  break;                                              case "enablemotor":                                                  ((RevoluteJoint)joint).MotorEnabled = bool.Parse(sn.Value);                                                  break;                                              case "localanchora":                                                  ((RevoluteJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((RevoluteJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxmotortorque":                                                  ((RevoluteJoint)joint).MaxMotorTorque = float.Parse(sn.Value);                                                  break;                                              case "motorspeed":                                                  ((RevoluteJoint)joint).MotorSpeed = float.Parse(sn.Value);                                                  break;                                              case "lowerangle":                                                  ((RevoluteJoint)joint).LowerLimit = float.Parse(sn.Value);                                                  break;                                              case "upperangle":                                                  ((RevoluteJoint)joint).UpperLimit = float.Parse(sn.Value);                                                  break;                                              case "referenceangle":                                                  ((RevoluteJoint)joint).ReferenceAngle = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((WeldJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((WeldJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "localanchora":                                                  ((RopeJoint)joint).LocalAnchorA = ReadVector(sn);                                                  break;                                              case "localanchorb":                                                  ((RopeJoint)joint).LocalAnchorB = ReadVector(sn);                                                  break;                                              case "maxlength":                                                  ((RopeJoint)joint).MaxLength = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                          {                                              case "biasfactor":                                                  ((AngleJoint)joint).BiasFactor = float.Parse(sn.Value);                                                  break;                                              case "maximpulse":                                                  ((AngleJoint)joint).MaxImpulse = float.Parse(sn.Value);                                                  break;                                              case "softness":                                                  ((AngleJoint)joint).Softness = float.Parse(sn.Value);                                                  break;                                              case "targetangle":                                                  ((AngleJoint)joint).TargetAngle = float.Parse(sn.Value);                                                  break;                                          }
Missing Default,FarseerPhysics.Common,WorldXmlDeserializer,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\Serialization.cs,Deserialize,The following switch statement is missing a default case: switch (sn.Name.ToLower())                                      {                                          case "angularoffset":                                              ((MotorJoint)joint).AngularOffset = float.Parse(sn.Value);                                              break;                                          case "linearoffset":                                              ((MotorJoint)joint).LinearOffset = ReadVector(sn);                                              break;                                          case "maxforce":                                              ((MotorJoint)joint).MaxForce = float.Parse(sn.Value);                                              break;                                          case "maxtorque":                                              ((MotorJoint)joint).MaxTorque = float.Parse(sn.Value);                                              break;                                          case "correctionfactor":                                              ((MotorJoint)joint).CorrectionFactor = float.Parse(sn.Value);                                              break;                                      }
Missing Default,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,DetectVertices,The following switch statement is missing a default case: switch (_polygonDetectionType)                                          {                                              case VerticesDetectionType.Integrated:                                                    // Add first hole polygon vertex to close the hole polygon.                                                  holePolygon.Add(holePolygon[0]);                                                    int vertex1Index' vertex2Index;                                                  if (SplitPolygonEdge(polygon' holeEntrance.Value' out vertex1Index' out vertex2Index))                                                      polygon.InsertRange(vertex2Index' holePolygon);                                                    break;                                                case VerticesDetectionType.Separated:                                                  if (polygon.Holes == null)                                                      polygon.Holes = new List<Vertices>();                                                    polygon.Holes.Add(holePolygon);                                                  break;                                          }
Missing Default,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following switch statement is missing a default case: switch ((int)(current.X - last.X))              {                  case 1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }                      break;                    case 0:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }                      break;                    case -1:                      switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }                      break;              }
Missing Default,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following switch statement is missing a default case: switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 1;                            case 0:                              return 0;                            case -1:                              return 7;                      }
Missing Default,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following switch statement is missing a default case: switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 2;                            case -1:                              return 6;                      }
Missing Default,FarseerPhysics.Common.TextureTools,TextureConverter,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Common\TextureTools\TextureConverter.cs,GetIndexOfFirstPixelToCheck,The following switch statement is missing a default case: switch ((int)(current.Y - last.Y))                      {                          case 1:                              return 3;                            case 0:                              return 4;                            case -1:                              return 5;                      }
Missing Default,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,AbstractForceController,The following switch statement is missing a default case: switch (mode)              {                  case TimingModes.Switched:                      Enabled = true;                      break;                  case TimingModes.Triggered:                      Enabled = false;                      break;                  case TimingModes.Curve:                      Enabled = false;                      break;              }
Missing Default,FarseerPhysics.Controllers,AbstractForceController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\AbstractForceController.cs,Update,The following switch statement is missing a default case: switch (TimingMode)              {                  case TimingModes.Switched:                      {                          if (Enabled)                          {                              ApplyForce(dt' Strength);                          }                          break;                      }                  case TimingModes.Triggered:                      {                          if (Enabled && Triggered)                          {                              if (ImpulseTime < ImpulseLength)                              {                                  ApplyForce(dt' Strength);                                  ImpulseTime += dt;                              }                              else                              {                                  Triggered = false;                              }                          }                          break;                      }                  case TimingModes.Curve:                      {                          if (Enabled && Triggered)                          {                              if (ImpulseTime < ImpulseLength)                              {                                  ApplyForce(dt' Strength * StrengthCurve.Evaluate(ImpulseTime));                                  ImpulseTime += dt;                              }                              else                              {                                  Triggered = false;                              }                          }                          break;                      }              }
Missing Default,FarseerPhysics.Controllers,GravityController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\GravityController.cs,Update,The following switch statement is missing a default case: switch (GravityType)                      {                          case GravityType.DistanceSquared:                              f = Strength / r2 * worldBody.Mass * controllerBody.Mass * d;                              break;                          case GravityType.Linear:                              f = Strength / (float)Math.Sqrt(r2) * worldBody.Mass * controllerBody.Mass * d;                              break;                      }
Missing Default,FarseerPhysics.Controllers,GravityController,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Controllers\GravityController.cs,Update,The following switch statement is missing a default case: switch (GravityType)                      {                          case GravityType.DistanceSquared:                              f = Strength / r2 * worldBody.Mass * d;                              break;                          case GravityType.Linear:                              f = Strength / (float)Math.Sqrt(r2) * worldBody.Mass * d;                              break;                      }
Missing Default,FarseerPhysics.Dynamics.Contacts,Contact,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\Contact.cs,Evaluate,The following switch statement is missing a default case: switch (_type)              {                  case ContactType.Polygon:                      Collision.Collision.CollidePolygons(ref manifold' (PolygonShape)FixtureA.Shape' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.PolygonAndCircle:                      Collision.Collision.CollidePolygonAndCircle(ref manifold' (PolygonShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.EdgeAndCircle:                      Collision.Collision.CollideEdgeAndCircle(ref manifold' (EdgeShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.EdgeAndPolygon:                      Collision.Collision.CollideEdgeAndPolygon(ref manifold' (EdgeShape)FixtureA.Shape' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.ChainAndCircle:                      ChainShape chain = (ChainShape)FixtureA.Shape;                      chain.GetChildEdge(_edge' ChildIndexA);                      Collision.Collision.CollideEdgeAndCircle(ref manifold' _edge' ref transformA' (CircleShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.ChainAndPolygon:                      ChainShape loop2 = (ChainShape)FixtureA.Shape;                      loop2.GetChildEdge(_edge' ChildIndexA);                      Collision.Collision.CollideEdgeAndPolygon(ref manifold' _edge' ref transformA' (PolygonShape)FixtureB.Shape' ref transformB);                      break;                  case ContactType.Circle:                      Collision.Collision.CollideCircles(ref manifold' (CircleShape)FixtureA.Shape' ref transformA' (CircleShape)FixtureB.Shape' ref transformB);                      break;              }
Missing Default,FarseerPhysics.Dynamics.Contacts,WorldManifold,D:\research\architectureSmells\repos\d-snp_Farseer-Physics\SourceFiles\Dynamics\Contacts\ContactSolver.cs,Initialize,The following switch statement is missing a default case: switch (manifold.Type)                  {                      case ManifoldType.Circles:                          {                              normal = new Vector2(1.0f' 0.0f);                              Vector2 pointA = MathUtils.Mul(ref xfA' manifold.LocalPoint);                              Vector2 pointB = MathUtils.Mul(ref xfB' manifold.Points[0].LocalPoint);                              if (Vector2.DistanceSquared(pointA' pointB) > Settings.Epsilon * Settings.Epsilon)                              {                                  normal = pointB - pointA;                                  normal.Normalize();                              }                                Vector2 cA = pointA + radiusA * normal;                              Vector2 cB = pointB - radiusB * normal;                              points[0] = 0.5f * (cA + cB);                          }                          break;                        case ManifoldType.FaceA:                          {                              normal = MathUtils.Mul(xfA.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfA' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfB' manifold.Points[i].LocalPoint);                                  Vector2 cA = clipPoint + (radiusA - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cB = clipPoint - radiusB * normal;                                  points[i] = 0.5f * (cA + cB);                              }                          }                          break;                        case ManifoldType.FaceB:                          {                              normal = MathUtils.Mul(xfB.q' manifold.LocalNormal);                              Vector2 planePoint = MathUtils.Mul(ref xfB' manifold.LocalPoint);                                for (int i = 0; i < manifold.PointCount; ++i)                              {                                  Vector2 clipPoint = MathUtils.Mul(ref xfA' manifold.Points[i].LocalPoint);                                  Vector2 cB = clipPoint + (radiusB - Vector2.Dot(clipPoint - planePoint' normal)) * normal;                                  Vector2 cA = clipPoint - radiusA * normal;                                  points[i] = 0.5f * (cA + cB);                              }                                // Ensure normal points from A to B.                              normal = -normal;                          }                          break;                  }
