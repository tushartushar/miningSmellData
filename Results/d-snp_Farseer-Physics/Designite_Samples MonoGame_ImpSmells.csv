Implementation smell,Namespace,Class,File,Method,Description
Long Method,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The method has 161 lines of code.
Complex Method,FarseerPhysics.Samples.ScreenSystem,Camera2D,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\Camera2D.cs,Update,Cyclomatic complexity of the method is 10
Complex Method,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,HandleVirtualStickWin,Cyclomatic complexity of the method is 8
Complex Method,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,HandleInput,Cyclomatic complexity of the method is 11
Complex Method,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,HandleInput,Cyclomatic complexity of the method is 14
Complex Method,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,HandleCamera,Cyclomatic complexity of the method is 9
Long Parameter List,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The method has 7 parameters. Parameters: world' screenManager' startPosition' endPosition' count' radius' type
Long Parameter List,FarseerPhysics.Samples.Demos.Prefabs,Pyramid,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Pyramid.cs,Pyramid,The method has 5 parameters. Parameters: world' screenManager' position' count' density
Long Parameter List,FarseerPhysics.Samples.Demos.Prefabs,Spiderweb,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spiderweb.cs,Spiderweb,The method has 6 parameters. Parameters: world' ground' position' radius' rings' sides
Long Parameter List,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The method has 5 parameters. Parameters: radiusX' radiusY' type' color' materialScale
Long Parameter List,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The method has 5 parameters. Parameters: width' height' material' verticesFill' verticesOutline
Long Parameter List,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The method has 5 parameters. Parameters: width' height' material' verticesFill' verticesOutline
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_polygonTexture' ConvertUnits.ToDisplayUnits(_compound.Position)' null' Color.Tomato' _compound.Rotation' _origin' _scale' SpriteEffects.None' 0f); " is 178.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The length of the statement  "            PathManager.AttachBodiesWithRevoluteJoint(World' _bridgeBodies' new Vector2(0f' -0.5f)' new Vector2(0f' 0.5f)' false' true); " is 124.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The length of the statement  "            _softBodyBox = new Sprite(ScreenManager.Assets.TextureFromShape(shapes[0]' MaterialType.Blank' Color.Silver * 0.8f' 1f)); " is 121.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_softBodyBox.Texture' ConvertUnits.ToDisplayUnits(_softBodies[i].Position)' null' Color.White' _softBodies[i].Rotation' _softBodyBox.Origin' 1f' SpriteEffects.None' 0f); " is 200.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_softBodyCircle.Texture' ConvertUnits.ToDisplayUnits(_softBodies[i].Position)' null' Color.White' _softBodies[i].Rotation' _softBodyCircle.Origin' 1f' SpriteEffects.None' 0f); " is 206.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_bridgeBox.Texture' ConvertUnits.ToDisplayUnits(_bridgeBodies[i].Position)' null' Color.White' _bridgeBodies[i].Rotation' _bridgeBox.Origin' 1f' SpriteEffects.None' 0f); " is 200.
Long Statement,FarseerPhysics.Samples.Demos,AdvancedDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo3.cs,HandleInput,The length of the statement  "            if (input.IsNewButtonPress(Buttons.B) || input.IsNewMouseButtonPress(MouseButtons.RightButton) || input.IsNewKeyPress(Keys.Space)) " is 130.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The length of the statement  "                _carBody = new Sprite(ScreenManager.Content.Load<Texture2D>("Samples/car")' AssetCreator.CalculateOrigin(_car) / _scale); " is 121.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_wheel.Texture' ConvertUnits.ToDisplayUnits(_wheelBack.Position)' null' Color.White' _wheelBack.Rotation' _wheel.Origin' _scale' SpriteEffects.None' 0f); " is 184.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_wheel.Texture' ConvertUnits.ToDisplayUnits(_wheelFront.Position)' null' Color.White' _wheelFront.Rotation' _wheel.Origin' _scale' SpriteEffects.None' 0f); " is 186.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_carBody.Texture' ConvertUnits.ToDisplayUnits(_car.Position)' null' Color.White' _car.Rotation' _carBody.Origin' _scale' SpriteEffects.None' 0f); " is 176.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_teeter.Texture' ConvertUnits.ToDisplayUnits(_board.Position)' null' Color.White' _board.Rotation' _teeter.Origin' 1f' SpriteEffects.None' 0f); " is 174.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_bridge.Texture' ConvertUnits.ToDisplayUnits(_bridgeSegments[i].Position)' null' Color.White' _bridgeSegments[i].Rotation' _bridge.Origin' 1f' SpriteEffects.None' 0f); " is 198.
Long Statement,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_box.Texture' ConvertUnits.ToDisplayUnits(_boxes[i].Position)' null' Color.White' _boxes[i].Rotation' _box.Origin' 1f' SpriteEffects.None' 0f); " is 174.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo1.cs,LoadContent,The length of the statement  "            _rectangleSprite = new Sprite(ScreenManager.Assets.TextureFromShape(_rectangle.FixtureList[0].Shape' MaterialType.Squares' Color.Orange' 1f)); " is 142.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo1.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_rectangleSprite.Texture' ConvertUnits.ToDisplayUnits(_rectangle.Position)' null' Color.White' _rectangle.Rotation' _rectangleSprite.Origin' 1f' SpriteEffects.None' 0f); " is 200.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo2.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_rectangleSprite.Texture' ConvertUnits.ToDisplayUnits(_rectangles.Position)' null' Color.White' _rectangles.Rotation' _rectangleSprite.Origin + _offset' 1f' SpriteEffects.None' 0f); " is 212.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo2.cs,Draw,The length of the statement  "            ScreenManager.SpriteBatch.Draw(_rectangleSprite.Texture' ConvertUnits.ToDisplayUnits(_rectangles.Position)' null' Color.White' _rectangles.Rotation' _rectangleSprite.Origin - _offset' 1f' SpriteEffects.None' 0f); " is 212.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,LoadObstacles,The length of the statement  "            _obstacle = new Sprite(ScreenManager.Assets.TextureFromShape(_obstacles[0].FixtureList[0].Shape' MaterialType.Dots' Color.SandyBrown' 0.8f)); " is 141.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_obstacle.Texture' ConvertUnits.ToDisplayUnits(_obstacles[i].Position)' null' Color.White' _obstacles[i].Rotation' _obstacle.Origin' 1f' SpriteEffects.None' 0f); " is 192.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo8,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo8.cs,LoadContent,The length of the statement  "            _circleSprite = new Sprite(ScreenManager.Assets.TextureFromShape(_circle[0].FixtureList[0].Shape' MaterialType.Waves' Color.Brown' 1f)); " is 136.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo8,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo8.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_circleSprite.Texture' ConvertUnits.ToDisplayUnits(_circle[i].Position)' null' Color.White' _circle[i].Rotation' _circleSprite.Origin' 1f' SpriteEffects.None' 0f); " is 194.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo9,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo9.cs,LoadContent,The length of the statement  "            _rectangleSprite = new Sprite(ScreenManager.Assets.TextureFromShape(_rectangle[0].FixtureList[0].Shape' MaterialType.Squares' Color.ForestGreen' 0.8f)); " is 152.
Long Statement,FarseerPhysics.Samples.Demos,SimpleDemo9,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo9.cs,Draw,The length of the statement  "                ScreenManager.SpriteBatch.Draw(_rectangleSprite.Texture' ConvertUnits.ToDisplayUnits(_rectangle[i].Position)' null' Color.White' _rectangle[i].Rotation' _rectangleSprite.Origin' 1f' SpriteEffects.None' 0f); " is 206.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_box.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _box.Origin' 1f' SpriteEffects.None' 0f); " is 157.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_box.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation + MathHelper.Pi / 2f' _box.Origin' 1f' SpriteEffects.None' 0f); " is 178.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_knob.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _knob.Origin' 1f' SpriteEffects.None' 0f); " is 159.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_knob.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _knob.Origin + new Vector2(0f' _offset)' 1f' SpriteEffects.None' 0f); " is 186.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_knob.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _knob.Origin - new Vector2(0f' _offset)' 1f' SpriteEffects.None' 0f); " is 186.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_knob.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _knob.Origin + new Vector2(_offset' 0f)' 1f' SpriteEffects.None' 0f); " is 186.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Agent,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Agent.cs,Draw,The length of the statement  "            _batch.Draw(_knob.Texture' ConvertUnits.ToDisplayUnits(_agentBody.Position)' null' Color.White' _agentBody.Rotation' _knob.Origin - new Vector2(_offset' 0f)' 1f' SpriteEffects.None' 0f); " is 186.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Draw,The length of the statement  "                _batch.Draw(_object.Texture' ConvertUnits.ToDisplayUnits(_bodies[i].Position)' null' Color.White' _bodies[i].Rotation' _object.Origin' 1f' SpriteEffects.None' 0f); " is 163.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Pyramid,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Pyramid.cs,Draw,The length of the statement  "                _batch.Draw(_box.Texture' ConvertUnits.ToDisplayUnits(_boxes[i].Position)' null' Color.White' _boxes[i].Rotation' _box.Origin' 1f' SpriteEffects.None' 0f); " is 155.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The length of the statement  "            _torso = new Sprite(assets.TextureFromVertices(PolygonTools.CreateRoundedRectangle(2f' 4f' 0.5f' 0.7f' 2)' MaterialType.Squares' Color.LightSlateGray' 0.8f)); " is 158.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The length of the statement  "            _upperArm = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(1.9f' 0.45f' 16)' MaterialType.Squares' Color.DimGray' 0.8f)); " is 139.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The length of the statement  "            _lowerArm = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(1.9f' 0.45f' 16)' MaterialType.Squares' Color.DarkSlateGray' 0.8f)); " is 145.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The length of the statement  "            _upperLeg = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(2f' 0.5f' 16)' MaterialType.Squares' Color.DimGray' 0.8f)); " is 136.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The length of the statement  "            _lowerLeg = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(2f' 0.5f' 16)' MaterialType.Squares' Color.DarkSlateGray' 0.8f)); " is 142.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_lowerLeg.Texture' ConvertUnits.ToDisplayUnits(_lowerLeftLeg.Position)' null' Color.White' _lowerLeftLeg.Rotation' _lowerLeg.Origin' 1f' SpriteEffects.None' 0f); " is 173.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_lowerLeg.Texture' ConvertUnits.ToDisplayUnits(_lowerRightLeg.Position)' null' Color.White' _lowerRightLeg.Rotation' _lowerLeg.Origin' 1f' SpriteEffects.None' 0f); " is 175.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_upperLeg.Texture' ConvertUnits.ToDisplayUnits(_upperLeftLeg.Position)' null' Color.White' _upperLeftLeg.Rotation' _upperLeg.Origin' 1f' SpriteEffects.None' 0f); " is 173.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_upperLeg.Texture' ConvertUnits.ToDisplayUnits(_upperRightLeg.Position)' null' Color.White' _upperRightLeg.Rotation' _upperLeg.Origin' 1f' SpriteEffects.None' 0f); " is 175.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_lowerArm.Texture' ConvertUnits.ToDisplayUnits(_lowerLeftArm.Position)' null' Color.White' _lowerLeftArm.Rotation' _lowerArm.Origin' 1f' SpriteEffects.None' 0f); " is 173.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_lowerArm.Texture' ConvertUnits.ToDisplayUnits(_lowerRightArm.Position)' null' Color.White' _lowerRightArm.Rotation' _lowerArm.Origin' 1f' SpriteEffects.None' 0f); " is 175.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_upperArm.Texture' ConvertUnits.ToDisplayUnits(_upperLeftArm.Position)' null' Color.White' _upperLeftArm.Rotation' _upperArm.Origin' 1f' SpriteEffects.None' 0f); " is 173.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_upperArm.Texture' ConvertUnits.ToDisplayUnits(_upperRightArm.Position)' null' Color.White' _upperRightArm.Rotation' _upperArm.Origin' 1f' SpriteEffects.None' 0f); " is 175.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_torso.Texture' ConvertUnits.ToDisplayUnits(_body.Position)' null' Color.White' _body.Rotation' _torso.Origin' 1f' SpriteEffects.None' 0f); " is 151.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,Draw,The length of the statement  "            _batch.Draw(_face.Texture' ConvertUnits.ToDisplayUnits(_head.Position)' null' Color.White' _head.Rotation' _face.Origin' 1f' SpriteEffects.None' 0f); " is 149.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Draw,The length of the statement  "            _batch.Draw(_lowerLeg.Texture' ConvertUnits.ToDisplayUnits(_leftLower.Position)' null' Color.White' _leftLower.Rotation' _lowerLeg.Origin' 1f' SpriteEffects.None' 0f); " is 167.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Draw,The length of the statement  "            _batch.Draw(_lowerLeg.Texture' ConvertUnits.ToDisplayUnits(_rightLower.Position)' null' Color.White' _rightLower.Rotation' _lowerLeg.Origin' 1f' SpriteEffects.None' 0f); " is 169.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Draw,The length of the statement  "            _batch.Draw(_upperLeg.Texture' ConvertUnits.ToDisplayUnits(_leftUpper.Position)' null' Color.White' _leftUpper.Rotation' _upperLeg.Origin' 1f' SpriteEffects.None' 0f); " is 167.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Draw,The length of the statement  "            _batch.Draw(_upperLeg.Texture' ConvertUnits.ToDisplayUnits(_rightUpper.Position)' null' Color.White' _rightUpper.Rotation' _upperLeg.Origin' 1f' SpriteEffects.None' 0f); " is 169.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Draw,The length of the statement  "            _batch.Draw(_torso.Texture' ConvertUnits.ToDisplayUnits(_circle.Position)' null' Color.White' _circle.Rotation' _torso.Origin' 1f' SpriteEffects.None' 0f); " is 155.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,Spiderweb,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spiderweb.cs,Draw,The length of the statement  "                    batch.Draw(_goo.Texture' ConvertUnits.ToDisplayUnits(b.Position)' null' Color.White' 0f' _goo.Origin' _spriteScale' SpriteEffects.None' 0f); " is 140.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The length of the statement  "            DistanceJoint djd = new DistanceJoint(leg' shoulder' leg.GetLocalPoint(p2 + _position)' shoulder.GetLocalPoint(p5 + _position)); " is 128.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The length of the statement  "            DistanceJoint djd2 = new DistanceJoint(leg' shoulder' leg.GetLocalPoint(p3 + _position)' shoulder.GetLocalPoint(p4 + _position)); " is 129.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The length of the statement  "            DistanceJoint djd3 = new DistanceJoint(leg' _wheel' leg.GetLocalPoint(p3 + _position)' _wheel.GetLocalPoint(wheelAnchor + _position)); " is 134.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The length of the statement  "            DistanceJoint djd4 = new DistanceJoint(shoulder' _wheel' shoulder.GetLocalPoint(p6 + _position)' _wheel.GetLocalPoint(wheelAnchor + _position)); " is 144.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The length of the statement  "            RevoluteJoint rjd = new RevoluteJoint(shoulder' _chassis' shoulder.GetLocalPoint(_chassis.GetWorldPoint(anchor))' anchor); " is 122.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "            _spriteBatch.Draw(_body.Texture' ConvertUnits.ToDisplayUnits(_chassis.Position)' null' Color.White' _chassis.Rotation' _body.Origin' 1f' SpriteEffects.None' 0f); " is 161.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "                _spriteBatch.Draw(_leftLeg.Texture' ConvertUnits.ToDisplayUnits(_leftLegs[i].Position)' null' Color.White' _leftLegs[i].Rotation' _leftLeg.Origin' 1f' SpriteEffects.None' 0f); " is 175.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "                _spriteBatch.Draw(_leftShoulder.Texture' ConvertUnits.ToDisplayUnits(_leftShoulders[i].Position)' null' Color.White' _leftShoulders[i].Rotation' _leftShoulder.Origin' 1f' SpriteEffects.None' 0f); " is 195.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "                _spriteBatch.Draw(_rightLeg.Texture' ConvertUnits.ToDisplayUnits(_rightLegs[i].Position)' null' Color.White' _rightLegs[i].Rotation' _rightLeg.Origin' 1f' SpriteEffects.None' 0f); " is 179.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "                _spriteBatch.Draw(_rightShoulder.Texture' ConvertUnits.ToDisplayUnits(_rightShoulders[i].Position)' null' Color.White' _rightShoulders[i].Rotation' _rightShoulder.Origin' 1f' SpriteEffects.None' 0f); " is 199.
Long Statement,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The length of the statement  "            _spriteBatch.Draw(_engine.Texture' ConvertUnits.ToDisplayUnits(_wheel.Position)' null' Color.White' _wheel.Rotation' _engine.Origin' 1f' SpriteEffects.None' 0f); " is 161.
Long Statement,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The length of the statement  "            Vector2 vertsSize = new Vector2(vertsBounds.UpperBound.X - vertsBounds.LowerBound.X' vertsBounds.UpperBound.Y - vertsBounds.LowerBound.Y); " is 138.
Long Statement,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The length of the statement  "            RenderTarget2D texture = new RenderTarget2D(_device' width + 2' height + 2' false' SurfaceFormat.Color' DepthFormat.None' pp.MultiSampleCount' RenderTargetUsage.DiscardContents); " is 178.
Long Statement,FarseerPhysics.Samples.ScreenSystem,FrameRateCounter,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\FramerateCounterComponent.cs,Draw,The length of the statement  "            _screenManager.SpriteBatch.DrawString(_screenManager.Fonts.FrameRateCounterFont' fps' _position + Vector2.One' Color.Black); " is 124.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,LoadContent,The length of the statement  "            _phoneB = new VirtualButton(temp' new Vector2(745f' 360f)' new Rectangle(40' 0' 40' 40)' new Rectangle(40' 40' 40' 40)); " is 120.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,Update,The length of the statement  "                VirtualState = GamePad.GetState(PlayerIndex.One).IsConnected ? GamePad.GetState(PlayerIndex.One) : HandleVirtualStickWin(); " is 123.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,Update,The length of the statement  "            Cursor = new Vector2(MathHelper.Clamp(Cursor.X' 0f' _viewport.Width)' MathHelper.Clamp(Cursor.Y' 0f' _viewport.Height)); " is 120.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,Draw,The length of the statement  "                _manager.SpriteBatch.Draw(_cursorSprite.Texture' Cursor' null' Color.White' 0f' _cursorSprite.Origin' 1f' SpriteEffects.None' 0f); " is 130.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,IsMenuSelect,The length of the statement  "            return IsNewKeyPress(Keys.Space) || IsNewKeyPress(Keys.Enter) || IsNewButtonPress(Buttons.A) || IsNewButtonPress(Buttons.Start) || IsNewMouseButtonPress(MouseButtons.LeftButton); " is 178.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,IsMenuPressed,The length of the statement  "            return KeyboardState.IsKeyDown(Keys.Space) || KeyboardState.IsKeyDown(Keys.Enter) || GamePadState.IsButtonDown(Buttons.A) || GamePadState.IsButtonDown(Buttons.Start) || MouseState.LeftButton == ButtonState.Pressed; " is 214.
Long Statement,FarseerPhysics.Samples.ScreenSystem,InputHelper,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\InputHelper.cs,IsMenuReleased,The length of the statement  "            return IsNewKeyRelease(Keys.Space) || IsNewKeyRelease(Keys.Enter) || IsNewButtonRelease(Buttons.A) || IsNewButtonRelease(Buttons.Start) || IsNewMouseButtonRelease(MouseButtons.LeftButton); " is 188.
Long Statement,FarseerPhysics.Samples.ScreenSystem,LogoScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\LogoScreen.cs,HandleInput,The length of the statement  "            if (input.KeyboardState.GetPressedKeys().Length > 0 || input.GamePadState.IsButtonDown(Buttons.A | Buttons.Start | Buttons.Back) || input.MouseState.LeftButton == ButtonState.Pressed) " is 183.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuButton,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuButton.cs,Collide,The length of the statement  "            Rectangle collisonBox = new Rectangle((int)(Position.X - _sprite.Width / 2f)' (int)(Position.Y - _sprite.Height / 2f)' (_sprite.Width)' (_sprite.Height)); " is 154.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuButton,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuButton.cs,Draw,The length of the statement  "            batch.Draw(_sprite' Position - _baseOrigin * _scale' null' color' 0f' Vector2.Zero' _scale' _flip ? SpriteEffects.FlipVertically : SpriteEffects.None' 0f); " is 155.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuEntry,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuEntry.cs,Draw,The length of the statement  "            Color color = _type == EntryType.Separator ? Color.DarkOrange : Color.Lerp(Color.White' new Color(255' 210' 0)' _selectionFade); " is 128.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuEntry,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuEntry.cs,Draw,The length of the statement  "            batch.DrawString(font' Text' Position - _baseOrigin * _scale + Vector2.One' Color.DarkSlateGray * Alpha * Alpha' 0' Vector2.Zero' _scale' SpriteEffects.None' 0); " is 161.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,LoadContent,The length of the statement  "            _scrollUp = new MenuButton(_texScrollButton' false' new Vector2(scrollBarPos' _menuBorderTop - _texScrollButton.Height)' this); " is 127.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,LoadContent,The length of the statement  "            _scrollDown = new MenuButton(_texScrollButton' true' new Vector2(scrollBarPos' _menuBorderBottom + _texScrollButton.Height)' this); " is 131.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,GetMenuEntryAt,The length of the statement  "                Rectangle rect = new Rectangle((int)(entry.Position.X - width / 2f)' (int)(entry.Position.Y - height / 2f)' (int)width' (int)height); " is 133.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,HandleInput,The length of the statement  "                _menuOffset = Math.Max(Math.Min(((input.Cursor.Y - _menuBorderTop) / (_menuBorderBottom - _menuBorderTop)) * _maxOffset' _maxOffset)' 0f); " is 138.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,Draw,The length of the statement  "            spriteBatch.DrawString(font' _menuTitle' _titlePosition - transitionOffset + Vector2.One * 2f' Color.Black' 0' _titleOrigin' 1f' SpriteEffects.None' 0); " is 152.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,Draw,The length of the statement  "            spriteBatch.DrawString(font' _menuTitle' _titlePosition - transitionOffset' new Color(255' 210' 0)' 0' _titleOrigin' 1f' SpriteEffects.None' 0); " is 144.
Long Statement,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The length of the statement  "            _backgroundRectangle = new Rectangle((int)_textPosition.X - hPad' (int)_textPosition.Y - vPad' (int)textSize.X + hPad * 2' (int)textSize.Y + vPad * 2); " is 151.
Long Statement,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,HandleCursor,The length of the statement  "            if ((input.IsNewButtonPress(Buttons.A) || input.IsNewMouseButtonPress(MouseButtons.LeftButton)) && _fixedMouseJoint == null) " is 124.
Long Statement,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,HandleCursor,The length of the statement  "            if ((input.IsNewButtonRelease(Buttons.A) || input.IsNewMouseButtonRelease(MouseButtons.LeftButton)) && _fixedMouseJoint != null) " is 128.
Long Statement,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,HandleUserAgent,The length of the statement  "            Vector2 force = _agentForce * new Vector2(input.GamePadState.ThumbSticks.Right.X' -input.GamePadState.ThumbSticks.Right.Y); " is 123.
Long Statement,FarseerPhysics.Samples.ScreenSystem,ScreenManager,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\ScreenManagerComponent.cs,Draw,The length of the statement  "                        _transitions.Add(new RenderTarget2D(GraphicsDevice' _pp.BackBufferWidth' _pp.BackBufferHeight' false' SurfaceFormat.Color' _pp.DepthStencilFormat' _pp.MultiSampleCount' RenderTargetUsage.DiscardContents)); " is 205.
Long Statement,FarseerPhysics.Samples.ScreenSystem,VirtualStick,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\VirtualStick.cs,Update,The length of the statement  "            if ((touchLocation.State == TouchLocationState.Pressed || touchLocation.State == TouchLocationState.Moved) && touchLocation.Id == _picked) " is 138.
Complex Conditional,FarseerPhysics.Samples.ScreenSystem,GameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\GameScreen.cs,UpdateTransition,The conditional expression  "((direction < 0) && (TransitionPosition <= 0)) || ((direction > 0) && (TransitionPosition >= 1))"  is complex.
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: bridgePath.Add(new Vector2(-15' 5));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: bridgePath.Add(new Vector2(-15' 5));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: bridgePath.Add(new Vector2(15' 5));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: bridgePath.Add(new Vector2(15' 5));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: PolygonShape shape = new PolygonShape(box' 20);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: _bridgeBodies = PathManager.EvenlyDistributeShapesAlongPath(World' bridgePath' shape' BodyType.Dynamic' 29);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(-6' -11));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(-6' -11));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(-6' 1));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(6' 1));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(6' -11));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: rectanglePath.Add(new Vector2(6' -11));
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: List<Shape> shapes = new List<Shape>(2);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo2.cs,LoadContent,The following statement contains a magic number: _softBodies = PathManager.EvenlyDistributeShapesAlongPath(World' rectanglePath' shapes'                                                                        BodyType.Dynamic' 30);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo4,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo4.cs,LoadContent,The following statement contains a magic number: _spiderweb = new Spiderweb(World' HiddenBody' Vector2.Zero' ConvertUnits.ToSimUnits(12)' 5' 12);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo4,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo4.cs,LoadContent,The following statement contains a magic number: _spiderweb = new Spiderweb(World' HiddenBody' Vector2.Zero' ConvertUnits.ToSimUnits(12)' 5' 12);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo4,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo4.cs,LoadContent,The following statement contains a magic number: _spiderweb = new Spiderweb(World' HiddenBody' Vector2.Zero' ConvertUnits.ToSimUnits(12)' 5' 12);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,LoadContent,The following statement contains a magic number: List<Vertices> list = PolygonTools.CreatePolygon(data' alphabet.Width' 3.5f' 20' true' true);
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < list.Count; i++)              {                  if (i == 9)                  {                      yOffset = 0f;                      xOffset = -14f;                  }                  if (i == 18)                  {                      yOffset = 5f;                      xOffset = -12.25f;                  }                  Vertices polygon = list[i];                  Vector2 centroid = -polygon.GetCentroid();                  polygon.Translate(ref centroid);                  polygon = SimplifyTools.CollinearSimplify(polygon);                  polygon = SimplifyTools.ReduceByDistance(polygon' 4);                  List<Vertices> triangulated = Triangulate.ConvexPartition(polygon' TriangulationAlgorithm.Bayazit);    #if WINDOWS_PHONE                  const float scale = 0.6f;  #else                  const float scale = 1f;  #endif                  Vector2 vertScale = new Vector2(ConvertUnits.ToSimUnits(1)) * scale;                  foreach (Vertices vertices in triangulated)                  {                      vertices.Scale(ref vertScale);                  }                    BreakableBody breakableBody = new BreakableBody(World' triangulated' 1);                  breakableBody.MainBody.Position = new Vector2(xOffset' yOffset);                  breakableBody.Strength = 100;                  World.AddBreakableBody(breakableBody);                    xOffset += 3.5f;              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < list.Count; i++)              {                  if (i == 9)                  {                      yOffset = 0f;                      xOffset = -14f;                  }                  if (i == 18)                  {                      yOffset = 5f;                      xOffset = -12.25f;                  }                  Vertices polygon = list[i];                  Vector2 centroid = -polygon.GetCentroid();                  polygon.Translate(ref centroid);                  polygon = SimplifyTools.CollinearSimplify(polygon);                  polygon = SimplifyTools.ReduceByDistance(polygon' 4);                  List<Vertices> triangulated = Triangulate.ConvexPartition(polygon' TriangulationAlgorithm.Bayazit);    #if WINDOWS_PHONE                  const float scale = 0.6f;  #else                  const float scale = 1f;  #endif                  Vector2 vertScale = new Vector2(ConvertUnits.ToSimUnits(1)) * scale;                  foreach (Vertices vertices in triangulated)                  {                      vertices.Scale(ref vertScale);                  }                    BreakableBody breakableBody = new BreakableBody(World' triangulated' 1);                  breakableBody.MainBody.Position = new Vector2(xOffset' yOffset);                  breakableBody.Strength = 100;                  World.AddBreakableBody(breakableBody);                    xOffset += 3.5f;              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < list.Count; i++)              {                  if (i == 9)                  {                      yOffset = 0f;                      xOffset = -14f;                  }                  if (i == 18)                  {                      yOffset = 5f;                      xOffset = -12.25f;                  }                  Vertices polygon = list[i];                  Vector2 centroid = -polygon.GetCentroid();                  polygon.Translate(ref centroid);                  polygon = SimplifyTools.CollinearSimplify(polygon);                  polygon = SimplifyTools.ReduceByDistance(polygon' 4);                  List<Vertices> triangulated = Triangulate.ConvexPartition(polygon' TriangulationAlgorithm.Bayazit);    #if WINDOWS_PHONE                  const float scale = 0.6f;  #else                  const float scale = 1f;  #endif                  Vector2 vertScale = new Vector2(ConvertUnits.ToSimUnits(1)) * scale;                  foreach (Vertices vertices in triangulated)                  {                      vertices.Scale(ref vertScale);                  }                    BreakableBody breakableBody = new BreakableBody(World' triangulated' 1);                  breakableBody.MainBody.Position = new Vector2(xOffset' yOffset);                  breakableBody.Strength = 100;                  World.AddBreakableBody(breakableBody);                    xOffset += 3.5f;              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < list.Count; i++)              {                  if (i == 9)                  {                      yOffset = 0f;                      xOffset = -14f;                  }                  if (i == 18)                  {                      yOffset = 5f;                      xOffset = -12.25f;                  }                  Vertices polygon = list[i];                  Vector2 centroid = -polygon.GetCentroid();                  polygon.Translate(ref centroid);                  polygon = SimplifyTools.CollinearSimplify(polygon);                  polygon = SimplifyTools.ReduceByDistance(polygon' 4);                  List<Vertices> triangulated = Triangulate.ConvexPartition(polygon' TriangulationAlgorithm.Bayazit);    #if WINDOWS_PHONE                  const float scale = 0.6f;  #else                  const float scale = 1f;  #endif                  Vector2 vertScale = new Vector2(ConvertUnits.ToSimUnits(1)) * scale;                  foreach (Vertices vertices in triangulated)                  {                      vertices.Scale(ref vertScale);                  }                    BreakableBody breakableBody = new BreakableBody(World' triangulated' 1);                  breakableBody.MainBody.Position = new Vector2(xOffset' yOffset);                  breakableBody.Strength = 100;                  World.AddBreakableBody(breakableBody);                    xOffset += 3.5f;              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,HandleInput,The following statement contains a magic number: if (input.IsNewMouseButtonPress(MouseButtons.RightButton) ||                  input.IsNewButtonPress(Buttons.B))              {                  Vector2 cursorPos = Camera.ConvertScreenToWorld(input.Cursor);                    Vector2 min = cursorPos - new Vector2(10' 10);                  Vector2 max = cursorPos + new Vector2(10' 10);                    AABB aabb = new AABB(ref min' ref max);                    World.QueryAABB(fixture =>                                      {                                          Vector2 fv = fixture.Body.Position - cursorPos;                                          fv.Normalize();                                          fv *= 40;                                          fixture.Body.ApplyLinearImpulse(ref fv);                                          return true;                                      }' ref aabb);              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,HandleInput,The following statement contains a magic number: if (input.IsNewMouseButtonPress(MouseButtons.RightButton) ||                  input.IsNewButtonPress(Buttons.B))              {                  Vector2 cursorPos = Camera.ConvertScreenToWorld(input.Cursor);                    Vector2 min = cursorPos - new Vector2(10' 10);                  Vector2 max = cursorPos + new Vector2(10' 10);                    AABB aabb = new AABB(ref min' ref max);                    World.QueryAABB(fixture =>                                      {                                          Vector2 fv = fixture.Body.Position - cursorPos;                                          fv.Normalize();                                          fv *= 40;                                          fixture.Body.ApplyLinearImpulse(ref fv);                                          return true;                                      }' ref aabb);              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,HandleInput,The following statement contains a magic number: if (input.IsNewMouseButtonPress(MouseButtons.RightButton) ||                  input.IsNewButtonPress(Buttons.B))              {                  Vector2 cursorPos = Camera.ConvertScreenToWorld(input.Cursor);                    Vector2 min = cursorPos - new Vector2(10' 10);                  Vector2 max = cursorPos + new Vector2(10' 10);                    AABB aabb = new AABB(ref min' ref max);                    World.QueryAABB(fixture =>                                      {                                          Vector2 fv = fixture.Body.Position - cursorPos;                                          fv.Normalize();                                          fv *= 40;                                          fixture.Body.ApplyLinearImpulse(ref fv);                                          return true;                                      }' ref aabb);              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,HandleInput,The following statement contains a magic number: if (input.IsNewMouseButtonPress(MouseButtons.RightButton) ||                  input.IsNewButtonPress(Buttons.B))              {                  Vector2 cursorPos = Camera.ConvertScreenToWorld(input.Cursor);                    Vector2 min = cursorPos - new Vector2(10' 10);                  Vector2 max = cursorPos + new Vector2(10' 10);                    AABB aabb = new AABB(ref min' ref max);                    World.QueryAABB(fixture =>                                      {                                          Vector2 fv = fixture.Body.Position - cursorPos;                                          fv.Normalize();                                          fv *= 40;                                          fixture.Body.ApplyLinearImpulse(ref fv);                                          return true;                                      }' ref aabb);              }
Magic Number,FarseerPhysics.Samples.Demos,AdvancedDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\AdvancedDemo5.cs,HandleInput,The following statement contains a magic number: if (input.IsNewMouseButtonPress(MouseButtons.RightButton) ||                  input.IsNewButtonPress(Buttons.B))              {                  Vector2 cursorPos = Camera.ConvertScreenToWorld(input.Cursor);                    Vector2 min = cursorPos - new Vector2(10' 10);                  Vector2 max = cursorPos + new Vector2(10' 10);                    AABB aabb = new AABB(ref min' ref max);                    World.QueryAABB(fixture =>                                      {                                          Vector2 fv = fixture.Body.Position - cursorPos;                                          fv.Normalize();                                          fv *= 40;                                          fixture.Body.ApplyLinearImpulse(ref fv);                                          return true;                                      }' ref aabb);              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The following statement contains a magic number: {                  Vertices terrain = new Vertices();                  terrain.Add(new Vector2(-20f' -5f));                  terrain.Add(new Vector2(-20f' 0f));                  terrain.Add(new Vector2(20f' 0f));                  terrain.Add(new Vector2(25f' -0.25f));                  terrain.Add(new Vector2(30f' -1f));                  terrain.Add(new Vector2(35f' -4f));                  terrain.Add(new Vector2(40f' 0f));                  terrain.Add(new Vector2(45f' 0f));                  terrain.Add(new Vector2(50f' 1f));                  terrain.Add(new Vector2(55f' 2f));                  terrain.Add(new Vector2(60f' 2f));                  terrain.Add(new Vector2(65f' 1.25f));                  terrain.Add(new Vector2(70f' 0f));                  terrain.Add(new Vector2(75f' -0.3f));                  terrain.Add(new Vector2(80f' -1.5f));                  terrain.Add(new Vector2(85f' -3.5f));                  terrain.Add(new Vector2(90f' 0f));                  terrain.Add(new Vector2(95f' 0.5f));                  terrain.Add(new Vector2(100f' 1f));                  terrain.Add(new Vector2(105f' 2f));                  terrain.Add(new Vector2(110f' 2.5f));                  terrain.Add(new Vector2(115f' 1.3f));                  terrain.Add(new Vector2(120f' 0f));                  terrain.Add(new Vector2(160f' 0f));                  terrain.Add(new Vector2(159f' 10f));                  terrain.Add(new Vector2(201f' 10f));                  terrain.Add(new Vector2(200f' 0f));                  terrain.Add(new Vector2(240f' 0f));                  terrain.Add(new Vector2(250f' -5f));                  terrain.Add(new Vector2(250f' 10f));                  terrain.Add(new Vector2(270f' 10f));                  terrain.Add(new Vector2(270f' 0));                  terrain.Add(new Vector2(310f' 0));                  terrain.Add(new Vector2(310f' -5));                    for (int i = 0; i < terrain.Count - 1; ++i)                  {                      FixtureFactory.AttachEdge(terrain[i]' terrain[i + 1]' _ground);                  }                    _ground.Friction = 0.6f;              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The following statement contains a magic number: {                  _board = new Body(World);                  _board.BodyType = BodyType.Dynamic;                  _board.Position = new Vector2(140.0f' -1.0f);                    PolygonShape box = new PolygonShape(PolygonTools.CreateRectangle(10' 0.25f)' 1);                  _teeter =                      new Sprite(ScreenManager.Assets.TextureFromShape(box' MaterialType.Pavement' Color.LightGray' 1.2f));                    _board.CreateFixture(box);                    RevoluteJoint teeterAxis = JointFactory.CreateRevoluteJoint(World' _ground' _board' Vector2.Zero);                  teeterAxis.LowerLimit = -8.0f * Settings.Pi / 180.0f;                  teeterAxis.UpperLimit = 8.0f * Settings.Pi / 180.0f;                  teeterAxis.LimitEnabled = true;                    _board.ApplyAngularImpulse(-100.0f);              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The following statement contains a magic number: {                  _bridgeSegments = new List<Body>();                    const int segmentCount = 20;                  PolygonShape shape = new PolygonShape(PolygonTools.CreateRectangle(1.0f' 0.125f)' 1f);                  _bridge = new Sprite(ScreenManager.Assets.TextureFromShape(shape' MaterialType.Dots' Color.SandyBrown' 1f));                    Body prevBody = _ground;                  for (int i = 0; i < segmentCount; ++i)                  {                      Body body = new Body(World);                      body.BodyType = BodyType.Dynamic;                      body.Position = new Vector2(161f + 2f * i' 0.125f);                      Fixture fix = body.CreateFixture(shape);                      fix.Friction = 0.6f;                      JointFactory.CreateRevoluteJoint(World' prevBody' body' -Vector2.UnitX);                        prevBody = body;                      _bridgeSegments.Add(body);                  }                  JointFactory.CreateRevoluteJoint(World' _ground' prevBody' Vector2.UnitX);              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The following statement contains a magic number: {                  Vertices vertices = new Vertices(8);                  vertices.Add(new Vector2(-2.5f' 0.08f));                  vertices.Add(new Vector2(-2.375f' -0.46f));                  vertices.Add(new Vector2(-0.58f' -0.92f));                  vertices.Add(new Vector2(0.46f' -0.92f));                  vertices.Add(new Vector2(2.5f' -0.17f));                  vertices.Add(new Vector2(2.5f' 0.205f));                  vertices.Add(new Vector2(2.3f' 0.33f));                  vertices.Add(new Vector2(-2.25f' 0.35f));                    PolygonShape chassis = new PolygonShape(vertices' 2);                  CircleShape wheelShape = new CircleShape(0.5f' 0.8f);                    _car = new Body(World);                  _car.BodyType = BodyType.Dynamic;                  _car.Position = new Vector2(0.0f' -1.0f);                  _car.CreateFixture(chassis);                    _wheelBack = new Body(World);                  _wheelBack.BodyType = BodyType.Dynamic;                  _wheelBack.Position = new Vector2(-1.709f' -0.78f);                  _wheelBack.CreateFixture(wheelShape);                  _wheelBack.Friction = 0.9f;                    wheelShape.Density = 1;                  _wheelFront = new Body(World);                  _wheelFront.BodyType = BodyType.Dynamic;                  _wheelFront.Position = new Vector2(1.54f' -0.8f);                  _wheelFront.CreateFixture(wheelShape);                    Vector2 axis = new Vector2(0.0f' -1.2f);                  _springBack = new WheelJoint(_car' _wheelBack' _wheelBack.Position' axis' true);                  _springBack.MotorSpeed = 0.0f;                  _springBack.MaxMotorTorque = 20.0f;                  _springBack.MotorEnabled = true;                  _springBack.Frequency = 4.0f;                  _springBack.DampingRatio = 0.7f;                  World.AddJoint(_springBack);                    _springFront = new WheelJoint(_car' _wheelFront' _wheelFront.Position' axis' true);                  _springFront.MotorSpeed = 0.0f;                  _springFront.MaxMotorTorque = 10.0f;                  _springFront.MotorEnabled = false;                  _springFront.Frequency = 4.0f;                  _springFront.DampingRatio = 0.7f;                  World.AddJoint(_springFront);                    _carBody = new Sprite(ScreenManager.Content.Load<Texture2D>("Samples/car")' AssetCreator.CalculateOrigin(_car) / _scale);                  _wheel = new Sprite(ScreenManager.Content.Load<Texture2D>("Samples/wheel"));              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,LoadContent,The following statement contains a magic number: {                  Vertices vertices = new Vertices(8);                  vertices.Add(new Vector2(-2.5f' 0.08f));                  vertices.Add(new Vector2(-2.375f' -0.46f));                  vertices.Add(new Vector2(-0.58f' -0.92f));                  vertices.Add(new Vector2(0.46f' -0.92f));                  vertices.Add(new Vector2(2.5f' -0.17f));                  vertices.Add(new Vector2(2.5f' 0.205f));                  vertices.Add(new Vector2(2.3f' 0.33f));                  vertices.Add(new Vector2(-2.25f' 0.35f));                    PolygonShape chassis = new PolygonShape(vertices' 2);                  CircleShape wheelShape = new CircleShape(0.5f' 0.8f);                    _car = new Body(World);                  _car.BodyType = BodyType.Dynamic;                  _car.Position = new Vector2(0.0f' -1.0f);                  _car.CreateFixture(chassis);                    _wheelBack = new Body(World);                  _wheelBack.BodyType = BodyType.Dynamic;                  _wheelBack.Position = new Vector2(-1.709f' -0.78f);                  _wheelBack.CreateFixture(wheelShape);                  _wheelBack.Friction = 0.9f;                    wheelShape.Density = 1;                  _wheelFront = new Body(World);                  _wheelFront.BodyType = BodyType.Dynamic;                  _wheelFront.Position = new Vector2(1.54f' -0.8f);                  _wheelFront.CreateFixture(wheelShape);                    Vector2 axis = new Vector2(0.0f' -1.2f);                  _springBack = new WheelJoint(_car' _wheelBack' _wheelBack.Position' axis' true);                  _springBack.MotorSpeed = 0.0f;                  _springBack.MaxMotorTorque = 20.0f;                  _springBack.MotorEnabled = true;                  _springBack.Frequency = 4.0f;                  _springBack.DampingRatio = 0.7f;                  World.AddJoint(_springBack);                    _springFront = new WheelJoint(_car' _wheelFront' _wheelFront.Position' axis' true);                  _springFront.MotorSpeed = 0.0f;                  _springFront.MaxMotorTorque = 10.0f;                  _springFront.MotorEnabled = false;                  _springFront.Frequency = 4.0f;                  _springFront.DampingRatio = 0.7f;                  World.AddJoint(_springFront);                    _carBody = new Sprite(ScreenManager.Content.Load<Texture2D>("Samples/car")' AssetCreator.CalculateOrigin(_car) / _scale);                  _wheel = new Sprite(ScreenManager.Content.Load<Texture2D>("Samples/wheel"));              }
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,HandleInput,The following statement contains a magic number: if (input.VirtualState.ThumbSticks.Left.X > 0.5f)                  _acceleration = Math.Min(_acceleration + (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' 1f);              else if (input.VirtualState.ThumbSticks.Left.X < -0.5f)                  _acceleration = Math.Max(_acceleration - (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' -1f);              else if (input.VirtualState.Buttons.A == ButtonState.Pressed)                  _acceleration = 0f;              else                  _acceleration -= Math.Sign(_acceleration) * (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds);
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,HandleInput,The following statement contains a magic number: if (input.VirtualState.ThumbSticks.Left.X > 0.5f)                  _acceleration = Math.Min(_acceleration + (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' 1f);              else if (input.VirtualState.ThumbSticks.Left.X < -0.5f)                  _acceleration = Math.Max(_acceleration - (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' -1f);              else if (input.VirtualState.Buttons.A == ButtonState.Pressed)                  _acceleration = 0f;              else                  _acceleration -= Math.Sign(_acceleration) * (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds);
Magic Number,FarseerPhysics.Samples.Demos,GameDemo1,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\GameDemo1.cs,HandleInput,The following statement contains a magic number: if (input.VirtualState.ThumbSticks.Left.X > 0.5f)                  _acceleration = Math.Min(_acceleration + (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' 1f);              else if (input.VirtualState.ThumbSticks.Left.X < -0.5f)                  _acceleration = Math.Max(_acceleration - (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds)' -1f);              else if (input.VirtualState.Buttons.A == ButtonState.Pressed)                  _acceleration = 0f;              else                  _acceleration -= Math.Sign(_acceleration) * (float)(2.0 * gameTime.ElapsedGameTime.TotalSeconds);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo2,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo2.cs,LoadContent,The following statement contains a magic number: List<Vertices> vertices = new List<Vertices>(2);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo3.cs,LoadObstacles,The following statement contains a magic number: for (int i = 0; i < 5; ++i)              {                  _obstacles[i] = BodyFactory.CreateRectangle(World' 5f' 1f' 1f);                  _obstacles[i].IsStatic = true;                  _obstacles[i].Restitution = 0.2f;                  _obstacles[i].Friction = 0.2f;              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo3.cs,LoadObstacles,The following statement contains a magic number: _obstacles[2].Position = new Vector2(10f' -3f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo3.cs,LoadObstacles,The following statement contains a magic number: _obstacles[3].Position = new Vector2(-10f' -9f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo3.cs,LoadObstacles,The following statement contains a magic number: _obstacles[4].Position = new Vector2(-17f' 0f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo3,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo3.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; ++i)              {                  ScreenManager.SpriteBatch.Draw(_obstacle.Texture' ConvertUnits.ToDisplayUnits(_obstacles[i].Position)'                                                 null'                                                 Color.White' _obstacles[i].Rotation' _obstacle.Origin' 1f'                                                 SpriteEffects.None' 0f);              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: Vector2 endPosition = new Vector2(20' -11f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: _circles = new Objects(World' ScreenManager' startPosition' endPosition' 15' 0.6f' ObjectType.Circle);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: startPosition = new Vector2(-20' 11f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: endPosition = new Vector2(20' 11f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: _rectangles = new Objects(World' ScreenManager' startPosition' endPosition' 15' 1.2f' ObjectType.Rectangle);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: startPosition = new Vector2(-20' 7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: startPosition = new Vector2(-20' 7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: endPosition = new Vector2(-20' -7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: endPosition = new Vector2(-20' -7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: _gears = new Objects(World' ScreenManager' startPosition' endPosition' 5' 0.6f' ObjectType.Gear);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: startPosition = new Vector2(20' 7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: startPosition = new Vector2(20' 7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: endPosition = new Vector2(20' -7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: endPosition = new Vector2(20' -7);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo5,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo5.cs,LoadContent,The following statement contains a magic number: _stars = new Objects(World' ScreenManager' startPosition' endPosition' 5' 0.6f' ObjectType.Star);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo6,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo6.cs,LoadContent,The following statement contains a magic number: _spiders = new Spider[8];
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,LoadObstacles,The following statement contains a magic number: for (int i = 0; i < 4; i++)              {                  _obstacles[i] = BodyFactory.CreateRectangle(World' 5f' 1.5f' 1f);                  _obstacles[i].IsStatic = true;              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,LoadObstacles,The following statement contains a magic number: _obstacles[2].Position = new Vector2(9f' 7f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,LoadObstacles,The following statement contains a magic number: _obstacles[3].Position = new Vector2(7f' -5f);
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo7,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo7.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 4; ++i)              {                  ScreenManager.SpriteBatch.Draw(_obstacle.Texture' ConvertUnits.ToDisplayUnits(_obstacles[i].Position)' null' Color.White' _obstacles[i].Rotation' _obstacle.Origin' 1f' SpriteEffects.None' 0f);              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo8,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo8.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < 6; ++i)              {                  _circle[i] = BodyFactory.CreateCircle(World' 1.5f' 1f' position);                  _circle[i].BodyType = BodyType.Dynamic;                  _circle[i].Restitution = restitution;                  position.X += 6f;                  restitution += 0.2f;              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo8,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo8.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 6; ++i)              {                  ScreenManager.SpriteBatch.Draw(_circleSprite.Texture' ConvertUnits.ToDisplayUnits(_circle[i].Position)' null' Color.White' _circle[i].Rotation' _circleSprite.Origin' 1f' SpriteEffects.None' 0f);              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo9,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo9.cs,LoadContent,The following statement contains a magic number: for (int i = 0; i < 5; ++i)              {                  _rectangle[i] = BodyFactory.CreateRectangle(World' 1.5f' 1.5f' 1f);                  _rectangle[i].BodyType = BodyType.Dynamic;                  _rectangle[i].Position = new Vector2(-18f + 5.2f * i' -13.0f + 1.282f * i);                  _rectangle[i].Friction = friction[i];              }
Magic Number,FarseerPhysics.Samples.Demos,SimpleDemo9,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\SimpleDemo9.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 5; ++i)              {                  ScreenManager.SpriteBatch.Draw(_rectangleSprite.Texture' ConvertUnits.ToDisplayUnits(_rectangle[i].Position)' null' Color.White' _rectangle[i].Rotation' _rectangleSprite.Origin' 1f' SpriteEffects.None' 0f);              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: Vertices borders = new Vertices(4);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: VertexPositionColorTexture[] vertice = new VertexPositionColorTexture[8];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[2] = new VertexPositionColorTexture(new Vector3(halfWidth' halfHeight' 0f)' Color.LightGray' new Vector2(halfWidth' halfHeight) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[3] = new VertexPositionColorTexture(new Vector3(-halfWidth' halfHeight' 0f)' Color.LightGray' new Vector2(-halfWidth' halfHeight) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[4] = new VertexPositionColorTexture(new Vector3(-halfWidth - 2f' -halfHeight - 2f' 0f)' Color.LightGray' new Vector2(-halfWidth - 2f' -halfHeight - 2f) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[5] = new VertexPositionColorTexture(new Vector3(halfWidth + 2f' -halfHeight - 2f' 0f)' Color.LightGray' new Vector2(halfWidth + 2f' -halfHeight - 2f) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[6] = new VertexPositionColorTexture(new Vector3(halfWidth + 2f' halfHeight + 2f' 0f)' Color.LightGray' new Vector2(halfWidth + 2f' halfHeight + 2f) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: vertice[7] = new VertexPositionColorTexture(new Vector3(-halfWidth - 2f' halfHeight + 2f' 0f)' Color.LightGray' new Vector2(-halfWidth - 2f' halfHeight + 2f) / 5.25f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts = new VertexPositionColorTexture[24];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[1] = vertice[5];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[2] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[2] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[3] = vertice[0];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[4] = vertice[1];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[5] = vertice[5];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[5] = vertice[5];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[6] = vertice[1];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[7] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[7] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[8] = vertice[5];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[8] = vertice[5];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[9] = vertice[1];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[10] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[10] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[11] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[11] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[12] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[12] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[13] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[13] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[14] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[14] = vertice[6];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[15] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[15] = vertice[2];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[16] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[16] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[17] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[17] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[18] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[18] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[19] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[19] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[20] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[20] = vertice[7];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[21] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[21] = vertice[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[22] = vertice[0];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[23] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Border,The following statement contains a magic number: _borderVerts[23] = vertice[4];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Border,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Border.cs,Draw,The following statement contains a magic number: device.DrawUserPrimitives(PrimitiveType.TriangleList' _borderVerts' 0' 8);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following statement contains a magic number: for (int i = 0; i < count; ++i)              {                  switch (type)                  {                      case ObjectType.Circle:                          _bodies.Add(BodyFactory.CreateCircle(world' radius' 1f));                          break;                      case ObjectType.Rectangle:                          _bodies.Add(BodyFactory.CreateRectangle(world' radius' radius' 1f));                          break;                      case ObjectType.Star:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 0f' 1f' 1f));                          break;                      case ObjectType.Gear:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 100f' 1f' 1f));                          break;                  }              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following statement contains a magic number: for (int i = 0; i < count; ++i)              {                  switch (type)                  {                      case ObjectType.Circle:                          _bodies.Add(BodyFactory.CreateCircle(world' radius' 1f));                          break;                      case ObjectType.Rectangle:                          _bodies.Add(BodyFactory.CreateRectangle(world' radius' radius' 1f));                          break;                      case ObjectType.Star:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 0f' 1f' 1f));                          break;                      case ObjectType.Gear:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 100f' 1f' 1f));                          break;                  }              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following statement contains a magic number: switch (type)              {                  case ObjectType.Circle:                      _object = new Sprite(creator.CircleTexture(radius' MaterialType.Dots' Color.DarkRed' 0.8f));                      break;                  case ObjectType.Rectangle:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateRectangle(radius / 2f' radius / 2f)' MaterialType.Dots' Color.Blue' 0.8f));                      break;                  case ObjectType.Star:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 0f' 1f)' MaterialType.Dots' Color.Yellow' 0.8f));                      break;                  case ObjectType.Gear:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 100f' 1f)' MaterialType.Dots' Color.DarkGreen' 0.8f));                      break;              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following statement contains a magic number: switch (type)              {                  case ObjectType.Circle:                      _object = new Sprite(creator.CircleTexture(radius' MaterialType.Dots' Color.DarkRed' 0.8f));                      break;                  case ObjectType.Rectangle:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateRectangle(radius / 2f' radius / 2f)' MaterialType.Dots' Color.Blue' 0.8f));                      break;                  case ObjectType.Star:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 0f' 1f)' MaterialType.Dots' Color.Yellow' 0.8f));                      break;                  case ObjectType.Gear:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 100f' 1f)' MaterialType.Dots' Color.DarkGreen' 0.8f));                      break;              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateBody,The following statement contains a magic number: _body = BodyFactory.CreateRoundedRectangle(world' 2f' 4f' 0.5f' 0.7f' 2' 10f);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateJoints,The following statement contains a magic number: jRightArmBody.Frequency = 25;
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The following statement contains a magic number: _torso = new Sprite(assets.TextureFromVertices(PolygonTools.CreateRoundedRectangle(2f' 4f' 0.5f' 0.7f' 2)' MaterialType.Squares' Color.LightSlateGray' 0.8f));
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The following statement contains a magic number: _upperArm = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(1.9f' 0.45f' 16)' MaterialType.Squares' Color.DimGray' 0.8f));
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The following statement contains a magic number: _lowerArm = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(1.9f' 0.45f' 16)' MaterialType.Squares' Color.DarkSlateGray' 0.8f));
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The following statement contains a magic number: _upperLeg = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(2f' 0.5f' 16)' MaterialType.Squares' Color.DimGray' 0.8f));
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Ragdoll,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Ragdoll.cs,CreateGFX,The following statement contains a magic number: _lowerLeg = new Sprite(assets.TextureFromVertices(PolygonTools.CreateCapsule(2f' 0.5f' 16)' MaterialType.Squares' Color.DarkSlateGray' 0.8f));
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Spider,The following statement contains a magic number: _rightKneeAngleJoint.MaxImpulse = 3;
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,Spider,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Spider.cs,Update,The following statement contains a magic number: if (_s > 4000)              {                  _s = 0;                    _kneeFlexed = !_kneeFlexed;                  _shoulderFlexed = !_shoulderFlexed;                    if (_kneeFlexed)                      _kneeTargetAngle = -1.4f;                  else                      _kneeTargetAngle = -0.4f;                    if (_kneeFlexed)                      _shoulderTargetAngle = -1.2f;                  else                      _shoulderTargetAngle = -0.2f;              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: _leftShoulders = new Body[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: _rightShoulders = new Body[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: _leftLegs = new Body[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: _rightLegs = new Body[3];
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: CreateLeg(world' -1f' wheelAnchor' 2);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,TheoJansenWalker,The following statement contains a magic number: CreateLeg(world' 1f' wheelAnchor' 2);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The following statement contains a magic number: Vertices vertices = new Vertices(3);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The following statement contains a magic number: if (direction < 0f)              {                  vertices.Add(p1);                  vertices.Add(p2);                  vertices.Add(p3);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p5 - p4;                  vertices[2] = p6 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }              else              {                  vertices.Add(p1);                  vertices.Add(p3);                  vertices.Add(p2);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p6 - p4;                  vertices[2] = p5 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The following statement contains a magic number: if (direction < 0f)              {                  vertices.Add(p1);                  vertices.Add(p2);                  vertices.Add(p3);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p5 - p4;                  vertices[2] = p6 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }              else              {                  vertices.Add(p1);                  vertices.Add(p3);                  vertices.Add(p2);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p6 - p4;                  vertices[2] = p5 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The following statement contains a magic number: if (direction < 0f)              {                  vertices.Add(p1);                  vertices.Add(p2);                  vertices.Add(p3);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p5 - p4;                  vertices[2] = p6 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }              else              {                  vertices.Add(p1);                  vertices.Add(p3);                  vertices.Add(p2);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p6 - p4;                  vertices[2] = p5 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLeg,The following statement contains a magic number: if (direction < 0f)              {                  vertices.Add(p1);                  vertices.Add(p2);                  vertices.Add(p3);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p5 - p4;                  vertices[2] = p6 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }              else              {                  vertices.Add(p1);                  vertices.Add(p3);                  vertices.Add(p2);                  shoulderPolygon = new PolygonShape(vertices' 1);                    vertices[0] = Vector2.Zero;                  vertices[1] = p6 - p4;                  vertices[2] = p5 - p4;                  legPolygon = new PolygonShape(vertices' 2);              }
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLegTextures,The following statement contains a magic number: Vertices vertices = new Vertices(3);
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLegTextures,The following statement contains a magic number: vertices[2] = p5;
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLegTextures,The following statement contains a magic number: vertices[2] = p2;
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,CreateLegTextures,The following statement contains a magic number: vertices[2] = p4;
Magic Number,FarseerPhysics.Samples.Demos.Prefabs,TheoJansenWalker,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\TheoJansen.cs,Draw,The following statement contains a magic number: for (int i = 0; i < 3; ++i)              {                  _spriteBatch.Draw(_leftLeg.Texture' ConvertUnits.ToDisplayUnits(_leftLegs[i].Position)' null' Color.White' _leftLegs[i].Rotation' _leftLeg.Origin' 1f' SpriteEffects.None' 0f);                  _spriteBatch.Draw(_leftShoulder.Texture' ConvertUnits.ToDisplayUnits(_leftShoulders[i].Position)' null' Color.White' _leftShoulders[i].Rotation' _leftShoulder.Origin' 1f' SpriteEffects.None' 0f);                  _spriteBatch.Draw(_rightLeg.Texture' ConvertUnits.ToDisplayUnits(_rightLegs[i].Position)' null' Color.White' _rightLegs[i].Rotation' _rightLeg.Origin' 1f' SpriteEffects.None' 0f);                  _spriteBatch.Draw(_rightShoulder.Texture' ConvertUnits.ToDisplayUnits(_rightShoulders[i].Position)' null' Color.White' _rightShoulders[i].Rotation' _rightShoulder.Origin' 1f' SpriteEffects.None' 0f);              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < decomposedVerts.Count; ++i)              {                  verticesFill.Add(new VertexPositionColorTexture[3 * (decomposedVerts[i].Count - 2)]);                  for (int j = 0; j < decomposedVerts[i].Count - 2; ++j)                  {                      // fill vertices                      verticesFill[i][3 * j].Position = new Vector3(decomposedVerts[i][0]' 0f);                      verticesFill[i][3 * j + 1].Position = new Vector3(decomposedVerts[i].NextVertex(j)' 0f);                      verticesFill[i][3 * j + 2].Position = new Vector3(decomposedVerts[i].NextVertex(j + 1)' 0f);                      verticesFill[i][3 * j].TextureCoordinate = decomposedVerts[i][0] * materialScale;                      verticesFill[i][3 * j + 1].TextureCoordinate = decomposedVerts[i].NextVertex(j) * materialScale;                      verticesFill[i][3 * j + 2].TextureCoordinate = decomposedVerts[i].NextVertex(j + 1) * materialScale;                      verticesFill[i][3 * j].Color = verticesFill[i][3 * j + 1].Color = verticesFill[i][3 * j + 2].Color = color;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: VertexPositionColor[] verticesOutline = new VertexPositionColor[2 * verts.Count];
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < verts.Count; ++i)              {                  verticesOutline[2 * i].Position = new Vector3(verts[i]' 0f);                  verticesOutline[2 * i + 1].Position = new Vector3(verts.NextVertex(i)' 0f);                  verticesOutline[2 * i].Color = verticesOutline[2 * i + 1].Color = Color.Black;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < verts.Count; ++i)              {                  verticesOutline[2 * i].Position = new Vector3(verts[i]' 0f);                  verticesOutline[2 * i + 1].Position = new Vector3(verts.NextVertex(i)' 0f);                  verticesOutline[2 * i].Color = verticesOutline[2 * i + 1].Color = Color.Black;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < verts.Count; ++i)              {                  verticesOutline[2 * i].Position = new Vector3(verts[i]' 0f);                  verticesOutline[2 * i + 1].Position = new Vector3(verts.NextVertex(i)' 0f);                  verticesOutline[2 * i].Color = verticesOutline[2 * i + 1].Color = Color.Black;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,TextureFromVertices,The following statement contains a magic number: for (int i = 0; i < verts.Count; ++i)              {                  verticesOutline[2 * i].Position = new Vector3(verts[i]' 0f);                  verticesOutline[2 * i + 1].Position = new Vector3(verts.NextVertex(i)' 0f);                  verticesOutline[2 * i].Color = verticesOutline[2 * i + 1].Color = Color.Black;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: VertexPositionColorTexture[] verticesFill = new VertexPositionColorTexture[3 * (CircleSegments - 2)];
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: VertexPositionColorTexture[] verticesFill = new VertexPositionColorTexture[3 * (CircleSegments - 2)];
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: VertexPositionColor[] verticesOutline = new VertexPositionColor[2 * CircleSegments];
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,EllipseTexture,The following statement contains a magic number: for (int i = 0; i < CircleSegments - 2; ++i)              {                  Vector2 p1 = new Vector2(radiusX * (float)Math.Cos(theta)' radiusY * (float)Math.Sin(theta));                  Vector2 p2 = new Vector2(radiusX * (float)Math.Cos(theta + segmentSize)'                                           radiusY * (float)Math.Sin(theta + segmentSize));                  // fill vertices                  verticesFill[3 * i].Position = new Vector3(start' 0f);                  verticesFill[3 * i + 1].Position = new Vector3(p1' 0f);                  verticesFill[3 * i + 2].Position = new Vector3(p2' 0f);                  verticesFill[3 * i].TextureCoordinate = start * materialScale;                  verticesFill[3 * i + 1].TextureCoordinate = p1 * materialScale;                  verticesFill[3 * i + 2].TextureCoordinate = p2 * materialScale;                  verticesFill[3 * i].Color = verticesFill[3 * i + 1].Color = verticesFill[3 * i + 2].Color = color;                    // outline vertices                  if (i == 0)                  {                      verticesOutline[0].Position = new Vector3(start' 0f);                      verticesOutline[1].Position = new Vector3(p1' 0f);                      verticesOutline[0].Color = verticesOutline[1].Color = Color.Black;                  }                  if (i == CircleSegments - 3)                  {                      verticesOutline[2 * CircleSegments - 2].Position = new Vector3(p2' 0f);                      verticesOutline[2 * CircleSegments - 1].Position = new Vector3(start' 0f);                      verticesOutline[2 * CircleSegments - 2].Color = verticesOutline[2 * CircleSegments - 1].Color = Color.Black;                  }                  verticesOutline[2 * i + 2].Position = new Vector3(p1' 0f);                  verticesOutline[2 * i + 3].Position = new Vector3(p2' 0f);                  verticesOutline[2 * i + 2].Color = verticesOutline[2 * i + 3].Color = Color.Black;                    theta += segmentSize;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The following statement contains a magic number: RenderTarget2D texture = new RenderTarget2D(_device' width + 2' height + 2' false' SurfaceFormat.Color' DepthFormat.None' pp.MultiSampleCount' RenderTargetUsage.DiscardContents);
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The following statement contains a magic number: RenderTarget2D texture = new RenderTarget2D(_device' width + 2' height + 2' false' SurfaceFormat.Color' DepthFormat.None' pp.MultiSampleCount' RenderTargetUsage.DiscardContents);
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The following statement contains a magic number: for (int i = 0; i < verticesFill.Count; ++i)              {                  _device.DrawUserPrimitives(PrimitiveType.TriangleList' verticesFill[i]' 0' verticesFill[i].Length / 3);              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,AssetCreator,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\AssetCreator.cs,RenderTexture,The following statement contains a magic number: _device.DrawUserPrimitives(PrimitiveType.LineList' verticesOutline' 0' verticesOutline.Length / 2);
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,LineBatch,The following statement contains a magic number: _lineVertices = new VertexPositionColor[bufferSize - bufferSize % 2];
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,DrawLineShape,The following statement contains a magic number: if (shape.ShapeType == ShapeType.Edge)              {                  if (_lineVertsCount >= _lineVertices.Length)                      Flush();                    EdgeShape edge = (EdgeShape)shape;                  _lineVertices[_lineVertsCount].Position = new Vector3(edge.Vertex1' 0f);                  _lineVertices[_lineVertsCount + 1].Position = new Vector3(edge.Vertex2' 0f);                  _lineVertices[_lineVertsCount].Color = _lineVertices[_lineVertsCount + 1].Color = color;                  _lineVertsCount += 2;              }              else if (shape.ShapeType == ShapeType.Chain)              {                  ChainShape chain = (ChainShape)shape;                  for (int i = 0; i < chain.Vertices.Count; ++i)                  {                      if (_lineVertsCount >= _lineVertices.Length)                          Flush();                        _lineVertices[_lineVertsCount].Position = new Vector3(chain.Vertices[i]' 0f);                      _lineVertices[_lineVertsCount + 1].Position = new Vector3(chain.Vertices.NextVertex(i)' 0f);                      _lineVertices[_lineVertsCount].Color = _lineVertices[_lineVertsCount + 1].Color = color;                      _lineVertsCount += 2;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,DrawLineShape,The following statement contains a magic number: if (shape.ShapeType == ShapeType.Edge)              {                  if (_lineVertsCount >= _lineVertices.Length)                      Flush();                    EdgeShape edge = (EdgeShape)shape;                  _lineVertices[_lineVertsCount].Position = new Vector3(edge.Vertex1' 0f);                  _lineVertices[_lineVertsCount + 1].Position = new Vector3(edge.Vertex2' 0f);                  _lineVertices[_lineVertsCount].Color = _lineVertices[_lineVertsCount + 1].Color = color;                  _lineVertsCount += 2;              }              else if (shape.ShapeType == ShapeType.Chain)              {                  ChainShape chain = (ChainShape)shape;                  for (int i = 0; i < chain.Vertices.Count; ++i)                  {                      if (_lineVertsCount >= _lineVertices.Length)                          Flush();                        _lineVertices[_lineVertsCount].Position = new Vector3(chain.Vertices[i]' 0f);                      _lineVertices[_lineVertsCount + 1].Position = new Vector3(chain.Vertices.NextVertex(i)' 0f);                      _lineVertices[_lineVertsCount].Color = _lineVertices[_lineVertsCount + 1].Color = color;                      _lineVertsCount += 2;                  }              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,DrawLine,The following statement contains a magic number: _lineVertsCount += 2;
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,Flush,The following statement contains a magic number: if (_lineVertsCount >= 2)              {                  int primitiveCount = _lineVertsCount / 2;                  // submit the draw call to the graphics card                  _device.DrawUserPrimitives(PrimitiveType.LineList' _lineVertices' 0' primitiveCount);                  _lineVertsCount -= primitiveCount * 2;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,Flush,The following statement contains a magic number: if (_lineVertsCount >= 2)              {                  int primitiveCount = _lineVertsCount / 2;                  // submit the draw call to the graphics card                  _device.DrawUserPrimitives(PrimitiveType.LineList' _lineVertices' 0' primitiveCount);                  _lineVertsCount -= primitiveCount * 2;              }
Magic Number,FarseerPhysics.Samples.DrawingSystem,LineBatch,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\DrawingSystem\LineBatch.cs,Flush,The following statement contains a magic number: if (_lineVertsCount >= 2)              {                  int primitiveCount = _lineVertsCount / 2;                  // submit the draw call to the graphics card                  _device.DrawUserPrimitives(PrimitiveType.LineList' _lineVertices' 0' primitiveCount);                  _lineVertsCount -= primitiveCount * 2;              }
Magic Number,FarseerPhysics.Samples,FarseerPhysicsGame,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\FarseerPhysicsGame.cs,FarseerPhysicsGame,The following statement contains a magic number: _graphics.PreferredBackBufferWidth = 1280;
Magic Number,FarseerPhysics.Samples,FarseerPhysicsGame,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\FarseerPhysicsGame.cs,FarseerPhysicsGame,The following statement contains a magic number: _graphics.PreferredBackBufferHeight = 720;
Magic Number,FarseerPhysics.Samples,FarseerPhysicsGame,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\FarseerPhysicsGame.cs,FarseerPhysicsGame,The following statement contains a magic number: frameRateCounter.DrawOrder = 101;
Magic Number,FarseerPhysics.Samples,FarseerPhysicsGame,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\FarseerPhysicsGame.cs,Initialize,The following statement contains a magic number: ScreenManager.AddScreen(new LogoScreen(TimeSpan.FromSeconds(3.0)));
Magic Number,FarseerPhysics.Samples.ScreenSystem,BackgroundScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\BackgroundScreen.cs,BackgroundScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.5);
Magic Number,FarseerPhysics.Samples.ScreenSystem,BackgroundScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\BackgroundScreen.cs,BackgroundScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.5);
Magic Number,FarseerPhysics.Samples.ScreenSystem,Camera2D,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\Camera2D.cs,Update,The following statement contains a magic number: if (distance < 10f)              {                  inertia = (float)Math.Pow(distance / 10.0' 2.0);              }              else              {                  inertia = 1f;              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,Camera2D,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\Camera2D.cs,Update,The following statement contains a magic number: if (distance < 10f)              {                  inertia = (float)Math.Pow(distance / 10.0' 2.0);              }              else              {                  inertia = 1f;              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,Camera2D,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\Camera2D.cs,Update,The following statement contains a magic number: if (Math.Abs(rotDelta) < 5f)              {                  rotInertia = (float)Math.Pow(rotDelta / 5.0' 2.0);              }              else              {                  rotInertia = 1f;              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,Camera2D,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\Camera2D.cs,Update,The following statement contains a magic number: if (Math.Abs(rotDelta) < 5f)              {                  rotInertia = (float)Math.Pow(rotDelta / 5.0' 2.0);              }              else              {                  rotInertia = 1f;              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,FrameRateCounter,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\FramerateCounterComponent.cs,FrameRateCounter,The following statement contains a magic number: _position = new Vector2(30' 25);
Magic Number,FarseerPhysics.Samples.ScreenSystem,FrameRateCounter,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\FramerateCounterComponent.cs,FrameRateCounter,The following statement contains a magic number: _position = new Vector2(30' 25);
Magic Number,FarseerPhysics.Samples.ScreenSystem,LogoScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\LogoScreen.cs,LogoScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(2.0);
Magic Number,FarseerPhysics.Samples.ScreenSystem,LogoScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\LogoScreen.cs,LoadContent,The following statement contains a magic number: int posX = viewport.Bounds.Center.X - rectWidth / 2;
Magic Number,FarseerPhysics.Samples.ScreenSystem,LogoScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\LogoScreen.cs,LoadContent,The following statement contains a magic number: int posY = viewport.Bounds.Center.Y - rectHeight / 2;
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuButton,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuButton.cs,Update,The following statement contains a magic number: float fadeSpeed = (float)gameTime.ElapsedGameTime.TotalSeconds * 4;
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuButton,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuButton.cs,Draw,The following statement contains a magic number: Color color = Color.Lerp(Color.White' new Color(255' 210' 0)' _selectionFade);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuButton,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuButton.cs,Draw,The following statement contains a magic number: Color color = Color.Lerp(Color.White' new Color(255' 210' 0)' _selectionFade);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuEntry,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuEntry.cs,Update,The following statement contains a magic number: if (_type != EntryType.Separator)              {                  float fadeSpeed = (float)gameTime.ElapsedGameTime.TotalSeconds * 4;                  if (isSelected)                      _selectionFade = Math.Min(_selectionFade + fadeSpeed' 1f);                  else                      _selectionFade = Math.Max(_selectionFade - fadeSpeed' 0f);                    _scale = 0.7f + 0.1f * _selectionFade;              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuEntry,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuEntry.cs,Draw,The following statement contains a magic number: Color color = _type == EntryType.Separator ? Color.DarkOrange : Color.Lerp(Color.White' new Color(255' 210' 0)' _selectionFade);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuEntry,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuEntry.cs,Draw,The following statement contains a magic number: Color color = _type == EntryType.Separator ? Color.DarkOrange : Color.Lerp(Color.White' new Color(255' 210' 0)' _selectionFade);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.7);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,MenuScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.7);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: float transitionOffset = (float)Math.Pow(TransitionPosition' 2);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < _menuEntries.Count; ++i)              {                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2f;                  if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 256;                    // set the entry's position                  _menuEntries[i].Position = position;                    if (position.Y < _menuBorderTop)                      _menuEntries[i].Alpha = 1f - Math.Min(_menuBorderTop - position.Y' _menuBorderMargin) / _menuBorderMargin;                  else if (position.Y > _menuBorderBottom)                      _menuEntries[i].Alpha = 1f - Math.Min(position.Y - _menuBorderBottom' _menuBorderMargin) / _menuBorderMargin;                  else                      _menuEntries[i].Alpha = 1f;                    // move down for the next entry the size of this entry                  position.Y += _menuEntries[i].GetHeight();              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,UpdateMenuEntryLocations,The following statement contains a magic number: for (int i = 0; i < _menuEntries.Count; ++i)              {                  position.X = ScreenManager.GraphicsDevice.Viewport.Width / 2f;                  if (ScreenState == ScreenState.TransitionOn)                      position.X -= transitionOffset * 256;                  else                      position.X += transitionOffset * 256;                    // set the entry's position                  _menuEntries[i].Position = position;                    if (position.Y < _menuBorderTop)                      _menuEntries[i].Alpha = 1f - Math.Min(_menuBorderTop - position.Y' _menuBorderMargin) / _menuBorderMargin;                  else if (position.Y > _menuBorderBottom)                      _menuEntries[i].Alpha = 1f - Math.Min(position.Y - _menuBorderBottom' _menuBorderMargin) / _menuBorderMargin;                  else                      _menuEntries[i].Alpha = 1f;                    // move down for the next entry the size of this entry                  position.Y += _menuEntries[i].GetHeight();              }
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,Draw,The following statement contains a magic number: Vector2 transitionOffset = new Vector2(0f' (float)Math.Pow(TransitionPosition' 2) * 100f);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' _menuTitle' _titlePosition - transitionOffset' new Color(255' 210' 0)' 0' _titleOrigin' 1f' SpriteEffects.None' 0);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MenuScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MenuScreen.cs,Draw,The following statement contains a magic number: spriteBatch.DrawString(font' _menuTitle' _titlePosition - transitionOffset' new Color(255' 210' 0)' 0' _titleOrigin' 1f' SpriteEffects.None' 0);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.4);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,MessageBoxScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.4);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The following statement contains a magic number: _textPosition = (viewportSize - textSize) / 2;
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The following statement contains a magic number: const int hPad = 32;
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The following statement contains a magic number: const int vPad = 16;
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The following statement contains a magic number: _backgroundRectangle = new Rectangle((int)_textPosition.X - hPad' (int)_textPosition.Y - vPad' (int)textSize.X + hPad * 2' (int)textSize.Y + vPad * 2);
Magic Number,FarseerPhysics.Samples.ScreenSystem,MessageBoxScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\MessageBoxScreen.cs,LoadContent,The following statement contains a magic number: _backgroundRectangle = new Rectangle((int)_textPosition.X - hPad' (int)_textPosition.Y - vPad' (int)textSize.X + hPad * 2' (int)textSize.Y + vPad * 2);
Magic Number,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,PhysicsGameScreen,The following statement contains a magic number: TransitionOnTime = TimeSpan.FromSeconds(0.75);
Magic Number,FarseerPhysics.Samples.ScreenSystem,PhysicsGameScreen,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\ScreenSystem\PhysicsGameScreen.cs,PhysicsGameScreen,The following statement contains a magic number: TransitionOffTime = TimeSpan.FromSeconds(0.75);
Missing Default,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following switch statement is missing a default case: switch (type)                  {                      case ObjectType.Circle:                          _bodies.Add(BodyFactory.CreateCircle(world' radius' 1f));                          break;                      case ObjectType.Rectangle:                          _bodies.Add(BodyFactory.CreateRectangle(world' radius' radius' 1f));                          break;                      case ObjectType.Star:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 0f' 1f' 1f));                          break;                      case ObjectType.Gear:                          _bodies.Add(BodyFactory.CreateGear(world' radius' 10' 100f' 1f' 1f));                          break;                  }
Missing Default,FarseerPhysics.Samples.Demos.Prefabs,Objects,C:\repos\d-snp_Farseer-Physics\Samples\Samples XNA\Demos\Prefabs\Objects.cs,Objects,The following switch statement is missing a default case: switch (type)              {                  case ObjectType.Circle:                      _object = new Sprite(creator.CircleTexture(radius' MaterialType.Dots' Color.DarkRed' 0.8f));                      break;                  case ObjectType.Rectangle:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateRectangle(radius / 2f' radius / 2f)' MaterialType.Dots' Color.Blue' 0.8f));                      break;                  case ObjectType.Star:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 0f' 1f)' MaterialType.Dots' Color.Yellow' 0.8f));                      break;                  case ObjectType.Gear:                      _object = new Sprite(creator.TextureFromVertices(PolygonTools.CreateGear(radius' 10' 100f' 1f)' MaterialType.Dots' Color.DarkGreen' 0.8f));                      break;              }
