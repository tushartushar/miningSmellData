Implementation smell,Namespace,Class,File,Method,Description
Long Identifier,JWT.Tests.Common,JwtBuilderDecodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderDecodeTests.cs,DecodeToken_WithoutTimeProvider_Should_Throw_Exception,The length of the parameter decodingJwtWithNullDateTimeProvider is 35.
Long Identifier,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_Throw_Exception_On_Malformed_Token_Multiple_Secrets,The length of the parameter decodeInvalidJwtWithMultipleKeys is 32.
Long Identifier,JWT.Tests.Common,JwtSecurityTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtSecurityTests.cs,Decode_Should_Throw_Exception_When_HMA_Algorithm_Is_Used_But_RSA_Was_Expected,The length of the parameter decodeJwtWithHmaWhenRsaIsExpected is 33.
Long Identifier,JWT.Tests.Common,JwtSecurityTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtSecurityTests.cs,Decode_Should_Throw_Exception_When_HMA_Algorithm_Is_Used_But_RSA_Was_Expected_MultipleKeys,The length of the parameter decodeJwtWithRsaWhenHmaIsExpected is 33.
Long Identifier,JWT.Tests.Common,JwtValidatorTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtValidatorTests.cs,Validate_Should_Throw_Exception_When_Argument_Is_Null_Or_Empty,The length of the parameter validateJwtWithNullOrEmptyArgument is 34.
Long Statement,JWT.Tests.Common,JwtBuilderDecodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderDecodeTests.cs,DecodeToken_WithVerifySignature_MultipleSecrets,The length of the statement  "                   .NotBeEmpty("because one of the provided signatures must have been verified successfully and the JWT correctly decoded"); " is 121.
Long Statement,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_Throw_Exception_On_Invalid_Key,The length of the statement  "                                 .Throw<SignatureVerificationException>("because providing the wrong key must raise an error when the signature is verified"); " is 125.
Long Statement,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_Throw_Exception_On_Invalid_Key_Multiple_Secrets,The length of the statement  "                                 .Throw<SignatureVerificationException>("because providing the wrong key must raise an error when the signature is verified"); " is 125.
Magic Number,JWT.Tests.Common,JwtBuilderDecodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderDecodeTests.cs,DecodeToken_ToDictionary,The following statement contains a magic number: payload.Should()                     .HaveCount(2' "because there is two encoded claims that should be resulting in two keys");
Magic Number,JWT.Tests.Common,JwtBuilderDecodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderDecodeTests.cs,DecodeToken_ToDictionary_MultipleSecrets,The following statement contains a magic number: payload.Should()                     .HaveCount(2' "because there is two encoded claims that should be resulting in two keys");
Magic Number,JWT.Tests.Common,JwtBuilderEncodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderEncodeTests.cs,Build_Token,The following statement contains a magic number: tokenBuilt.Split('.').Should()                        .HaveCount(3' "because the built token should have the three standard parts");
Magic Number,JWT.Tests.Common,JwtBuilderEncodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderEncodeTests.cs,Build_WithPayload,The following statement contains a magic number: tokenBuilt.Split('.')                        .Should()                        .HaveCount(3' "because the built token should have the three standard parts");
Magic Number,JWT.Tests.Common,JwtBuilderEncodeTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtBuilderEncodeTests.cs,Build_WithPayloadWithClaims,The following statement contains a magic number: tokenBuilt.Split('.')                        .Should()                        .HaveCount(3' "because the built token should have the three standard parts");
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var post2038 = new DateTime(2038' 1' 19' 3' 14' 8' DateTimeKind.Utc);
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var post2038 = new DateTime(2038' 1' 19' 3' 14' 8' DateTimeKind.Utc);
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var post2038 = new DateTime(2038' 1' 19' 3' 14' 8' DateTimeKind.Utc);
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var post2038 = new DateTime(2038' 1' 19' 3' 14' 8' DateTimeKind.Utc);
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var post2038 = new DateTime(2038' 1' 19' 3' 14' 8' DateTimeKind.Utc);
Magic Number,JWT.Tests.Common,JwtDecoderTests,D:\research\architectureSmells\repos\johnsheehan_jwt\tests\JWT.Tests.Common\JwtDecoderTests.cs,DecodeToObject_Should_DecodeToken_On_Exp_Claim_After_Year2038,The following statement contains a magic number: var exp = (post2038 - new DateTime(1970' 1' 1)).TotalSeconds;
