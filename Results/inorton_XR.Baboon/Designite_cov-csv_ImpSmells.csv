Implementation smell,Namespace,Class,File,Method,Description
Long Method,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,TransformText,The method has 321 lines of code.
Complex Method,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,TransformText,Cyclomatic complexity of the method is 9
Long Statement,covcsv,MainClass,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\Program.cs,Main,The length of the statement  "			string.Join(Environment.NewLine'index.Records.Select ( r => string.Join("'"'r.ClassName'r.Name'r.CallCount'r.Saved'r.Coverage))) + " is 130.
Long Statement,covcsv,ReportIndexBase,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,Warning,The length of the statement  "            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null' -1' -1' null' message); " is 131.
Magic Number,covcsv,MainClass,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\Program.cs,Main,The following statement contains a magic number: args.Length == 2 && File.Exists( args[0] )
Magic Number,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,TransformText,The following statement contains a magic number: pct = (int)(100 * hits/lines );
Magic Number,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,TransformText,The following statement contains a magic number: this.Write(this.ToStringHelper.ToStringWithCulture( (100 - cov) ));
Magic Number,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,GetTypeCoverage,The following statement contains a magic number: return lines == 0 ? 0 : (int)Math.Round((100.0 * hits/lines));
Magic Number,covcsv,ReportIndex,D:\research\architectureSmells\repos\inorton_XR.Baboon\cov-csv\ReportIndex.cs,GetCoverage,The following statement contains a magic number: return (int)Math.Round( 100*rec.Coverage );
