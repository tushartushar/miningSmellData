Implementation smell,Namespace,Class,File,Method,Description
Complex Method,TDD_Katas_project.Common.Utility,SimpleNaturalStringOrder,F:\newReposMay17\garora_TDD-Katas\Src\cs\Common\Utility\SimpleNaturalStringOrder.cs,CompareTo,Cyclomatic complexity of the method is 9
Long Statement,TDD_Katas_project.Common.Utility,SimpleNaturalStringOrder,F:\newReposMay17\garora_TDD-Katas\Src\cs\Common\Utility\SimpleNaturalStringOrder.cs,InChar,The length of the statement  "	return (charType != CharType.Alphanumeric || !char.IsDigit (firstChar)) && (charType != CharType.Numeric || char.IsDigit (firstChar)); " is 134.
Long Statement,TDD_Katas_project.Common.Utility,SimpleNaturalStringOrder,F:\newReposMay17\garora_TDD-Katas\Src\cs\Common\Utility\SimpleNaturalStringOrder.cs,StringChecks,The length of the statement  "	while ((stringPosition < stringToCompare.Length) && (stringBuilder.Length == 0 || InChar (charInString' stringBuilder [0]))) { " is 126.
Long Statement,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,CanThrowArgumentExceptionWhenNumberNotInRule,The length of the statement  "		throw new ArgumentException (string.Format ("entered number is [{0}]' which does not meet rule' entered number should be between 1 to 100."' number)); " is 150.
Long Statement,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,GetNumbersUsingLinq,The length of the statement  "	Enumerable.Range (1' 100).Select (fb => String.Format ("{0}{1}"' fb % 3 == 0 ? "Fizz" : ""' fb % 5 == 0 ? "Buzz" : "")).Select (fb => fb != null ? (String.IsNullOrEmpty (fb) ? fb.ToString (CultureInfo.InvariantCulture) : fb) : null).ToList ().ForEach (x => resultFizzBuzz = x); " is 277.
Long Statement,TDD_Katas_project.FizzBuzzKata,TestFizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\TestFizzBuzz.cs,Setup,The length of the statement  "	_resultFizz = @"1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz 16 17 Fizz 19 Buzz Fizz 22 23 Fizz Buzz 26 Fizz 28 29 FizzBuzz 31 32 Fizz 34 Buzz Fizz 37 38 Fizz Buzz 41 Fizz 43 44 FizzBuzz 46 47 Fizz 49 Buzz Fizz 52 53 Fizz Buzz 56 Fizz 58 59 FizzBuzz 61 62 Fizz 64 Buzz Fizz 67 68 Fizz Buzz 71 Fizz 73 74 FizzBuzz 76 77 Fizz 79 Buzz Fizz 82 83 Fizz Buzz 86 Fizz 88 89 FizzBuzz 91 92 Fizz 94 Buzz Fizz 97 98 Fizz Buzz"; " is 430.
Long Statement,TDD_Katas_project.FizzBuzzKata,TestFizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\TestFizzBuzz.cs,CanThrowArgumentExceptionWhenSuppliedNumberDoesNotMeetRule,The length of the statement  "	Assert.That (exception.Message' Is.EqualTo (string.Format ("entered number is [{0}]' which does not meet rule' entered number should be between 1 to 100."' number))); " is 166.
Long Statement,TDD_Katas_project.FizzBuzzKata,TestFizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\TestFizzBuzz.cs,CanTestSingleNumber,The length of the statement  "	Assert.That (actualresult' Is.EqualTo (expectedresult)' string.Format ("result of entered number [{0}] is [{1}] but it should be [{2}]"' number' actualresult' expectedresult)); " is 176.
Long Statement,TDD_Katas_project.OddEvenKata,TestOddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\TestOddEven.cs,CanPrintOddEvenForSingleNumber,The length of the statement  "	Assert.That (expectedresult' Is.EqualTo (actualresult)' string.Format ("result of entered number [{0}] is [{1}] but it should be [{2}]"' number' actualresult' expectedresult)); " is 176.
Long Statement,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,GetSum,The length of the statement  "	return ContainsAny (numbers' delimiter) ? newnumbers.Split (delimiter.ToCharArray ()).Sum (n => ParseToInt (n)) : ParseToInt (newnumbers); " is 138.
Long Statement,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,GetSpecificNumbers,The length of the statement  "	return numbers.Substring (numbers.IndexOf ("\n"' StringComparison.Ordinal) + 1' numbers.Length - numbers.IndexOf ("\n"' StringComparison.Ordinal) - 1); " is 151.
Long Statement,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,VelidateNumbersArePerRule,The length of the statement  "		throw new ArgumentException (string.Format ("string contains [{0}]' which does not meet rule. entered number should not negative."' number)); " is 141.
Long Statement,TDD_Katas_project.StringCalculator,TestCalculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\TestCalculator.cs,AddThrowArgumentExceptionWhenSuppliedStringDoesNotMeetRule,The length of the statement  "	Assert.That (exception.Message' Is.EqualTo (string.Format ("string contains [{0}]' which does not meet rule. entered number should not negative."' beyondRuleNumber))); " is 167.
Long Statement,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The length of the statement  "	Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum))); " is 129.
Long Statement,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The length of the statement  "	Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount))); " is 134.
Long Statement,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The length of the statement  "	Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount))); " is 134.
Long Statement,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The length of the statement  "	Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average))); " is 131.
Long Statement,TDD_Katas_project.TheNaturalStringSortingKata,NaturalStringSorting,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheNaturalStringSortingKata\NaturalStringSorting.cs,GetSortedList,The length of the statement  "		sorted = strItems.OrderByDescending (str => Regex.Split (str.Replace (" "' "")' "([0-9]+)").Select (convert)' new EnumerableComparer<object> ()).ToList (); " is 155.
Long Statement,TDD_Katas_project.TheNaturalStringSortingKata,NaturalStringSorting,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheNaturalStringSortingKata\NaturalStringSorting.cs,GetSortedList,The length of the statement  "		sorted = strItems.OrderBy (str => Regex.Split (str.Replace (" "' "")' "([0-9]+)").Select (convert)' new EnumerableComparer<object> ()).ToList (); " is 145.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedList,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedList.cs,CheckForValidIndex,The length of the statement  "		throw new ArgumentException (string.Format ("supplied index [{0}] should be non-negative and not greater than [{1}]."' index' _listofuniquestrings.Count - 1)); " is 159.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedList,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedList.cs,CheckForValidIndex,The length of the statement  "		throw new ArgumentException (string.Format ("supplied index [{0}] should not greater than [{1}]."' index' _listofuniquestrings.Count - 1)); " is 139.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedListTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedListTest.cs,CanAddItems,The length of the statement  "	Assert.That (listCount' Is.GreaterThan (0)' string.Format ("List items count should be Greater than {0} but is {1}"' 0' listCount)); " is 132.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedListTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedListTest.cs,CanThrowArgumentExceptionWhenSuppliedIndexIsOutOfScope,The length of the statement  "	Assert.That (exception.Message' Is.EqualTo (string.Format ("supplied index [{0}] should not greater than [{1}]."' index' _recentlyUsedList.Count - 1))); " is 152.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedListTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedListTest.cs,CanThrowArgumentExceptionWhenSuppliedIndexContainNegativeValue,The length of the statement  "	Assert.That (exception.Message' Is.EqualTo (string.Format ("supplied index [{0}] should be non-negative and not greater than [{1}]."' index' _recentlyUsedList.Count - 1))); " is 172.
Long Statement,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedListTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedListTest.cs,CanThrowArgumentExceptionWhenSuppliedItemIsNullorEmpty,The length of the statement  "		Assert.That (exception.Message' Is.EqualTo (string.Format ("List items should not be Empty or Null. But it was [{0}]"' item1))); " is 128.
Long Statement,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanWrapMultipleLine,The length of the statement  "	Assert.That (expectedword' Is.EqualTo (actualresult)' string.Format ("result of entered word [{0}] is [{1}] but it should be [{2}]"' inputword' actualresult' expectedword)); " is 173.
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: for (var frame = 0; frame < 10; frame++) {  	if (IsStrike (frameIndex)) {  		score += StrikeBonus (frameIndex);  		frameIndex++;  	} else if (IsSpare (frameIndex)) {  		score += 10 + SpareBonus (frameIndex);  		frameIndex += 2;  	} else {  		score += SumOfBallsInFrames (frameIndex);  		frameIndex += 2;  	}  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: for (var frame = 0; frame < 10; frame++) {  	if (IsStrike (frameIndex)) {  		score += StrikeBonus (frameIndex);  		frameIndex++;  	} else if (IsSpare (frameIndex)) {  		score += 10 + SpareBonus (frameIndex);  		frameIndex += 2;  	} else {  		score += SumOfBallsInFrames (frameIndex);  		frameIndex += 2;  	}  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: for (var frame = 0; frame < 10; frame++) {  	if (IsStrike (frameIndex)) {  		score += StrikeBonus (frameIndex);  		frameIndex++;  	} else if (IsSpare (frameIndex)) {  		score += 10 + SpareBonus (frameIndex);  		frameIndex += 2;  	} else {  		score += SumOfBallsInFrames (frameIndex);  		frameIndex += 2;  	}  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: for (var frame = 0; frame < 10; frame++) {  	if (IsStrike (frameIndex)) {  		score += StrikeBonus (frameIndex);  		frameIndex++;  	} else if (IsSpare (frameIndex)) {  		score += 10 + SpareBonus (frameIndex);  		frameIndex += 2;  	} else {  		score += SumOfBallsInFrames (frameIndex);  		frameIndex += 2;  	}  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsStrike (frameIndex)) {  	score += StrikeBonus (frameIndex);  	frameIndex++;  } else if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsStrike (frameIndex)) {  	score += StrikeBonus (frameIndex);  	frameIndex++;  } else if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsStrike (frameIndex)) {  	score += StrikeBonus (frameIndex);  	frameIndex++;  } else if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: if (IsSpare (frameIndex)) {  	score += 10 + SpareBonus (frameIndex);  	frameIndex += 2;  } else {  	score += SumOfBallsInFrames (frameIndex);  	frameIndex += 2;  }  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: score += 10 + SpareBonus (frameIndex);  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: frameIndex += 2;  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,Score,The following statement contains a magic number: frameIndex += 2;  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,IsStrike,The following statement contains a magic number: return rolls [frameIndex] == 10;  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,SpareBonus,The following statement contains a magic number: return rolls [frameIndex + 2];  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,IsSpare,The following statement contains a magic number: return rolls [frameIndex] + rolls [frameIndex + 1] == 10;  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,StrikeBonus,The following statement contains a magic number: return 10 + rolls [frameIndex + 1] + rolls [frameIndex + 2];  
Magic Number,TDD_Katas_project.BowlingGame,Game,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\Game.cs,StrikeBonus,The following statement contains a magic number: return 10 + rolls [frameIndex + 1] + rolls [frameIndex + 2];  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Setup,The following statement contains a magic number: _frames = 10;  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Spare_Scores,The following statement contains a magic number: _game.Roll (3);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Spare_Scores,The following statement contains a magic number: FrameHits (0' 17);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Spare_Scores,The following statement contains a magic number: Console.WriteLine ("Roll Total - {0}' Result - {1}"' 16' _game.Score ());  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Spare_Scores,The following statement contains a magic number: Assert.That (16' Is.EqualTo (_game.Score ()));  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Strike_Scores,The following statement contains a magic number: _game.Roll (3);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Strike_Scores,The following statement contains a magic number: _game.Roll (4);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Strike_Scores,The following statement contains a magic number: FrameHits (0' 16);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Strike_Scores,The following statement contains a magic number: Console.WriteLine ("Roll Total - {0}' Result - {1}"' 24' _game.Score ());  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Strike_Scores,The following statement contains a magic number: Assert.That (24' Is.EqualTo (_game.Score ()));  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Full_Game_Scores,The following statement contains a magic number: FrameHits (10' 12);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Full_Game_Scores,The following statement contains a magic number: FrameHits (10' 12);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Full_Game_Scores,The following statement contains a magic number: Console.WriteLine ("Roll Total - {0}' Result - {1}"' 300' _game.Score ());  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,Can_Get_Calculate_Full_Game_Scores,The following statement contains a magic number: Assert.That (300' Is.EqualTo (_game.Score ()));  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,RollStrike,The following statement contains a magic number: _game.Roll (10);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,RollSpare,The following statement contains a magic number: _game.Roll (5);  
Magic Number,TDD_Katas_project.BowlingGame,TestGame,F:\newReposMay17\garora_TDD-Katas\Src\cs\BowlingGame\TestGame.cs,RollSpare,The following statement contains a magic number: _game.Roll (5);  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,CanThrowArgumentExceptionWhenNumberNotInRule,The following statement contains a magic number: if (number > 100 || number < 1)  	throw new ArgumentException (string.Format ("entered number is [{0}]' which does not meet rule' entered number should be between 1 to 100."' number));  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,GetNumbers,The following statement contains a magic number: for (var i = 1; i <= 100; i++) {  	var printNumber = string.Empty;  	if (IsFizz (i))  		printNumber += "Fizz";  	if (IsBuzz (i))  		printNumber += "Buzz";  	if (IsNumber (printNumber))  		printNumber = (i).ToString (CultureInfo.InvariantCulture);  	resultFizzBuzz += " " + printNumber;  }  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,GetNumbersUsingLinq,The following statement contains a magic number: Enumerable.Range (1' 100).Select (fb => String.Format ("{0}{1}"' fb % 3 == 0 ? "Fizz" : ""' fb % 5 == 0 ? "Buzz" : "")).Select (fb => fb != null ? (String.IsNullOrEmpty (fb) ? fb.ToString (CultureInfo.InvariantCulture) : fb) : null).ToList ().ForEach (x => resultFizzBuzz = x);  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,GetNumbersUsingLinq,The following statement contains a magic number: Enumerable.Range (1' 100).Select (fb => String.Format ("{0}{1}"' fb % 3 == 0 ? "Fizz" : ""' fb % 5 == 0 ? "Buzz" : "")).Select (fb => fb != null ? (String.IsNullOrEmpty (fb) ? fb.ToString (CultureInfo.InvariantCulture) : fb) : null).ToList ().ForEach (x => resultFizzBuzz = x);  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,GetNumbersUsingLinq,The following statement contains a magic number: Enumerable.Range (1' 100).Select (fb => String.Format ("{0}{1}"' fb % 3 == 0 ? "Fizz" : ""' fb % 5 == 0 ? "Buzz" : "")).Select (fb => fb != null ? (String.IsNullOrEmpty (fb) ? fb.ToString (CultureInfo.InvariantCulture) : fb) : null).ToList ().ForEach (x => resultFizzBuzz = x);  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,IsBuzz,The following statement contains a magic number: return i % 5 == 0;  
Magic Number,TDD_Katas_project.FizzBuzzKata,FizzBuzz,F:\newReposMay17\garora_TDD-Katas\Src\cs\FizzBuzzKata\FizzBuzz.cs,IsFizz,The following statement contains a magic number: return i % 3 == 0;  
Magic Number,TDD_Katas_project.LCDDigits,TestLCDDigits,F:\newReposMay17\garora_TDD-Katas\Src\cs\LCDDigits\TestLCDDigits.cs,digit_the_number_10,The following statement contains a magic number: Assert.That (LCDDigits.getDigits (10)' Is.EqualTo (expect));  
Magic Number,TDD_Katas_project.LCDDigits,TestLCDDigits,F:\newReposMay17\garora_TDD-Katas\Src\cs\LCDDigits\TestLCDDigits.cs,digit_the_number_100,The following statement contains a magic number: Assert.That (LCDDigits.getDigits (100)' Is.EqualTo (expect));  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_topleftcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_topleftcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_bottomrightcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_bottomrightcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_bottomleftcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_bottomleftcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_toprightcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_one_of_mine_toprightcorner,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_two_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_two_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_three_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_three_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_four_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_two_by_two_field_and_four_of_mine,The following statement contains a magic number: fields.create (2' 2);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_three_by_three_field_and_two_of_mine,The following statement contains a magic number: fields.create (3' 3);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_three_by_three_field_and_two_of_mine,The following statement contains a magic number: fields.create (3' 3);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_three_by_three_field_and_three_of_mine,The following statement contains a magic number: fields.create (3' 3);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_three_by_three_field_and_three_of_mine,The following statement contains a magic number: fields.create (3' 3);  
Magic Number,TDD_Katas_project.MineFields,TestMineFields,F:\newReposMay17\garora_TDD-Katas\Src\cs\MineFields\TestMineFields.cs,build_three_by_three_field_and_three_of_mine,The following statement contains a magic number: fields.mine (1' 2);  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsEvenNumber,The following statement contains a magic number: return number >= 2 && number % 2 == 0;  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsEvenNumber,The following statement contains a magic number: return number >= 2 && number % 2 == 0;  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsOddNumber,The following statement contains a magic number: return (number % 2 != 0);  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsPrimeNumber,The following statement contains a magic number: if (number < 2)  	return false;  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsPrimeNumber,The following statement contains a magic number: while (divisble * divisble <= number) {  	if (number % divisble == 0)  		return false;  	divisble += 2;  }  
Magic Number,TDD_Katas_project.OddEvenKata,OddEven,F:\newReposMay17\garora_TDD-Katas\Src\cs\OddEvenKata\OddEven.cs,IsPrimeNumber,The following statement contains a magic number: divisble += 2;  
Magic Number,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,GetSpecificDelimiter,The following statement contains a magic number: return numbers.Substring (2' numbers.IndexOf ("\n"' StringComparison.Ordinal) - 2);  
Magic Number,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,GetSpecificDelimiter,The following statement contains a magic number: return numbers.Substring (2' numbers.IndexOf ("\n"' StringComparison.Ordinal) - 2);  
Magic Number,TDD_Katas_project.StringCalculator,Calculator,F:\newReposMay17\garora_TDD-Katas\Src\cs\StringCalculator\Calculator.cs,IsGreaterThanThousand,The following statement contains a magic number: return nn > 1000;  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMinumValue,The following statement contains a magic number: Assert.That ("-2"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Minimum)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanFindMaximumValue,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetElementCount,The following statement contains a magic number: Assert.That ("10"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.ElementCount)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheCalcStatsKata,CalcStatTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStatTest.cs,CanGetAverageOfSeries,The following statement contains a magic number: Assert.That ("13.1"' Is.EqualTo (CalcStat.NumberStats (List (1' -1' 2' -2' 6' 9' 15' -2' 92' 11)' CalcStat.CalcStatKeys.Average)));  
Magic Number,TDD_Katas_project.TheLeapYearKata,LeapYear,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheLeapYearKata\LeapYear.cs,IsLeapYear,The following statement contains a magic number: return (year % 4 == 0 || year % 400 == 0);  
Magic Number,TDD_Katas_project.TheLeapYearKata,LeapYear,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheLeapYearKata\LeapYear.cs,IsLeapYear,The following statement contains a magic number: return (year % 4 == 0 || year % 400 == 0);  
Magic Number,TDD_Katas_project.TheLeapYearKata,LeapYearTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheLeapYearKata\LeapYearTest.cs,CanTestForLeapYear,The following statement contains a magic number: Assert.That (true' Is.EqualTo (LeapYear.IsLeapYear (1996)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactor,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactor.cs,Generate,The following statement contains a magic number: for (var candidate = 2; number > 1; candidate++)  	for (; number % candidate == 0; number /= candidate)  		primes.Add (candidate);  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Testwo,The following statement contains a magic number: Assert.That (List (2)' Is.EqualTo (PrimeFactor.Generate (2)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Testwo,The following statement contains a magic number: Assert.That (List (2)' Is.EqualTo (PrimeFactor.Generate (2)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Testhree,The following statement contains a magic number: Assert.That (List (3)' Is.EqualTo (PrimeFactor.Generate (3)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Testhree,The following statement contains a magic number: Assert.That (List (3)' Is.EqualTo (PrimeFactor.Generate (3)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Tesfour,The following statement contains a magic number: Assert.That (List (2' 2)' Is.EqualTo (PrimeFactor.Generate (4)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Tesfour,The following statement contains a magic number: Assert.That (List (2' 2)' Is.EqualTo (PrimeFactor.Generate (4)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,Tesfour,The following statement contains a magic number: Assert.That (List (2' 2)' Is.EqualTo (PrimeFactor.Generate (4)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestSix,The following statement contains a magic number: Assert.That (List (2' 3)' Is.EqualTo (PrimeFactor.Generate (6)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestSix,The following statement contains a magic number: Assert.That (List (2' 3)' Is.EqualTo (PrimeFactor.Generate (6)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestSix,The following statement contains a magic number: Assert.That (List (2' 3)' Is.EqualTo (PrimeFactor.Generate (6)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestEight,The following statement contains a magic number: Assert.That (List (2' 2' 2)' Is.EqualTo (PrimeFactor.Generate (8)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestEight,The following statement contains a magic number: Assert.That (List (2' 2' 2)' Is.EqualTo (PrimeFactor.Generate (8)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestEight,The following statement contains a magic number: Assert.That (List (2' 2' 2)' Is.EqualTo (PrimeFactor.Generate (8)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestEight,The following statement contains a magic number: Assert.That (List (2' 2' 2)' Is.EqualTo (PrimeFactor.Generate (8)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestNine,The following statement contains a magic number: Assert.That (List (3' 3)' Is.EqualTo (PrimeFactor.Generate (9)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestNine,The following statement contains a magic number: Assert.That (List (3' 3)' Is.EqualTo (PrimeFactor.Generate (9)));  
Magic Number,TDD_Katas_project.ThePrimeFactorKata,PrimeFactorTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\ThePrimeFactorKata\PrimeFactorTest.cs,TestNine,The following statement contains a magic number: Assert.That (List (3' 3)' Is.EqualTo (PrimeFactor.Generate (9)));  
Magic Number,TDD_Katas_project.TheRecentlyUsedList_kata,RecentlyUsedListTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheRecentlyUsedList kata\RecentlyUsedListTest.cs,Setup,The following statement contains a magic number: _size = 10;  
Magic Number,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanWrapSingleLine,The following statement contains a magic number: Assert.That ("Let's\nGo"' Is.EqualTo (WordWrap.Wrap ("Let's  Go"' 5)));  
Magic Number,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanTestForNullWord,The following statement contains a magic number: Assert.That (""' Is.EqualTo (WordWrap.Wrap (null' 5)));  
Magic Number,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanTestForNullOrWhiteSpacesWord,The following statement contains a magic number: Assert.That (""' Is.EqualTo (WordWrap.Wrap (null' 5)));  
Magic Number,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanTestForNullOrWhiteSpacesWord,The following statement contains a magic number: Assert.That (""' Is.EqualTo (WordWrap.Wrap (" "' 5)));  
Magic Number,TDD_Katas_project.TheWordWrapKata,WordWrapTest,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheWordWrapKata\WordWrapTest.cs,CanTestNewLineCharacter,The following statement contains a magic number: Assert.That ("\nLet's\nGo\noutside."' Is.EqualTo (WordWrap.Wrap ("\nLet's Go\noutside."' 5)));  
Missing Default,TDD_Katas_project.TheCalcStatsKata,CalcStat,F:\newReposMay17\garora_TDD-Katas\Src\cs\TheCalcStatsKata\CalcStat.cs,NumberStats,The following switch statement is missing a default case: switch (keys) {  case CalcStatKeys.Minimum:  	return GetMinimumValue (numbers);  case CalcStatKeys.Maximum:  	return GetMaximumValue (numbers);  case CalcStatKeys.ElementCount:  	return GetElementCount (numbers);  case CalcStatKeys.Average:  	return GetSeriesAverage (numbers);  }  
