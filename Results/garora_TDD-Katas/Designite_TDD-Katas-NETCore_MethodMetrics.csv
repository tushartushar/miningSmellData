Method,LOC,CC,PC
Game:Roll,3,1,1
Game:Score,21,3,0
Game:IsStrike,0,1,1
Game:SumOfBallsInFrames,0,1,1
Game:SpareBonus,0,1,1
Game:IsSpare,0,1,1
Game:StrikeBonus,0,1,1
TestGame:Setup,4,1,0
TestGame:TearDown,4,1,0
TestGame:RollStrike,3,1,0
TestGame:FrameHits,4,2,2
TestGame:RollSpare,4,1,0
TestGame:Can_Get_Calculate_Full_Game_Scores,5,1,0
TestGame:Can_Get_Calculate_Scores,4,1,0
TestGame:Can_Get_Calculate_Single_Scores,5,1,0
TestGame:Can_Get_Calculate_Spare_Scores,7,1,0
TestGame:Can_Get_Calculate_Strike_Scores,8,1,0
EnumerableComparer<T>:EnumerableComparer,3,1,0
EnumerableComparer<T>:EnumerableComparer,3,1,1
EnumerableComparer<T>:Compare,16,1,2
SimpleNaturalStringOrder:ToString,1,1,0
SimpleNaturalStringOrder:Equals,5,2,1
SimpleNaturalStringOrder:GetHashCode,3,1,0
SimpleNaturalStringOrder:Dispose,4,1,0
SimpleNaturalStringOrder:Dispose,6,2,1
SimpleNaturalStringOrder:CompareTo,31,9,1
SimpleNaturalStringOrder:InChar,5,2,2
SimpleNaturalStringOrder:StringChecks,9,3,4
FizzBuzz:PrintFizzBuzz,5,1,0
FizzBuzz:PrintFizzBuzz,9,3,1
FizzBuzz:GetFizzBuzzResult,5,2,1
FizzBuzz:GetBuzzResult,5,2,1
FizzBuzz:GetFizzResult,5,2,1
FizzBuzz:CanThrowArgumentExceptionWhenNumberNotInRule,7,2,1
FizzBuzz:GetNumbers,12,5,1
FizzBuzz:GetNumbersUsingLinq,9,1,1
FizzBuzz:IsNumber,0,1,1
FizzBuzz:IsBuzz,0,1,1
FizzBuzz:IsFizz,0,1,1
TestFizzBuzz:Setup,4,1,0
TestFizzBuzz:TearDown,3,1,0
TestFizzBuzz:CanTestFizz,4,1,0
TestFizzBuzz:CanTestSingleNumber,6,1,2
TestFizzBuzz:CanThrowArgumentExceptionWhenSuppliedNumberDoesNotMeetRule,7,1,1
LCDDigits:GetDigits,13,3,1
LCDDigits:ConvertCharArrayToInteger,0,1,2
LCDDigits:GetDigitLine,0,1,2
LCDDigits:ConvertIntegerToArray,0,1,1
TestLCDDigits:Digit_the_number_0,6,1,0
TestLCDDigits:Digit_the_number_1,6,1,0
TestLCDDigits:Digit_the_number_10,6,1,0
TestLCDDigits:Digit_the_number_100,6,1,0
MineFields:Create,0,1,2
MineFields:GetHint,0,1,2
MineFields:Mine,4,1,2
MineFields:LayMine,0,1,2
MineFields:UpdateHint,10,1,2
MineFields:UpdateHintAtBottomLeftCorner,7,2,2
MineFields:UpdateHintAtTopRightCorner,7,2,2
MineFields:UpdateHintAtTopLeftCorner,7,2,2
MineFields:UpdateHintAtBottomRightCorner,5,2,2
MineFields:UpdateHintAtTop,6,2,2
MineFields:UpdateHintAtBottom,6,2,2
MineFields:UpdateHintAtLeft,6,2,2
MineFields:UpdateHintAtRight,6,2,2
MineFields:IsNotMine,0,1,2
MineFields:CheckMaxWidth,0,1,1
MineFields:CheckMinWidth,0,1,1
MineFields:CheckMaxHeight,0,1,1
MineFields:CheckMinHeight,0,1,1
TestMineFields:Build_field_size_of_one_by_one_and_one_mine,6,1,0
TestMineFields:Build_field_size_of_one_by_one_and_zero_mine,5,1,0
TestMineFields:Build_three_by_three_field_and_three_of_mine,8,1,3
TestMineFields:Build_three_by_three_field_and_two_of_mine,7,1,3
TestMineFields:Build_two_by_two_field_and_four_of_mine,9,1,3
TestMineFields:Build_two_by_two_field_and_one_of_mine_bottomleftcorner,6,1,3
TestMineFields:Build_two_by_two_field_and_one_of_mine_bottomrightcorner,6,1,3
TestMineFields:Build_two_by_two_field_and_one_of_mine_topleftcorner,6,1,3
TestMineFields:Build_two_by_two_field_and_one_of_mine_toprightcorner,6,1,3
TestMineFields:Build_two_by_two_field_and_three_of_mine,8,1,3
TestMineFields:Build_two_by_two_field_and_two_of_mine,7,1,3
OddEven:PrintOddEven,0,1,2
OddEven:PrintSingleOddEven,0,1,1
OddEven:CheckSingleNumberOddEvenPrimeResult,5,1,1
OddEven:GetOddEvenWithinRange,6,2,2
OddEven:CheckSingleNumberOddEvenPrimeResult,11,2,2
OddEven:IsEvenNumber,0,1,1
OddEven:IsOddNumber,0,1,1
OddEven:IsPrimeNumber,11,5,1
TestOddEven:CanPrintOddEven,4,1,2
TestOddEven:CanPrintOddEvenForSingleNumber,6,1,2
Calculator:Add,0,1,1
Calculator:GetSum,12,2,1
Calculator:HasSpecificDelimiter,0,1,1
Calculator:GetPossibleDelimiter,0,1,1
Calculator:GetSpecificDelimiter,0,1,1
Calculator:GetSpecificNumbers,0,1,1
Calculator:ParseToInt,7,1,1
Calculator:IsGreaterThanThousand,0,1,1
Calculator:ContainsAny,0,1,2
Calculator:ValidateNumbersAsPerRule,5,2,1
TestCalculator:AddReturnNumberWhenSuppliedSingleNumberInString,4,1,2
TestCalculator:AddReturnSumByIgnoringMoreThanThousandWhenSuppliedMultipleNumbersInString,4,1,2
TestCalculator:AddReturnSumWhenSuppliedMultipleNumbersInString,4,1,2
TestCalculator:AddReturnZeroWhenSuppliedEmptyOrNullString,4,1,1
TestCalculator:AddReturSumWhenSuppliedNumbersInStringWithNewLineAsDelimiter,4,1,2
TestCalculator:AddThrowArgumentExceptionWhenSuppliedStringDoesNotMeetRule,7,1,2
TestCalculator:AddWhenGivenDefinedDelimiterUsesThatDelimiter,4,1,2
StringSumKata:Sum,5,1,2
StringSumKata:GetZeroWhenNullOrEmpty,0,1,1
StringSumKata:Add,0,1,2
TestStringSumKata:AddReturnSum,4,1,3
CalcStat:NumberStats,14,2,2
CalcStat:GetMinimumValue,3,1,1
CalcStat:GetMaximumValue,3,1,1
CalcStat:GetElementCount,3,1,1
CalcStat:GetSeriesAverage,0,1,1
CalcStatTest:List,0,1,1
CalcStatTest:CanFindMaximumValue,5,1,0
CalcStatTest:CanFindMinumValue,5,1,0
CalcStatTest:CanGetAverageOfSeries,5,1,0
CalcStatTest:CanGetElementCount,5,1,0
TestDiversion:Setup,3,1,0
TestDiversion:TearDown,3,1,0
TestGameOfLife:Setup,3,1,0
TestGameOfLife:TearDown,3,1,0
TestHarryPoter:Setup,3,1,0
TestHarryPoter:TearDown,3,1,0
LeapYear:IsLeapYear,0,1,1
LeapYearTest:CanTestForLeapYear,3,1,0
LeapYearTest:CanTestForLeapYears,3,1,2
NaturalStringSorting:GetSortedList,17,2,3
NaturalStringSorting:SortString,0,1,1
NaturalStringSorting:SortString,14,1,2
NaturalStringSortingTest:Setup,4,1,0
NaturalStringSortingTest:TearDown,4,1,0
NaturalStringSortingTest:ToList,3,1,1
NaturalStringSortingTest:CanSortStringDefaultOrder,5,1,0
NaturalStringSortingTest:CanSortStringDesOrder,5,1,0
PrimeFactor:Generate,7,3,1
PrimeFactorTest:List,0,1,1
PrimeFactorTest:Tesfour,3,1,0
PrimeFactorTest:TestEight,3,1,0
PrimeFactorTest:Testhree,3,1,0
PrimeFactorTest:TestNine,3,1,0
PrimeFactorTest:Testone,3,1,0
PrimeFactorTest:TestSix,3,1,0
PrimeFactorTest:Testwo,3,1,0
RecentlyUsedList<T>:RecentlyUsedList,4,1,0
RecentlyUsedList<T>:RecentlyUsedList,4,1,1
RecentlyUsedList<T>:RecentlyUsedList,4,1,1
RecentlyUsedList<T>:RecentlyUsedList,5,1,2
RecentlyUsedList<T>:GetEnumerator,0,1,0
RecentlyUsedList<T>:GetEnumerator,0,1,0
RecentlyUsedList<T>:Add,8,2,1
RecentlyUsedList<T>:GetListItem,4,1,1
RecentlyUsedList<T>:ToList,0,1,0
RecentlyUsedList<T>:SetDefaultListSize,5,1,0
RecentlyUsedList<T>:CheckForValidIndex,9,3,1
RecentlyUsedList<T>:AvoidDuplicateInsertion,5,2,1
RecentlyUsedList<T>:TrimListToTheSizeDefined,5,3,0
RecentlyUsedListTest:Setup,4,1,0
RecentlyUsedListTest:TearDown,4,1,0
RecentlyUsedListTest:ToList,0,1,1
RecentlyUsedListTest:CanAddItems,6,1,0
RecentlyUsedListTest:CanAddItemsInLifoOrder,10,1,0
RecentlyUsedListTest:CanAddUniqueItems,11,1,0
RecentlyUsedListTest:CanAvoidInsertionOfItemsAreBeyondListSize,13,1,0
RecentlyUsedListTest:CanDefineListSize,4,1,0
RecentlyUsedListTest:CanTestDefaultListSize,5,1,0
RecentlyUsedListTest:CanTestItemByIndex,10,1,0
RecentlyUsedListTest:CanThrowArgumentExceptionWhenSuppliedIndexContainNegativeValue,12,1,0
RecentlyUsedListTest:CanThrowArgumentExceptionWhenSuppliedIndexIsOutOfScope,12,1,0
RecentlyUsedListTest:CanThrowArgumentExceptionWhenSuppliedItemIsNullorEmpty,10,2,0
WordWrap:Wrap,17,7,2
WordWrap:GetWrappedwordWithoutBlankSpacesAtStartOfNewLine,19,6,1
WordWrap:RemoveWhiteSpacesFromWrappedWord,0,1,3
WordWrap:IsContainNewLine,0,1,1
WordWrap:IsContainNullEmptyOrWhiteSpaces,0,1,1
WordWrap:IsWhiteSpaceOrNewLine,0,1,1
WordWrapTest:CanWrapSingleLine,3,1,0
WordWrapTest:CanTestForNullWord,3,1,0
WordWrapTest:CanTestForNullOrWhiteSpacesWord,4,1,0
WordWrapTest:CanTestNewLineCharacter,4,1,0
WordWrapTest:CanWrapMultipleLine,8,1,0
