Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,Cyclomatic complexity of the method is 9
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: using (StreamReader sr = File.OpenText (fileName)) {  	string ln = sr.ReadLine ();  	if (ln.StartsWith (lang.Comment + " example:")) {  		Console.WriteLine ("{0}"' fileName);  		string[] path = sr.ReadLine ().Split (new char[] {  			' '  		});  		sw.WriteLine ("<{0} name=\"{1}\">"' path [1]' path [2]);  		sw.WriteLine ("<example>");  		ln = sr.ReadLine ();  		if (ln.StartsWith (lang.Comment + " comment:")) {  			for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  				ln = ln.Substring (3);  				if (ln.Length > 0 && ln [0] == ' ')  					ln = ln.Substring (1);  				sw.WriteLine (ln);  			}  		}  		ln += "\n" + sr.ReadToEnd ();  		ln.Trim ();  		while (ln.Length > 0 && (ln [ln.Length - 1] == '\r' || ln [ln.Length - 1] == '\n'))  			ln = ln.Substring (0' ln.Length - 1).TrimEnd ();  		ln = ln.Replace ("<"' "&lt;").Replace (">"' "&gt;");  		sw.WriteLine ("<code lang=\"{0}\">"' lang.Name);  		sw.WriteLine (ln);  		sw.WriteLine ("</code>");  		sw.WriteLine ("</example>");  		sw.WriteLine ("</{0}>"' path [1]);  		sw.WriteLine ();  	}  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: using (StreamReader sr = File.OpenText (fileName)) {  	string ln = sr.ReadLine ();  	if (ln.StartsWith (lang.Comment + " example:")) {  		Console.WriteLine ("{0}"' fileName);  		string[] path = sr.ReadLine ().Split (new char[] {  			' '  		});  		sw.WriteLine ("<{0} name=\"{1}\">"' path [1]' path [2]);  		sw.WriteLine ("<example>");  		ln = sr.ReadLine ();  		if (ln.StartsWith (lang.Comment + " comment:")) {  			for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  				ln = ln.Substring (3);  				if (ln.Length > 0 && ln [0] == ' ')  					ln = ln.Substring (1);  				sw.WriteLine (ln);  			}  		}  		ln += "\n" + sr.ReadToEnd ();  		ln.Trim ();  		while (ln.Length > 0 && (ln [ln.Length - 1] == '\r' || ln [ln.Length - 1] == '\n'))  			ln = ln.Substring (0' ln.Length - 1).TrimEnd ();  		ln = ln.Replace ("<"' "&lt;").Replace (">"' "&gt;");  		sw.WriteLine ("<code lang=\"{0}\">"' lang.Name);  		sw.WriteLine (ln);  		sw.WriteLine ("</code>");  		sw.WriteLine ("</example>");  		sw.WriteLine ("</{0}>"' path [1]);  		sw.WriteLine ();  	}  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: if (ln.StartsWith (lang.Comment + " example:")) {  	Console.WriteLine ("{0}"' fileName);  	string[] path = sr.ReadLine ().Split (new char[] {  		' '  	});  	sw.WriteLine ("<{0} name=\"{1}\">"' path [1]' path [2]);  	sw.WriteLine ("<example>");  	ln = sr.ReadLine ();  	if (ln.StartsWith (lang.Comment + " comment:")) {  		for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  			ln = ln.Substring (3);  			if (ln.Length > 0 && ln [0] == ' ')  				ln = ln.Substring (1);  			sw.WriteLine (ln);  		}  	}  	ln += "\n" + sr.ReadToEnd ();  	ln.Trim ();  	while (ln.Length > 0 && (ln [ln.Length - 1] == '\r' || ln [ln.Length - 1] == '\n'))  		ln = ln.Substring (0' ln.Length - 1).TrimEnd ();  	ln = ln.Replace ("<"' "&lt;").Replace (">"' "&gt;");  	sw.WriteLine ("<code lang=\"{0}\">"' lang.Name);  	sw.WriteLine (ln);  	sw.WriteLine ("</code>");  	sw.WriteLine ("</example>");  	sw.WriteLine ("</{0}>"' path [1]);  	sw.WriteLine ();  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: if (ln.StartsWith (lang.Comment + " example:")) {  	Console.WriteLine ("{0}"' fileName);  	string[] path = sr.ReadLine ().Split (new char[] {  		' '  	});  	sw.WriteLine ("<{0} name=\"{1}\">"' path [1]' path [2]);  	sw.WriteLine ("<example>");  	ln = sr.ReadLine ();  	if (ln.StartsWith (lang.Comment + " comment:")) {  		for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  			ln = ln.Substring (3);  			if (ln.Length > 0 && ln [0] == ' ')  				ln = ln.Substring (1);  			sw.WriteLine (ln);  		}  	}  	ln += "\n" + sr.ReadToEnd ();  	ln.Trim ();  	while (ln.Length > 0 && (ln [ln.Length - 1] == '\r' || ln [ln.Length - 1] == '\n'))  		ln = ln.Substring (0' ln.Length - 1).TrimEnd ();  	ln = ln.Replace ("<"' "&lt;").Replace (">"' "&gt;");  	sw.WriteLine ("<code lang=\"{0}\">"' lang.Name);  	sw.WriteLine (ln);  	sw.WriteLine ("</code>");  	sw.WriteLine ("</example>");  	sw.WriteLine ("</{0}>"' path [1]);  	sw.WriteLine ();  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: sw.WriteLine ("<{0} name=\"{1}\">"' path [1]' path [2]);  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: if (ln.StartsWith (lang.Comment + " comment:")) {  	for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  		ln = ln.Substring (3);  		if (ln.Length > 0 && ln [0] == ' ')  			ln = ln.Substring (1);  		sw.WriteLine (ln);  	}  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: for (ln = sr.ReadLine (); ln.StartsWith (lang.Comment); ln = sr.ReadLine ()) {  	ln = ln.Substring (3);  	if (ln.Length > 0 && ln [0] == ' ')  		ln = ln.Substring (1);  	sw.WriteLine (ln);  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,ProcessFile,The following statement contains a magic number: ln = ln.Substring (3);  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: foreach (string arg in args) {  	if (arg.ToLower ().StartsWith ("/path:"))  		path = arg.Substring (6);  	if (arg.ToLower ().StartsWith ("/xml:"))  		xml = arg.Substring (5);  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: foreach (string arg in args) {  	if (arg.ToLower ().StartsWith ("/path:"))  		path = arg.Substring (6);  	if (arg.ToLower ().StartsWith ("/xml:"))  		xml = arg.Substring (5);  }  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: if (arg.ToLower ().StartsWith ("/path:"))  	path = arg.Substring (6);  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: path = arg.Substring (6);  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: if (arg.ToLower ().StartsWith ("/xml:"))  	xml = arg.Substring (5);  
Magic Number,ExampleGenerator,Generator,F:\newReposMay17\igor-tkachev_bltoolkit\Tools\ExampleGenerator\Generator.cs,Main,The following statement contains a magic number: xml = arg.Substring (5);  
