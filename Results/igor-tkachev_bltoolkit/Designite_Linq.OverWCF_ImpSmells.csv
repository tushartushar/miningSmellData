Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var database     = tbl.Database     == null ? null : sp.Convert(tbl.Database'     ConvertType.NameToDatabase).  ToString(); " is 123.
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var owner        = tbl.Owner        == null ? null : sp.Convert(tbl.Owner'        ConvertType.NameToOwner).     ToString(); " is 123.
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var physicalName = tbl.PhysicalName == null ? null : sp.Convert(tbl.PhysicalName' ConvertType.NameToQueryTable).ToString(); " is 123.
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var database     = tbl.Database     == null ? null : sp.Convert(tbl.Database'     ConvertType.NameToDatabase).  ToString(); " is 123.
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var owner        = tbl.Owner        == null ? null : sp.Convert(tbl.Owner'        ConvertType.NameToOwner).     ToString(); " is 123.
Long Statement,Linq.OverWCF,FreeTextTableExpressionAttribute,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\DataModel.generated.cs,SetTable,The length of the statement  "					var physicalName = tbl.PhysicalName == null ? null : sp.Convert(tbl.PhysicalName' ConvertType.NameToQueryTable).ToString(); " is 123.
Magic Number,Linq.OverWCF,Program,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\Program.cs,Main,The following statement contains a magic number: using (var host = new ServiceHost(new LinqService("Sql2008")' new Uri("net.tcp://localhost:1234")))  			{  				host.Description.Behaviors.Add(new ServiceMetadataBehavior());  				host.Description.Behaviors.Find<ServiceDebugBehavior>().IncludeExceptionDetailInFaults = true;  				host.AddServiceEndpoint(typeof(IMetadataExchange)' MetadataExchangeBindings.CreateMexTcpBinding()' "mex");  				host.AddServiceEndpoint(  					typeof(ILinqService)'  					new NetTcpBinding(SecurityMode.None)  					{  						MaxReceivedMessageSize = 10000000'  						MaxBufferPoolSize      = 10000000'  						MaxBufferSize          = 10000000'  						CloseTimeout           = new TimeSpan(00' 01' 00)'  						OpenTimeout            = new TimeSpan(00' 01' 00)'  						ReceiveTimeout         = new TimeSpan(00' 10' 00)'  						SendTimeout            = new TimeSpan(00' 10' 00)'  					}'  					"LinqOverWCF");    				host.Open();    				var client = new DataModel();    				var q =  					from p in client.Person  					select new  					{  						p.PersonID'  						p.FirstName'  						p.MiddleName'  						p.LastName'  						p.Gender  					};    				foreach (var p in q)  					Console.WriteLine(p);    				Console.ReadLine();    				host.Close();  			}
Magic Number,Linq.OverWCF,Program,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\Program.cs,Main,The following statement contains a magic number: using (var host = new ServiceHost(new LinqService("Sql2008")' new Uri("net.tcp://localhost:1234")))  			{  				host.Description.Behaviors.Add(new ServiceMetadataBehavior());  				host.Description.Behaviors.Find<ServiceDebugBehavior>().IncludeExceptionDetailInFaults = true;  				host.AddServiceEndpoint(typeof(IMetadataExchange)' MetadataExchangeBindings.CreateMexTcpBinding()' "mex");  				host.AddServiceEndpoint(  					typeof(ILinqService)'  					new NetTcpBinding(SecurityMode.None)  					{  						MaxReceivedMessageSize = 10000000'  						MaxBufferPoolSize      = 10000000'  						MaxBufferSize          = 10000000'  						CloseTimeout           = new TimeSpan(00' 01' 00)'  						OpenTimeout            = new TimeSpan(00' 01' 00)'  						ReceiveTimeout         = new TimeSpan(00' 10' 00)'  						SendTimeout            = new TimeSpan(00' 10' 00)'  					}'  					"LinqOverWCF");    				host.Open();    				var client = new DataModel();    				var q =  					from p in client.Person  					select new  					{  						p.PersonID'  						p.FirstName'  						p.MiddleName'  						p.LastName'  						p.Gender  					};    				foreach (var p in q)  					Console.WriteLine(p);    				Console.ReadLine();    				host.Close();  			}
Magic Number,Linq.OverWCF,Program,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\Program.cs,Main,The following statement contains a magic number: using (var host = new ServiceHost(new LinqService("Sql2008")' new Uri("net.tcp://localhost:1234")))  			{  				host.Description.Behaviors.Add(new ServiceMetadataBehavior());  				host.Description.Behaviors.Find<ServiceDebugBehavior>().IncludeExceptionDetailInFaults = true;  				host.AddServiceEndpoint(typeof(IMetadataExchange)' MetadataExchangeBindings.CreateMexTcpBinding()' "mex");  				host.AddServiceEndpoint(  					typeof(ILinqService)'  					new NetTcpBinding(SecurityMode.None)  					{  						MaxReceivedMessageSize = 10000000'  						MaxBufferPoolSize      = 10000000'  						MaxBufferSize          = 10000000'  						CloseTimeout           = new TimeSpan(00' 01' 00)'  						OpenTimeout            = new TimeSpan(00' 01' 00)'  						ReceiveTimeout         = new TimeSpan(00' 10' 00)'  						SendTimeout            = new TimeSpan(00' 10' 00)'  					}'  					"LinqOverWCF");    				host.Open();    				var client = new DataModel();    				var q =  					from p in client.Person  					select new  					{  						p.PersonID'  						p.FirstName'  						p.MiddleName'  						p.LastName'  						p.Gender  					};    				foreach (var p in q)  					Console.WriteLine(p);    				Console.ReadLine();    				host.Close();  			}
Magic Number,Linq.OverWCF,Program,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\Program.cs,Main,The following statement contains a magic number: using (var host = new ServiceHost(new LinqService("Sql2008")' new Uri("net.tcp://localhost:1234")))  			{  				host.Description.Behaviors.Add(new ServiceMetadataBehavior());  				host.Description.Behaviors.Find<ServiceDebugBehavior>().IncludeExceptionDetailInFaults = true;  				host.AddServiceEndpoint(typeof(IMetadataExchange)' MetadataExchangeBindings.CreateMexTcpBinding()' "mex");  				host.AddServiceEndpoint(  					typeof(ILinqService)'  					new NetTcpBinding(SecurityMode.None)  					{  						MaxReceivedMessageSize = 10000000'  						MaxBufferPoolSize      = 10000000'  						MaxBufferSize          = 10000000'  						CloseTimeout           = new TimeSpan(00' 01' 00)'  						OpenTimeout            = new TimeSpan(00' 01' 00)'  						ReceiveTimeout         = new TimeSpan(00' 10' 00)'  						SendTimeout            = new TimeSpan(00' 10' 00)'  					}'  					"LinqOverWCF");    				host.Open();    				var client = new DataModel();    				var q =  					from p in client.Person  					select new  					{  						p.PersonID'  						p.FirstName'  						p.MiddleName'  						p.LastName'  						p.Gender  					};    				foreach (var p in q)  					Console.WriteLine(p);    				Console.ReadLine();    				host.Close();  			}
Magic Number,Linq.OverWCF,Program,C:\repos\igor-tkachev_bltoolkit\Demo\Linq\OverWCF\Program.cs,Main,The following statement contains a magic number: using (var host = new ServiceHost(new LinqService("Sql2008")' new Uri("net.tcp://localhost:1234")))  			{  				host.Description.Behaviors.Add(new ServiceMetadataBehavior());  				host.Description.Behaviors.Find<ServiceDebugBehavior>().IncludeExceptionDetailInFaults = true;  				host.AddServiceEndpoint(typeof(IMetadataExchange)' MetadataExchangeBindings.CreateMexTcpBinding()' "mex");  				host.AddServiceEndpoint(  					typeof(ILinqService)'  					new NetTcpBinding(SecurityMode.None)  					{  						MaxReceivedMessageSize = 10000000'  						MaxBufferPoolSize      = 10000000'  						MaxBufferSize          = 10000000'  						CloseTimeout           = new TimeSpan(00' 01' 00)'  						OpenTimeout            = new TimeSpan(00' 01' 00)'  						ReceiveTimeout         = new TimeSpan(00' 10' 00)'  						SendTimeout            = new TimeSpan(00' 10' 00)'  					}'  					"LinqOverWCF");    				host.Open();    				var client = new DataModel();    				var q =  					from p in client.Person  					select new  					{  						p.PersonID'  						p.FirstName'  						p.MiddleName'  						p.LastName'  						p.Gender  					};    				foreach (var p in q)  					Console.WriteLine(p);    				Console.ReadLine();    				host.Close();  			}
