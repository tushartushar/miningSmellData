Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,Cyclomatic complexity of the method is 12
Complex Method,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,Cyclomatic complexity of the method is 10
Empty Catch Block,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,The method has an empty catch block.
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,InitParameter,The following statement contains a magic number: parameter.Size   = 36;
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,The following statement contains a magic number: p.Size   = 36;
Magic Number,BLToolkit.Data.DataProvider,DataReaderEx,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,GetValue,The following statement contains a magic number: dt.Year == 1900 && dt.Month == 1 && dt.Day == 1
Magic Number,BLToolkit.Data.DataProvider,DataReaderEx,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,GetDateTime,The following statement contains a magic number: dt.Year == 1900 && dt.Month == 1 && dt.Day == 1
Missing Default,BLToolkit.Data.DataProvider,SybaseDataProvider,D:\research\architectureSmells\repos\igor-tkachev_bltoolkit\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,The following switch statement is missing a default case: switch (convertType)  			{  				case ConvertType.ExceptionToErrorNumber:  					if (value is AseException)  					{  						var ex = (AseException)value;    						foreach (AseError error in ex.Errors)  							if (error.IsError)  								return error.MessageNumber;    						foreach (AseError error in ex.Errors)  							if (error.MessageNumber != 0)  								return error.MessageNumber;    						return 0;  					}    					break;    				case ConvertType.ExceptionToErrorMessage:  					if (value is AseException)  					{  						try  						{  							var ex = (AseException)value;  							var sb = new StringBuilder();    							foreach (AseError error in ex.Errors)  								if (error.IsError)  									sb.AppendFormat("{0} Ln: {1}{2}"'  										error.Message.TrimEnd('\n'' '\r')' error.LineNum' Environment.NewLine);    							foreach (AseError error in ex.Errors)  								if (!error.IsError)  									sb.AppendFormat("* {0}{1}"' error.Message' Environment.NewLine);    							return sb.Length == 0 ? ex.Message : sb.ToString();  						}  						catch  						{  						}  					}    					break;  			}
