Implementation smell,Namespace,Class,File,Method,Description
Complex Method,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,Cyclomatic complexity of the method is 19
Complex Method,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,Cyclomatic complexity of the method is 11
Long Statement,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,GetDataReader,The length of the statement  "	return dataReader is AseDataReader ? new DataReaderEx ((AseDataReader)dataReader) : base.GetDataReader (schema' dataReader); " is 124.
Empty Catch Block,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,The method has an empty catch block.
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,InitParameter,The following statement contains a magic number: if (parameter.Value is Guid) {  	parameter.Value = parameter.Value.ToString ();  	parameter.DbType = DbType.StringFixedLength;  	parameter.Size = 36;  	return true;  }  
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,InitParameter,The following statement contains a magic number: parameter.Size = 36;  
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,The following statement contains a magic number: if (commandParameters != null)  	for (var i = 0; i < commandParameters.Length; i++) {  		var p = commandParameters [i];  		if (p.Value is Guid) {  			p.Value = p.Value.ToString ();  			p.DbType = DbType.StringFixedLength;  			p.Size = 36;  		}  		if (commandType == CommandType.Text) {  			if (commandText.IndexOf (p.ParameterName) < 0) {  				if (list == null) {  					list = new List<IDbDataParameter> (commandParameters.Length);  					for (var j = 0; j < i; j++)  						list.Add (commandParameters [j]);  				}  			} else {  				if (list != null)  					list.Add (p);  			}  		}  	}  
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,The following statement contains a magic number: for (var i = 0; i < commandParameters.Length; i++) {  	var p = commandParameters [i];  	if (p.Value is Guid) {  		p.Value = p.Value.ToString ();  		p.DbType = DbType.StringFixedLength;  		p.Size = 36;  	}  	if (commandType == CommandType.Text) {  		if (commandText.IndexOf (p.ParameterName) < 0) {  			if (list == null) {  				list = new List<IDbDataParameter> (commandParameters.Length);  				for (var j = 0; j < i; j++)  					list.Add (commandParameters [j]);  			}  		} else {  			if (list != null)  				list.Add (p);  		}  	}  }  
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,The following statement contains a magic number: if (p.Value is Guid) {  	p.Value = p.Value.ToString ();  	p.DbType = DbType.StringFixedLength;  	p.Size = 36;  }  
Magic Number,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,PrepareCommand,The following statement contains a magic number: p.Size = 36;  
Missing Default,BLToolkit.Data.DataProvider,SybaseDataProvider,F:\newReposMay17\igor-tkachev_bltoolkit\DataProviders\Sybase\..\..\Source\Data\DataProvider\SybaseDataProvider.cs,Convert,The following switch statement is missing a default case: switch (convertType) {  case ConvertType.ExceptionToErrorNumber:  	if (value is AseException) {  		var ex = (AseException)value;  		foreach (AseError error in ex.Errors)  			if (error.IsError)  				return error.MessageNumber;  		foreach (AseError error in ex.Errors)  			if (error.MessageNumber != 0)  				return error.MessageNumber;  		return 0;  	}  	break;  case ConvertType.ExceptionToErrorMessage:  	if (value is AseException) {  		try {  			var ex = (AseException)value;  			var sb = new StringBuilder ();  			foreach (AseError error in ex.Errors)  				if (error.IsError)  					sb.AppendFormat ("{0} Ln: {1}{2}"' error.Message.TrimEnd ('\n'' '\r')' error.LineNum' Environment.NewLine);  			foreach (AseError error in ex.Errors)  				if (!error.IsError)  					sb.AppendFormat ("* {0}{1}"' error.Message' Environment.NewLine);  			return sb.Length == 0 ? ex.Message : sb.ToString ();  		} catch {  		}  	}  	break;  }  
