Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,AddColour,The method has 6 parameters. Parameters: liElement' defaultNamespace' xNamespace' doc' swatchName' mode
Long Identifier,mdresgen,IconDataFactorySyntaxRewriter,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconDataFactorySyntaxRewriter.cs,VisitInitializerExpression,The length of the parameter complexElementInitializerExpression is 35.
Long Identifier,mdresgen,IconDataFactorySyntaxRewriter,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconDataFactorySyntaxRewriter.cs,GetInitializerItems,The length of the parameter initializerExpressionSyntaxList is 31.
Long Identifier,mdresgen,IconThing,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconThing.cs,UpdateEnum,The length of the parameter emptyEnumDeclarationSyntaxNode is 30.
Long Identifier,mdresgen,IconThing,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconThing.cs,UpdateEnum,The length of the parameter generatedEnumDeclarationSyntax is 30.
Long Identifier,mdresgen,IconThing,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconThing.cs,UpdateEnum,The length of the parameter generatedNamespaceDeclarationSyntaxNode is 39.
Long Identifier,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,,The length of the parameter RecommendedPrimaryTemplateLocation is 34.
Long Identifier,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,,The length of the parameter RecommendedAccentTemplateLocation is 33.
Long Statement,mdresgen,IconDataFactorySyntaxRewriter,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconDataFactorySyntaxRewriter.cs,VisitInitializerExpression,The length of the statement  "            var complexElementInitializerExpression = SyntaxFactory.InitializerExpression(SyntaxKind.ComplexElementInitializerExpression' initialiserExpressions); " is 150.
Long Statement,mdresgen,IconDataFactorySyntaxRewriter,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconDataFactorySyntaxRewriter.cs,GetInitializerItems,The length of the statement  "                var separatedSyntaxList = SyntaxFactory.SeparatedList<ExpressionSyntax>(new ExpressionSyntax[] { memberAccessExpressionSyntax' literalExpressionSyntax }); " is 154.
Long Statement,mdresgen,IconDataFactorySyntaxRewriter,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconDataFactorySyntaxRewriter.cs,GetInitializerItems,The length of the statement  "                var initializerExpressionSyntax = SyntaxFactory.InitializerExpression(SyntaxKind.ComplexElementInitializerExpression' separatedSyntaxList); " is 139.
Long Statement,mdresgen,IconThing,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconThing.cs,UpdateEnum,The length of the statement  "            var emptyEnumDeclarationSyntaxNode = enumDeclarationSyntaxNode.RemoveNodes(enumDeclarationSyntaxNode.ChildNodes().OfType<EnumMemberDeclarationSyntax>()' SyntaxRemoveOptions.KeepDirectives); " is 189.
Long Statement,mdresgen,IconThing,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\IconThing.cs,UpdateEnum,The length of the statement  "            var generatedNamespaceDeclarationSyntaxNode = namespaceDeclarationNode.ReplaceNode(enumDeclarationSyntaxNode' generatedEnumDeclarationSyntax); " is 142.
Long Statement,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,AddColour,The length of the statement  "            foregroundColourElement.Add(new XAttribute(xNamespace + "Key"' string.Format("{0}{1}{2}Foreground"' swatchName' prefix' name))); " is 128.
Magic Number,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,GenerateXaml,The following statement contains a magic number: foreach (var color in xDocument.Root.Elements("section"))              {                  bool primaryEmpty;                  bool accentEmpty;                    var primary = ToResourceDictionary(color' out primaryEmpty' named' ColorMode.PrimaryOnly);                  var accent = ToResourceDictionary(color' out accentEmpty' named' ColorMode.AccentOnly);                    var longcolor = primary.Item1;                  var shortcolor = longcolor.Replace(" "' "");                    if (string.Compare(shortcolor' "black"' StringComparison.InvariantCultureIgnoreCase) == 0) continue;                    Console.WriteLine("{0} \t Primary: {1} \t Accent: {2}"' longcolor.PadRight(15' ' ')' !primaryEmpty' !accentEmpty);                    if (!primaryEmpty)                  {                      primary.Item2.Save(                          string.Format(                              named ? XamlPrimaryNamedFileFormat : XamlPrimaryFileFormat'                              shortcolor                              ));                        File.WriteAllText(                          string.Format(RecommendedPrimaryFileFormat' shortcolor)'                          recommendedPrimary.Replace("$COLOR"' shortcolor).Replace("$LONG_COLOR"' longcolor)                          );                  }                    if (!accentEmpty)                  {                      accent.Item2.Save(                          string.Format(                              named ? XamlAccentNamedFileFormat : XamlAccentFileFormat'                              shortcolor                              ));                        File.WriteAllText(                          string.Format(RecommendedAccentFileFormat' shortcolor)'                          recommendedAccent.Replace("$COLOR"' shortcolor).Replace("$LONG_COLOR"' longcolor)                          );                  }              }
Magic Number,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,CreateJsonColourPair,The following statement contains a magic number: var foregroundOpacity = Math.Round((double)foregroundColour.A / (255.0)' 2);
Magic Number,mdresgen,Program,C:\repos\ButchersBoy_MaterialDesignInXamlToolkit\mdresgen\Program.cs,CreateJsonColourPair,The following statement contains a magic number: var foregroundOpacity = Math.Round((double)foregroundColour.A / (255.0)' 2);
