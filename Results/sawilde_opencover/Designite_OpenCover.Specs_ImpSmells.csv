Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,BuildTargets,The method has 6 parameters. Parameters: folder' ext' dir' xml' targetFolder' targetOutput
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,FeatureSetup,The length of the statement  "            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "DotNetCore"' "\tIn order to cut down on the number of .net core related suppport issues\r\n\tAs a p" + " is 228.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationUsingOldstyle,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get coverage of a .net core application using oldstyle"' ((string[])(null))); " is 159.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationUsingOldstyle,The length of the statement  " testRunner.Given("I can find the OpenCover application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 120.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationUsingOldstyle,The length of the statement  " testRunner.And("I can find the target .net core application \'OpenCover.Simple.Target.Core\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 156.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationUsingOldstyle,The length of the statement  " testRunner.When("I execute OpenCover against the target application using the switch \'-oldstyle\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 163.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationUsingOldstyle,The length of the statement  " testRunner.Then("I should have a results.xml file with a coverage greater than or equal to \'100\'%"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 164.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplication,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get coverage of a .net core application"' ((string[])(null))); " is 144.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplication,The length of the statement  " testRunner.Given("I can find the OpenCover application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 120.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplication,The length of the statement  " testRunner.And("I can find the target .net core application \'OpenCover.Simple.Target.Core\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 156.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplication,The length of the statement  " testRunner.When("I execute OpenCover against the target application using the switch \'\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 154.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplication,The length of the statement  " testRunner.Then("I should have a results.xml file with a coverage greater than or equal to \'100\'%"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 164.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypePortable,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get coverage of a .net core application with debugType = portable"' ((string[])(null))); " is 170.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypePortable,The length of the statement  " testRunner.Given("I can find the OpenCover application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 120.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypePortable,The length of the statement  " testRunner.When("I execute OpenCover against the target application using the switch \'\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 154.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypePortable,The length of the statement  " testRunner.Then("I should have a results.xml file with a coverage greater than or equal to \'100\'%"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 164.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypeEmbedded,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get coverage of a .net core application with debugType = embedded"' ((string[])(null))); " is 170.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypeEmbedded,The length of the statement  " testRunner.Given("I can find the OpenCover application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 120.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypeEmbedded,The length of the statement  " testRunner.When("I execute OpenCover against the target application using the switch \'\'"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 154.
Long Statement,OpenCover.Specs,DotNetCoreFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\DotNetCore.feature.cs,GetCoverageOfA_NetCoreApplicationWithDebugTypeEmbedded,The length of the statement  " testRunner.Then("I should have a results.xml file with a coverage greater than or equal to \'100\'%"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 164.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,FeatureSetup,The length of the statement  "            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US")' "Packaging"' "\tIn order to avoid deployment issues\r\n\tAs a software packager\r\n\tI want to be sure" + " is 230.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run OpenCover after installing from zip file"' new string[] { " is 143.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  " testRunner.Given("I have a valid zip package in the output folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 131.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  " testRunner.And("I unzip that package into a deployment folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 125.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  " testRunner.When("I execute the deployed OpenCover against the x86 target application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 149.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  " testRunner.And("I execute the deployed OpenCover against the x64 target application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 147.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromZipFile,The length of the statement  " testRunner.Then("the coverage results should be the same"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 121.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromANugetPackage,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run OpenCover after installing from a nuget package"' new string[] { " is 150.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromANugetPackage,The length of the statement  " testRunner.Given("I have a valid nugetpackage in the output folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 132.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromANugetPackage,The length of the statement  " testRunner.And("I unpack that package into a deployment folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 126.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromANugetPackage,The length of the statement  " testRunner.Then("the coverage results should be the same"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 121.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  "            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Run OpenCover after installing from an installer"' new string[] { " is 147.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  " testRunner.Given("I have a valid installer in the output folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Given "); " is 129.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  " testRunner.And("I install that package into a deployment folder"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 127.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  " testRunner.When("I execute the deployed OpenCover against the x86 target application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "When "); " is 149.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  " testRunner.And("I execute the deployed OpenCover against the x64 target application"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "And "); " is 147.
Long Statement,OpenCover.Specs,PackagingFeature,C:\repos\sawilde_opencover\main\OpenCover.Specs\Packaging.feature.cs,RunOpenCoverAfterInstallingFromAnInstaller,The length of the statement  " testRunner.Then("the coverage results should be the same"' ((string)(null))' ((TechTalk.SpecFlow.Table)(null))' "Then "); " is 121.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheOpenCoverApplication,The length of the statement  "            var targetFolder = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' @"..\..\..\bin\Debug")); " is 146.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheOpenCoverApplication,The length of the statement  "            var targetFolder = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' @"..\..\..\bin\Release")); " is 148.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCoreApplication,The length of the statement  "            var targetPath = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' $@"..\..\..\{application}\bin\Debug\netcoreapp1.1")); " is 173.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCoreApplication,The length of the statement  "            var targetPath = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' $@"..\..\..\{application}\bin\Release\netcoreapp1.1")); " is 175.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCoreApplication,The length of the statement  "            var targetApp = Directory.EnumerateFiles(targetPath' $"{application}.dll"' SearchOption.AllDirectories).FirstOrDefault(); " is 121.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCorePortableApplication,The length of the statement  "            var targetPath = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' $@"..\..\..\{application}\bin\Debug\netcoreapp1.1")); " is 173.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCorePortableApplication,The length of the statement  "            var targetPath = Path.GetFullPath(Path.Combine(Path.GetDirectoryName(typeof(DotNetCoreSteps).Assembly.Location) ?? "."' $@"..\..\..\{application}\bin\Release\netcoreapp1.1")); " is 175.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,GivenICanFindTheTarget_NetCorePortableApplication,The length of the statement  "            var targetApp = Directory.EnumerateFiles(targetPath' $"{application}.dll"' SearchOption.AllDirectories).FirstOrDefault(); " is 121.
Long Statement,OpenCover.Specs.Steps,DotNetCoreSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\DotNetCoreSteps.cs,WhenIExecuteOpenCoverAgainstTheTargetApplicationUsingTheSwitch,The length of the statement  "                Arguments = $"{additionalSwitch ?? ""} -register:user \"-target:{dotnetexe}\" \"-targetargs:{targetApp}\" \"-output:{outputXml}\""' " is 131.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,GetTargetPackage,The length of the statement  "            var files = Directory.EnumerateFiles(Path.Combine((string)ScenarioContext.Current["assemblyPath"]' ".."' ".."' ".."' "bin"' folder)' string.Format("*.{0}"' ext)); " is 162.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,GetTargetPackage,The length of the statement  "            var target = files.Select(f => Regex.Match(f' string.Format(@".*\.(?<version>\d+\.\d+\.\d+)(-rc(?<revision>\d+))?\.{0}"' ext))) " is 127.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,GivenIHaveAValidNugetpackageInTheOutputFolder,The length of the statement  "            var targetFile = BuildTargets(@"packages\nuget\opencover"' "nupkg"' "nuFolder"' "nuoutput.xml"' out targetFolder' out targetOutput); " is 132.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,ThenTheCoverageResultsShouldBeTheSame,The length of the statement  "            CompareMatches(Regex.Matches(data64' summaryRegEx' RegexOptions.Multiline)' Regex.Matches(data86' summaryRegEx' RegexOptions.Multiline)); " is 137.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,ThenTheCoverageResultsShouldBeTheSame,The length of the statement  "            CompareMatches(Regex.Matches(data64' seqPointRegEx' RegexOptions.Multiline)' Regex.Matches(data86' seqPointRegEx' RegexOptions.Multiline)); " is 139.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,ThenTheCoverageResultsShouldBeTheSame,The length of the statement  "            CompareMatches(Regex.Matches(data64' branchPointRegEx' RegexOptions.Multiline)' Regex.Matches(data86' branchPointRegEx' RegexOptions.Multiline)); " is 145.
Long Statement,OpenCover.Specs.Steps,PackagingSteps,C:\repos\sawilde_opencover\main\OpenCover.Specs\Steps\PackagingSteps.cs,ThenTheCoverageResultsShouldBeTheSame,The length of the statement  "            CompareMatches(Regex.Matches(data64' methodPointRegEx' RegexOptions.Multiline)' Regex.Matches(data86' methodPointRegEx' RegexOptions.Multiline)); " is 145.
