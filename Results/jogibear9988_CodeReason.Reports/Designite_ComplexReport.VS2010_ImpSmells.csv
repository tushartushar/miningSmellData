Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "                    StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read)); " is 120.
Long Statement,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "                            table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 }); " is 128.
Long Statement,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "                    MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop); " is 149.
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
Magic Number,ComplexReport,WindowMain,D:\research\architectureSmells\repos\jogibear9988_CodeReason.Reports\Samples\ComplexReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke(DispatcherPriority.ApplicationIdle' new Action(delegate              {                  try                  {                      ReportDocument reportDocument = new ReportDocument();                        StreamReader reader = new StreamReader(new FileStream(@"Templates\ComplexReport.xaml"' FileMode.Open' FileAccess.Read));                      reportDocument.XamlData = reader.ReadToEnd();                      reportDocument.XamlImagePath = Path.Combine(Environment.CurrentDirectory' @"Templates\");                      reader.Close();                        DateTime dateTimeStart = DateTime.Now; // start time measure here                        List<ReportData> listData = new List<ReportData>();                      for (int i = 0; i < 2; i++) // generates multiple reports                      {                          ReportData data = new ReportData();                            // set constant document values                          data.ReportDocumentValues.Add("PrintDate"' dateTimeStart); // print date is now                          data.ReportDocumentValues.Add("ReportNumber"' (i + 1)); // report number                            // sample table "Ean"                          DataTable table = new DataTable("Ean");                          table.Columns.Add("Position"' typeof(string));                          table.Columns.Add("Item"' typeof(string));                          table.Columns.Add("EAN"' typeof(string));                          table.Columns.Add("Count"' typeof(int));                          table.Columns.Add("Test"' typeof(double));                          Random rnd = new Random(1234 + i);                          int count = rnd.Next(10) * (rnd.Next(2) + 1);                          for (int j = 1; j <= count; j++)                          {                              // randomly create some articles                              table.Rows.Add(new object[] { j' "Item " + (j + (1000 * (i + 1))).ToString("0000")' "123456790123"' rnd.Next(9) + 1' 1.23456 });                          }                          data.DataTables.Add(table);                          listData.Add(data);                      }                        XpsDocument xps = reportDocument.CreateXpsDocument(listData);                      documentViewer.Document = xps.GetFixedDocumentSequence();                        // show the elapsed time in window title                      Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";                  }                  catch (Exception ex)                  {                      // show exception                      MessageBox.Show(ex.Message + "\r\n\r\n" + ex.GetType() + "\r\n" + ex.StackTrace' ex.GetType().ToString()' MessageBoxButton.OK' MessageBoxImage.Stop);                  }                  finally                  {                      busyDecorator.IsBusyIndicatorHidden = true;                  }              }));
