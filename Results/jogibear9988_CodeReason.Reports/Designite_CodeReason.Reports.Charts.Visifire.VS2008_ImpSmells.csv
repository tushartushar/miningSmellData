Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,BaseClone,Cyclomatic complexity of the method is 10
Long Statement,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,FormatValue,The length of the statement  "	if ((type == typeof(int)) || (type == typeof(uint)) || (type == typeof(long)) || (type == typeof(ulong)) || (type == typeof(byte)) || (type == typeof(sbyte)) || (type == typeof(short)) || (type == typeof(ushort))) { " is 215.
Complex Conditional,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,FormatValue,The conditional expression  "(type == typeof(int)) || (type == typeof(uint)) || (type == typeof(long)) || (type == typeof(ulong)) || (type == typeof(byte)) || (type == typeof(sbyte)) || (type == typeof(short)) || (type == typeof(ushort))"  is complex.
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if ((DataColumns != null) && (DataColumns.Length > 1)) {  	global::Visifire.Charts.DataSeries ds = new global::Visifire.Charts.DataSeries ();  	ds.RenderAs = RenderAs;  	Chart.Series.Add (ds);  	foreach (DataRowView rowView in DataView) {  		global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  		ds.RenderAs = RenderAs;  		ds.DataPoints.Add (dp);  		dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  		Type type = DataView.Table.Columns [DataColumns [1]].DataType;  		try {  			dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  		}  		if (DataColumns.Length > 2) {  			type = DataView.Table.Columns [DataColumns [2]].DataType;  			try {  				dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  			} catch (NotSupportedException) {  				throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  			}  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if ((DataColumns != null) && (DataColumns.Length > 1)) {  	global::Visifire.Charts.DataSeries ds = new global::Visifire.Charts.DataSeries ();  	ds.RenderAs = RenderAs;  	Chart.Series.Add (ds);  	foreach (DataRowView rowView in DataView) {  		global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  		ds.RenderAs = RenderAs;  		ds.DataPoints.Add (dp);  		dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  		Type type = DataView.Table.Columns [DataColumns [1]].DataType;  		try {  			dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  		}  		if (DataColumns.Length > 2) {  			type = DataView.Table.Columns [DataColumns [2]].DataType;  			try {  				dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  			} catch (NotSupportedException) {  				throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  			}  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if ((DataColumns != null) && (DataColumns.Length > 1)) {  	global::Visifire.Charts.DataSeries ds = new global::Visifire.Charts.DataSeries ();  	ds.RenderAs = RenderAs;  	Chart.Series.Add (ds);  	foreach (DataRowView rowView in DataView) {  		global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  		ds.RenderAs = RenderAs;  		ds.DataPoints.Add (dp);  		dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  		Type type = DataView.Table.Columns [DataColumns [1]].DataType;  		try {  			dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  		}  		if (DataColumns.Length > 2) {  			type = DataView.Table.Columns [DataColumns [2]].DataType;  			try {  				dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  			} catch (NotSupportedException) {  				throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  			}  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: foreach (DataRowView rowView in DataView) {  	global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  	ds.RenderAs = RenderAs;  	ds.DataPoints.Add (dp);  	dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  	Type type = DataView.Table.Columns [DataColumns [1]].DataType;  	try {  		dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  	}  	if (DataColumns.Length > 2) {  		type = DataView.Table.Columns [DataColumns [2]].DataType;  		try {  			dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: foreach (DataRowView rowView in DataView) {  	global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  	ds.RenderAs = RenderAs;  	ds.DataPoints.Add (dp);  	dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  	Type type = DataView.Table.Columns [DataColumns [1]].DataType;  	try {  		dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  	}  	if (DataColumns.Length > 2) {  		type = DataView.Table.Columns [DataColumns [2]].DataType;  		try {  			dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: foreach (DataRowView rowView in DataView) {  	global::Visifire.Charts.DataPoint dp = new global::Visifire.Charts.DataPoint ();  	ds.RenderAs = RenderAs;  	ds.DataPoints.Add (dp);  	dp.AxisXLabel = rowView [DataColumns [0]].ToString ();  	Type type = DataView.Table.Columns [DataColumns [1]].DataType;  	try {  		dp.YValue = FormatValue (rowView [DataColumns [1]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Y value");  	}  	if (DataColumns.Length > 2) {  		type = DataView.Table.Columns [DataColumns [2]].DataType;  		try {  			dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  		} catch (NotSupportedException) {  			throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  		}  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if (DataColumns.Length > 2) {  	type = DataView.Table.Columns [DataColumns [2]].DataType;  	try {  		dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if (DataColumns.Length > 2) {  	type = DataView.Table.Columns [DataColumns [2]].DataType;  	try {  		dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: if (DataColumns.Length > 2) {  	type = DataView.Table.Columns [DataColumns [2]].DataType;  	try {  		dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  	} catch (NotSupportedException) {  		throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  	}  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: type = DataView.Table.Columns [DataColumns [2]].DataType;  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: try {  	dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  } catch (NotSupportedException) {  	throw new NotSupportedException ("Data type " + type + " is not supported for Z value");  }  
Magic Number,CodeReason.Reports.Charts.Visifire,ChartBase,F:\newReposMay17\jogibear9988_CodeReason.Reports\CodeReason.Reports.Charts.Visifire\ChartBase.cs,UpdateChart,The following statement contains a magic number: dp.ZValue = FormatValue (rowView [DataColumns [2]]' type);  
