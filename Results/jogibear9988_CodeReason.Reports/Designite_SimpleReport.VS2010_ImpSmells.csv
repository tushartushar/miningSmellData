Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "				/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });" is 219.
Long Statement,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "                            Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/} " is 126.
Long Statement,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "			MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop); " is 153.
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Task.Factory.StartNew (() => {  	try {  		//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  		using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  			//workspace.DocumentViewer = documentViewer;  			var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  			ReportData data = new ReportData ();  			// set constant document values  			data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  			// print date is now  			// sample table "Ean"  			DataTable table = new DataTable ("Ean");  			table.Columns.Add ("Position"' typeof(string));  			table.Columns.Add ("Item"' typeof(string));  			table.Columns.Add ("EAN"' typeof(string));  			table.Columns.Add ("Count"' typeof(int));  			Random rnd = new Random (1234);  			for (int i = 1; i <= 1500; i++) {  				// randomly create some items  				table.Rows.Add (new object[] {  					i'  					"Item " + i.ToString ("0000")'  					"123456790123"'  					rnd.Next (9) + 1  				});  			}  			data.DataTables.Add (table);  			DateTime dateTimeStart = DateTime.Now;  			// start time measure here  			Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  			/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  	}  });  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Task.Factory.StartNew (() => {  	try {  		//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  		using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  			//workspace.DocumentViewer = documentViewer;  			var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  			ReportData data = new ReportData ();  			// set constant document values  			data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  			// print date is now  			// sample table "Ean"  			DataTable table = new DataTable ("Ean");  			table.Columns.Add ("Position"' typeof(string));  			table.Columns.Add ("Item"' typeof(string));  			table.Columns.Add ("EAN"' typeof(string));  			table.Columns.Add ("Count"' typeof(int));  			Random rnd = new Random (1234);  			for (int i = 1; i <= 1500; i++) {  				// randomly create some items  				table.Rows.Add (new object[] {  					i'  					"Item " + i.ToString ("0000")'  					"123456790123"'  					rnd.Next (9) + 1  				});  			}  			data.DataTables.Add (table);  			DateTime dateTimeStart = DateTime.Now;  			// start time measure here  			Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  			/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  	}  });  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Task.Factory.StartNew (() => {  	try {  		//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  		using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  			//workspace.DocumentViewer = documentViewer;  			var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  			ReportData data = new ReportData ();  			// set constant document values  			data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  			// print date is now  			// sample table "Ean"  			DataTable table = new DataTable ("Ean");  			table.Columns.Add ("Position"' typeof(string));  			table.Columns.Add ("Item"' typeof(string));  			table.Columns.Add ("EAN"' typeof(string));  			table.Columns.Add ("Count"' typeof(int));  			Random rnd = new Random (1234);  			for (int i = 1; i <= 1500; i++) {  				// randomly create some items  				table.Rows.Add (new object[] {  					i'  					"Item " + i.ToString ("0000")'  					"123456790123"'  					rnd.Next (9) + 1  				});  			}  			data.DataTables.Add (table);  			DateTime dateTimeStart = DateTime.Now;  			// start time measure here  			Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  			/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  	}  });  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  	using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  		//workspace.DocumentViewer = documentViewer;  		var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 1500; i++) {  			// randomly create some items  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				"123456790123"'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  		/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  }  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  	using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  		//workspace.DocumentViewer = documentViewer;  		var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 1500; i++) {  			// randomly create some items  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				"123456790123"'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  		/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  }  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	//Thread.CurrentThread.SetApartmentState(ApartmentState.STA);  	using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  		//workspace.DocumentViewer = documentViewer;  		var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 1500; i++) {  			// randomly create some items  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				"123456790123"'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  		/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	Dispatcher.Invoke (new Action (() => busyDecorator.IsBusy = false));  }  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  	//workspace.DocumentViewer = documentViewer;  	var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 1500; i++) {  		// randomly create some items  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			"123456790123"'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  	/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  	//workspace.DocumentViewer = documentViewer;  	var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 1500; i++) {  		// randomly create some items  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			"123456790123"'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  	/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: using (var workspace = new ReportWorkspace (Environment.CurrentDirectory)) {  	//workspace.DocumentViewer = documentViewer;  	var reportDocument = workspace.LoadReport (@"Templates\SimpleReport.xaml");  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 1500; i++) {  		// randomly create some items  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			"123456790123"'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	Dispatcher.Invoke (new Action (() => documentViewer.Document = reportDocument.CreateFlowDocument (data)));  	/*XpsDocument xps = reportDocument.CreateXpsDocument(data' (page' pagecount) => { Dispatcher.Invoke(new Action(() => busyDecorator.BusyContent = "Rendering Page " + page.ToString() + " of " + pagecount.ToString())); });                             Dispatcher.Invoke(new Action(() => documentViewer.Document = xps.GetFixedDocumentSequence()));                              // show the elapsed time in window title                             Dispatcher.Invoke(new Action(() => Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms"));*/}  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 1500; i++) {  	// randomly create some items  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		"123456790123"'  		rnd.Next (9) + 1  	});  }  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 1500; i++) {  	// randomly create some items  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		"123456790123"'  		rnd.Next (9) + 1  	});  }  
Magic Number,SimpleReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\SimpleReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: table.Rows.Add (new object[] {  	i'  	"Item " + i.ToString ("0000")'  	"123456790123"'  	rnd.Next (9) + 1  });  
