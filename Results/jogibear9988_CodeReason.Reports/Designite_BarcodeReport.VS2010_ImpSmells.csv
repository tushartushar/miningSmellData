Implementation smell,Namespace,Class,File,Method,Description
Long Statement,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "			StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read)); " is 122.
Long Statement,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The length of the statement  "			MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop); " is 153.
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (delegate {  	try {  		ReportDocument reportDocument = new ReportDocument ();  		StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  		reportDocument.XamlData = reader.ReadToEnd ();  		reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  		reader.Close ();  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 100; i++) {  			// randomly create some items  			StringBuilder sb = new StringBuilder ();  			for (int j = 1; j <= 13; j++)  				sb.Append (rnd.Next (10));  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				sb.ToString ()'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		XpsDocument xps = reportDocument.CreateXpsDocument (data);  		documentViewer.Document = xps.GetFixedDocumentSequence ();  		// show the elapsed time in window title  		Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		busyDecorator.IsBusyIndicatorHidden = true;  	}  }));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (delegate {  	try {  		ReportDocument reportDocument = new ReportDocument ();  		StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  		reportDocument.XamlData = reader.ReadToEnd ();  		reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  		reader.Close ();  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 100; i++) {  			// randomly create some items  			StringBuilder sb = new StringBuilder ();  			for (int j = 1; j <= 13; j++)  				sb.Append (rnd.Next (10));  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				sb.ToString ()'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		XpsDocument xps = reportDocument.CreateXpsDocument (data);  		documentViewer.Document = xps.GetFixedDocumentSequence ();  		// show the elapsed time in window title  		Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		busyDecorator.IsBusyIndicatorHidden = true;  	}  }));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (delegate {  	try {  		ReportDocument reportDocument = new ReportDocument ();  		StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  		reportDocument.XamlData = reader.ReadToEnd ();  		reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  		reader.Close ();  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 100; i++) {  			// randomly create some items  			StringBuilder sb = new StringBuilder ();  			for (int j = 1; j <= 13; j++)  				sb.Append (rnd.Next (10));  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				sb.ToString ()'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		XpsDocument xps = reportDocument.CreateXpsDocument (data);  		documentViewer.Document = xps.GetFixedDocumentSequence ();  		// show the elapsed time in window title  		Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		busyDecorator.IsBusyIndicatorHidden = true;  	}  }));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (delegate {  	try {  		ReportDocument reportDocument = new ReportDocument ();  		StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  		reportDocument.XamlData = reader.ReadToEnd ();  		reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  		reader.Close ();  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 100; i++) {  			// randomly create some items  			StringBuilder sb = new StringBuilder ();  			for (int j = 1; j <= 13; j++)  				sb.Append (rnd.Next (10));  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				sb.ToString ()'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		XpsDocument xps = reportDocument.CreateXpsDocument (data);  		documentViewer.Document = xps.GetFixedDocumentSequence ();  		// show the elapsed time in window title  		Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		busyDecorator.IsBusyIndicatorHidden = true;  	}  }));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: Dispatcher.BeginInvoke (DispatcherPriority.ApplicationIdle' new Action (delegate {  	try {  		ReportDocument reportDocument = new ReportDocument ();  		StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  		reportDocument.XamlData = reader.ReadToEnd ();  		reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  		reader.Close ();  		ReportData data = new ReportData ();  		// set constant document values  		data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  		// print date is now  		// sample table "Ean"  		DataTable table = new DataTable ("Ean");  		table.Columns.Add ("Position"' typeof(string));  		table.Columns.Add ("Item"' typeof(string));  		table.Columns.Add ("EAN"' typeof(string));  		table.Columns.Add ("Count"' typeof(int));  		Random rnd = new Random (1234);  		for (int i = 1; i <= 100; i++) {  			// randomly create some items  			StringBuilder sb = new StringBuilder ();  			for (int j = 1; j <= 13; j++)  				sb.Append (rnd.Next (10));  			table.Rows.Add (new object[] {  				i'  				"Item " + i.ToString ("0000")'  				sb.ToString ()'  				rnd.Next (9) + 1  			});  		}  		data.DataTables.Add (table);  		DateTime dateTimeStart = DateTime.Now;  		// start time measure here  		XpsDocument xps = reportDocument.CreateXpsDocument (data);  		documentViewer.Document = xps.GetFixedDocumentSequence ();  		// show the elapsed time in window title  		Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  	} catch (Exception ex) {  		// show exception  		MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  	} finally {  		busyDecorator.IsBusyIndicatorHidden = true;  	}  }));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	ReportDocument reportDocument = new ReportDocument ();  	StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  	reportDocument.XamlData = reader.ReadToEnd ();  	reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  	reader.Close ();  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 100; i++) {  		// randomly create some items  		StringBuilder sb = new StringBuilder ();  		for (int j = 1; j <= 13; j++)  			sb.Append (rnd.Next (10));  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			sb.ToString ()'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	XpsDocument xps = reportDocument.CreateXpsDocument (data);  	documentViewer.Document = xps.GetFixedDocumentSequence ();  	// show the elapsed time in window title  	Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	busyDecorator.IsBusyIndicatorHidden = true;  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	ReportDocument reportDocument = new ReportDocument ();  	StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  	reportDocument.XamlData = reader.ReadToEnd ();  	reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  	reader.Close ();  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 100; i++) {  		// randomly create some items  		StringBuilder sb = new StringBuilder ();  		for (int j = 1; j <= 13; j++)  			sb.Append (rnd.Next (10));  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			sb.ToString ()'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	XpsDocument xps = reportDocument.CreateXpsDocument (data);  	documentViewer.Document = xps.GetFixedDocumentSequence ();  	// show the elapsed time in window title  	Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	busyDecorator.IsBusyIndicatorHidden = true;  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	ReportDocument reportDocument = new ReportDocument ();  	StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  	reportDocument.XamlData = reader.ReadToEnd ();  	reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  	reader.Close ();  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 100; i++) {  		// randomly create some items  		StringBuilder sb = new StringBuilder ();  		for (int j = 1; j <= 13; j++)  			sb.Append (rnd.Next (10));  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			sb.ToString ()'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	XpsDocument xps = reportDocument.CreateXpsDocument (data);  	documentViewer.Document = xps.GetFixedDocumentSequence ();  	// show the elapsed time in window title  	Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	busyDecorator.IsBusyIndicatorHidden = true;  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	ReportDocument reportDocument = new ReportDocument ();  	StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  	reportDocument.XamlData = reader.ReadToEnd ();  	reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  	reader.Close ();  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 100; i++) {  		// randomly create some items  		StringBuilder sb = new StringBuilder ();  		for (int j = 1; j <= 13; j++)  			sb.Append (rnd.Next (10));  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			sb.ToString ()'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	XpsDocument xps = reportDocument.CreateXpsDocument (data);  	documentViewer.Document = xps.GetFixedDocumentSequence ();  	// show the elapsed time in window title  	Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	busyDecorator.IsBusyIndicatorHidden = true;  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: try {  	ReportDocument reportDocument = new ReportDocument ();  	StreamReader reader = new StreamReader (new FileStream (@"Templates\BarcodeReport.xaml"' FileMode.Open' FileAccess.Read));  	reportDocument.XamlData = reader.ReadToEnd ();  	reportDocument.XamlImagePath = Path.Combine (Environment.CurrentDirectory' @"Templates\");  	reader.Close ();  	ReportData data = new ReportData ();  	// set constant document values  	data.ReportDocumentValues.Add ("PrintDate"' DateTime.Now);  	// print date is now  	// sample table "Ean"  	DataTable table = new DataTable ("Ean");  	table.Columns.Add ("Position"' typeof(string));  	table.Columns.Add ("Item"' typeof(string));  	table.Columns.Add ("EAN"' typeof(string));  	table.Columns.Add ("Count"' typeof(int));  	Random rnd = new Random (1234);  	for (int i = 1; i <= 100; i++) {  		// randomly create some items  		StringBuilder sb = new StringBuilder ();  		for (int j = 1; j <= 13; j++)  			sb.Append (rnd.Next (10));  		table.Rows.Add (new object[] {  			i'  			"Item " + i.ToString ("0000")'  			sb.ToString ()'  			rnd.Next (9) + 1  		});  	}  	data.DataTables.Add (table);  	DateTime dateTimeStart = DateTime.Now;  	// start time measure here  	XpsDocument xps = reportDocument.CreateXpsDocument (data);  	documentViewer.Document = xps.GetFixedDocumentSequence ();  	// show the elapsed time in window title  	Title += " - generated in " + (DateTime.Now - dateTimeStart).TotalMilliseconds + "ms";  } catch (Exception ex) {  	// show exception  	MessageBox.Show (ex.Message + "\r\n\r\n" + ex.GetType () + "\r\n" + ex.StackTrace' ex.GetType ().ToString ()' MessageBoxButton.OK' MessageBoxImage.Stop);  } finally {  	busyDecorator.IsBusyIndicatorHidden = true;  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 100; i++) {  	// randomly create some items  	StringBuilder sb = new StringBuilder ();  	for (int j = 1; j <= 13; j++)  		sb.Append (rnd.Next (10));  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		sb.ToString ()'  		rnd.Next (9) + 1  	});  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 100; i++) {  	// randomly create some items  	StringBuilder sb = new StringBuilder ();  	for (int j = 1; j <= 13; j++)  		sb.Append (rnd.Next (10));  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		sb.ToString ()'  		rnd.Next (9) + 1  	});  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 100; i++) {  	// randomly create some items  	StringBuilder sb = new StringBuilder ();  	for (int j = 1; j <= 13; j++)  		sb.Append (rnd.Next (10));  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		sb.ToString ()'  		rnd.Next (9) + 1  	});  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int i = 1; i <= 100; i++) {  	// randomly create some items  	StringBuilder sb = new StringBuilder ();  	for (int j = 1; j <= 13; j++)  		sb.Append (rnd.Next (10));  	table.Rows.Add (new object[] {  		i'  		"Item " + i.ToString ("0000")'  		sb.ToString ()'  		rnd.Next (9) + 1  	});  }  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int j = 1; j <= 13; j++)  	sb.Append (rnd.Next (10));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: for (int j = 1; j <= 13; j++)  	sb.Append (rnd.Next (10));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: sb.Append (rnd.Next (10));  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,Window_Activated,The following statement contains a magic number: table.Rows.Add (new object[] {  	i'  	"Item " + i.ToString ("0000")'  	sb.ToString ()'  	rnd.Next (9) + 1  });  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,CmdPDF_OnClick,The following statement contains a magic number: ((FixedDocumentSequence)documentViewer.Document).InteractiveExport (PageSize.A4' 2);  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,CmdPNG_OnClick,The following statement contains a magic number: ((FixedDocumentSequence)documentViewer.Document).InteractiveExport (300' 300);  
Magic Number,BarcodeReport,WindowMain,F:\newReposMay17\jogibear9988_CodeReason.Reports\Samples\BarcodeReport\WindowMain.xaml.cs,CmdPNG_OnClick,The following statement contains a magic number: ((FixedDocumentSequence)documentViewer.Document).InteractiveExport (300' 300);  
