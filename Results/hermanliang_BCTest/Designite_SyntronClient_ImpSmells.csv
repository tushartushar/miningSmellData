Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,Cyclomatic complexity of the method is 12
Long Statement,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,gatherTargetData,The length of the statement  "		//if (mTw < 0 || mTw > 255 || mTh < 0 || mTh > 255 || mCTi < 0 || mCTi > 255) throw new Exception("Target bound error"); " is 120.
Long Statement,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The length of the statement  "				rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh); " is 131.
Long Statement,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The length of the statement  "				rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh); " is 127.
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,drawTargetZoneOnImage,The following statement contains a magic number: if (gatherTargetData ()) {  	Rectangle[] rect = getTargetRect ();  	Graphics g1 = Graphics.FromImage (retImage);  	Pen p = new Pen (Color.Red);  	p.Width = 2;  	g1.DrawRectangles (p' rect);  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,drawTargetZoneOnImage,The following statement contains a magic number: p.Width = 2;  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int i = 0; i < mRows; i++)  	for (int j = 0; j < mLines; j++) {  		if (mode == 0 && j == 4) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  			continue;  		}  		if (j <= 1) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  		}  		else {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  		}  	}  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int i = 0; i < mRows; i++)  	for (int j = 0; j < mLines; j++) {  		if (mode == 0 && j == 4) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  			continue;  		}  		if (j <= 1) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  		}  		else {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  		}  	}  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int i = 0; i < mRows; i++)  	for (int j = 0; j < mLines; j++) {  		if (mode == 0 && j == 4) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  			continue;  		}  		if (j <= 1) {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  		}  		else {  			rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  		}  	}  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int j = 0; j < mLines; j++) {  	if (mode == 0 && j == 4) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  		continue;  	}  	if (j <= 1) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  	}  	else {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  	}  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int j = 0; j < mLines; j++) {  	if (mode == 0 && j == 4) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  		continue;  	}  	if (j <= 1) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  	}  	else {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  	}  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: for (int j = 0; j < mLines; j++) {  	if (mode == 0 && j == 4) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  		continue;  	}  	if (j <= 1) {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * j' mTw' mTh);  	}  	else {  		rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi + mTTi * (j - 1)' mTw' mTh);  	}  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: if (mode == 0 && j == 4) {  	rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  	continue;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: if (mode == 0 && j == 4) {  	rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  	continue;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: if (mode == 0 && j == 4) {  	rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  	continue;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,getTargetRect,The following statement contains a magic number: rect [i * mLines + j] = new Rectangle (leftBound + (int)((mTw + rowInterval) * i)' topBound + mCTi * 2 + mTTi * (j - 2)' mTw' mTh);  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: switch (modeList.SelectedIndex) {  case 0:  	mRows = 1;  	mLines = 5;  	break;  case 1:  	mRows = 2;  	mLines = 4;  	break;  default:  	mRows = 1;  	mLines = 5;  	break;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: switch (modeList.SelectedIndex) {  case 0:  	mRows = 1;  	mLines = 5;  	break;  case 1:  	mRows = 2;  	mLines = 4;  	break;  default:  	mRows = 1;  	mLines = 5;  	break;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: switch (modeList.SelectedIndex) {  case 0:  	mRows = 1;  	mLines = 5;  	break;  case 1:  	mRows = 2;  	mLines = 4;  	break;  default:  	mRows = 1;  	mLines = 5;  	break;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: switch (modeList.SelectedIndex) {  case 0:  	mRows = 1;  	mLines = 5;  	break;  case 1:  	mRows = 2;  	mLines = 4;  	break;  default:  	mRows = 1;  	mLines = 5;  	break;  }  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: mLines = 5;  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: mRows = 2;  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: mLines = 4;  
Magic Number,SyntronClient,MainForm,C:\repos\hermanliang_BCTest\SyntronClient\MainForm.cs,modeList_SelectedIndexChanged,The following statement contains a magic number: mLines = 5;  
