Implementation smell,Namespace,Class,File,Method,Description
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: if (AsciiData.Length % 2 == 1) {  	AsciiData = "0" + AsciiData;  }  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: for (int i = 0; i < AsciiData.Length / 2; i++) {  	codes.Add (int.Parse (AsciiData.Substring (i * 2' 2)));  }  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: for (int i = 0; i < AsciiData.Length / 2; i++) {  	codes.Add (int.Parse (AsciiData.Substring (i * 2' 2)));  }  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: for (int i = 0; i < AsciiData.Length / 2; i++) {  	codes.Add (int.Parse (AsciiData.Substring (i * 2' 2)));  }  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: codes.Add (int.Parse (AsciiData.Substring (i * 2' 2)));  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: codes.Add (int.Parse (AsciiData.Substring (i * 2' 2)));  
Magic Number,GenCode128,Code128CContent,C:\repos\hermanliang_BCTest\GenCode128\Code128CContent.cs,StringToCode128,The following statement contains a magic number: codes.Add (checksum % 103);  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: width = ((codes.Length - 3) * 11 + 35) * BarWeight;  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: width = ((codes.Length - 3) * 11 + 35) * BarWeight;  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: width = ((codes.Length - 3) * 11 + 35) * BarWeight;  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: if (AddQuietZone) {  	width += 2 * cQuietWidth * BarWeight;  	// on both sides  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: width += 2 * cQuietWidth * BarWeight;  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (myimg)) {  	// set to white so we don't have to fill the spaces with white  	gr.FillRectangle (System.Drawing.Brushes.White' 0' 0' width' height);  	// skip quiet zone  	int cursor = AddQuietZone ? cQuietWidth * BarWeight : 0;  	for (int codeidx = 0; codeidx < codes.Length; codeidx++) {  		int code = codes [codeidx];  		// take the bars two at a time: a black and a white  		for (int bar = 0; bar < 8; bar += 2) {  			int barwidth = cPatterns [code' bar] * BarWeight;  			int spcwidth = cPatterns [code' bar + 1] * BarWeight;  			// if width is zero' don't try to draw it  			if (barwidth > 0) {  				gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  			}  			// note that we never need to draw the space' since we   			// initialized the graphics to all white  			// advance cursor beyond this pair  			cursor += (barwidth + spcwidth);  		}  	}  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: using (Graphics gr = Graphics.FromImage (myimg)) {  	// set to white so we don't have to fill the spaces with white  	gr.FillRectangle (System.Drawing.Brushes.White' 0' 0' width' height);  	// skip quiet zone  	int cursor = AddQuietZone ? cQuietWidth * BarWeight : 0;  	for (int codeidx = 0; codeidx < codes.Length; codeidx++) {  		int code = codes [codeidx];  		// take the bars two at a time: a black and a white  		for (int bar = 0; bar < 8; bar += 2) {  			int barwidth = cPatterns [code' bar] * BarWeight;  			int spcwidth = cPatterns [code' bar + 1] * BarWeight;  			// if width is zero' don't try to draw it  			if (barwidth > 0) {  				gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  			}  			// note that we never need to draw the space' since we   			// initialized the graphics to all white  			// advance cursor beyond this pair  			cursor += (barwidth + spcwidth);  		}  	}  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: for (int codeidx = 0; codeidx < codes.Length; codeidx++) {  	int code = codes [codeidx];  	// take the bars two at a time: a black and a white  	for (int bar = 0; bar < 8; bar += 2) {  		int barwidth = cPatterns [code' bar] * BarWeight;  		int spcwidth = cPatterns [code' bar + 1] * BarWeight;  		// if width is zero' don't try to draw it  		if (barwidth > 0) {  			gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  		}  		// note that we never need to draw the space' since we   		// initialized the graphics to all white  		// advance cursor beyond this pair  		cursor += (barwidth + spcwidth);  	}  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: for (int codeidx = 0; codeidx < codes.Length; codeidx++) {  	int code = codes [codeidx];  	// take the bars two at a time: a black and a white  	for (int bar = 0; bar < 8; bar += 2) {  		int barwidth = cPatterns [code' bar] * BarWeight;  		int spcwidth = cPatterns [code' bar + 1] * BarWeight;  		// if width is zero' don't try to draw it  		if (barwidth > 0) {  			gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  		}  		// note that we never need to draw the space' since we   		// initialized the graphics to all white  		// advance cursor beyond this pair  		cursor += (barwidth + spcwidth);  	}  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: for (int bar = 0; bar < 8; bar += 2) {  	int barwidth = cPatterns [code' bar] * BarWeight;  	int spcwidth = cPatterns [code' bar + 1] * BarWeight;  	// if width is zero' don't try to draw it  	if (barwidth > 0) {  		gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  	}  	// note that we never need to draw the space' since we   	// initialized the graphics to all white  	// advance cursor beyond this pair  	cursor += (barwidth + spcwidth);  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: for (int bar = 0; bar < 8; bar += 2) {  	int barwidth = cPatterns [code' bar] * BarWeight;  	int spcwidth = cPatterns [code' bar + 1] * BarWeight;  	// if width is zero' don't try to draw it  	if (barwidth > 0) {  		gr.FillRectangle (System.Drawing.Brushes.Black' cursor' 0' barwidth' height);  	}  	// note that we never need to draw the space' since we   	// initialized the graphics to all white  	// advance cursor beyond this pair  	cursor += (barwidth + spcwidth);  }  
Magic Number,GenCode128,Code128Rendering,C:\repos\hermanliang_BCTest\GenCode128\Code128Rendering.cs,MakeBarcodeImage,The following statement contains a magic number: bar += 2
