Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Synchronization.Services,ScopeSchemaRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\ScopeSchemaRequestProcessor.cs,GetMetadataDocument,The method has 113 lines of code.
Long Method,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToPrimitive,The method has 129 lines of code.
Long Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetChanges,The method has 129 lines of code.
Long Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,ApplyChanges,The method has 142 lines of code.
Long Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,The method has 196 lines of code.
Complex Method,Microsoft.Synchronization.Services.Batching,FileBasedBatchHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Batching\FileBasedBatchHandler.cs,GetNextBatch,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,DiscoverTypes,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.Services,HttpContextServiceHost,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\HttpContextServiceHost.cs,GetOutputSerializationFormat,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,ReadIncomingRequestStreamForPost,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services,ScopeSchemaRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\ScopeSchemaRequestProcessor.cs,GetMetadataDocument,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services,UploadChangesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\UploadChangesRequestProcessor.cs,GetSyncWriterWithContents,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,AddInterceptor,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToPrimitive,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ChangeType,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,GetEdmType,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\JsonEntryInfoWrapper.cs,LoadTypeName,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteEntityContentsToElement,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetObjectForType,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetValueFromType,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Synchronization.Services.SqlProvider,DataSetToEntitiesConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\DataSetToEntitiesConverter.cs,AddEntityToDataSet,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,Cyclomatic complexity of the method is 22
Complex Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,CreateNewScopeForClient,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,AddSyncColumnsToDataSet,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.Data,BatchRangeSetBuilder,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\BatchRangeSetUtil.cs,IdPlusOne,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.Data,RowSorter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\RowSorter.cs,AddUnsortedDataSet,Cyclomatic complexity of the method is 8
Long Parameter List,Microsoft.Synchronization.Services,Request,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Request.cs,Request,The method has 6 parameters. Parameters: requestCommand' serviceHost' commandParams' blob' entities' responseSerializationFormat
Long Parameter List,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,CheckForDuplicateAndAddInterceptors,The method has 5 parameters. Parameters: attr' info' className' nonFilteredInfo' filteredInfo
Long Parameter List,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncWriter.cs,AddConflictItem,The method has 5 parameters. Parameters: winningEntry' winningEntryTempId' losingEntry' losingEntryTempId' resolution
Long Parameter List,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderService,The method has 5 parameters. Parameters: configuration' serverScope' filterParams' operationContext' batchHandler
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter UnableToParseKeyValueForProperty is 32.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter BadRequestKeyNotFoundInResource is 31.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter MultipleEntriesWithSamePrimaryKeyInIncomingRequest is 50.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter ConflictEntityMissingInIncomingRequest is 38.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter ErrorEntityMissingInIncomingRequest is 35.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter InvalidHttpMethodForSyncScopesRequest is 37.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter InvalidHttpMethodForScopeMetadataRequest is 40.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter InvalidHttpMethodForUploadChangesRequest is 40.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter UnsupportedConflictResolutionPolicy is 35.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter EntitiesOnlyAllowedForUploadChangesRequest is 42.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter TemplateClassNotMarkedWithSyncScopeAttribute is 44.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter ErrorInServiceInitializeUserCodeMethod is 38.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter DuplicateParametersInRequestUri is 31.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter InitializeServiceMethodNotImplemented is 37.
Long Identifier,Microsoft.Synchronization.Services,Strings,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\Strings.cs,,The length of the parameter InvalidTableNameForFilterParameters is 35.
Long Identifier,Microsoft.Synchronization.Services,UploadChangesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\UploadChangesRequestProcessor.cs,GetSyncWriterWithContents,The length of the parameter primaryKeyToIncomingEntitiesMapping is 35.
Long Identifier,Microsoft.Synchronization.Services,UploadChangesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\UploadChangesRequestProcessor.cs,GetEntityFromIncomingRequest,The length of the parameter primaryKeyToIncomingEntitiesMapping is 35.
Long Identifier,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,,The length of the parameter _downloadTypedResponseInterceptors is 34.
Long Identifier,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,,The length of the parameter _uploadTypedRequestInterceptors is 31.
Long Identifier,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,,The length of the parameter _uploadTypedResponseInterceptors is 32.
Long Identifier,Microsoft.Synchronization.Services,DiagConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Diag\DiagHelper.cs,,The length of the parameter TEMPLATE_OR_SCOPE_DOES_NOT_EXIST is 32.
Long Identifier,Microsoft.Synchronization.Services,DiagConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Diag\DiagHelper.cs,,The length of the parameter CLIENT_ACCESS_POLICY_OR_CROSS_DOMAIN_NOT_FOUND is 46.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_SCOPE_METADATA_URL_SEGMENT is 31.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_OPERATION_DOWNLOAD_CHANGES is 31.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_ENTITY_TYPE_TABLE_GLOBAL_NAME is 34.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_ENTITY_TYPE_TABLE_LOCAL_NAME is 33.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_RESPONSE_INTERCEPTOR_TYPE is 30.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_CONFLICT_INTERCEPTOR_TYPE is 30.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_ENTITY_PROPERTY_NULLABLE_ATTRIBUTE_TYPE is 44.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_INCORRECT_INTERCEPTOR_SIGNATURE is 36.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_REQUEST_INTERCEPTOR_FORMAT is 31.
Long Identifier,Microsoft.Synchronization.Services,SyncServiceConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\SyncServiceConstants.cs,,The length of the parameter SYNC_CONFLICT_INTERCEPTOR_FORMAT is 32.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterConstants.cs,,The length of the parameter AtomDateTimeOffsetLexicalRepresentation is 39.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterConstants.cs,,The length of the parameter AtomDateTimeLexicalRepresentation is 33.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterConstants.cs,,The length of the parameter JsonSyncEntryMetadataElementName is 32.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterConstants.cs,,The length of the parameter JsonDateTimeOffsetLexicalRepresentation is 39.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterConstants.cs,,The length of the parameter JsonDateTimeLexicalRepresentation is 33.
Long Identifier,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,,The length of the parameter _conflictToSyncEntityIdMapping is 30.
Long Identifier,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,,The length of the parameter _syncEntityIdToConflictMapping is 30.
Long Identifier,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,,The length of the parameter _serverTickCountAfterResolvingAllConflicts is 42.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,SetEnableScope,The length of the statement  "                throw new InvalidOperationException("Sync Service already has a SyncScope registered. A Sync Service cannot be configured for multiple scopes."); " is 145.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,AddFilterParameterConfiguration,The length of the statement  "                // this method is called by InitializeService' which is invoked AFTER the creator. The TableGlobalNameMappings etc. are initialized during creator so we can use them to validate the parameters passed in " is 202.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,SetBatchSpoolDirectory,The length of the statement  "                // when UseVerboseErrors = false. For Verbose Errors the exception message and stack trace are returned in the response. " is 120.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,ReadSyncInterceptors,The length of the statement  "            foreach (MethodInfo info in syncServiceType.GetMethods(BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)) " is 128.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeOperationInterceptors,The length of the statement  "                    InvokeUserInterceptorMethod(methodInfo' OperationContext.Current.InstanceContext.GetServiceInstance()' new object[] { context }); " is 129.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeConflictInterceptor,The length of the statement  "                    SyncConflictResolution resolution = (SyncConflictResolution)InvokeUserInterceptorMethod(methodInfo' OperationContext.Current.InstanceContext.GetServiceInstance()' inputParams); " is 176.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,ProcessSyncInterceptor,The length of the statement  "                        string.Format(CultureInfo.InvariantCulture' "ScopeName '{0}' defined in '{1}' on method '{2}' is not in the list of configured sync scopes."' " is 141.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,DiscoverTypes,The length of the statement  "                            PropertyInfo globalTablenamePropertyInfo = syncAttribute.GetType().GetProperty(SyncServiceConstants.SYNC_ENTITY_TYPE_TABLE_GLOBAL_NAME); " is 136.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,DiscoverTypes,The length of the statement  "                                throw new InvalidOperationException(String.Format(CultureInfo.InvariantCulture' Strings.DuplicateGlobalTableName' globalTableName)); " is 132.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,DiscoverTypes,The length of the statement  "                            PropertyInfo localTablenamePropertyInfo = syncAttribute.GetType().GetProperty(SyncServiceConstants.SYNC_ENTITY_TYPE_TABLE_LOCAL_NAME); " is 134.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeStaticInitialization,The length of the statement  "                MethodInfo info = type.GetMethod("InitializeService"' bindingAttr' null' new[] { typeof(ISyncServiceConfiguration) }' null); " is 124.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeStaticInitialization,The length of the statement  "                            SyncTracer.Warning("Exception invoking the static InitializeService method. Details {0}"' WebUtil.GetExceptionMessage(exception)); " is 130.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeTestHookInitializeMethod,The length of the statement  "                MethodInfo info = type.GetMethod("InitializeConfigurationTestHook"' bindingAttr' null' new[] { typeof(ISyncServiceConfiguration) }' null); " is 138.
Long Statement,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeTestHookInitializeMethod,The length of the statement  "                            SyncTracer.Warning("Exception invoking the TestHookInitialization method. Details {0}"' WebUtil.GetExceptionMessage(exception)); " is 128.
Long Statement,Microsoft.Synchronization.Services,SyncServiceException,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\SyncServiceException.cs,CreateInternalServerError,The length of the statement  "            return new SyncServiceException(ResponseHttpStatusCode.InternalServerError' null /*errorCode*/' errorMessage' innerException); " is 126.
Long Statement,Microsoft.Synchronization.Services,SyncServiceException,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Error\SyncServiceException.cs,CreateMethodNotAllowed,The length of the statement  "            var exception = new SyncServiceException(ResponseHttpStatusCode.MethodNotAllowed' errorMessage) { _responseAllowHeader = allow }; " is 129.
Long Statement,Microsoft.Synchronization.Services,HttpContextServiceHost,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\HttpContextServiceHost.cs,GetRequestContentSerializationFormat,The length of the statement  "            string[] contentTypeParts = _operationContext.IncomingRequest.ContentType.Split(new[] {';'}' StringSplitOptions.RemoveEmptyEntries); " is 132.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,ParseIncomingRequest,The length of the statement  "            SyncSerializationFormat outputSerializationFormat = _serviceHost.GetOutputSerializationFormat(_configuration.SerializationFormat); " is 130.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,ParseIncomingRequest,The length of the statement  "            var request = new Request(requestCommand' _serviceHost' commandParameters' _syncBlob' entities' outputSerializationFormat) " is 122.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                0 == String.Compare(_serviceHost.RelativeUriSegments[0]' SyncServiceConstants.SYNC_SCOPES_URL_SEGMENT' StringComparison.InvariantCultureIgnoreCase)) " is 148.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                if (0 != String.Compare(_serviceHost.RequestHttpMethod' SyncServiceConstants.HTTP_VERB_GET' StringComparison.InvariantCultureIgnoreCase)) " is 137.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                    throw SyncServiceException.CreateMethodNotAllowed(Strings.InvalidHttpMethodForSyncScopesRequest' SyncServiceConstants.HTTP_VERB_GET); " is 133.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                    if (0 != String.Compare(_serviceHost.RequestHttpMethod' SyncServiceConstants.HTTP_VERB_POST' StringComparison.InvariantCultureIgnoreCase)) " is 138.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                        throw SyncServiceException.CreateMethodNotAllowed(Strings.InvalidHttpMethodForUploadChangesRequest' SyncServiceConstants.HTTP_VERB_GET); " is 136.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                    if (0 != String.Compare(_serviceHost.RequestHttpMethod' SyncServiceConstants.HTTP_VERB_GET' StringComparison.InvariantCultureIgnoreCase)) " is 137.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The length of the statement  "                        throw SyncServiceException.CreateMethodNotAllowed(Strings.InvalidHttpMethodForScopeMetadataRequest' SyncServiceConstants.HTTP_VERB_GET); " is 136.
Long Statement,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,ReadIncomingRequestStreamForGet,The length of the statement  "                _syncBlob = Convert.FromBase64String(_serviceHost.RequestHeaders[SyncServiceConstants.SYNC_SERVERBLOB_HEADERKEY].Trim()); " is 121.
Long Statement,Microsoft.Synchronization.Services,ScopeSchemaRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\ScopeSchemaRequestProcessor.cs,GetMetadataDocument,The length of the statement  "            //Note: Currently this is read from the service configuration and * is not allowed anymore for the SetEnableScope method. " is 121.
Long Statement,Microsoft.Synchronization.Services,ScopeSchemaRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\ScopeSchemaRequestProcessor.cs,GetMetadataDocument,The length of the statement  "                                        new XAttribute(XNamespace.Xmlns + FormatterConstants.ODataMetadataNsPrefix' FormatterConstants.ODataMetadataNamespace)); " is 120.
Long Statement,Microsoft.Synchronization.Services,SyncRequestProcessorBase,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\SyncRequestProcessorBase.cs,WriteResponse,The length of the statement  "                SyncServiceTracer.TraceError("Exception in WriteResponse method. Details: {0}"' WebUtil.GetExceptionMessage(exception)); " is 120.
Long Statement,Microsoft.Synchronization.Services,SyncScopesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\SyncScopesRequestProcessor.cs,GetScopeListInfo,The length of the statement  "            //Note: Currently this is read from the service configuration and * is not allowed anymore for the SetEnableScope method. " is 121.
Long Statement,Microsoft.Synchronization.Services,SyncScopesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\SyncScopesRequestProcessor.cs,GetScopeListInfo,The length of the statement  "            string serviceBaseUrl = _incomingRequest.ServiceHost.RequestUri.AbsoluteUri.ToLower().Replace(SyncServiceConstants.SYNC_SCOPES_URL_SEGMENT' string.Empty); " is 154.
Long Statement,Microsoft.Synchronization.Services,SyncScopesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\SyncScopesRequestProcessor.cs,GetScopeListInfo,The length of the statement  "            // <service xml:base="http://localhost/service.svc/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns="http://www.w3.org/2007/app"> " is 129.
Long Statement,Microsoft.Synchronization.Services,UploadChangesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\UploadChangesRequestProcessor.cs,PrepareAndProcessResponseInterceptor,The length of the statement  "                            responseContext.OutgoingChanges = _incomingNewInsertEntities.Where(e => e.GetType() == grouping.Key).ToList().AsReadOnly(); " is 123.
Long Statement,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,AddInterceptor,The length of the statement  "                    CheckForDuplicateAndAddInterceptors(attr' info' className' ref _uploadRequestInterceptor' _uploadTypedRequestInterceptors); " is 123.
Long Statement,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,AddInterceptor,The length of the statement  "                    CheckForDuplicateAndAddInterceptors(attr' info' className' ref _downloadResponseInterceptor' _downloadTypedResponseInterceptors); " is 129.
Long Statement,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,AddInterceptor,The length of the statement  "                    CheckForDuplicateAndAddInterceptors(attr' info' className' ref _uploadResponseInterceptor' _uploadTypedResponseInterceptors); " is 125.
Long Statement,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,GetResponseInterceptor,The length of the statement  "            Debug.Assert(HasResponseInterceptor(operation' type)' "No Typed response interceptors found for operation " + operation); " is 121.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,ProcessRequestForMessage,The length of the statement  "                _requestProcessor = RequestProcessorFactory.GetRequestProcessorInstance(_requestDescription.RequestCommand' _syncConfiguration' _serviceHost); " is 142.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,ProcessRequestForMessage,The length of the statement  "                    responseProperties.Headers[SyncServiceConstants.SYNC_SERVICE_VERSION_KEY] = SyncServiceConstants.SYNC_SERVICE_VERSION_VALUE; " is 124.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,ProcessRequestToServiceRoot,The length of the statement  "            string requestHost = !String.IsNullOrEmpty(_serviceHost.HostHeader) ? _serviceHost.HostHeader : _serviceHost.RequestUri.Authority; " is 130.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,InitializeNewClient,The length of the statement  "            _requestDescription.ProviderParams = new List<SqlSyncProviderFilterParameterInfo>(_syncConfiguration.FilterParameters.Count); " is 125.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,CreateExceptionMessage,The length of the statement  "                message = Message.CreateMessage(MessageVersion.None' String.Empty' error' new DataContractJsonSerializer(typeof(ServiceError))); " is 128.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,CreateExceptionMessage,The length of the statement  "                message = Message.CreateMessage(MessageVersion.None' String.Empty' error' new DataContractSerializer(typeof(ServiceError))); " is 124.
Long Statement,Microsoft.Synchronization.Services,SyncService<T>,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncService.cs,CreateExceptionMessage,The length of the statement  "            property.Headers.Add(HttpResponseHeader.ContentType' WebUtil.GetContentType(_serviceHost.GetOutputSerializationFormat(_syncConfiguration.SerializationFormat))); " is 160.
Long Statement,Microsoft.Synchronization.Services,DiagHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Diag\DiagHelper.cs,CheckBatchingFolderExists,The length of the statement  "                    result.TestResult = Directory.Exists(configuration.BatchSpoolDirectory) ? DiagConstants.SUCCESS : DiagConstants.DIRECTORY_NOT_FOUND; " is 132.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,The length of the statement  "                        foreach (object assembly in Assembly.GetExecutingAssembly().GetCustomAttributes(typeof(System.Runtime.CompilerServices.InternalsVisibleToAttribute)' false)) " is 156.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,The length of the statement  "                            System.Runtime.CompilerServices.InternalsVisibleToAttribute friendClass = assembly as System.Runtime.CompilerServices.InternalsVisibleToAttribute; " is 146.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,The length of the statement  "                            if (friendAssemblyName[0].Equals(assemblyName' StringComparison.InvariantCultureIgnoreCase) && friendAssemblyName[2].Equals(publicKey' StringComparison.InvariantCultureIgnoreCase)) " is 180.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,GenerateOfflineEntityId,The length of the statement  "            return String.Format(@"{0}/{1}({2})"' WebOperationContext.Current.IncomingRequest.UriTemplateMatch.BaseUri' entity.GetType().Name' primaryKeyString); " is 149.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,The length of the statement  "                throw SyncServiceException.CreateBadRequestError(String.Format(Strings.EntityIdFormatIsIncorrect' entity.ServiceMetadata.Id)); " is 126.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,The length of the statement  "            // Split the string and get individual keyvalue pair strings. They key and value are still a single string separated by '='. " is 124.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,The length of the statement  "                throw SyncServiceException.CreateBadRequestError(String.Format(Strings.BadRequestKeyCountMismatch' entity.ServiceMetadata.Id' entity.GetType())); " is 145.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ThrowDuplicateInterceptorForArgumentException,The length of the statement  "                string.Format("SyncService '{0}' has mutiple '{1}' interceptors on SyncOperations '{2}' defined for Type '{3}' and scopename '{4}'"' " is 132.
Long Statement,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ThrowInterceptorArgumentNotIOEException,The length of the statement  "                string.Format("SyncService '{0}' filtered interceptor definition '{1}' for scope '{2}' declares a Type '{3}' that does not derive from IOfflineEntity."' " is 152.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "            XElement conflictElement = entry.Element(FormatterConstants.SyncNamespace + FormatterConstants.SyncConlflictElementName); " is 121.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement resolutionType = conflictElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ConflictResolutionElementName); " is 135.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement conflictingChangeElement = conflictElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ConflictEntryElementName); " is 140.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement errorDesc = errorElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ErrorDescriptionElementName); " is 125.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement errorChangeElement = errorElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ErrorEntryElementName); " is 128.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,GetSubElement,The length of the statement  "            XElement element = entryElement.Element(FormatterConstants.AtomNamespaceUri + FormatterConstants.AtomPubEntryElementName); " is 122.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,GetSubElement,The length of the statement  "                element = entryElement.Element(FormatterConstants.AtomDeletedEntryNamespace + FormatterConstants.AtomDeletedEntryElementName); " is 126.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                    throw new InvalidOperationException("A atom:ref element must be present for a tombstone entry. Entity in error: " + entry.ToString(SaveOptions.None)); " is 150.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                    throw new InvalidOperationException("A atom:id or a sync:tempId element must be present. Entity in error: " + entry.ToString(SaveOptions.None)); " is 144.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                foreach (XElement linkElement in entry.Elements(FormatterConstants.AtomXmlNamespace + FormatterConstants.AtomPubLinkElementName)) " is 129.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                                throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Multiple Edit Url's found for atom with {0}: '{1}'"' (this.Id == null) ? "TempId" : "Id"' (this.Id == null) ? this.TempId : this.Id)); " is 215.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                            XAttribute nullableAttr = property.Attribute(FormatterConstants.ODataMetadataNamespace + FormatterConstants.AtomPubIsNullElementName); " is 134.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\AtomEntryInfoWrapper.cs,LoadTypeName,The length of the statement  "                    string.Format(CultureInfo.InvariantCulture' "Category element not found in {0} element."' (isTombstone)? FormatterConstants.AtomDeletedEntryElementName : FormatterConstants.AtomPubEntryElementName)); " is 199.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,ParseDateTimeFromString,The length of the statement  "                throw new InvalidOperationException(string.Format(USCultureInfo' "Invalid Date/Time value received. Unable to parse value {0} to type {1}."' value' type.Name)); " is 160.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                        throw new InvalidOperationException(string.Format("Invalid JSON DateTime value received. Value '{0}' is not a valid DateTime"' ticks)); " is 135.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                    throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json DateTime value received. Value {0} is not in format '\/Date(ticks)\/'."' value)); " is 161.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                    throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json DateTimeOffset value received. Value {0} is not in format 'datetimeoffset'yyyy-MM-ddTHH:mm:ss.fffffffzzz''."' value)); " is 198.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                    throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json TimeSpan value received. Value {0} is not in format 'time'HH:mm:ss''."' value)); " is 160.
Long Statement,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\JsonEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                if (!keyValuePair.Name.LocalName.Equals(FormatterConstants.JsonSyncEntryMetadataElementName' StringComparison.InvariantCulture) && " is 130.
Long Statement,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\JsonEntryInfoWrapper.cs,LoadTypeName,The length of the statement  "                    throw new InvalidOperationException("A uri or a tempId key must be present in the __metadata object. Entity in error: " + entry.ToString(SaveOptions.None)); " is 156.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,StartFeed,The length of the statement  "                new XAttribute(XNamespace.Xmlns + FormatterConstants.AtomDeletedEntryPrefix' FormatterConstants.AtomDeletedEntryNamespace)' " is 123.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,StartFeed,The length of the statement  "            _root.Add(new XElement(atom + FormatterConstants.AtomPubUpdatedElementName' XmlConvert.ToString(DateTime.Now' XmlDateTimeSerializationMode.Utc))); " is 146.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictElement = new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.SyncConlflictElementName : FormatterConstants.SyncErrorElementName)); " is 179.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                conflictElement.Add(new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.ConflictResolutionElementName : FormatterConstants.ErrorDescriptionElementName)' desc)); " is 191.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictingEntryElement = new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.ConflictEntryElementName : FormatterConstants.ErrorEntryElementName)); " is 188.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                    entryElement.Add(new XAttribute(FormatterConstants.ODataMetadataNamespace + FormatterConstants.EtagElementName' live.ServiceMetadata.ETag)); " is 140.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                XElement contentElement = new XElement(FormatterConstants.AtomXmlNamespace + FormatterConstants.AtomPubContentElementName); " is 123.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                XElement tombstoneElement = new XElement(FormatterConstants.AtomDeletedEntryNamespace + FormatterConstants.AtomDeletedEntryElementName); " is 136.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                tombstoneElement.Add(new XElement(FormatterConstants.AtomNamespaceUri + FormatterConstants.AtomReferenceElementName' live.ServiceMetadata.Id)); " is 143.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                tombstoneElement.Add(new XElement(FormatterConstants.SyncNamespace + FormatterConstants.AtomPubCategoryElementName' typeName)); " is 127.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntityContents,The length of the statement  "            XElement contentElement = new XElement(FormatterConstants.ODataMetadataNamespace + FormatterConstants.PropertiesElementName); " is 125.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataAtomWriter.cs,WriteEntityContents,The length of the statement  "                if(fi.PropertyType.IsGenericType && fi.PropertyType.Name.Equals(FormatterConstants.NullableTypeName' StringComparison.InvariantCulture)) " is 136.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,StartFeed,The length of the statement  "                new XAttribute(FormatterConstants.JsonTypeAttributeName' (serverBlob != null) ? JsonElementTypes.String : JsonElementTypes.Object)' " is 131.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictElement = new XElement(((isConflict) ? FormatterConstants.JsonSyncConflictElementName : FormatterConstants.JsonSyncErrorElementName)' " is 150.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                conflictElement.Add(new XElement(((isConflict) ? FormatterConstants.ConflictResolutionElementName : FormatterConstants.ErrorDescriptionElementName)' " is 148.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictingEntryElement = new XElement(((isConflict) ? FormatterConstants.ConflictEntryElementName : FormatterConstants.ErrorEntryElementName)' " is 152.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ODataJsonWriter.cs,WriteEntityContentsToElement,The length of the statement  "                else if (fi.PropertyType.IsGenericType && fi.PropertyType.Name.Equals(FormatterConstants.NullableTypeName' StringComparison.InvariantCulture)) " is 142.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                            throw new InvalidOperationException(string.Format("Entity {0} does not have the any property marked with the [KeyAttribute]."' type.Name)); " is 139.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                        SyncEntityTypeAttribute attr = (SyncEntityTypeAttribute)type.GetCustomAttributes(typeof(SyncEntityTypeAttribute)' true).FirstOrDefault(); " is 137.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                            throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Entity {0} does not have the mandatory SyncEntityTypeAttribute defined."' type.Name)); " is 167.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                            throw new InvalidOperationException(string.Format("Entity {0} does not have the KeyFields defined for the SyncEntityTypeAttribute."' type.Name)); " is 145.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                        ConstructorInfo ctorInfo = type.GetConstructors(BindingFlags.Public | BindingFlags.Instance).Where((e) => e.GetParameters().Count() == 0).FirstOrDefault(); " is 155.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                            throw new InvalidOperationException(string.Format("Type {0} does not have a public parameterless constructor."' type.FullName)); " is 128.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                    entityType = knownTypes.Where((e) => e.FullName.Equals(wrapper.TypeName' StringComparison.InvariantCulture)).FirstOrDefault(); " is 126.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                        throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Unable to find a matching type for entry '{0}' in list of KnownTypes."' wrapper.TypeName)); " is 172.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                        throw new InvalidOperationException(string.Format("Unable to find a matching type for entry '{0}' in the loaded assemblies. Specify the type name in the KnownTypes argument to the SyncReader instance."' wrapper.TypeName)); " is 222.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncReader.cs,GetConflict,The length of the statement  "                    Resolution = (SyncConflictResolution)Enum.Parse(FormatterConstants.SyncConflictResolutionType' _currentEntryWrapper.ConflictDesc' true) " is 135.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncReader.cs,CheckItemType,The length of the statement  "                throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "{0} is not a valid {1} element."' _reader.Name' type)); " is 136.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncWriter.cs,AddItem,The length of the statement  "            WriteItemInternal(entry' tempId' null /*conflicting*/' null/*conflictingTempId*/' null /*desc*/' false /*isconflict*/' emitMetadataOnly); " is 137.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncWriter.cs,AddConflictItem,The length of the statement  "            WriteItemInternal(winningEntry' winningEntryTempId' losingEntry/*conflicting*/' losingEntryTempId' resolution.ToString() /*desc*/' true/*isconflict*/' false/*emitMetadataOnly*/); " is 178.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\SyncWriter.cs,AddErrorItem,The length of the statement  "            WriteItemInternal(liveEntry' null/*liveEntryTempId*/' errorEntry/*conflicting*/' errorEntryTempId' errorDescription/*desc*/' false /*isconflict*/' false/*emitMetadataOnly*/); " is 174.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,DataSetToEntitiesConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\DataSetToEntitiesConverter.cs,ConvertDataSetToEntities,The length of the statement  "                        String.Format(CultureInfo.InvariantCulture' "DataSetToEntitiesConverter.ConvertDataSetToEntities: Unknown type {0}"' tableName)); " is 129.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,DataSetToEntitiesConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\DataSetToEntitiesConverter.cs,BuildPropertyMappingInfo,The length of the statement  "                            string.Format(CultureInfo.InvariantCulture' "No LocalName parameter was provided in SyncEntityPropertyMappingAttribute on Property '{0}' in Type '{1}'"' " is 152.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,TryOpenConnection,The length of the statement  "                        SyncServiceTracer.TraceError("Open connection failed after max retry attempts' due to exception: {0}"' sqlException.Message); " is 125.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetChanges,The length of the statement  "            _sqlSyncProvider = CreateSqlSyncProviderInstance(_clientScopeName' _serverConnectionString' _configuration.SyncObjectSchema); " is 125.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetChanges,The length of the statement  "            _sqlSyncProvider = CreateSqlSyncProviderInstance(_clientScopeName' _serverConnectionString' _configuration.SyncObjectSchema); " is 125.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,ApplyChanges,The length of the statement  "            _sqlSyncProvider = CreateSqlSyncProviderInstance(_clientScopeName' _serverConnectionString' _configuration.SyncObjectSchema); " is 125.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,ApplyChanges,The length of the statement  "                 * SyncKnowledge.GetKnowledgeForItemId could be used for itemid Zero and then we can find the mintickcount for client replica id. " is 128.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SaveBatchesAndReturnFirstBatch,The length of the statement  "            // to each sorted batch. Every batch will have a knowledge that contains the information in the batch. So we have to combine  " is 124.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderChangesApplied,The length of the statement  "                    Microsoft.Synchronization.Services.SqlProvider.SqlEditionHelper.GetServerTickCountFromDatabase(e.Connection as SqlConnection' e.Transaction as SqlTransaction); " is 159.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,The length of the statement  "                //Note: When Error is not null' the conflict type should be ErrorsOccurred. Assert' just to make sure this is always correct. " is 125.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,The length of the statement  "                _converter.GetEntityFromDataRow(e.Conflict.RemoteChange.Columns' e.Conflict.RemoteChange.Rows[0]' syncError.ErrorEntity); " is 121.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,The length of the statement  "                    _converter.GetEntityFromDataRow(e.Conflict.RemoteChange.Columns' e.Conflict.RemoteChange.Rows[0]' syncError.LiveEntity); " is 120.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,SqlSyncProviderApplyChangeFailed,The length of the statement  "                // However the exception will be cleared the next time the client uploads changes' since we increment tickcounts always. " is 120.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetUserConflictResolution,The length of the statement  "                    throw new InvalidOperationException("User SyncConflictInterceptor returned a conflict resolution of 'Merge' but did not specify a merged version."); " is 148.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetUserConflictResolution,The length of the statement  "                _converter.MergeChangeInToDataSet(e.Context.DataSet.Tables[e.Conflict.RemoteChange.TableName]' e.Conflict.RemoteChange.Rows[0]' rowValues' mergedVersion.GetType()); " is 164.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,CreateNewScopeForClient,The length of the statement  "                        SqlSyncDescriptionBuilder.GetDescriptionForScope(_scopeName' string.Empty /*objectPrefix*/' _configuration.SyncObjectSchema' serverConnection); " is 143.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,GetScopeDescription,The length of the statement  "                        SqlSyncDescriptionBuilder.GetDescriptionForScope(_clientScopeName' string.Empty /*objectPrefix*/' _configuration.SyncObjectSchema' serverConnection); " is 149.
Long Statement,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,AddSyncColumnsToDataSet,The length of the statement  "                            // since the sent update version will be set to 0. This results in the DbChangeHandler.ApplyInsert returning LocalSupersedes " is 124.
Long Statement,Microsoft.Synchronization.Data,RowSorter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\RowSorter.cs,PullSortedBatches,The length of the statement  "            BatchRangeSetBuilder rangeSetBuilder = new BatchRangeSetBuilder(_srcKnowledge.GetSyncIdFormatGroup().ItemIdFormat' _tablesInApplyOrder); " is 136.
Complex Conditional,Microsoft.Synchronization.Services,UploadChangesRequestProcessor,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\UploadChangesRequestProcessor.cs,PrepareAndProcessRequestInterceptor,The conditional expression  "_configuration.HasRequestInterceptors(this._scopeName' SyncOperations.Upload) ||                  _configuration.HasTypedRequestInterceptors(this._scopeName) ||                  _configuration.HasConflictInterceptors(this._scopeName) ||                  _configuration.HasTypedConflictInterceptors(this._scopeName)"  is complex.
Complex Conditional,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,CheckForDuplicateAndAddInterceptors,The conditional expression  "(attr.EntityType != null && nonFilteredInfo != null) ||                  (attr.EntityType == null && filteredInfo.Count != 0)"  is complex.
Complex Conditional,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,IsCharHexDigit,The conditional expression  "((c < '0') || (c > '9')) && ((c < 'a') || (c > 'f'))"  is complex.
Complex Conditional,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFatalException,The conditional expression  "((exception is OutOfMemoryException) && !(exception is InsufficientMemoryException)) ||                      (((exception is ThreadAbortException) || (exception is AccessViolationException)) || (exception is SEHException))"  is complex.
Complex Conditional,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ValidateInterceptorSignature,The conditional expression  "methodInfo.ReturnType != SyncServiceConstants.SYNC_CONFLICT_RESOLUTION_TYPE                      || parameters.Length != 2                      || (parameters[0].ParameterType != SyncServiceConstants.SYNC_CONFLICT_CONTEXT_TYPE)                      || (parameters[1].ParameterType != SyncServiceConstants.IOFFLINEENTITY_BYREFTYPE)"  is complex.
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadTypeName".
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadEntryProperties".
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadConflictEntry".
Empty Catch Block,Microsoft.Synchronization.Services,SyncServiceTracer,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncServiceTracer.cs,TraceLine,The method has an empty catch block.
Empty Catch Block,Microsoft.Synchronization.Services,DiagHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Diag\DiagHelper.cs,CheckForClientAccessPolicy,The method has an empty catch block.
Magic Number,Microsoft.Synchronization.Services,HttpContextServiceHost,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\HttpContextServiceHost.cs,ValidateRequestHttpVerbAndSegments,The following statement contains a magic number: RelativeUriSegments.Length > 2
Magic Number,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,GetRequestCommandType,The following statement contains a magic number: _serviceHost.RelativeUriSegments.Length < 2 || String.IsNullOrEmpty(_serviceHost.RelativeUriSegments[1].Trim())
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToByteArray,The following statement contains a magic number: (text.Length % 2) != 0
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToByteArray,The following statement contains a magic number: byte[] buffer = new byte[text.Length / 2];
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToByteArray,The following statement contains a magic number: buffer[index] = (byte)(((byte)(HexCharToNibble(c) << 4)) + HexCharToNibble(ch2));
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryKeyStringToByteArray,The following statement contains a magic number: num2 += 2;
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following statement contains a magic number: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryRemoveQuotes,The following statement contains a magic number: text.Length < 2
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,TryRemoveQuotes,The following statement contains a magic number: string str = text.Substring(1' text.Length - 2);
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,RemoveQuotes,The following statement contains a magic number: string str = text.Substring(1' text.Length - 2);
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,IsKeyValueQuoted,The following statement contains a magic number: ((text.Length < 2) || (text[0] != '\'')) || (text[text.Length - 1] != '\'')
Magic Number,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,IsKeyValueQuoted,The following statement contains a magic number: (num2 == (text.Length - 2)) || (text[num2 + 1] != '\'')
Magic Number,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,The following statement contains a magic number: friendAssemblyName.Length != 3
Magic Number,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,IsFriendClass,The following statement contains a magic number: friendAssemblyName[0].Equals(assemblyName' StringComparison.InvariantCultureIgnoreCase) && friendAssemblyName[2].Equals(publicKey' StringComparison.InvariantCultureIgnoreCase)
Magic Number,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,The following statement contains a magic number: idString = idString.Substring(1' idString.Length - 2);
Magic Number,Microsoft.Synchronization.Services,WebUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\WebUtil.cs,ParseIdStringAndPopulateKeyFields,The following statement contains a magic number: Debug.Assert(2 == keyValue.Length);
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following statement contains a magic number: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SyncUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SyncUtil.cs,GetSizeForType,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Empty:                      return 0;                  case TypeCode.Boolean:                  case TypeCode.Byte:                  case TypeCode.SByte:                      return 1;                  case TypeCode.Int16:                  case TypeCode.UInt16:                  case TypeCode.Char:                      return 2;                  case TypeCode.Int32:                  case TypeCode.UInt32:                  case TypeCode.Single:                      return 4;                  case TypeCode.Int64:                  case TypeCode.UInt64:                  case TypeCode.Double:                  case TypeCode.DateTime:                  case TypeCode.Object: //Treat it as a reference (pointer)                      return 8;                  case TypeCode.Decimal:                      return 16;                  default:                      //Should never get here. So return 0                      return 0;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SyncUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SyncUtil.cs,GetSizeForType,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Empty:                      return 0;                  case TypeCode.Boolean:                  case TypeCode.Byte:                  case TypeCode.SByte:                      return 1;                  case TypeCode.Int16:                  case TypeCode.UInt16:                  case TypeCode.Char:                      return 2;                  case TypeCode.Int32:                  case TypeCode.UInt32:                  case TypeCode.Single:                      return 4;                  case TypeCode.Int64:                  case TypeCode.UInt64:                  case TypeCode.Double:                  case TypeCode.DateTime:                  case TypeCode.Object: //Treat it as a reference (pointer)                      return 8;                  case TypeCode.Decimal:                      return 16;                  default:                      //Should never get here. So return 0                      return 0;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SyncUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SyncUtil.cs,GetSizeForType,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Empty:                      return 0;                  case TypeCode.Boolean:                  case TypeCode.Byte:                  case TypeCode.SByte:                      return 1;                  case TypeCode.Int16:                  case TypeCode.UInt16:                  case TypeCode.Char:                      return 2;                  case TypeCode.Int32:                  case TypeCode.UInt32:                  case TypeCode.Single:                      return 4;                  case TypeCode.Int64:                  case TypeCode.UInt64:                  case TypeCode.Double:                  case TypeCode.DateTime:                  case TypeCode.Object: //Treat it as a reference (pointer)                      return 8;                  case TypeCode.Decimal:                      return 16;                  default:                      //Should never get here. So return 0                      return 0;              }
Magic Number,Microsoft.Synchronization.Services.SqlProvider,SyncUtil,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SyncUtil.cs,GetSizeForType,The following statement contains a magic number: switch (Type.GetTypeCode(type))              {                  case TypeCode.Empty:                      return 0;                  case TypeCode.Boolean:                  case TypeCode.Byte:                  case TypeCode.SByte:                      return 1;                  case TypeCode.Int16:                  case TypeCode.UInt16:                  case TypeCode.Char:                      return 2;                  case TypeCode.Int32:                  case TypeCode.UInt32:                  case TypeCode.Single:                      return 4;                  case TypeCode.Int64:                  case TypeCode.UInt64:                  case TypeCode.Double:                  case TypeCode.DateTime:                  case TypeCode.Object: //Treat it as a reference (pointer)                      return 8;                  case TypeCode.Decimal:                      return 16;                  default:                      //Should never get here. So return 0                      return 0;              }
Magic Number,Microsoft.Synchronization.Data,RowSorter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\RowSorter.cs,PullSortedBatches,The following statement contains a magic number: curRowSize > (_maxSortedBatchSizeInKB * 1024)
Magic Number,Microsoft.Synchronization.Data,RowSorter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\RowSorter.cs,PullSortedBatches,The following statement contains a magic number: (sizeOfBatch + curRowSize) > (_maxSortedBatchSizeInKB * 1024)
Missing Default,Microsoft.Synchronization.Services,SyncServiceConfiguration,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Configuration\SyncServiceConfiguration.cs,InvokeOperationInterceptors,The following switch statement is missing a default case: switch (context.Operation)                  {                      case SyncOperations.Download:                          if (entityType == null)                          {                              methodInfo = (isRequest) ? wrapper.DownloadRequestInterceptor : wrapper.DownloadResponseInterceptor;                          }                          else                          {                              Debug.Assert(!isRequest' "Cannot fire typed interceptor for DownloadRequest");                              methodInfo = wrapper.GetResponseInterceptor(SyncOperations.Download' entityType);                          }                          break;                      case SyncOperations.Upload:                          if (entityType == null)                          {                              methodInfo = (isRequest) ? wrapper.UploadRequestInterceptor : wrapper.UploadResponseInterceptor;                          }                          else                          {                              methodInfo = (isRequest) ?                                   wrapper.GetRequestInterceptor(entityType) :                                   wrapper.GetResponseInterceptor(SyncOperations.Upload' entityType);                          }                          break;                  }
Missing Default,Microsoft.Synchronization.Services,HttpContextServiceHost,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\HttpContextServiceHost.cs,MustNotReturnMessageBody,The following switch statement is missing a default case: switch (statusCode)              {                  case HttpStatusCode.NoContent:                  case HttpStatusCode.ResetContent:                  case HttpStatusCode.NotModified:                      return true;              }
Missing Default,Microsoft.Synchronization.Services,RequestParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestParser.cs,ReadIncomingRequestStreamForPost,The following switch statement is missing a default case: switch (reader.ItemType)                      {                          case ReaderItemType.Entry:                              IOfflineEntity entity = reader.GetItem();                                if (entity.ServiceMetadata.IsTombstone)                              {                                  if (String.IsNullOrEmpty(entity.ServiceMetadata.Id))                                  {                                      throw SyncServiceException.CreateBadRequestError(Strings.TombstoneEntityHasNoId);                                  }                                    WebUtil.ParseIdStringAndPopulateKeyFields(entity' _serviceHost.ServiceBaseUri);                              }                                _entityList.Add(entity);                                bool hasTempId = false;                              if (reader.HasTempId())                              {                                  // Save the entity id to tempId mapping for use later when writing response.                                  _idToTempIdMapping.Add(WebUtil.GenerateOfflineEntityId(entity)' reader.GetTempId());                                    hasTempId = true;                              }                                // Make sure' we have atleast one of Id or TempId                              if (String.IsNullOrEmpty(entity.ServiceMetadata.Id) && !hasTempId)                              {                                  throw SyncServiceException.CreateBadRequestError(Strings.BothIdAndTempIdAreMissing);                              }                                break;                          case ReaderItemType.SyncBlob:                              _syncBlob = reader.GetServerBlob();                                break;                      }
Missing Default,Microsoft.Synchronization.Services,SyncRequestProcessorBase,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\RequestProcessor\SyncRequestProcessorBase.cs,CreateResponseMessage,The following switch statement is missing a default case: switch (serializationFormat)              {                  case SyncSerializationFormat.ODataAtom:                      message.Properties.Add(WebBodyFormatMessageProperty.Name' new WebBodyFormatMessageProperty(WebContentFormat.Xml));                      break;                  case SyncSerializationFormat.ODataJson:                      message.Properties.Add(WebBodyFormatMessageProperty.Name' new WebBodyFormatMessageProperty(WebContentFormat.Json));                      break;              }
Missing Default,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,HasRequestInterceptor,The following switch statement is missing a default case: switch (operation)              {                  case SyncOperations.Download:                      return this._downloadRequestInterceptor != null;                  case SyncOperations.Upload:                      return this._uploadRequestInterceptor != null;              }
Missing Default,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,HasResponseInterceptor,The following switch statement is missing a default case: switch (operation)              {                  case SyncOperations.Download:                      return this._downloadResponseInterceptor != null;                  case SyncOperations.Upload:                      return this._uploadResponseInterceptor != null;              }
Missing Default,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,HasResponseInterceptor,The following switch statement is missing a default case: switch (operation)              {                  case SyncOperations.Download:                      return this._downloadTypedResponseInterceptors.ContainsKey(type);                  case SyncOperations.Upload:                      return this._uploadTypedResponseInterceptors.ContainsKey(type);              }
Missing Default,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,GetResponseInterceptor,The following switch statement is missing a default case: switch (operation)              {                  case SyncOperations.Download:                      return this._downloadTypedResponseInterceptors[type];                  case SyncOperations.Upload:                      return this._uploadTypedResponseInterceptors[type];              }
Missing Default,Microsoft.Synchronization.Services,SyncInterceptorsInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SyncInterceptorsInfoWrapper.cs,HasTypedResponseInterceptors,The following switch statement is missing a default case: switch (operation)              {                  case SyncOperations.Download:                      return _downloadTypedResponseInterceptors.Count > 0;                  case SyncOperations.Upload:                      return _uploadTypedResponseInterceptors.Count > 0;              }
Missing Default,Microsoft.Synchronization.Services,ODataIdParser,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\Utility\ODataIdParser.cs,HexCharToNibble,The following switch statement is missing a default case: switch (c)              {                  case '0':                      return 0;                    case '1':                      return 1;                    case '2':                      return 2;                    case '3':                      return 3;                    case '4':                      return 4;                    case '5':                      return 5;                    case '6':                      return 6;                    case '7':                      return 7;                    case '8':                      return 8;                    case '9':                      return 9;                    case 'A':                  case 'a':                      return 10;                    case 'B':                  case 'b':                      return 11;                    case 'C':                  case 'c':                      return 12;                    case 'D':                  case 'd':                      return 13;                    case 'E':                  case 'e':                      return 14;                    case 'F':                  case 'f':                      return 15;              }
Missing Default,Microsoft.Synchronization.Services.SqlProvider,DataSetToEntitiesConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\DataSetToEntitiesConverter.cs,IsSyncSpecificColumn,The following switch statement is missing a default case: switch (columnName)              {                  case DbSyncSession.SyncCreatePeerKey:                  case DbSyncSession.SyncCreatePeerTimestamp:                  case DbSyncSession.SyncUpdatePeerKey:                  case DbSyncSession.SyncUpdatePeerTimestamp:                      return true;              }
Missing Default,Microsoft.Synchronization.Services.SqlProvider,SqlEditionHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\provider\SqlEditionHelper.cs,RetryLitmus,The following switch statement is missing a default case: switch (sqlException.Number)              {                  // The service has encountered an error                  // processing your request. Please try again.                  // Error code %d.                  case 40197:                  // The service is currently busy. Retry                  // the request after 10 seconds. Code: %d.                  case 40501:                  // Database XXXX on server YYYY is not currently                   // available. Please retry the connection later. If the                   // problem persists' contact customer support' and                   // provide them the session tracing ID of {GUID}                  case 40613:                  //A transport-level error has occurred when                  // receiving results from the server. (provider:                  // TCP Provider' error: 0 - An established connection                  // was aborted by the software in your host machine.)                                 case 10053:                  case 64://same as 10053                  // A transport-level error has occurred when sending                  // the request to the server. An existing connection                  // was forcibly closed by the remote host.                  case 10054:                  // A network-related or instance-specific error                   // occurred while establishing a connection to SQL Server.                    // A connection attempt failed because the connected party                   // did not properly respond after a period of time' or                   // established connection failed because connected host                   // has failed to respond.                  case 10060:                      return true;              }
Missing Default,Microsoft.Synchronization.Services.SqlProvider,SqlSyncProviderService,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncServiceLib\SqlProvider\SqlSyncProviderService.cs,AddSyncColumnsToDataSet,The following switch statement is missing a default case: switch (row.RowState)                      {                          case DataRowState.Added:                              // for rows that have been added we need to                              // update both the create and update versions to be the same.                              // for ex' if a row was deleted and added again' the server update version will otherwise have a higher value                              // since the sent update version will be set to 0. This results in the DbChangeHandler.ApplyInsert returning LocalSupersedes                              // internally after it compares the versions.                              row[DbSyncSession.SyncCreatePeerKey] = 0;                              row[DbSyncSession.SyncCreatePeerTimestamp] = tickCount;                              row[DbSyncSession.SyncUpdatePeerKey] = 0;                              row[DbSyncSession.SyncUpdatePeerTimestamp] = tickCount;                              break;                          case DataRowState.Modified:                              // Only update the update version for modified rows.                              row[DbSyncSession.SyncUpdatePeerKey] = 0;                              row[DbSyncSession.SyncUpdatePeerTimestamp] = tickCount;                              break;                          case DataRowState.Deleted:                              row.RejectChanges();                              row[DbSyncSession.SyncUpdatePeerKey] = 0;                              row[DbSyncSession.SyncUpdatePeerTimestamp] = tickCount;                              row.AcceptChanges();                              row.Delete();                              break;                      }
