Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Synchronization.ClientServices,HttpCacheRequestHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\HttpCacheRequestHandlerAsync.cs,ProcessRequest,The method has 137 lines of code.
Long Method,Microsoft.Synchronization.ClientServices,HttpCacheRequestHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\HttpCacheRequestHandlerAsync.cs,ReadUploadResponse,The method has 110 lines of code.
Long Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The method has 109 lines of code.
Long Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The method has 236 lines of code.
Long Method,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,MergeEntities,The method has 124 lines of code.
Complex Method,Microsoft.Synchronization.ClientServices,CacheController,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheControllerAsync.cs,SynchronizeAsync,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,CacheController,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheControllerAsync.cs,ProcessCacheRequestResults,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.ClientServices,HttpCacheRequestHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\HttpCacheRequestHandlerAsync.cs,ProcessRequest,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,IsWhitespace,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToType,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToInt,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToLong,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToSingle,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToDouble,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,GetString,Cyclomatic complexity of the method is 24
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToObject,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadChars,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,TryEnsureBytes,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetEscapedChars,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetCharEntity,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToString,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt32,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt64,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,GetAttributeNode,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,BufferElement,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadValueChunk,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,Cyclomatic complexity of the method is 40
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadAttributes,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,UnescapeJsonString,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadContentAs,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteEndAttribute,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteEndElement,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteStartAttribute,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteStartElement,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteEscapedJsonString,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WritePrimitiveValue,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,GetEdmType,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonEntryInfoWrapper.cs,LoadTypeName,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteEntityContentsToElement,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetValueFromType,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,CreateTable,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,GetChanges,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,ReadCol,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Synchronization.ClientServices.SQLite,Orm,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,SqlType,Cyclomatic complexity of the method is 11
Long Parameter List,Microsoft.Synchronization.ClientServices,CacheRequestResult,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheRequestResult.cs,CacheRequestResult,The method has 6 parameters. Parameters: id' response' uploadCount' error' step' state
Long Parameter List,Microsoft.Synchronization.ClientServices,CacheRequestResult,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheRequestResult.cs,CacheRequestResult,The method has 5 parameters. Parameters: id' changeSet' error' step' state
Long Parameter List,Microsoft.Synchronization.ClientServices,SyncProgressEvent,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\SyncProgressEventArgs.cs,SyncProgressEvent,The method has 6 parameters. Parameters: stage' duration' isLastBatch' changes' conflicts' updatedItems
Long Parameter List,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,Equals2,The method has 5 parameters. Parameters: offset1' length1' bufferReader2' offset2' length2
Long Parameter List,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The method has 5 parameters. Parameters: buffer' offset' count' chars' charOffset
Long Parameter List,Microsoft.Synchronization.ClientServices,XmlNode,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlNode.cs,XmlNode,The method has 7 parameters. Parameters: nodeType' localName' value' nodeFlags' readState' attributeTextNode' depthDelta
Long Parameter List,Microsoft.Synchronization.ClientServices,XmlTextNode,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlNode.cs,XmlTextNode,The method has 7 parameters. Parameters: nodeType' localName' value' nodeFlags' readState' attributeTextNode' depthDelta
Long Parameter List,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\SyncWriter.cs,WriteItemInternal,The method has 7 parameters. Parameters: live' liveTempId' conflicting' conflictingTempId' desc' isConflict' emitMetadataOnly
Long Parameter List,Microsoft.Synchronization.ClientServices.SQLite,SQLiteContext,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteContext.cs,SQLiteContext,The method has 6 parameters. Parameters: schema' scopeName' databasePath' uri' cookieContainer' uploadBatchSize
Long Parameter List,Microsoft.Synchronization.ClientServices.SQLite,SQLiteContext,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteContext.cs,CheckSchemaAndUriAsync,The method has 5 parameters. Parameters: offlineSchema' uri' scope' cancellationToken' progress
Long Identifier,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,,The length of the parameter expectingFirstElementInNonPrimitiveChild is 40.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter ErrorDescriptionElementNamePascalCasing is 39.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter AtomDateTimeOffsetLexicalRepresentation is 39.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter AtomDateTimeLexicalRepresentation is 33.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter JsonSyncEntryMetadataElementName is 32.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter JsonDateTimeOffsetLexicalRepresentation is 39.
Long Identifier,Microsoft.Synchronization.Services.Formatters,FormatterConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterConstants.cs,,The length of the parameter JsonDateTimeLexicalRepresentation is 33.
Long Identifier,Microsoft.Synchronization.ClientServices.SQLite,SQLiteConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteConstants.cs,,The length of the parameter SelectItemPrimaryKeyFromTrackingChangesWithOemID is 48.
Long Identifier,Microsoft.Synchronization.ClientServices.SQLite,SQLiteConstants,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteConstants.cs,,The length of the parameter InsertOrReplaceTrackingFromChanges is 34.
Long Identifier,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,MergeEntities,The length of the parameter querySelectItemPrimaryKeyFromTrackingChangesWithOemID is 53.
Long Statement,Microsoft.Synchronization.ClientServices,CacheController,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheControllerAsync.cs,EnqueueUploadRequest,The length of the statement  "                        progress.Report(new SyncProgressEvent(SyncStage.GetChanges' DateTime.Now.Subtract(durationStartDate)' true' (changeSet != null ? changeSet.Data : null))); " is 154.
Long Statement,Microsoft.Synchronization.ClientServices,CacheController,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheControllerAsync.cs,EnqueueDownloadRequest,The length of the statement  "                        progress.Report(new SyncProgressEvent(SyncStage.DownloadingChanges' DateTime.Now.Subtract(durationStartDate)' true' (requestResult.ChangeSet != null ? requestResult.ChangeSet.Data : null))); " is 190.
Long Statement,Microsoft.Synchronization.ClientServices,CacheController,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\CacheControllerAsync.cs,ProcessCacheRequestResults,The length of the statement  "                if (cacheRequestResult.ChangeSet != null && cacheRequestResult.ChangeSet.Data != null && cacheRequestResult.ChangeSet.Data.Count > 0) " is 133.
Long Statement,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToByteArray,The length of the statement  "            //            int bytes2 = ValueHandle.Base64Encoding.GetBytes(this.bufferReader.Buffer' this.offset' this.length' bytes1' 0); " is 126.
Long Statement,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToByteArray,The length of the statement  "            //    throw DiagnosticUtility.ExceptionUtility.ThrowHelperError((Exception)new XmlException(ex.Message' ex.InnerException)); " is 124.
Long Statement,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadBase64,The length of the statement  "            //            actual = ValueHandle.Base64Encoding.GetBytes(this.bufferReader.Buffer' this.offset' charCount' buffer' offset); " is 125.
Long Statement,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadChars,The length of the statement  "                // If we're asking for more than are possibly available' or more than are truly available then we can return the entire thing " is 125.
Long Statement,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadChars,The length of the statement  "                if (charCount >= encoding.GetMaxCharCount(byteCount) || charCount >= encoding.GetCharCount(bytes' byteOffset' byteCount)) " is 121.
Long Statement,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetChars,The length of the statement  "                    return charOffset + XmlConverter.ToChars(currentBuffer' iOffset + charOffset' iLength - charOffset' iChars' charOffset); " is 120.
Long Statement,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The length of the statement  "            var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24; " is 122.
Long Statement,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The length of the statement  "            var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24; " is 122.
Long Statement,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The length of the statement  "            var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24; " is 124.
Long Statement,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The length of the statement  "            var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24; " is 126.
Long Statement,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,IsStartElement,The length of the statement  "            if (slocalName == null || namespaceUri == null || this.Node.NodeType != XmlNodeType.Element && !this.IsStartElement() || !(this.Node.LocalName == slocalName)) " is 158.
Long Statement,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The length of the statement  "                            if (TryGetByte(out ch) && !IsWhitespace(ch) && (ch != Keys.Comma && ch != Keys.RightClosingBrace) && ch != Keys.RightClosingBracket) " is 132.
Long Statement,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The length of the statement  "                            if (TryGetByte(out ch) && !IsWhitespace(ch) && (ch != Keys.Comma && ch != Keys.RightClosingBrace) && ch != Keys.RightClosingBracket) " is 132.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "            XElement conflictElement = entry.Element(FormatterConstants.SyncNamespace + FormatterConstants.SyncConlflictElementName); " is 121.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement resolutionType = conflictElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ConflictResolutionElementName); " is 135.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement conflictingChangeElement = conflictElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ConflictEntryElementName); " is 140.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement errorDesc = errorElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ErrorDescriptionElementName); " is 125.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadConflictEntry,The length of the statement  "                XElement errorChangeElement = errorElement.Element(FormatterConstants.SyncNamespace + FormatterConstants.ErrorEntryElementName); " is 128.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,GetSubElement,The length of the statement  "            XElement element = entryElement.Element(FormatterConstants.AtomNamespaceUri + FormatterConstants.AtomPubEntryElementName); " is 122.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,GetSubElement,The length of the statement  "                element = entryElement.Element(FormatterConstants.AtomDeletedEntryNamespace + FormatterConstants.AtomDeletedEntryElementName); " is 126.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                    throw new InvalidOperationException("A atom:ref element must be present for a tombstone entry. Entity in error: " + entry.ToString(SaveOptions.None)); " is 150.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                foreach (XElement linkElement in entry.Elements(FormatterConstants.AtomXmlNamespace + FormatterConstants.AtomPubLinkElementName)) " is 129.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                                throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Multiple Edit Url's found for atom with {0}: '{1}'"' (this.Id == null) ? "TempId" : "Id"' (this.Id == null) ? this.TempId : this.Id)); " is 215.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                            XAttribute nullableAttr = property.Attribute(FormatterConstants.ODataMetadataNamespace + FormatterConstants.AtomPubIsNullElementName); " is 134.
Long Statement,Microsoft.Synchronization.Services.Formatters,AtomEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\AtomEntryInfoWrapper.cs,LoadTypeName,The length of the statement  "                    string.Format(CultureInfo.InvariantCulture' "Category element not found in {0} element."' (isTombstone)? FormatterConstants.AtomDeletedEntryElementName : FormatterConstants.AtomPubEntryElementName)); " is 199.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,ParseDateTimeFromString,The length of the statement  "                throw new InvalidOperationException(string.Format(USCultureInfo' "Invalid Date/Time value received. Unable to parse value {0} to type {1}."' value' type.Name)); " is 160.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                        throw new InvalidOperationException(string.Format("Invalid JSON DateTime value received. Value '{0}' is not a valid DateTime"' ticks)); " is 135.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                    throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json DateTime value received. Value {0} is not in format '\/Date(ticks)\/'."' value)); " is 161.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                    throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json DateTimeOffset value received. Value {0} is not in format 'datetimeoffset'yyyy-MM-ddTHH:mm:ss.fffffffzzz''."' value)); " is 198.
Long Statement,Microsoft.Synchronization.Services.Formatters,FormatterUtilities,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\FormatterUtilities.cs,ParseJsonString,The length of the statement  "                throw new InvalidOperationException(string.Format(USCultureInfo' @"Invalid Json TimeSpan value received. Value {0} is not in format 'time'HH:mm:ss''."' value)); " is 160.
Long Statement,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                if (!keyValuePair.Name.LocalName.Equals(FormatterConstants.JsonSyncEntryMetadataElementName' StringComparison.CurrentCultureIgnoreCase) && " is 138.
Long Statement,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonEntryInfoWrapper.cs,LoadEntryProperties,The length of the statement  "                    !keyValuePair.Name.LocalName.Equals(FormatterConstants.IsDeletedElementName' StringComparison.CurrentCultureIgnoreCase)) " is 120.
Long Statement,Microsoft.Synchronization.Services.Formatters,JsonEntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonEntryInfoWrapper.cs,LoadTypeName,The length of the statement  "                    throw new InvalidOperationException("A uri or a tempId key must be present in the __metadata object. Entity in error: " + entry.ToString(SaveOptions.None)); " is 156.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,StartFeed,The length of the statement  "                new XAttribute(XNamespace.Xmlns + FormatterConstants.AtomDeletedEntryPrefix' FormatterConstants.AtomDeletedEntryNamespace)' " is 123.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictElement = new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.SyncConlflictElementName : FormatterConstants.SyncErrorElementName)); " is 179.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                conflictElement.Add(new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.ConflictResolutionElementName : FormatterConstants.ErrorDescriptionElementName)' desc)); " is 191.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictingEntryElement = new XElement(FormatterConstants.SyncNamespace + ((isConflict) ? FormatterConstants.ConflictEntryElementName : FormatterConstants.ErrorEntryElementName)); " is 188.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                    entryElement.Add(new XAttribute(FormatterConstants.ODataMetadataNamespace + FormatterConstants.EtagElementName' live.GetServiceMetadata().ETag)); " is 145.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "                XElement contentElement = new XElement(FormatterConstants.AtomXmlNamespace + FormatterConstants.AtomPubContentElementName); " is 123.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "            XElement tombstoneElement = new XElement(FormatterConstants.AtomDeletedEntryNamespace + FormatterConstants.AtomDeletedEntryElementName); " is 136.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "            tombstoneElement.Add(new XElement(FormatterConstants.AtomNamespaceUri + FormatterConstants.AtomReferenceElementName' live.GetServiceMetadata().Id)); " is 148.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntry,The length of the statement  "            tombstoneElement.Add(new XElement(FormatterConstants.SyncNamespace + FormatterConstants.AtomPubCategoryElementName' typeName)); " is 127.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntityContents,The length of the statement  "            XElement contentElement = new XElement(FormatterConstants.ODataMetadataNamespace + FormatterConstants.PropertiesElementName); " is 125.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataAtomWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataAtomWriter.cs,WriteEntityContents,The length of the statement  "                if(fi.PropertyType.IsGenericType() && fi.PropertyType.Name.Equals(FormatterConstants.NullableTypeName' StringComparison.CurrentCultureIgnoreCase)) " is 146.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,StartFeed,The length of the statement  "                new XAttribute(FormatterConstants.JsonTypeAttributeName' (serverBlob != null) ? JsonElementTypes.String : JsonElementTypes.Object)' " is 131.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictElement = new XElement(((isConflict) ? FormatterConstants.JsonSyncConflictElementName : FormatterConstants.JsonSyncErrorElementName)' " is 150.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                conflictElement.Add(new XElement(((isConflict) ? FormatterConstants.ConflictResolutionElementName : FormatterConstants.ErrorDescriptionElementName)' " is 148.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteItemInternal,The length of the statement  "                XElement conflictingEntryElement = new XElement(((isConflict) ? FormatterConstants.ConflictEntryElementName : FormatterConstants.ErrorEntryElementName)' " is 152.
Long Statement,Microsoft.Synchronization.Services.Formatters,ODataJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ODataJsonWriter.cs,WriteEntityContentsToElement,The length of the statement  "                else if (fi.PropertyType.IsGenericType() && fi.PropertyType.Name.Equals(FormatterConstants.NullableTypeName' StringComparison.CurrentCultureIgnoreCase)) " is 152.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                                throw new InvalidOperationException(string.Format("Entity {0} does not have the any property marked with the [DataAnnotations.KeyAttribute]. or [SQLite.PrimaryKeyAttribute]"' type.Name)); " is 187.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetPropertyInfoMapping,The length of the statement  "                            throw new InvalidOperationException(string.Format("Type {0} does not have a public parameterless constructor."' type.FullName)); " is 128.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                    entityType = knownTypes.FirstOrDefault(e => e.FullName.Equals(wrapper.TypeName' StringComparison.CurrentCultureIgnoreCase)); " is 124.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                        throw new InvalidOperationException(string.Format(CultureInfo.InvariantCulture' "Unable to find a matching type for entry '{0}' in list of KnownTypes."' wrapper.TypeName)); " is 172.
Long Statement,Microsoft.Synchronization.Services.Formatters,ReflectionUtility,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\ReflectionUtility.cs,GetObjectForType,The length of the statement  "                    throw new InvalidOperationException(string.Format("Unable to find a matching type for entry '{0}' in the loaded assemblies. Specify the type name in the KnownTypes argument to the SyncReader instance."' wrapper.TypeName)); " is 222.
Long Statement,Microsoft.Synchronization.Services.Formatters,SyncWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\SyncWriter.cs,AddItem,The length of the statement  "            WriteItemInternal(entry' tempId' null /*conflicting*/' null/*conflictingTempId*/' null /*desc*/' false /*isconflict*/' emitMetadataOnly); " is 137.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,SQLiteContext,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteContext.cs,OnChangeSetUploaded,The length of the statement  "                        // This approach assumes that there are not duplicates between the conflicts and the updated entities (there shouldn't be) " is 122.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,MergeEntities,The length of the statement  "                var queryUpdate = String.Format(SQLiteConstants.UpdateOrIgnoreFromChanges' map.TableName' declValuePairsStr' map.GetPrimaryKeysWhereClause); " is 140.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,MergeEntities,The length of the statement  "                var queryUpdateTracking = String.Format(SQLiteConstants.InsertOrReplaceTrackingFromChanges' map.TableName' declTracking' declValuesTracking); " is 141.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,MergeEntities,The length of the statement  "                var queryDeleteTracking = String.Format(SQLiteConstants.DeleteTrackingFromChanges' map.TableName' map.GetPrimaryKeysWhereClause); " is 129.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,SQLiteManager,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,SaveConfiguration,The length of the statement  "                            : "Insert into ScopeInfoTable (ServiceUri' LastSyncDate' Configuration' AnchorBlob' ScopeName) Values (?' ?' ?' ?' ?);"; " is 120.
Long Statement,Microsoft.Synchronization.ClientServices.SQLite,Orm,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,SqlType,The length of the statement  "            if (clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)) " is 171.
Complex Conditional,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToSingle,The conditional expression  "(value >= Single.MinValue && value <= Single.MaxValue) || double.IsInfinity(value) || double.IsNaN(value)"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetQuoteCharEntity,The conditional expression  "length != 6 ||                  iBuffer[offset + 1] != (byte)'q' ||                  iBuffer[offset + 2] != (byte)'u' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'t'"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetAmpersandCharEntity,The conditional expression  "length != 5 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'m' ||                  iBuffer[offset + 3] != (byte)'p'"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetApostropheCharEntity,The conditional expression  "length != 6 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'p' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'s'"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The conditional expression  "chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The conditional expression  "hourDelta >= 0 && (value < DateTime.MaxValue - ts) ||                          hourDelta < 0 && (value > DateTime.MinValue - ts)"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ComputeNumericalTextLength,The conditional expression  "ch == Keys.Comma || ch == Keys.RightClosingBrace || ch == Keys.RightClosingBracket || IsWhitespace(ch)"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,IsStartElement,The conditional expression  "slocalName == null || namespaceUri == null || this.Node.NodeType != XmlNodeType.Element && !this.IsStartElement() || !(this.Node.LocalName == slocalName)"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The conditional expression  "buffer[offset + 1] != Keys.LowerA                                  || buffer[offset + 2] != Keys.LowerL                                  || buffer[offset + 3] != Keys.LowerS                                  || buffer[offset + 4] != Keys.LowerE"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The conditional expression  "TryGetByte(out ch) && !IsWhitespace(ch) && (ch != Keys.Comma && ch != Keys.RightClosingBrace) && ch != Keys.RightClosingBracket"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The conditional expression  "TryGetByte(out ch) && !IsWhitespace(ch) && (ch != Keys.Comma && ch != Keys.RightClosingBrace) && ch != Keys.RightClosingBracket"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The conditional expression  "(ch == (byte)'-')                              || (((byte)'0' <= ch) && (ch <= (byte)'9'))                              || (ch == (byte)'I')                              || (ch == (byte)'N')"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadAttributes,The conditional expression  "nextByte == '-' ||                          (nextByte <= '9' && nextByte >= '0') ||                          nextByte == 'N' ||                          nextByte == 'I'"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,CharacterNeedsEscaping,The conditional expression  "ch == Keys.SlashForward || ch == Keys.DoubleQuote || ch < Keys.Space || ch == Keys.BackSlash"  is complex.
Complex Conditional,Microsoft.Synchronization.ClientServices.SQLite,Orm,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,SqlType,The conditional expression  "clrType == typeof(Boolean) || clrType == typeof(Byte) || clrType == typeof(UInt16) || clrType == typeof(SByte) || clrType == typeof(Int16) || clrType == typeof(Int32)"  is complex.
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadTypeName".
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadEntryProperties".
Virtual Method Call from Constructor,Microsoft.Synchronization.Services.Formatters,EntryInfoWrapper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\EntryInfoWrapper.cs,EntryInfoWrapper,The constructor "EntryInfoWrapper" calls a virtual method "LoadConflictEntry".
Magic Number,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadUnicodeChars,The following statement contains a magic number: int charCount = Math.Min(count' this.length / 2);
Magic Number,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadUnicodeChars,The following statement contains a magic number: chars[iOffset + index] = (char)this.bufferReader.GetInt16(this.offset + index * 2);
Magic Number,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadUnicodeChars,The following statement contains a magic number: this.offset += charCount * 2;
Magic Number,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,TryReadUnicodeChars,The following statement contains a magic number: this.length -= charCount * 2;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,Close,The following statement contains a magic number: streamBuffer != null && streamBuffer.Length > 4096
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,TryEnsureBytes,The following statement contains a magic number: var numBuffer = new byte[Math.Max(newOffsetMax' buffer.Length * 2)];
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadMultiByteUInt31,The following statement contains a magic number: int num4 = num2 | (j & sbyte.MaxValue) << 7;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadMultiByteUInt31,The following statement contains a magic number: int num6 = num4 | (k & sbyte.MaxValue) << 14;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadMultiByteUInt31,The following statement contains a magic number: int num8 = num6 | (l & sbyte.MaxValue) << 21;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadMultiByteUInt31,The following statement contains a magic number: int num10 = num8 | m << 28;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadMultiByteUInt31,The following statement contains a magic number: (m & 248) != 0
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadUInt16,The following statement contains a magic number: byte[] currentBuffer = GetBuffer(2' out currentOffset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadUInt16,The following statement contains a magic number: int num = currentBuffer[currentOffset] + (currentBuffer[currentOffset + 1] << 8);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadUInt16,The following statement contains a magic number: Advance(2);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: byte[] currentBuffer = GetBuffer(4' out currentOffset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: byte b3 = currentBuffer[currentOffset + 2];
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: byte b4 = currentBuffer[currentOffset + 3];
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: Advance(4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: return (((b4 << 8) + b3 << 8) + b2 << 8) + b1;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: return (((b4 << 8) + b3 << 8) + b2 << 8) + b1;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt32,The following statement contains a magic number: return (((b4 << 8) + b3 << 8) + b2 << 8) + b1;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadInt64,The following statement contains a magic number: return (hi << 32) + lo;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadUniqueId,The following statement contains a magic number: var b = GetBuffer(16' out currentOffset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadUniqueId,The following statement contains a magic number: Advance(16);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadGuid,The following statement contains a magic number: GetBuffer(16' out currentOffset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,ReadGuid,The following statement contains a magic number: Advance(16);
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetCharBuffer,The following statement contains a magic number: count > 1024
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetCharEntity,The following statement contains a magic number: length < 3
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetCharEntity,The following statement contains a magic number: switch (buffer[offset + 1])              {                  case Keys.LowerA:                      // if it's an "&amp;"                      if (numArray[iOffset + 2] == Keys.LowerM)                          return GetAmpersandCharEntity(iOffset' length);                        return GetApostropheCharEntity(iOffset' length);                  case Keys.Diese:                      if (numArray[iOffset + 2] == Keys.LowerX)                          return GetHexCharEntity(iOffset' length);                      return GetDecimalCharEntity(iOffset' length);                  case Keys.LowerG:                      return GetGreaterThanCharEntity(length);                  case Keys.LowerL:                      return GetLessThanCharEntity(iOffset' length);                  case Keys.LowerQ:                      return GetQuoteCharEntity(iOffset' length);                  default:                      throw new Exception("XmlExceptionHelper.ThrowInvalidCharRef(this.reader);");              }
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetCharEntity,The following statement contains a magic number: switch (buffer[offset + 1])              {                  case Keys.LowerA:                      // if it's an "&amp;"                      if (numArray[iOffset + 2] == Keys.LowerM)                          return GetAmpersandCharEntity(iOffset' length);                        return GetApostropheCharEntity(iOffset' length);                  case Keys.Diese:                      if (numArray[iOffset + 2] == Keys.LowerX)                          return GetHexCharEntity(iOffset' length);                      return GetDecimalCharEntity(iOffset' length);                  case Keys.LowerG:                      return GetGreaterThanCharEntity(length);                  case Keys.LowerL:                      return GetLessThanCharEntity(iOffset' length);                  case Keys.LowerQ:                      return GetQuoteCharEntity(iOffset' length);                  default:                      throw new Exception("XmlExceptionHelper.ThrowInvalidCharRef(this.reader);");              }
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetLessThanCharEntity,The following statement contains a magic number: length != 4 ||                  iBuffer[offset + 1] != (byte)'l' ||                  iBuffer[offset + 2] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetLessThanCharEntity,The following statement contains a magic number: length != 4 ||                  iBuffer[offset + 1] != (byte)'l' ||                  iBuffer[offset + 2] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetGreaterThanCharEntity,The following statement contains a magic number: length != 4 ||                  iBuffer[offset + 1] != (byte)'g' ||                  iBuffer[offset + 2] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetGreaterThanCharEntity,The following statement contains a magic number: length != 4 ||                  iBuffer[offset + 1] != (byte)'g' ||                  iBuffer[offset + 2] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetQuoteCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'q' ||                  iBuffer[offset + 2] != (byte)'u' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetQuoteCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'q' ||                  iBuffer[offset + 2] != (byte)'u' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetQuoteCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'q' ||                  iBuffer[offset + 2] != (byte)'u' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetQuoteCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'q' ||                  iBuffer[offset + 2] != (byte)'u' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'t'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetAmpersandCharEntity,The following statement contains a magic number: length != 5 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'m' ||                  iBuffer[offset + 3] != (byte)'p'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetAmpersandCharEntity,The following statement contains a magic number: length != 5 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'m' ||                  iBuffer[offset + 3] != (byte)'p'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetAmpersandCharEntity,The following statement contains a magic number: length != 5 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'m' ||                  iBuffer[offset + 3] != (byte)'p'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetApostropheCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'p' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'s'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetApostropheCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'p' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'s'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetApostropheCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'p' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'s'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetApostropheCharEntity,The following statement contains a magic number: length != 6 ||                  iBuffer[offset + 1] != (byte)'a' ||                  iBuffer[offset + 2] != (byte)'p' ||                  iBuffer[offset + 3] != (byte)'o' ||                  iBuffer[offset + 4] != (byte)'s'
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimalCharEntity,The following statement contains a magic number: value = value * 10 + (ch - '0');
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimalCharEntity,The following statement contains a magic number: value > 1114111
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int1 = numArray[0 + iOffset] | numArray[1 + iOffset] << 8 | numArray[2 + iOffset] << 16 | numArray[3 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int2 = numArray[4 + iOffset] | numArray[5 + iOffset] << 8 | numArray[6 + iOffset] << 16 | numArray[7 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int3 = numArray[8 + iOffset] | numArray[9 + iOffset] << 8 | numArray[10 + iOffset] << 16 | numArray[11 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetDecimal,The following statement contains a magic number: var int4 = numArray[12 + iOffset] | numArray[13 + iOffset] << 8 | numArray[14 + iOffset] << 16 | numArray[15 + iOffset] << 24;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetHexCharEntity,The following statement contains a magic number: value = value * 16 + digit;
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetHexCharEntity,The following statement contains a magic number: value > 1114111
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetInt16,The following statement contains a magic number: return (short)(numArray[iOffset] + (numArray[iOffset + 1] << 8));
Magic Number,Microsoft.Synchronization.ClientServices,XmlBufferReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlBufferReader.cs,GetGuid,The following statement contains a magic number: guid = new byte[16];
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToString,The following statement contains a magic number: var numArray = new byte[64];
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt32,The following statement contains a magic number: (uint)digit > 9
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt32,The following statement contains a magic number: value < int.MinValue / 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt32,The following statement contains a magic number: value *= 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseInt64,The following statement contains a magic number: count < 11
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: count < 1 || count > 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: ((uint)ch) >= 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: pow10 *= 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: value = value * 10 + ch;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: count > 8
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: ((uint)ch) >= 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: value = value * 10 + ch;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseSingle,The following statement contains a magic number: count == 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: count < 1 || count > 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: ((uint)ch) >= 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: pow10 *= 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: value = value * 10 + ch;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: ((uint)ch) >= 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: value = value * 10 + ch;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDouble,The following statement contains a magic number: count == 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInt32D2,The following statement contains a magic number: ch1 > 9 || ch2 > 9
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInt32D2,The following statement contains a magic number: ch1 > 9 || ch2 > 9
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInt32D2,The following statement contains a magic number: return 10 * ch1 + ch2;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInt32D7,The following statement contains a magic number: ch > 9
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInt32D7,The following statement contains a magic number: value = value * 10 + ch;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: count < 19
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: chars[offset + 4] != '-' || chars[offset + 7] != '-' || chars[offset + 10] != 'T' ||                  chars[offset + 13] != ':' || chars[offset + 16] != ':'
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int year = ToInt32D4(chars' offset + 0' 4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int month = ToInt32D2(chars' offset + 5);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int day = ToInt32D2(chars' offset + 8);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int hour = ToInt32D2(chars' offset + 11);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int minute = ToInt32D2(chars' offset + 14);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: int second = ToInt32D2(chars' offset + 17);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: offset += 19;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: digitCount < 1 || digitCount > 7
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: ticks *= 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,TryParseDateTime,The following statement contains a magic number: i < 7
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: buffer[offset + 2] = (byte)'u';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: buffer[offset + 3] = (byte)'e';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: return 4;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: buffer[offset + 2] = (byte)'l';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: buffer[offset + 3] = (byte)'s';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: buffer[offset + 4] = (byte)'e';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: return 5;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsR,The following statement contains a magic number: int valueDiv10 = value / 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsR,The following statement contains a magic number: chars[--offset] = (byte)('0' + (value - valueDiv10 * 10));
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsR,The following statement contains a magic number: value >= 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: int count = ToCharsR(value' chars' offset + 16);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: Buffer.BlockCopy(chars' offset + 16 - count' chars' offset' count);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsR,The following statement contains a magic number: long valueDiv10 = value / 10;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsR,The following statement contains a magic number: chars[--offset] = (byte)('0' + (int)(value - valueDiv10 * 10));
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: int count = ToCharsR(value' chars' offset + 32);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: Buffer.BlockCopy(chars' offset + 32 - count' chars' offset' count);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInfinity,The following statement contains a magic number: buffer[offset + 2] = (byte)'N';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInfinity,The following statement contains a magic number: buffer[offset + 3] = (byte)'F';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInfinity,The following statement contains a magic number: return 4;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInfinity,The following statement contains a magic number: buffer[offset + 2] = (byte)'F';
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToInfinity,The following statement contains a magic number: return 3;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToZero,The following statement contains a magic number: return 2;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD2,The following statement contains a magic number: value < 10
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD2,The following statement contains a magic number: return 2;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD4,The following statement contains a magic number: ToCharsD2(value/100' chars' offset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD4,The following statement contains a magic number: ToCharsD2(value%100' chars' offset + 2);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD4,The following statement contains a magic number: ToCharsD2(value%100' chars' offset + 2);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD4,The following statement contains a magic number: return 4;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD7,The following statement contains a magic number: int zeroCount = 7 - ToCharsR(value' chars' offset + 7);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD7,The following statement contains a magic number: int zeroCount = 7 - ToCharsR(value' chars' offset + 7);
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToCharsD7,The following statement contains a magic number: int count = 7;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: const long TicksPerMillisecond = 10000;
Magic Number,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToChars,The following statement contains a magic number: const long TicksPerSecond = TicksPerMillisecond * 1000;
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ResetState,The following statement contains a magic number: charactersToSkipOnNextRead = new byte[2];
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,BreakText,The following statement contains a magic number: byte b = (byte)(buffer[offset + length] << 2);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,BreakText,The following statement contains a magic number: int byteCount = 2;
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,BreakText,The following statement contains a magic number: byteCount > 4
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: byte[] buffer = this.BufferReader.GetBuffer(5' out offset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: string string1 = Encoding.UTF8.GetString(buffer' offset' 4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: this.BufferReader.Advance(4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: buffer = this.BufferReader.GetBuffer(5' out offset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: string string2 = Encoding.UTF8.GetString(buffer' offset' 4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: this.BufferReader.Advance(4);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadEscapedCharacter,The following statement contains a magic number: buffer[offset + 4] == Keys.DoubleQuote
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: byte[] buffer = this.BufferReader.GetBuffer(3' out offset);
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: buffer[offset + 1] == 191 && (buffer[offset + 2] == 190 || buffer[offset + 2] == 191)
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: buffer[offset + 1] == 191 && (buffer[offset + 2] == 190 || buffer[offset + 2] == 191)
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: buffer[offset + 1] == 191 && (buffer[offset + 2] == 190 || buffer[offset + 2] == 191)
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: buffer[offset + 1] == 191 && (buffer[offset + 2] == 190 || buffer[offset + 2] == 191)
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: buffer[offset + 1] == 191 && (buffer[offset + 2] == 190 || buffer[offset + 2] == 191)
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadNonFFFE,The following statement contains a magic number: return 3;
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,ReadQuotedText,The following statement contains a magic number: escaped && this.BufferReader.GetByte() == 239
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,UnescapeJsonString,The following statement contains a magic number: switch (val[index])                      {                          case 'n':                              stringBuilder.Append('\n');                              break;                          case 'r':                              stringBuilder.Append('\r');                              break;                          case 't':                              stringBuilder.Append('\t');                              break;                          case 'u':                              if (index + 3 >= val.Length)                                  throw new XmlException("JsonEncounteredUnexpectedCharacter");                                stringBuilder.Append(ParseChar(val.Substring(index + 1' 4)' NumberStyles.HexNumber));                              index += 4;                              break;                          case 'b':                              stringBuilder.Append('\b');                              break;                          case 'f':                              stringBuilder.Append('\f');                              break;                          case '/':                          case '\\':                          case '"':                          case '\'':                              stringBuilder.Append(val[index]);                              break;                      }
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,UnescapeJsonString,The following statement contains a magic number: switch (val[index])                      {                          case 'n':                              stringBuilder.Append('\n');                              break;                          case 'r':                              stringBuilder.Append('\r');                              break;                          case 't':                              stringBuilder.Append('\t');                              break;                          case 'u':                              if (index + 3 >= val.Length)                                  throw new XmlException("JsonEncounteredUnexpectedCharacter");                                stringBuilder.Append(ParseChar(val.Substring(index + 1' 4)' NumberStyles.HexNumber));                              index += 4;                              break;                          case 'b':                              stringBuilder.Append('\b');                              break;                          case 'f':                              stringBuilder.Append('\f');                              break;                          case '/':                          case '\\':                          case '"':                          case '\'':                              stringBuilder.Append(val[index]);                              break;                      }
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,UnescapeJsonString,The following statement contains a magic number: switch (val[index])                      {                          case 'n':                              stringBuilder.Append('\n');                              break;                          case 'r':                              stringBuilder.Append('\r');                              break;                          case 't':                              stringBuilder.Append('\t');                              break;                          case 'u':                              if (index + 3 >= val.Length)                                  throw new XmlException("JsonEncounteredUnexpectedCharacter");                                stringBuilder.Append(ParseChar(val.Substring(index + 1' 4)' NumberStyles.HexNumber));                              index += 4;                              break;                          case 'b':                              stringBuilder.Append('\b');                              break;                          case 'f':                              stringBuilder.Append('\f');                              break;                          case '/':                          case '\\':                          case '"':                          case '\'':                              stringBuilder.Append(val[index]);                              break;                      }
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,EnterScope,The following statement contains a magic number: scopes = new JsonNodeType[4];
Magic Number,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,InitializeWriter,The following statement contains a magic number: scopes != null && scopes.Length > 25
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteContext,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteContext.cs,CheckSchemaAndUriAsync,The following statement contains a magic number: await Task.Run(() =>              {                    DateTime durationStartDate = DateTime.Now;                    this.Configuration = this.Manager.ReadConfiguration(scope);                    if (progress != null)                      progress.Report(new SyncProgressEvent(SyncStage.ReadingConfiguration' DateTime.Now.Subtract(durationStartDate)));                    if (this.Configuration != null)                  {                        // Verify the scope uri.                      if (this.Configuration.ServiceUri.AbsoluteUri != uri.AbsoluteUri)                          throw new ArgumentException(                              "Specified uri does not match uri previously used for the specified database");                        // Verify the types.                      List<Type> userTypes = offlineSchema.Collections.ToList();                        // Sort by name (the class Type isn't sortable)                      userTypes.Sort((x' y) => String.Compare(x.FullName' y.FullName' StringComparison.Ordinal));                        if (userTypes.Count != this.Configuration.Types.Count)                          throw new ArgumentException(                              "Specified offlineSchema does not match database Offline schema previously used for cache path");                        // Fix                     this.Configuration.Types.Sort((x' y) => String.Compare(x' y' StringComparison.Ordinal));                        if (userTypes.Where(                          (t' i) => t.FullName != this.Configuration.Types[i]).Any())                          throw new ArgumentException(                              "Specified offlineSchema does not match database Offline schema previously used for cache path");                    }                  else                  {                      bool existScope = this.Manager.ScopeTableExist();                        if (!existScope)                      {                          durationStartDate = DateTime.Now;                            this.Manager.CreateScopeTable();                            if (progress != null)                              progress.Report(new SyncProgressEvent(SyncStage.CreatingScope' DateTime.Now.Subtract(durationStartDate)));                      }                        // Get the list of types as strings and sort to make comparison                      // faster when reading.                      List<string> types = (from type in offlineSchema.Collections                                            select type.FullName).ToList();                      types.Sort();                        // Create the initial configuration                      this.Configuration = new SQLiteConfiguration                      {                          AnchorBlob = null'                          LastSyncDate = new DateTime(1900' 01' 01)'                          ScopeName = scope'                          ServiceUri = uri'                          Types = types                      };                        durationStartDate = DateTime.Now;                        this.Manager.SaveConfiguration(this.Configuration);                        if (progress != null)                          progress.Report(new SyncProgressEvent(SyncStage.ApplyingConfiguration' DateTime.Now.Subtract(durationStartDate)));                  }                    // Try to save tables if not exists                  if (schema == null || schema.Collections == null || schema.Collections.Count == 0)                      return;                    durationStartDate = DateTime.Now;                  foreach (var table in schema.Collections.Where(table => table.Name != SQLiteConstants.ScopeInfo))                  {                      this.Manager.CreateTable(table);                  }                    if (progress != null)                      progress.Report(new SyncProgressEvent(SyncStage.CheckingTables' DateTime.Now.Subtract(durationStartDate)));                  });
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,UpdateDirtyTrackingEntities,The following statement contains a magic number: connection.RunInTransaction((conn) =>                  {                      try                      {                          foreach (var entity in entities)                          {                                // Set Values for tracking table                              var parameters = new object[5];                              parameters[0] = P(entity.ServiceMetadata.IsTombstone);                              parameters[1] = P(0);                              parameters[2] = P(entity.ServiceMetadata.ETag);                                  var editUri = String.Empty;                              if (entity.ServiceMetadata.EditUri != null && entity.ServiceMetadata.EditUri.IsAbsoluteUri)                                  editUri = entity.ServiceMetadata.EditUri.AbsoluteUri;                                parameters[3] = P(editUri);                              parameters[4] = P(entity.ServiceMetadata.Id);                                conn.Execute(queryUpdateDirtyTracking' parameters);                          }                      }                      catch (Exception ex)                      {                          Debug.WriteLine(ex.Message);                          throw;                      }                  });
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,UpdateDirtyTrackingEntities,The following statement contains a magic number: connection.RunInTransaction((conn) =>                  {                      try                      {                          foreach (var entity in entities)                          {                                // Set Values for tracking table                              var parameters = new object[5];                              parameters[0] = P(entity.ServiceMetadata.IsTombstone);                              parameters[1] = P(0);                              parameters[2] = P(entity.ServiceMetadata.ETag);                                  var editUri = String.Empty;                              if (entity.ServiceMetadata.EditUri != null && entity.ServiceMetadata.EditUri.IsAbsoluteUri)                                  editUri = entity.ServiceMetadata.EditUri.AbsoluteUri;                                parameters[3] = P(editUri);                              parameters[4] = P(entity.ServiceMetadata.Id);                                conn.Execute(queryUpdateDirtyTracking' parameters);                          }                      }                      catch (Exception ex)                      {                          Debug.WriteLine(ex.Message);                          throw;                      }                  });
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,UpdateDirtyTrackingEntities,The following statement contains a magic number: connection.RunInTransaction((conn) =>                  {                      try                      {                          foreach (var entity in entities)                          {                                // Set Values for tracking table                              var parameters = new object[5];                              parameters[0] = P(entity.ServiceMetadata.IsTombstone);                              parameters[1] = P(0);                              parameters[2] = P(entity.ServiceMetadata.ETag);                                  var editUri = String.Empty;                              if (entity.ServiceMetadata.EditUri != null && entity.ServiceMetadata.EditUri.IsAbsoluteUri)                                  editUri = entity.ServiceMetadata.EditUri.AbsoluteUri;                                parameters[3] = P(editUri);                              parameters[4] = P(entity.ServiceMetadata.Id);                                conn.Execute(queryUpdateDirtyTracking' parameters);                          }                      }                      catch (Exception ex)                      {                          Debug.WriteLine(ex.Message);                          throw;                      }                  });
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,UpdateDirtyTrackingEntities,The following statement contains a magic number: connection.RunInTransaction((conn) =>                  {                      try                      {                          foreach (var entity in entities)                          {                                // Set Values for tracking table                              var parameters = new object[5];                              parameters[0] = P(entity.ServiceMetadata.IsTombstone);                              parameters[1] = P(0);                              parameters[2] = P(entity.ServiceMetadata.ETag);                                  var editUri = String.Empty;                              if (entity.ServiceMetadata.EditUri != null && entity.ServiceMetadata.EditUri.IsAbsoluteUri)                                  editUri = entity.ServiceMetadata.EditUri.AbsoluteUri;                                parameters[3] = P(editUri);                              parameters[4] = P(entity.ServiceMetadata.Id);                                conn.Execute(queryUpdateDirtyTracking' parameters);                          }                      }                      catch (Exception ex)                      {                          Debug.WriteLine(ex.Message);                          throw;                      }                  });
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,GetChanges,The following statement contains a magic number: obj.ServiceMetadata.ETag = (String)ReadCol(row' newIndex + 2' typeof(String));
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteHelper,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteHelper.cs,GetChanges,The following statement contains a magic number: String absoluteUri = (String)ReadCol(row' newIndex + 3' typeof(String));
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteManager,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,ReadConfiguration,The following statement contains a magic number: DateTime d = new DateTime(1900' 1' 1);
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteManager,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,ReadConfiguration,The following statement contains a magic number: scopeInfoTable.LastSyncDate = (DateTime)SQLiteHelper.ReadCol(row' 2' typeof(DateTime));
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteManager,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,ReadConfiguration,The following statement contains a magic number: scopeInfoTable.AnchorBlob = (Byte[])SQLiteHelper.ReadCol(row' 3' typeof(Byte[]));
Magic Number,Microsoft.Synchronization.ClientServices.SQLite,SQLiteManager,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\SQLite\SQLiteManager.cs,ReadConfiguration,The following statement contains a magic number: scopeInfoTable.Configuration = (String)SQLiteHelper.ReadCol(row' 4' typeof(String));
Missing Default,Microsoft.Synchronization.ClientServices,HttpCacheRequestHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\HttpCacheRequestHandlerAsync.cs,ReadUploadResponse,The following switch statement is missing a default case: switch (syncReader.ItemType)                                      {                                          case ReaderItemType.Entry:                                              IOfflineEntity entity = syncReader.GetItem();                                              IOfflineEntity ackedEntity = entity;                                              string tempId = null;                                                // If conflict only one temp ID should be set                                              if (syncReader.HasTempId() && syncReader.HasConflictTempId())                                              {                                                  throw new CacheControllerException(                                                      string.Format(                                                          "Service returned a TempId '{0}' in both live and conflicting entities."'                                                          syncReader.GetTempId()));                                              }                                                // Validate the live temp ID if any' before adding anything to the offline context                                              if (syncReader.HasTempId())                                              {                                                  tempId = syncReader.GetTempId();                                                  CheckEntityServiceMetadataAndTempIds(wrapper' entity' tempId);                                              }                                                //  If conflict                                               if (syncReader.HasConflict())                                              {                                                  Conflict conflict = syncReader.GetConflict();                                                  IOfflineEntity conflictEntity = (conflict is SyncConflict)                                                                                      ? ((SyncConflict)conflict).LosingEntity                                                                                      : ((SyncError)conflict).ErrorEntity;                                                    // Validate conflict temp ID if any                                                  if (syncReader.HasConflictTempId())                                                  {                                                      tempId = syncReader.GetConflictTempId();                                                      CheckEntityServiceMetadataAndTempIds(wrapper' conflictEntity' tempId);                                                  }                                                    // Add conflict                                                                                      wrapper.UploadResponse.AddConflict(conflict);                                                    //                                                  // If there is a conflict and the tempId is set in the conflict entity then the client version lost the                                                   // conflict and the live entity is the server version (ServerWins)                                                  //                                                  if (syncReader.HasConflictTempId() && entity.GetServiceMetadata().IsTombstone)                                                  {                                                      //                                                      // This is a ServerWins conflict' or conflict error. The winning version is a tombstone without temp Id                                                      // so there is no way to map the winning entity with a temp Id. The temp Id is in the conflict so we are                                                      // using the conflict entity' which has the PK' to build a tombstone entity used to update the offline context                                                      //                                                      // In theory' we should copy the service metadata but it is the same end result as the service fills in                                                      // all the properties in the conflict entity                                                      //                                                        // Add the conflict entity                                                                                                    conflictEntity.GetServiceMetadata().IsTombstone = true;                                                      ackedEntity = conflictEntity;                                                  }                                              }                                                // Add ackedEntity to storage. If ackedEntity is still equal to entity then add non-conflict entity.                                               if (!String.IsNullOrEmpty(tempId))                                              {                                                  wrapper.UploadResponse.AddUpdatedItem(ackedEntity);                                              }                                              break;                                            case ReaderItemType.SyncBlob:                                              wrapper.UploadResponse.ServerBlob = syncReader.GetServerBlob();                                              break;                                      }
Missing Default,Microsoft.Synchronization.ClientServices,HttpCacheRequestHandler,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\ClientCommon\HttpCacheRequestHandlerAsync.cs,ReadDownloadResponse,The following switch statement is missing a default case: switch (syncReader.ItemType)                                      {                                          case ReaderItemType.Entry:                                              wrapper.DownloadResponse.AddItem(syncReader.GetItem());                                              break;                                          case ReaderItemType.SyncBlob:                                              wrapper.DownloadResponse.ServerBlob = syncReader.GetServerBlob();                                              // Debug.WriteLine(SyncBlob.DeSerialize(wrapper.DownloadResponse.ServerBlob).ToString());                                              break;                                          case ReaderItemType.HasMoreChanges:                                              wrapper.DownloadResponse.IsLastBatch = !syncReader.GetHasMoreChangesValue();                                              break;                                      }
Missing Default,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToBoolean,The following switch statement is missing a default case: switch (this.type)              {                  case ValueHandleType.False:                      return false;                  case ValueHandleType.True:                      return true;                  case ValueHandleType.UTF8:                      return XmlConverter.ToBoolean(this.bufferReader.Buffer' this.offset' this.length);                  case ValueHandleType.Int8:                      switch (this.GetInt8())                      {                          case 0:                              return false;                          case 1:                              return true;                      }                      break;              }
Missing Default,Microsoft.Synchronization.ClientServices,ValueHandle,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\ValueHandle.cs,ToBoolean,The following switch statement is missing a default case: switch (this.GetInt8())                      {                          case 0:                              return false;                          case 1:                              return true;                      }
Missing Default,Microsoft.Synchronization.ClientServices,XmlConverter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlConverter.cs,ToBoolean,The following switch statement is missing a default case: switch (buffer[offset])                  {                      case Keys.One:                          return true;                      case Keys.Zero:                          return false;                  }
Missing Default,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,IsStartElement,The following switch statement is missing a default case: switch (this.Node.NodeType)              {                  case XmlNodeType.Element:                      return true;                  case XmlNodeType.EndElement:                      return false;                  case XmlNodeType.None:                      this.Read();                      if (this.Node.NodeType == XmlNodeType.Element)                          return true;                      break;              }
Missing Default,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,Read,The following switch statement is missing a default case: switch (complexTextMode)                  {                      case JsonComplexTextMode.QuotedText:                          if (ch == Keys.BackSlash)                          {                              ReadEscapedCharacter(true);                              break;                          }                            ReadQuotedText(true);                          break;                      case JsonComplexTextMode.NumericalText:                          ReadNumericalText();                          break;                      case JsonComplexTextMode.None:                          throw new XmlException("JsonEncounteredUnexpectedCharacter");                  }
Missing Default,Microsoft.Synchronization.ClientServices,XmlJsonReader,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonReader.cs,UnescapeJsonString,The following switch statement is missing a default case: switch (val[index])                      {                          case 'n':                              stringBuilder.Append('\n');                              break;                          case 'r':                              stringBuilder.Append('\r');                              break;                          case 't':                              stringBuilder.Append('\t');                              break;                          case 'u':                              if (index + 3 >= val.Length)                                  throw new XmlException("JsonEncounteredUnexpectedCharacter");                                stringBuilder.Append(ParseChar(val.Substring(index + 1' 4)' NumberStyles.HexNumber));                              index += 4;                              break;                          case 'b':                              stringBuilder.Append('\b');                              break;                          case 'f':                              stringBuilder.Append('\f');                              break;                          case '/':                          case '\\':                          case '"':                          case '\'':                              stringBuilder.Append(val[index]);                              break;                      }
Missing Default,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,StartText,The following switch statement is missing a default case: switch (dataType)              {                  case JsonDataType.None:                  case JsonDataType.String:                      CheckText(JsonNodeType.QuotedText);                        if (nodeType != JsonNodeType.QuotedText)                          WriteJsonQuote();                        nodeType = JsonNodeType.QuotedText;                      break;                  case JsonDataType.Boolean:                  case JsonDataType.Number:                      CheckText(JsonNodeType.StandaloneText);                      nodeType = JsonNodeType.StandaloneText;                      break;              }
Missing Default,Microsoft.Synchronization.ClientServices,XmlJsonWriter,D:\research\architectureSmells\repos\Mimetis_SyncWinRT\C#\SyncClient.Shared\Formatters\JsonXmlReader\XmlJsonWriter.cs,WriteDataTypeServerType,The following switch statement is missing a default case: switch (dataType)              {                  case JsonDataType.Null:                      nodeWriter.Write("null");                      break;                  case JsonDataType.Object:                      EnterScope(JsonNodeType.Object);                      nodeWriter.Write("{");                      break;                  case JsonDataType.Array:                      EnterScope(JsonNodeType.Collection);                      nodeWriter.Write("[");                      break;              }
