Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,Cyclomatic complexity of the method is 18
Complex Method,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,Cyclomatic complexity of the method is 17
Complex Method,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,Cyclomatic complexity of the method is 8
Complex Method,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,Cyclomatic complexity of the method is 9
Long Parameter List,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The method has 6 parameters. Parameters: x' y' z' firstBlockHeight' type' c
Long Parameter List,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The method has 6 parameters. Parameters: c' x' y' z' heightPercentage' type
Long Parameter List,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateInnerLayer,The method has 5 parameters. Parameters: x' y' z' type' c
Long Parameter List,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerp,The method has 17 parameters. Parameters: x' y' z' q000' q001' q010' q011' q100' q101' q110' q111' x1' x2' y1' y2' z1' z2
Long Parameter List,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,biLerp,The method has 10 parameters. Parameters: x' y' q11' q12' q21' q22' x1' x2' y1' y2
Long Parameter List,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,lerp,The method has 5 parameters. Parameters: x' x1' x2' q00' q01
Long Parameter List,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,triLerp,The method has 17 parameters. Parameters: x' y' z' q000' q001' q010' q011' q100' q101' q110' q111' x1' x2' y1' y2' z1' z2
Long Parameter List,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,ridgedMultiFractalNoise,The method has 7 parameters. Parameters: x' y' z' octaves' lacunarity' gain' offset
Long Parameter List,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,fBm,The method has 6 parameters. Parameters: x' y' z' octaves' lacunarity' h
Long Statement,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The length of the statement  "                        else if (by > 0 && by < 5 && _FastRandom.randomDouble() > 0.3) // Randomly put blocks of the remaining 4 layers of bedrock " is 122.
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen3 = new PerlinNoise(_Seed + 2);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen4 = new PerlinNoise(_Seed + 3);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen5 = new PerlinNoise(_Seed + 4);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen6 = new PerlinNoise(_Seed + 5);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: double[' '] density = new double[17' 129' 17];
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: double[' '] density = new double[17' 129' 17];
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: double[' '] density = new double[17' 129' 17];
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: int worldX = bx + (x * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: int worldZ = bz + (z * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: by <= 128
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bz <= 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bx <= 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: int worldX = bx + (x * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: int worldZ = bz + (z * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bz < 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bx < 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: r.Next(100 * y) == 0
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int worldX = bx + x * 16;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int worldZ = bz + z * 16;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: rand > -0.2 && rand < 0.2
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: rand > -0.2 && rand < 0.2
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: _FastRandom.standNormalDistrDouble() < -2
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int randX = bx + _FastRandom.randomInt() % 12 + 4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int randX = bx + _FastRandom.randomInt() % 12 + 4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int randZ = bz + _FastRandom.randomInt() % 12 + 4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: int randZ = bz + _FastRandom.randomInt() % 12 + 4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randX = 3;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randX < 3
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randZ = 3;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randZ < 3
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: forestDens > 0.005
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: by < 110 && bx % 4 == 0 && bz % 4 == 0
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: by < 110 && bx % 4 == 0 && bz % 4 == 0
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: by < 110 && bx % 4 == 0 && bz % 4 == 0
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: by < 128
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: bz < 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: bx < 16
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateCactus,The following statement contains a magic number: int height = (_FastRandom.randomInt() + 1) % 3;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: bz <= z + 2
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: by < y + 6
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: c.SetType(bx' y + 6' bz' BlockData.Blocks.Leaves' false);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: c.SetData(bx' y + 6' bz' 0' false);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: by < y + 6
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CanSeeTheSky,The following statement contains a magic number: _blockHelper.Opacity(c.GetType(x' by' z)) == 0 && by < 128
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CanSeeTheSky,The following statement contains a magic number: return by == 128;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm(0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm(0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm(0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm(0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm(0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm(0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm(0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm(0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm(0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm(0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: double divHeight = (y - 55) * 1.5;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: double divHeight = (y - 55) * 1.5;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 2.0;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: y > 100
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 2.5;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm(0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: x1 = x * 0.0006;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: y1 = y * 0.0008;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: z1 = z * 0.0006;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] freq = { 1.232' 8.4281' 16.371' 32' 64 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] freq = { 1.232' 8.4281' 16.371' 32' 64 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] freq = { 1.232' 8.4281' 16.371' 32' 64 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] freq = { 1.232' 8.4281' 16.371' 32' 64 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] freq = { 1.232' 8.4281' 16.371' 32' 64 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] amp = { 1.0' 1.4' 1.6' 1.8' 2.0 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] amp = { 1.0' 1.4' 1.6' 1.8' 2.0 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] amp = { 1.0' 1.4' 1.6' 1.8' 2.0 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: double[] amp = { 1.0' 1.4' 1.6' 1.8' 2.0 };
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm(x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm(x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm(x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm(x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm(x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result = 32.0 + (result) * 64.0;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result = 32.0 + (result) * 64.0;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: temp >= 60
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: double heightPercentage = (firstBlockHeight - y) / 128.0;
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: y <= 63
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: double lakeIntens = CalcLakeIntensity(x + c.Coords.ChunkX * 16' z + c.Coords.ChunkZ * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: double lakeIntens = CalcLakeIntensity(x + c.Coords.ChunkX * 16' z + c.Coords.ChunkZ * 16);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: short currentIndex = (short)(x << 11 | z << 7 | y);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: short currentIndex = (short)(x << 11 | z << 7 | y);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: heightPercentage < 0.001
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: lakeIntens < 0.2
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm(x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm(x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm(x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm(x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm(x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm(x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For(0' 16' x =>              {                  int offsetX = (x/4)*4;                  for (int y = 0; y < 128; y++)                  {                      int offsetY = (y/8)*8;                      for (int z = 0; z < 16; z++)                      {                          if (!(x%4 == 0 && y%8 == 0 && z%4 == 0))                          {                              int offsetZ = (z/4)*4;                              densityMap[x' y' z] = triLerp(x' y' z' densityMap[offsetX' offsetY' offsetZ]'                                                            densityMap[offsetX' offsetY + 8' offsetZ]'                                                            densityMap[offsetX' offsetY' offsetZ + 4]'                                                            densityMap[offsetX' offsetY + 8' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY' offsetZ]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ]'                                                            densityMap[4 + offsetX' offsetY' offsetZ + 4]'                                                            densityMap[4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX'                                                            4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);                          }                      }                  }              });
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 21);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= ((int)(((uint)_seed) >> 35));
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 4);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomCharacterString,The following statement contains a magic number: s.Append((char)('a' + Math.Abs(randomDouble()) * 26d));
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomCharacterString,The following statement contains a magic number: s.Append((char)('A' + Math.Abs(randomDouble()) * 26d));
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomCharacterString,The following statement contains a magic number: i < length / 2
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: q = Math.Pow(u1' 2) + Math.Pow(u2' 2);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: q = Math.Pow(u1' 2) + Math.Pow(u2' 2);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: double p = Math.Sqrt((-2d * (Math.Log(q))) / q);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: int u = (int) x * 702395077 + (int) y * 915488749 + (int) z * 1299721 + seed * 1402024253;
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: int u = (int) x * 702395077 + (int) y * 915488749 + (int) z * 1299721 + seed * 1402024253;
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: int u = (int) x * 702395077 + (int) y * 915488749 + (int) z * 1299721 + seed * 1402024253;
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: int u = (int) x * 702395077 + (int) y * 915488749 + (int) z * 1299721 + seed * 1402024253;
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: u = (u << 13) ^ u;
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);
Magic Number,CustomGenerator,FastRandom,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorize,The following statement contains a magic number: return ((k1 + k2) * (k1 + k2 + 1) / 2) + k2;
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorX,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorX,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorX,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorY,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorY,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorY,The following statement contains a magic number: int j = (int) (Math.Sqrt(0.25 + 2 * c) - 0.5);
Magic Number,CustomGenerator,MathHelperNew,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorY,The following statement contains a magic number: return c - j * (j + 1) / 2;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noisePermutations = new int[512];
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noiseTable = new int[256];
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: i < 256
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: int j = rand.randomInt() % 256;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: i < 256
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noisePermutations[i] = _noisePermutations[i + 256] = _noiseTable[i];
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: i < 256
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,noise,The following statement contains a magic number: int X = (int)Math.Floor(x) & 255' Y = (int)Math.Floor(y) & 255' Z = (int)Math.Floor(z) & 255;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,noise,The following statement contains a magic number: int X = (int)Math.Floor(x) & 255' Y = (int)Math.Floor(y) & 255' Z = (int)Math.Floor(z) & 255;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,noise,The following statement contains a magic number: int X = (int)Math.Floor(x) & 255' Y = (int)Math.Floor(y) & 255' Z = (int)Math.Floor(z) & 255;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: int h = hash & 15;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: double u = h < 8 ? x : y' v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: double u = h < 8 ? x : y' v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: double u = h < 8 ? x : y' v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: double u = h < 8 ? x : y' v = h < 4 ? y : h == 12 || h == 14 ? x : z;
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);
Magic Number,CustomGenerator,PerlinNoise,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\Noises.cs,ridgedMultiFractalNoise,The following statement contains a magic number: result += signal * Math.Pow(frequency' -0.96461f);
Missing Default,CustomGenerator,CustomChunkGenerator,D:\research\architectureSmells\repos\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following switch statement is missing a default case: switch (type)              {                  case BIOME_TYPE.PLAINS:                  case BIOME_TYPE.MOUNTAINS:                  // Beach                  if (y >= 60 && y <= 66)                  {                      c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                      break;                  }                    c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.MOUNTAINS);                  if (heightPercentage == 0.0 && y > 66)                  {                      // Grass on top                      c.SetType(x' y' z' BlockData.Blocks.Grass' false);                  }                  else if (heightPercentage > 0.2)                  {                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  }                  else                  {                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                  }                    GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.SNOW:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.SNOW);                  if (heightPercentage == 0.0 && y > 65)                  {                      // Snow on top                      c.SetType(x' y' z' BlockData.Blocks.Snow' false);                      // Grass under the snow                      c.SetType(x' y - 1' z' BlockData.Blocks.Grass' false);                  }                    else if (heightPercentage > 0.2)                      // Stone                      c.SetType(x' y' z' BlockData.Blocks.Stone' false);                  else                      // Dirt                      c.SetType(x' y' z' BlockData.Blocks.Dirt' false);                                      GenerateRiver(c' x' y' z' heightPercentage' type);                  break;                    case BIOME_TYPE.DESERT:                  c.SetBiomeColumn(x' z' (byte)BIOME_TYPE.DESERT);                  /*if (heightPercentage > 0.6 && y < 75)                  {                      // Stone                      data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                  }                  else*/                  if (y < 80)                      c.SetType(x' y' z' BlockData.Blocks.Sand' false);                                  break;                }
