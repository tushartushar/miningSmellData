Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,Cyclomatic complexity of the method is 18
Complex Method,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,Cyclomatic complexity of the method is 17
Complex Method,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,Cyclomatic complexity of the method is 10
Complex Method,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,Cyclomatic complexity of the method is 22
Long Parameter List,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The method has 6 parameters.
Long Parameter List,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The method has 6 parameters.
Long Parameter List,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateInnerLayer,The method has 5 parameters.
Long Parameter List,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerp,The method has 17 parameters.
Long Parameter List,CustomGenerator,MathHelperNew,F:\newReposMay17\chraft_c-raft\CustomGenerator\MathHelper.cs,biLerp,The method has 10 parameters.
Long Parameter List,CustomGenerator,MathHelperNew,F:\newReposMay17\chraft_c-raft\CustomGenerator\MathHelper.cs,lerp,The method has 5 parameters.
Long Parameter List,CustomGenerator,MathHelperNew,F:\newReposMay17\chraft_c-raft\CustomGenerator\MathHelper.cs,triLerp,The method has 17 parameters.
Long Parameter List,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,ridgedMultiFractalNoise,The method has 7 parameters.
Long Parameter List,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,fBm,The method has 6 parameters.
Long Statement,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The length of the statement  "					densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4); " is 475.
Long Statement,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,noise,The length of the statement  "	int A = _noisePermutations [X] + Y' AA = _noisePermutations [A] + Z' AB = _noisePermutations [(A + 1)] + Z' B = _noisePermutations [(X + 1)] + Y' BA = _noisePermutations [B] + Z' BB = _noisePermutations [(B + 1)] + Z; " is 217.
Long Statement,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,noise,The length of the statement  "	return lerp (w' lerp (v' lerp (u' grad (_noisePermutations [AA]' x' y' z)' grad (_noisePermutations [BA]' x - 1' y' z))' lerp (u' grad (_noisePermutations [AB]' x' y - 1' z)' grad (_noisePermutations [BB]' x - 1' y - 1' z)))' lerp (v' lerp (u' grad (_noisePermutations [(AA + 1)]' x' y' z - 1)' grad (_noisePermutations [(BA + 1)]' x - 1' y' z - 1))' lerp (u' grad (_noisePermutations [(AB + 1)]' x' y - 1' z - 1)' grad (_noisePermutations [(BB + 1)]' x - 1' y - 1' z - 1)))); " is 476.
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen3 = new PerlinNoise (_Seed + 2);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen4 = new PerlinNoise (_Seed + 3);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen5 = new PerlinNoise (_Seed + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,InitGen,The following statement contains a magic number: _Gen6 = new PerlinNoise (_Seed + 5);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx <= 16; bx += 4) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz <= 16; bz += 4) {  		BIOME_TYPE type = CalcBiomeType (x' z);  		int worldZ = bz + (z * 16);  		for (int by = 0; by <= 128; by += 8) {  			density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bx += 4
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz <= 16; bz += 4) {  	BIOME_TYPE type = CalcBiomeType (x' z);  	int worldZ = bz + (z * 16);  	for (int by = 0; by <= 128; by += 8) {  		density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz <= 16; bz += 4) {  	BIOME_TYPE type = CalcBiomeType (x' z);  	int worldZ = bz + (z * 16);  	for (int by = 0; by <= 128; by += 8) {  		density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz <= 16; bz += 4) {  	BIOME_TYPE type = CalcBiomeType (x' z);  	int worldZ = bz + (z * 16);  	for (int by = 0; by <= 128; by += 8) {  		density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz <= 16; bz += 4) {  	BIOME_TYPE type = CalcBiomeType (x' z);  	int worldZ = bz + (z * 16);  	for (int by = 0; by <= 128; by += 8) {  		density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz <= 16; bz += 4) {  	BIOME_TYPE type = CalcBiomeType (x' z);  	int worldZ = bz + (z * 16);  	for (int by = 0; by <= 128; by += 8) {  		density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: bz += 4
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 0; by <= 128; by += 8) {  	density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 0; by <= 128; by += 8) {  	density [bx' by' bz] = CalcDensity (worldX' by' worldZ' type);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: by += 8
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bx = 0; bx < 16; bx++) {  	int worldX = bx + (x * 16);  	for (int bz = 0; bz < 16; bz++) {  		int worldZ = bz + (z * 16);  		int firstBlockHeight = -1;  		BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  		for (int by = 127; by >= 0; --by) {  			//int index = bx << 11 | bz << 7 | by;  			if (by == 0)  				// First bedrock Layer  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  				// Randomly put blocks of the remaining 4 layers of bedrock  				c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  			else if (by <= 55)  				c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  			else {  				if (by > 55 && by < 64) {  					c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  					if (by == 63 && type == BIOME_TYPE.SNOW) {  						c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  						c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  					}  				}  				double dens = density [bx' by' bz];  				if (dens >= 0.009 && dens <= 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  				} else if (dens > 0.02) {  					// Some block was set...  					if (firstBlockHeight == -1)  						firstBlockHeight = by;  					if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  						GenerateInnerLayer (bx' by' bz' type' c);  				} else  					firstBlockHeight = -1;  			}  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  				GenerateResource (bx' by' bz' c);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int bz = 0; bz < 16; bz++) {  	int worldZ = bz + (z * 16);  	int firstBlockHeight = -1;  	BIOME_TYPE type = CalcBiomeType (worldX' worldZ);  	for (int by = 127; by >= 0; --by) {  		//int index = bx << 11 | bz << 7 | by;  		if (by == 0)  			// First bedrock Layer  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  			// Randomly put blocks of the remaining 4 layers of bedrock  			c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  		else if (by <= 55)  			c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  		else {  			if (by > 55 && by < 64) {  				c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  				if (by == 63 && type == BIOME_TYPE.SNOW) {  					c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  					c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  				}  			}  			double dens = density [bx' by' bz];  			if (dens >= 0.009 && dens <= 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  			} else if (dens > 0.02) {  				// Some block was set...  				if (firstBlockHeight == -1)  					firstBlockHeight = by;  				if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  					GenerateInnerLayer (bx' by' bz' type' c);  			} else  				firstBlockHeight = -1;  		}  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  			GenerateResource (bx' by' bz' c);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: for (int by = 127; by >= 0; --by) {  	//int index = bx << 11 | bz << 7 | by;  	if (by == 0)  		// First bedrock Layer  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  		// Randomly put blocks of the remaining 4 layers of bedrock  		c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  	else if (by <= 55)  		c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  	else {  		if (by > 55 && by < 64) {  			c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  			if (by == 63 && type == BIOME_TYPE.SNOW) {  				c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  				c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  			}  		}  		double dens = density [bx' by' bz];  		if (dens >= 0.009 && dens <= 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  		} else if (dens > 0.02) {  			// Some block was set...  			if (firstBlockHeight == -1)  				firstBlockHeight = by;  			if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  				GenerateInnerLayer (bx' by' bz' type' c);  		} else  			firstBlockHeight = -1;  	}  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Stone)  		GenerateResource (bx' by' bz' c);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 0)  	// First bedrock Layer  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 0 && by < 5 && _FastRandom.randomDouble () > 0.3)  	// Randomly put blocks of the remaining 4 layers of bedrock  	c.SetType (bx' by' bz' BlockData.Blocks.Bedrock' false);  else if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by <= 55)  	c.SetType (bx' by' bz' BlockData.Blocks.Stone' false);  else {  	if (by > 55 && by < 64) {  		c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  		if (by == 63 && type == BIOME_TYPE.SNOW) {  			c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  			c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  		}  	}  	double dens = density [bx' by' bz];  	if (dens >= 0.009 && dens <= 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  	} else if (dens > 0.02) {  		// Some block was set...  		if (firstBlockHeight == -1)  			firstBlockHeight = by;  		if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  			GenerateInnerLayer (bx' by' bz' type' c);  	} else  		firstBlockHeight = -1;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 55 && by < 64) {  	c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  	if (by == 63 && type == BIOME_TYPE.SNOW) {  		c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  		c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 55 && by < 64) {  	c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  	if (by == 63 && type == BIOME_TYPE.SNOW) {  		c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  		c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by > 55 && by < 64) {  	c.SetType (bx' by' bz' BlockData.Blocks.Still_Water' false);  	if (by == 63 && type == BIOME_TYPE.SNOW) {  		c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  		c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (by == 63 && type == BIOME_TYPE.SNOW) {  	c.SetBiomeColumn (bx' bz' (byte)BIOME_TYPE.SNOW);  	c.SetType (bx' by' bz' BlockData.Blocks.Ice' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens >= 0.009 && dens <= 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  } else if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens >= 0.009 && dens <= 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  } else if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens >= 0.009 && dens <= 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  } else if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens >= 0.009 && dens <= 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	GenerateOuterLayer (bx' by' bz' firstBlockHeight' type' c);  } else if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (dens > 0.02) {  	// Some block was set...  	if (firstBlockHeight == -1)  		firstBlockHeight = by;  	if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  		GenerateInnerLayer (bx' by' bz' type' c);  } else  	firstBlockHeight = -1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTerrain,The following statement contains a magic number: if (CalcCaveDensity (worldX' by' worldZ) > -0.6)  	GenerateInnerLayer (bx' by' bz' type' c);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Diamond_Ore' false);  else if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (100 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Lapis_Lazuli_Ore' false);  else if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (40 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Gold_Ore' false);  else if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (10 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Redstone_Ore_Glowing' false);  else if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (4 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Iron_Ore' false);  else if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateResource,The following statement contains a magic number: if (r.Next (2 * y) == 0)  	c.SetType (x' y' z' BlockData.Blocks.Coal_Ore' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bx = 0; bx < 16; ++bx) {  	int worldX = bx + x * 16;  	for (int bz = 0; bz < 16; ++bz) {  		int worldZ = bz + z * 16;  		for (int by = 64; by < 128; ++by) {  			int worldY = by;  			//int index = bx << 11 | bz << 7 | by + 1;  			if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  				double grassDens = CalcGrassDensity (worldX' worldZ);  				if (grassDens > 0.0) {  					// Generate high grass.  					double rand = _FastRandom.standNormalDistrDouble ();  					if (rand > -0.2 && rand < 0.2) {  						c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  						c.SetData (bx' by + 1' bz' 1' false);  					}  					//Generate flowers.  					if (_FastRandom.standNormalDistrDouble () < -2) {  						if (_FastRandom.randomBoolean ())  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  						else  							c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  					}  				}  				if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  					double forestDens = CalcForestDensity (worldX' worldZ);  					if (forestDens > 0.005) {  						int randX = bx + _FastRandom.randomInt () % 12 + 4;  						int randZ = bz + _FastRandom.randomInt () % 12 + 4;  						if (randX < 3)  							randX = 3;  						else if (randX > 12)  							randX = 12;  						if (randZ < 3)  							randZ = 3;  						else if (randZ > 15)  							randZ = 12;  						if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  							GenerateTree (c' randX' by' randZ);  						else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  							GenerateCactus (c' randX' by' randZ);  					}  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int bz = 0; bz < 16; ++bz) {  	int worldZ = bz + z * 16;  	for (int by = 64; by < 128; ++by) {  		int worldY = by;  		//int index = bx << 11 | bz << 7 | by + 1;  		if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  			double grassDens = CalcGrassDensity (worldX' worldZ);  			if (grassDens > 0.0) {  				// Generate high grass.  				double rand = _FastRandom.standNormalDistrDouble ();  				if (rand > -0.2 && rand < 0.2) {  					c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  					c.SetData (bx' by + 1' bz' 1' false);  				}  				//Generate flowers.  				if (_FastRandom.standNormalDistrDouble () < -2) {  					if (_FastRandom.randomBoolean ())  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  					else  						c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  				}  			}  			if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  				double forestDens = CalcForestDensity (worldX' worldZ);  				if (forestDens > 0.005) {  					int randX = bx + _FastRandom.randomInt () % 12 + 4;  					int randZ = bz + _FastRandom.randomInt () % 12 + 4;  					if (randX < 3)  						randX = 3;  					else if (randX > 12)  						randX = 12;  					if (randZ < 3)  						randZ = 3;  					else if (randZ > 15)  						randZ = 12;  					if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  						GenerateTree (c' randX' by' randZ);  					else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  						GenerateCactus (c' randX' by' randZ);  				}  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: for (int by = 64; by < 128; ++by) {  	int worldY = by;  	//int index = bx << 11 | bz << 7 | by + 1;  	if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  		double grassDens = CalcGrassDensity (worldX' worldZ);  		if (grassDens > 0.0) {  			// Generate high grass.  			double rand = _FastRandom.standNormalDistrDouble ();  			if (rand > -0.2 && rand < 0.2) {  				c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  				c.SetData (bx' by + 1' bz' 1' false);  			}  			//Generate flowers.  			if (_FastRandom.standNormalDistrDouble () < -2) {  				if (_FastRandom.randomBoolean ())  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  				else  					c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  			}  		}  		if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  			double forestDens = CalcForestDensity (worldX' worldZ);  			if (forestDens > 0.005) {  				int randX = bx + _FastRandom.randomInt () % 12 + 4;  				int randZ = bz + _FastRandom.randomInt () % 12 + 4;  				if (randX < 3)  					randX = 3;  				else if (randX > 12)  					randX = 12;  				if (randZ < 3)  					randZ = 3;  				else if (randZ > 15)  					randZ = 12;  				if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  					GenerateTree (c' randX' by' randZ);  				else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  					GenerateCactus (c' randX' by' randZ);  			}  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (c.GetType (bx' by' bz) == BlockData.Blocks.Grass && c.GetType (bx' by + 1' bz) == (byte)BlockData.Blocks.Air) {  	double grassDens = CalcGrassDensity (worldX' worldZ);  	if (grassDens > 0.0) {  		// Generate high grass.  		double rand = _FastRandom.standNormalDistrDouble ();  		if (rand > -0.2 && rand < 0.2) {  			c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  			c.SetData (bx' by + 1' bz' 1' false);  		}  		//Generate flowers.  		if (_FastRandom.standNormalDistrDouble () < -2) {  			if (_FastRandom.randomBoolean ())  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  			else  				c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  		}  	}  	if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  		double forestDens = CalcForestDensity (worldX' worldZ);  		if (forestDens > 0.005) {  			int randX = bx + _FastRandom.randomInt () % 12 + 4;  			int randZ = bz + _FastRandom.randomInt () % 12 + 4;  			if (randX < 3)  				randX = 3;  			else if (randX > 12)  				randX = 12;  			if (randZ < 3)  				randZ = 3;  			else if (randZ > 15)  				randZ = 12;  			if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  				GenerateTree (c' randX' by' randZ);  			else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  				GenerateCactus (c' randX' by' randZ);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (grassDens > 0.0) {  	// Generate high grass.  	double rand = _FastRandom.standNormalDistrDouble ();  	if (rand > -0.2 && rand < 0.2) {  		c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  		c.SetData (bx' by + 1' bz' 1' false);  	}  	//Generate flowers.  	if (_FastRandom.standNormalDistrDouble () < -2) {  		if (_FastRandom.randomBoolean ())  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  		else  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (grassDens > 0.0) {  	// Generate high grass.  	double rand = _FastRandom.standNormalDistrDouble ();  	if (rand > -0.2 && rand < 0.2) {  		c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  		c.SetData (bx' by + 1' bz' 1' false);  	}  	//Generate flowers.  	if (_FastRandom.standNormalDistrDouble () < -2) {  		if (_FastRandom.randomBoolean ())  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  		else  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (grassDens > 0.0) {  	// Generate high grass.  	double rand = _FastRandom.standNormalDistrDouble ();  	if (rand > -0.2 && rand < 0.2) {  		c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  		c.SetData (bx' by + 1' bz' 1' false);  	}  	//Generate flowers.  	if (_FastRandom.standNormalDistrDouble () < -2) {  		if (_FastRandom.randomBoolean ())  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  		else  			c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (rand > -0.2 && rand < 0.2) {  	c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  	c.SetData (bx' by + 1' bz' 1' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (rand > -0.2 && rand < 0.2) {  	c.SetType (bx' by + 1' bz' BlockData.Blocks.TallGrass' false);  	c.SetData (bx' by + 1' bz' 1' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (_FastRandom.standNormalDistrDouble () < -2) {  	if (_FastRandom.randomBoolean ())  		c.SetType (bx' by + 1' bz' BlockData.Blocks.Rose' false);  	else  		c.SetType (bx' by + 1' bz' BlockData.Blocks.Yellow_Flower' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (by < 110 && bx % 4 == 0 && bz % 4 == 0) {  	double forestDens = CalcForestDensity (worldX' worldZ);  	if (forestDens > 0.005) {  		int randX = bx + _FastRandom.randomInt () % 12 + 4;  		int randZ = bz + _FastRandom.randomInt () % 12 + 4;  		if (randX < 3)  			randX = 3;  		else if (randX > 12)  			randX = 12;  		if (randZ < 3)  			randZ = 3;  		else if (randZ > 15)  			randZ = 12;  		if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  			GenerateTree (c' randX' by' randZ);  		else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  			GenerateCactus (c' randX' by' randZ);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (forestDens > 0.005) {  	int randX = bx + _FastRandom.randomInt () % 12 + 4;  	int randZ = bz + _FastRandom.randomInt () % 12 + 4;  	if (randX < 3)  		randX = 3;  	else if (randX > 12)  		randX = 12;  	if (randZ < 3)  		randZ = 3;  	else if (randZ > 15)  		randZ = 12;  	if (c.GetType (randX' by' randZ) == BlockData.Blocks.Grass)  		GenerateTree (c' randX' by' randZ);  	else if (biome == BIOME_TYPE.DESERT && c.GetType (randX' by' randZ) == BlockData.Blocks.Sand)  		GenerateCactus (c' randX' by' randZ);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX < 3)  	randX = 3;  else if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX < 3)  	randX = 3;  else if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX < 3)  	randX = 3;  else if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX < 3)  	randX = 3;  else if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randX = 3;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randX > 12)  	randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randX = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ < 3)  	randZ = 3;  else if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ < 3)  	randZ = 3;  else if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ < 3)  	randZ = 3;  else if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ < 3)  	randZ = 3;  else if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randZ = 3;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: if (randZ > 15)  	randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateFlora,The following statement contains a magic number: randZ = 12;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 4; by < y + 6; by++)  	for (int bx = x - 2; bx <= x + 2; bx++)  		for (int bz = z - 2; bz <= z + 2; bz++) {  			c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  			c.SetData (bx' by' bz' 0' false);  		}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 2; bx <= x + 2; bx++)  	for (int bz = z - 2; bz <= z + 2; bz++) {  		c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' by' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 2; bx <= x + 2; bx++)  	for (int bz = z - 2; bz <= z + 2; bz++) {  		c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' by' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 2; bx <= x + 2; bx++)  	for (int bz = z - 2; bz <= z + 2; bz++) {  		c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' by' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 2; bx <= x + 2; bx++)  	for (int bz = z - 2; bz <= z + 2; bz++) {  		c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' by' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bz = z - 2; bz <= z + 2; bz++) {  	c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  	c.SetData (bx' by' bz' 0' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bz = z - 2; bz <= z + 2; bz++) {  	c.SetType (bx' by' bz' BlockData.Blocks.Leaves' false);  	c.SetData (bx' by' bz' 0' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 1; bx <= x + 1; bx++)  	for (int bz = z - 1; bz <= z + 1; bz++) {  		c.SetType (bx' y + 6' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' y + 6' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bx = x - 1; bx <= x + 1; bx++)  	for (int bz = z - 1; bz <= z + 1; bz++) {  		c.SetType (bx' y + 6' bz' BlockData.Blocks.Leaves' false);  		c.SetData (bx' y + 6' bz' 0' false);  	}  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bz = z - 1; bz <= z + 1; bz++) {  	c.SetType (bx' y + 6' bz' BlockData.Blocks.Leaves' false);  	c.SetData (bx' y + 6' bz' 0' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int bz = z - 1; bz <= z + 1; bz++) {  	c.SetType (bx' y + 6' bz' BlockData.Blocks.Leaves' false);  	c.SetData (bx' y + 6' bz' 0' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: c.SetType (bx' y + 6' bz' BlockData.Blocks.Leaves' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: c.SetData (bx' y + 6' bz' 0' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateTree,The following statement contains a magic number: for (int by = y + 1; by < y + 6; by++) {  	c.SetType (x' by' z' BlockData.Blocks.Wood' false);  	c.SetData (x' by' z' 0' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CanSeeTheSky,The following statement contains a magic number: for (by = y; _blockHelper.Opacity (c.GetType (x' by' z)) == 0 && by < 128; ++by)  	;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CanSeeTheSky,The following statement contains a magic number: return by == 128;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm (0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm (0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm (0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm (0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcForestDensity,The following statement contains a magic number: result += _Gen1.fBm (0.03 * x' 0' 0.03 * z' 7' 2.3614521' 0.85431);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm (0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm (0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm (0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm (0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcGrassDensity,The following statement contains a magic number: result += _Gen3.fBm (0.05 * x' 0' 0.05 * z' 4' 2.37152' 0.8571);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (y > 100)  	divHeight *= 2.0;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (y > 100)  	divHeight *= 2.0;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 2.0;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.DESERT) {  	divHeight *= 2.5;  } else if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.DESERT) {  	divHeight *= 2.5;  } else if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.DESERT) {  	divHeight *= 2.5;  } else if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.DESERT) {  	divHeight *= 2.5;  } else if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 2.5;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.PLAINS) {  	divHeight *= 1.6;  } else if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 1.6;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.MOUNTAINS) {  	divHeight *= 1.1;  } else if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 1.1;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: if (type == BIOME_TYPE.SNOW) {  	divHeight *= 1.2;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcDensity,The following statement contains a magic number: divHeight *= 1.2;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBaseTerrain,The following statement contains a magic number: result += _Gen2.fBm (0.0009 * x' 0' 0.0009 * z' 3' 2.2341' 0.94321) + 0.4;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: x1 = x * 0.0006;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: y1 = y * 0.0008;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcMountainDensity,The following statement contains a magic number: z1 = z * 0.0006;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm (x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm (x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm (x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm (x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result += _Gen4.fBm (x * 0.0008' 0' 0.0008 * z' 7' 2.1836171' 0.7631);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result = 32.0 + (result) * 64.0;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcTemperature,The following statement contains a magic number: result = 32.0 + (result) * 64.0;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp >= 60) {  	return BIOME_TYPE.DESERT;  } else if (temp >= 32) {  	return BIOME_TYPE.MOUNTAINS;  } else if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp >= 60) {  	return BIOME_TYPE.DESERT;  } else if (temp >= 32) {  	return BIOME_TYPE.MOUNTAINS;  } else if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp >= 60) {  	return BIOME_TYPE.DESERT;  } else if (temp >= 32) {  	return BIOME_TYPE.MOUNTAINS;  } else if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp >= 32) {  	return BIOME_TYPE.MOUNTAINS;  } else if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp >= 32) {  	return BIOME_TYPE.MOUNTAINS;  } else if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcBiomeType,The following statement contains a magic number: if (temp < 8) {  	return BIOME_TYPE.SNOW;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (y >= 60 && y <= 66) {  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (y >= 60 && y <= 66) {  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage == 0.0 && y > 66) {  	// Grass on top  	c.SetType (x' y' z' BlockData.Blocks.Grass' false);  } else if (heightPercentage > 0.2) {  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  } else {  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage == 0.0 && y > 66) {  	// Grass on top  	c.SetType (x' y' z' BlockData.Blocks.Grass' false);  } else if (heightPercentage > 0.2) {  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  } else {  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage > 0.2) {  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  } else {  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage == 0.0 && y > 65) {  	// Snow on top  	c.SetType (x' y' z' BlockData.Blocks.Snow' false);  	// Grass under the snow  	c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  } else if (heightPercentage > 0.2)  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  else  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage == 0.0 && y > 65) {  	// Snow on top  	c.SetType (x' y' z' BlockData.Blocks.Snow' false);  	// Grass under the snow  	c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  } else if (heightPercentage > 0.2)  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  else  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (heightPercentage > 0.2)  	// Stone  	c.SetType (x' y' z' BlockData.Blocks.Stone' false);  else  	// Dirt  	c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following statement contains a magic number: if (y < 80)  	c.SetType (x' y' z' BlockData.Blocks.Sand' false);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (y <= 63)  	return;  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (lakeIntens < 0.2) {  	if (heightPercentage < 0.001)  		c.SetType (x' y' z' BlockData.Blocks.Air' false);  	else if (heightPercentage < 0.02) {  		if (type == BIOME_TYPE.SNOW) {  			// To be sure that there's no snow above us  			c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  			c.SetType (x' y' z' BlockData.Blocks.Ice' false);  		} else  			c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (lakeIntens < 0.2) {  	if (heightPercentage < 0.001)  		c.SetType (x' y' z' BlockData.Blocks.Air' false);  	else if (heightPercentage < 0.02) {  		if (type == BIOME_TYPE.SNOW) {  			// To be sure that there's no snow above us  			c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  			c.SetType (x' y' z' BlockData.Blocks.Ice' false);  		} else  			c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (lakeIntens < 0.2) {  	if (heightPercentage < 0.001)  		c.SetType (x' y' z' BlockData.Blocks.Air' false);  	else if (heightPercentage < 0.02) {  		if (type == BIOME_TYPE.SNOW) {  			// To be sure that there's no snow above us  			c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  			c.SetType (x' y' z' BlockData.Blocks.Ice' false);  		} else  			c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (heightPercentage < 0.001)  	c.SetType (x' y' z' BlockData.Blocks.Air' false);  else if (heightPercentage < 0.02) {  	if (type == BIOME_TYPE.SNOW) {  		// To be sure that there's no snow above us  		c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  		c.SetType (x' y' z' BlockData.Blocks.Ice' false);  	} else  		c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (heightPercentage < 0.001)  	c.SetType (x' y' z' BlockData.Blocks.Air' false);  else if (heightPercentage < 0.02) {  	if (type == BIOME_TYPE.SNOW) {  		// To be sure that there's no snow above us  		c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  		c.SetType (x' y' z' BlockData.Blocks.Ice' false);  	} else  		c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateRiver,The following statement contains a magic number: if (heightPercentage < 0.02) {  	if (type == BIOME_TYPE.SNOW) {  		// To be sure that there's no snow above us  		c.SetType (x' y + 1' z' BlockData.Blocks.Air' false);  		c.SetType (x' y' z' BlockData.Blocks.Ice' false);  	} else  		c.SetType (x' y' z' BlockData.Blocks.Still_Water' false);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm (x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm (x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm (x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm (x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcLakeIntensity,The following statement contains a magic number: result += _Gen3.fBm (x * 0.0085' 0' 0.0085 * z' 2' 1.98755' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,CalcCaveDensity,The following statement contains a magic number: result += _Gen6.fBm (x * 0.04' y * 0.04' z * 0.04' 2' 2.0' 0.98);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: Parallel.For (0' 16' x => {  	int offsetX = (x / 4) * 4;  	for (int y = 0; y < 128; y++) {  		int offsetY = (y / 8) * 8;  		for (int z = 0; z < 16; z++) {  			if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  				int offsetZ = (z / 4) * 4;  				densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  			}  		}  	}  });  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int y = 0; y < 128; y++) {  	int offsetY = (y / 8) * 8;  	for (int z = 0; z < 16; z++) {  		if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  			int offsetZ = (z / 4) * 4;  			densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  		}  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: for (int z = 0; z < 16; z++) {  	if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  		int offsetZ = (z / 4) * 4;  		densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  	}  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: if (!(x % 4 == 0 && y % 8 == 0 && z % 4 == 0)) {  	int offsetZ = (z / 4) * 4;  	densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  }  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,triLerpDensityMap,The following statement contains a magic number: densityMap [x' y' z] = triLerp (x' y' z' densityMap [offsetX' offsetY' offsetZ]' densityMap [offsetX' offsetY + 8' offsetZ]' densityMap [offsetX' offsetY' offsetZ + 4]' densityMap [offsetX' offsetY + 8' offsetZ + 4]' densityMap [4 + offsetX' offsetY' offsetZ]' densityMap [4 + offsetX' offsetY + 8' offsetZ]' densityMap [4 + offsetX' offsetY' offsetZ + 4]' densityMap [4 + offsetX' offsetY + 8' offsetZ + 4]' offsetX' 4 + offsetX' offsetY' 8 + offsetY' offsetZ' offsetZ + 4);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 21);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= ((int)(((uint)_seed) >> 35));  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomLong,The following statement contains a magic number: _seed ^= (_seed << 4);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomCharacterString,The following statement contains a magic number: for (int i = 0; i < length / 2; i++) {  	s.Append ((char)('a' + Math.Abs (randomDouble ()) * 26d));  	s.Append ((char)('A' + Math.Abs (randomDouble ()) * 26d));  }  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0) {  	u1 = randomDouble ();  	u2 = randomDouble ();  	q = Math.Pow (u1' 2) + Math.Pow (u2' 2);  }  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: while (q >= 1d || q == 0) {  	u1 = randomDouble ();  	u2 = randomDouble ();  	q = Math.Pow (u1' 2) + Math.Pow (u2' 2);  }  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: q = Math.Pow (u1' 2) + Math.Pow (u2' 2);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,standNormalDistrDouble,The following statement contains a magic number: q = Math.Pow (u1' 2) + Math.Pow (u2' 2);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: u = (u << 13) ^ u;  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);  
Magic Number,CustomGenerator,FastRandom,F:\newReposMay17\chraft_c-raft\CustomGenerator\FastRandom.cs,randomNoise,The following statement contains a magic number: return (1.0 - ((u * (u * u * 15731 + 789221) + 1376312589) & 0x7fffffff) / 1073741824.0);  
Magic Number,CustomGenerator,MathHelperNew,F:\newReposMay17\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorize,The following statement contains a magic number: return ((k1 + k2) * (k1 + k2 + 1) / 2) + k2;  
Magic Number,CustomGenerator,MathHelperNew,F:\newReposMay17\chraft_c-raft\CustomGenerator\MathHelper.cs,cantorY,The following statement contains a magic number: return c - j * (j + 1) / 2;  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noisePermutations = new int[512];  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noiseTable = new int[256];  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	_noiseTable [i] = i;  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int j = rand.randomInt () % 256;  	j = (j < 0) ? -j : j;  	int swap = _noiseTable [i];  	_noiseTable [i] = _noiseTable [j];  	_noiseTable [j] = swap;  }  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: for (int i = 0; i < 256; i++) {  	int j = rand.randomInt () % 256;  	j = (j < 0) ? -j : j;  	int swap = _noiseTable [i];  	_noiseTable [i] = _noiseTable [j];  	_noiseTable [j] = swap;  }  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	_noisePermutations [i] = _noisePermutations [i + 256] = _noiseTable [i];  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: for (int i = 0; i < 256; i++)  	_noisePermutations [i] = _noisePermutations [i + 256] = _noiseTable [i];  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,PerlinNoise,The following statement contains a magic number: _noisePermutations [i] = _noisePermutations [i + 256] = _noiseTable [i];  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,fade,The following statement contains a magic number: return t * t * t * (t * (t * 6 - 15) + 10);  
Magic Number,CustomGenerator,PerlinNoise,F:\newReposMay17\chraft_c-raft\CustomGenerator\Noises.cs,grad,The following statement contains a magic number: return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);  
Missing Default,CustomGenerator,CustomChunkGenerator,F:\newReposMay17\chraft_c-raft\CustomGenerator\CustomChunkGenerator.cs,GenerateOuterLayer,The following switch statement is missing a default case: switch (type) {  case BIOME_TYPE.PLAINS:  case BIOME_TYPE.MOUNTAINS:  	// Beach  	if (y >= 60 && y <= 66) {  		c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  		break;  	}  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.MOUNTAINS);  	if (heightPercentage == 0.0 && y > 66) {  		// Grass on top  		c.SetType (x' y' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2) {  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	} else {  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	}  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.SNOW:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.SNOW);  	if (heightPercentage == 0.0 && y > 65) {  		// Snow on top  		c.SetType (x' y' z' BlockData.Blocks.Snow' false);  		// Grass under the snow  		c.SetType (x' y - 1' z' BlockData.Blocks.Grass' false);  	} else if (heightPercentage > 0.2)  		// Stone  		c.SetType (x' y' z' BlockData.Blocks.Stone' false);  	else  		// Dirt  		c.SetType (x' y' z' BlockData.Blocks.Dirt' false);  	GenerateRiver (c' x' y' z' heightPercentage' type);  	break;  case BIOME_TYPE.DESERT:  	c.SetBiomeColumn (x' z' (byte)BIOME_TYPE.DESERT);  	/*if (heightPercentage > 0.6 && y < 75)                 {                     // Stone                     data[x << 11 | z << 7 | y] = (byte)BlockData.Blocks.Stone;                 }                 else*/if (y < 80)  		c.SetType (x' y' z' BlockData.Blocks.Sand' false);  	break;  }  
