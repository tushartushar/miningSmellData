Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OrangeBits,PrefUtility,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\PrefUtility.cs,SaveOptions,Cyclomatic complexity of the method is 8
Complex Method,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,SourceFileChanged,Cyclomatic complexity of the method is 9
Complex Method,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,AddMultiMenu,Cyclomatic complexity of the method is 9
Complex Method,OrangeBits.Compilers,OrangeCompiler,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\Compilers\OrangeCompiler.cs,Process,Cyclomatic complexity of the method is 14
Long Parameter List,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,AddMultiMenu,The method has 5 parameters. Parameters: e' supportedExtensions' jobType' title' multipleTitle
Long Identifier,OrangeBits.UI,ViewModelBase,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\UI\ViewModelBase.cs,,The length of the parameter _notifyingObjectIsChangedSyncRoot is 33.
Long Statement,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,host_ContextMenuOpening,The length of the statement  "            AddMultiMenu(e' OrangeCompiler.supportedOptimizeExtensions' OrangeJob.JobType.Optimize' "Optimize Image"' "Optimize Images"); " is 125.
Long Statement,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,InitSite,The length of the statement  "                _siteFileWatcher.RegisterForSiteNotifications(WatcherChangeTypes.Changed | WatcherChangeTypes.Created' new FileSystemEventHandler(SourceFileChanged)' null); " is 156.
Long Statement,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,InitSite,The length of the statement  "                _siteFileWatcher.DeregisterForSiteNotifications(WatcherChangeTypes.Changed | WatcherChangeTypes.Created' new FileSystemEventHandler(SourceFileChanged)' null); " is 158.
Long Statement,OrangeBits.Compilers,PNGCompressor,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\Compilers\PNGCompressor.cs,Compile,The length of the statement  "            info.Arguments = "/c " + Directory.GetParent(Assembly.GetExecutingAssembly().Location) + "\\Tools\\optipng.exe -clobber \"" + inPath + "\""; " is 140.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,OrangeBits,Worker,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\Worker.cs,Worker,The following statement contains a magic number: timer.Interval = 500;
Magic Number,OrangeBits,Worker,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\Worker.cs,t_Elapsed,The following statement contains a magic number: queue.TryPeek(out job) && (DateTime.Now > job.Time.AddMilliseconds(100))
Missing Default,OrangeBits,OrangeBits,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\WebMatrixExtension.cs,SourceFileChanged,The following switch statement is missing a default case: switch (ext.ToLowerInvariant())                          {                              case ".less":                                  doIt = prefUtility.GetPref(e.FullPath' "AutoCompileLess"' true) as bool?;                                  break;                              case ".scss":                                                              case ".sass":                                  doIt = prefUtility.GetPref(e.FullPath' "AutoCompileSass"' true) as bool?;                                  break;                              case ".coffee":                                  doIt = prefUtility.GetPref(e.FullPath' "AutoCompileCoffee"' true) as bool?;                                  break;                              case ".js":                                  doIt = e.FullPath.EndsWith(".min.js") ? false : prefUtility.GetPref(e.FullPath' "AutoMinifyJS"' false) as bool?;                                  jobType = OrangeJob.JobType.Minify;                                  break;                              case ".css":                                  doIt = e.FullPath.EndsWith(".min.css") ? false : prefUtility.GetPref(e.FullPath' "AutoMinifyCSS"' false) as bool?;                                  jobType = OrangeJob.JobType.Minify;                                  break;                              case ".ts":                                  doIt = prefUtility.GetPref(e.FullPath' "AutoCompileTypeScript"' true) as bool?;                                  break;                          }
Missing Default,OrangeBits.Compilers,OrangeCompiler,D:\research\architectureSmells\repos\JustinBeckwith_OrangeBits\OrangeBits\Compilers\OrangeCompiler.cs,Process,The following switch statement is missing a default case: switch (job.Type)  			{  				case OrangeJob.JobType.Compile:  					outExt = (f.Extension.ToLower() == ".coffee" || f.Extension.ToLower() == ".ts") ? ".js" : ".css";  					break;  				case OrangeJob.JobType.Minify:  					outExt = (f.Extension.ToLower() == ".css") ? ".min.css" : ".min.js";  					break;  				case OrangeJob.JobType.Optimize:  					outExt = f.Extension.ToLower();  					break;  			}
