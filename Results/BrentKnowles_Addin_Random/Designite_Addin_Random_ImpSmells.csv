Implementation smell,Namespace,Class,File,Method,Description
Long Method,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The method has 140 lines of code.
Complex Method,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,Cyclomatic complexity of the method is 13
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,GetDefinition,The length of the statement  "	DictionaryDefinitionClass definitions = (DictionaryDefinitionClass)FileUtils.DeSerialize (sFile' typeof(DictionaryDefinitionClass)); " is 132.
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,GetRandomWordFromDictionary,The length of the statement  "		// here's where we have to do work; we need to actually extra the 'key' (see code in fmain.cs' make a routein) and then do a proper bit test " is 140.
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,RandomWord,The length of the statement  "	string sLastName = GetRandomWordFromDictionary (region | PartsOfSpeech.Noun | PartsOfSpeech.Proper | PartsOfSpeech.Lastname' "*"); " is 130.
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,RandomWord,The length of the statement  "		sValue = GetRandomWordFromDictionary (region | PartsOfSpeech.Female | PartsOfSpeech.Noun | PartsOfSpeech.Proper' sStartsWith) + " " + sLastName; " is 144.
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,RandomWord,The length of the statement  "		sValue = GetRandomWordFromDictionary (region | PartsOfSpeech.Male | PartsOfSpeech.Noun | PartsOfSpeech.Proper' sStartsWith) + " " + sLastName; " is 142.
Long Statement,NamingCentral,dictionaryera,C:\repos\BrentKnowles_Addin_Random\dictionaryera.cs,RandomWord,The length of the statement  "		sValue = GetRandomWordFromDictionary (region | PartsOfSpeech.Noun | PartsOfSpeech.Proper | PartsOfSpeech.Lastname' sStartsWith); " is 128.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "            kb.Add(new Relationship("A"' "is"' "@*"' ""' 20' 0' false)); // this means we will pick any letter to follow B. Useful when we want B to often have other letters to follow it but ALSO to be able to have any letter" is 213.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "	//   kb.Add(new Relationship(' "is"' "tt"' ""' 90' 0' false)); // double t's occur frequently in male names; use higher #s to drown out 'generic' rules " is 151.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "	// kb.Add(new Relationship("gender:female:v"' "is"' "oom"' ""' 90' 0' false)); // anytmie a female name has a v we add oom " is 122.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "			kb.Add (new Relationship (ruleparts [RULE]' "is"' ruleparts [RULE_RESULT]' ""' Double.Parse (ruleparts [RULE_WEIGHT])' 0' false)); " is 130.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "	/*Limitations; without deduction I can't do grouping but I do have a tremendous amount of power over specifics */// kb.Deduction(); //No deductions' we don't want them' they'll do confusing things " is 196.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The length of the statement  "	for (int i = nStart; i <= _namingFile.MinLettersWord + newRandom.Next (_namingFile.MaxLettersWord - _namingFile.MinLettersWord); i++) { " is 135.
Long Statement,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,GetName,The length of the statement  "	/*for (int i = 1 ; i <= _namingFile.MinLettersWord + newRandom.Next(_namingFile.MaxLettersWord - _namingFile.MinLettersWord); i++)" is 130.
Magic Number,Addin_Random,fNamer,C:\repos\BrentKnowles_Addin_Random\fNamer.cs,fNamer,The following statement contains a magic number: this.Width = 500;  
Magic Number,Addin_Random,fNamer,C:\repos\BrentKnowles_Addin_Random\fNamer.cs,fNamer,The following statement contains a magic number: this.Height = 625;  
Magic Number,Addin_Random,fNamer,C:\repos\BrentKnowles_Addin_Random\fNamer.cs,fNamer,The following statement contains a magic number: Scratch.Height = 100;  
Magic Number,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The following statement contains a magic number: if ("*" != sStartsWith) {  	nStart = 2;  	sWords = sStartsWith;  	// start with a specific letter  }  
Magic Number,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The following statement contains a magic number: nStart = 2;  
Magic Number,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The following statement contains a magic number: for (int i = nStart; i <= _namingFile.MinLettersWord + newRandom.Next (_namingFile.MaxLettersWord - _namingFile.MinLettersWord); i++) {  	string sTest = "1";  	if (i > 1) {  		// always look for follower characters  		sTest = sWords [i - 2].ToString ();  	}  	// grab position (i.e.' 1) or a specific letter (i.e.' what follows A)  	Relationship bestRelationship = kb.GetRandomWeightedFact (sTest' newRandom);  	if (null == bestRelationship) {  		sTest = i.ToString ();  		bestRelationship = kb.GetRandomWeightedFact (sTest' newRandom);  	}  	if (null == bestRelationship) {  		sTest = "*";  		// we did not find a letter for this position' grab any letter  		bestRelationship = kb.GetRandomWeightedFact (sTest' newRandom);  	}  	// Add the word  	if (null != bestRelationship) {  		string sAddWord = bestRelationship.B;  		//GROUP SYSTEM  		if (sAddWord.IndexOf ("@") > -1 && sAddWord.Length > 1) {  			// we have a group' go pick from that group please  			string sgroupname = sAddWord.Replace ("@"' " ").Trim ();  			bestRelationship = kb.GetRandomWeightedFact (sgroupname' newRandom);  			if (null != bestRelationship) {  				sAddWord = bestRelationship.B;  			}  		}  		sWords = sWords + sAddWord;  	}  }  
Magic Number,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The following statement contains a magic number: if (i > 1) {  	// always look for follower characters  	sTest = sWords [i - 2].ToString ();  }  
Magic Number,NamingCentral,erarulelanguage,C:\repos\BrentKnowles_Addin_Random\erarulelanguage.cs,CreateAWord,The following statement contains a magic number: sTest = sWords [i - 2].ToString ();  
Magic Number,NamingCentral,NamingCentralUserControl,C:\repos\BrentKnowles_Addin_Random\NamingCentralUserControl.cs,button3_Click,The following statement contains a magic number: for (int i = 1; i <= 10; i++) {  	string sName = GenerateName (comboBoxStartWordWith.SelectedItem.ToString ());  	if ("" != sName) {  		listOfNames.Items.Add (sName);  	}  }  
