Implementation smell,Namespace,Class,File,Method,Description
Long Method,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateCallJ2C,The method has 104 lines of code.
Long Method,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,CreateMethodSignature,The method has 153 lines of code.
Long Method,net.sf.jni4net.proxygen.model,GType,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\GType.cs,UpdateNames,The method has 107 lines of code.
Long Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterType,The method has 192 lines of code.
Long Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterCLRMethod,The method has 121 lines of code.
Long Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterClass,The method has 115 lines of code.
Complex Method,net.sf.jni4net.proxygen.generator,JavaCodeGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JavaCodeGenerator.cs,GenerateProperty,Cyclomatic complexity of the method is 9
Complex Method,net.sf.jni4net.proxygen.generator,JVMGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JVMGenerator.cs,Write,Cyclomatic complexity of the method is 14
Complex Method,net.sf.jni4net.proxygen.generator,JVMInterfaceGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JVMInterfaceGenerator.cs,GenerateInterface,Cyclomatic complexity of the method is 10
Complex Method,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,CEEJ2C,Cyclomatic complexity of the method is 15
Complex Method,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,CEEC2J,Cyclomatic complexity of the method is 12
Complex Method,net.sf.jni4net.proxygen.model,GMethod,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\GMethod.cs,UpdateNames,Cyclomatic complexity of the method is 8
Complex Method,net.sf.jni4net.proxygen.model,GType,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\GType.cs,Resolve,Cyclomatic complexity of the method is 13
Complex Method,net.sf.jni4net.proxygen.model,GType,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\GType.cs,UpdateNames,Cyclomatic complexity of the method is 15
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,Analyze,Cyclomatic complexity of the method is 13
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,Register,Cyclomatic complexity of the method is 12
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,BindKnownTypesPre,Cyclomatic complexity of the method is 9
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,LoadAssemblies,Cyclomatic complexity of the method is 8
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,PreLoadMethods,Cyclomatic complexity of the method is 11
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,LoadMethods,Cyclomatic complexity of the method is 12
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,UseMethodModifier,Cyclomatic complexity of the method is 9
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,FinishRegistration,Cyclomatic complexity of the method is 8
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterType,Cyclomatic complexity of the method is 27
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterCLRMethod,Cyclomatic complexity of the method is 20
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterClass,Cyclomatic complexity of the method is 18
Complex Method,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterJVMMethod,Cyclomatic complexity of the method is 8
Long Parameter List,net.sf.jni4net.proxygen.generator,Generator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\Generator.cs,CreateEnvConstructor,The method has 5 parameters. Parameters: tgtType' envType' pub' handle' proxy
Long Parameter List,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,UseMethodModifier,The method has 5 parameters. Parameters: type' res' name' signature' force
Long Parameter List,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,FinishRegistration,The method has 6 parameters. Parameters: method' type' res' force' sig' skipSignatureBuilder
Long Parameter List,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,testVirtual,The method has 5 parameters. Parameters: type' clazz' method' create' isBaseClassPublic
Long Parameter List,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,ParseDl,The method has 5 parameters. Parameters: mainEntry' cfg' isDll' swtch' args
Long Parameter List,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,ParseCp,The method has 5 parameters. Parameters: mainEntry' cfg' isCp' swtch' args
Long Statement,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateGetEnvC2J,The length of the statement  "            tgtStatements.Add(new CodeSnippetStatement("            using(new global::net.sf.jni4net.jni.LocalFrame(@__env' "+framesize+")){")); " is 132.
Long Statement,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateMethodCallPrologJ2C,The length of the statement  "                    tgtMethod.Statements.Add(new CodeVariableDeclarationStatement(method.ReturnType.CLRReference' "__return"' new CodeDefaultValueExpression(method.ReturnType.CLRReference))); " is 171.
Long Statement,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateMethodCallPrologJ2C,The length of the statement  "                    tgtMethod.Statements.Add(new CodeVariableDeclarationStatement(jnihandle' "__return"' new CodeDefaultValueExpression(jnihandle))); " is 129.
Long Statement,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateMethodCallPrologJ2C,The length of the statement  "                    CodeVariableDeclarationStatement varExpression = new CodeVariableDeclarationStatement(parameter.CLRReference' "__ref_" + name' conversionExpression); " is 149.
Long Statement,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,UseMethodModifier,The length of the statement  "                        res.Attributes = (res.Attributes & (MemberAttributes.VTableMask|MemberAttributes.ScopeMask)) | MemberAttributes.Private; " is 120.
Long Statement,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,FindIndexerProperty,The length of the statement  "            PropertyInfo property = clazz.GetProperty("Item"' f' Type.DefaultBinder' returnType' parameterTypes' default(ParameterModifier[])); " is 131.
Long Statement,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,Main,The length of the statement  "                    Console.WriteLine("usage: proxygen.exe path\\to\\<library>.jar -wd work\\directory -cp java\\dependencies;comma\\separated;classpath -dp .NET\\dependencies;comma\\separated;assemblies"); " is 186.
Long Statement,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,Main,The length of the statement  "                    Console.WriteLine("usage: proxygen.exe path\\to\\<library>.dll -wd work\\directory -cp java\\dependencies;comma\\separated;classpath -dp .NET\\dependencies;comma\\separated;assemblies"); " is 186.
Long Statement,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,Main,The length of the statement  "                lib = typeof(Program).Assembly.Location.Replace("proxygen.exe"' "jni4net.n-" + version + ".dll").Replace("jni4net.jni4net.n"' "jni4net.n"); " is 139.
Long Statement,net.sf.jni4net.proxygen,Program,C:\repos\jni4net_jni4net\jni4net.proxygen\src\Program.cs,Work,The length of the statement  "                        cfg.AssemblyReference[cfg.AssemblyReference.Length - 1] = new AssemblyReference() { Assembly = mainEntry' Generate = true }; " is 124.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterAssemblies,The conditional expression  "(jvmProxyType.IsAssignableFrom(type) && javaClassA != null) ||                          (type.IsInterface && javaInterfaceA != null)"  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,LoadAssemblies,The conditional expression  "File.Exists(pathOrName) || pathOrName.Contains("..") || pathOrName.Contains("\\") ||                               pathOrName.Contains("//")"  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,LoadMethods,The conditional expression  "(loadCLR || (loadJVM && type.IsInterface)) && type.IsJVMType"  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,LoadMethods,The conditional expression  "(loadJVM || (loadCLR && type.IsInterface)) && type.IsCLRType"  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterType,The conditional expression  "type.BaseType != null && res.Base == null                  && type != typeof (object)                  && type != typeof (Exception)                  && type.FullName != "java.lang.Throwable"                  && type.FullName != "java.lang.Object""  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterClass,The conditional expression  "superclass != null && res.Base == null                  && clazz != Object._class                  && clazz != Throwable._class                  && res.JVMFullName != "system.Object"                  && res.JVMFullName != "system.Exception"                  && isBaseClassPublic"  is complex.
Complex Conditional,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,testVirtual,The conditional expression  "create && !isStatic && isVirtual && !type.IsRootType"  is complex.
Magic Number,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GetExpressionsC2J,The following statement contains a magic number: int offset = method.IsConstructor ? 3 : 2;
Magic Number,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GetExpressionsC2J,The following statement contains a magic number: int offset = method.IsConstructor ? 3 : 2;
Magic Number,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GetExpressionsC2J,The following statement contains a magic number: if (method.IsConstructor)              {                  expressions[2] = new CodeThisReferenceExpression();              }
Magic Number,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateGetEnvC2J,The following statement contains a magic number: int framesize = (10+method.Parameters.Count*2);
Magic Number,net.sf.jni4net.proxygen.generator,CLRGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\CLRGenerator.C2J.cs,GenerateGetEnvC2J,The following statement contains a magic number: int framesize = (10+method.Parameters.Count*2);
Magic Number,net.sf.jni4net.proxygen.model,GType,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\GType.cs,UpdateNames,The following statement contains a magic number: if (JVMNamespace.StartsWith("java."))              {                  JVMNamespaceExt = "java_." + JVMNamespace.Substring(5);              }
Magic Number,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,Register,The following statement contains a magic number: if (config.Verbose)              {                  Console.WriteLine("clr.version         :" + RuntimeEnvironment.GetSystemVersion());                  Console.WriteLine("clr.arch            :" + ((IntPtr.Size == 8) ? "64bit" : "32bit"));              }
Magic Number,net.sf.jni4net.proxygen.model,Repository,C:\repos\jni4net_jni4net\jni4net.proxygen\src\model\Repository.cs,RegisterCLRMethod,The following statement contains a magic number: if (method.IsSpecialName)              {                  res.CLRProperty = GetProperty(type' method);                  if (res.CLRProperty == null)                  {                      res.CLREvent = GetEvent(type' method);                      res.IsEvent = true;                      if (method.Name.StartsWith("add_"))                      {                          res.IsCLRPropertyAdd = true;                          res.CLRPropertyAdd = res;                          foreach (GMethod m in type.Methods)                          {                              if (m.CLRProperty == res.CLRProperty)                              {                                  m.CLRPropertyAdd = res;                              }                          }                      }                      if (method.Name.StartsWith("remove_"))                      {                          res.IsCLRPropertyRemove = true;                          res.CLRPropertyRemove = res;                          foreach (GMethod m in type.Methods)                          {                              if (m.CLRProperty == res.CLRProperty)                              {                                  m.CLRPropertyRemove = res;                              }                          }                      }                      res.CLRName = res.CLREvent.Name;                      res.JVMName = method.Name.Replace("_"' "");                  }                  else                  {                      res.IsProperty = true;                      if (res.CLRProperty.CanRead && method.Name.StartsWith("get_"))                      {                          res.IsCLRPropertyGetter = true;                          res.CLRPropertyGetter = res;                          foreach (GMethod m in type.Methods)                          {                              if (m.CLRProperty == res.CLRProperty)                              {                                  m.CLRPropertyGetter = res;                              }                          }                      }                      if (res.CLRProperty.CanWrite && method.Name.StartsWith("set_"))                      {                          res.IsCLRPropertySetter = true;                          res.CLRPropertySetter = res;                          foreach (GMethod m in type.Methods)                          {                              if (m.CLRProperty == res.CLRProperty)                              {                                  m.CLRPropertySetter = res;                              }                          }                      }                      res.CLRName = res.CLRProperty.Name;                      res.JVMName = method.Name.Replace("_"' "");                      if (res.CLRProperty.PropertyType == typeof(bool) && res.JVMName.StartsWith("getIs"))                      {                          res.JVMName = "is" + res.JVMName.Substring(5);                      }                  }                  res.Name = method.Name;              }
Missing Default,net.sf.jni4net.proxygen.generator,JavaCodeGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JavaCodeGenerator.cs,OutputFieldScopeModifier,The following switch statement is missing a default case: switch (attributes & MemberAttributes.ScopeMask)              {                  case MemberAttributes.Static:                      Output.Write("static ");                      break;                  case MemberAttributes.Const:                      Output.Write("const ");                      break;              }
Missing Default,net.sf.jni4net.proxygen.generator,JavaCodeGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JavaCodeGenerator.cs,OutputMemberAccessModifier,The following switch statement is missing a default case: switch (attributes & MemberAttributes.AccessMask)              {                  case MemberAttributes.Assembly:                  case MemberAttributes.FamilyAndAssembly:                      //Output.Write("internal ");                      break;                  case MemberAttributes.Family:                      Output.Write("protected ");                      break;                  case MemberAttributes.FamilyOrAssembly:                      //Output.Write("protected internal ");                      break;                  case MemberAttributes.Private:                      Output.Write("private ");                      break;                  case MemberAttributes.Public:                      Output.Write("public ");                      break;              }
Missing Default,net.sf.jni4net.proxygen.generator,JavaCodeGenerator,C:\repos\jni4net_jni4net\jni4net.proxygen\src\generator\JavaCodeGenerator.cs,OutputTypeAttributes,The following switch statement is missing a default case: switch (attributes & TypeAttributes.VisibilityMask)              {                  case TypeAttributes.Public:                  case TypeAttributes.NestedPublic:                      output.Write("public ");                      break;                  case TypeAttributes.NestedPrivate:                      output.Write("private ");                      break;                  case TypeAttributes.NotPublic:                  case TypeAttributes.NestedFamANDAssem:                  case TypeAttributes.NestedAssembly:                      //output.Write("internal ");                      break;                  case TypeAttributes.NestedFamily:                      output.Write("protected ");                      break;                  case TypeAttributes.NestedFamORAssem:                      //output.Write("protected internal ");                      break;              }
