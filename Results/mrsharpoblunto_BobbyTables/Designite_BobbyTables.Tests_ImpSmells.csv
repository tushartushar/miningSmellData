Implementation smell,Namespace,Class,File,Method,Description
Long Method,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The method has 187 lines of code.
Long Method,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The method has 111 lines of code.
Long Method,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitPull,The method has 111 lines of code.
Long Method,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges,The method has 111 lines of code.
Long Method,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges_WhenLocalDatastoreDoesNotHaveDeltas,The method has 112 lines of code.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetOrCreateDatastore,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 133.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetOrCreateDatastore,The length of the statement  "			mockRequest.Verify(req => req.AddParam(It.IsIn<string>(new[] { "dsid" })' It.IsIn<string>(new[] { "test" }))' Times.Exactly(1)); " is 128.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetOrCreateDatastore,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""zzzz""' ""rev"": 1' ""created"": false}")); " is 133.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetDatastore,The length of the statement  "			mockRequest.Verify(req => req.AddParam(It.IsIn<string>(new[] { "dsid" })' It.IsIn<string>(new[] { "test" }))' Times.Exactly(1)); " is 128.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,CreateDatastore,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": true}")); " is 132.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,CreateDatastore,The length of the statement  "			mockRequest.Verify(req => req.AddParam("key"' "test123456789012345678901234567890123456789012345678901")' Times.Exactly(1)); " is 124.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""xxxx""' ""rev"": 0' ""dsid"": ""db1""}' {""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}")); " is 229.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}")); " is 174.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,DeleteDatastore,The length of the statement  "			mockListRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""xxxx""' ""rev"": 0' ""dsid"": ""db1""}' {""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}")); " is 233.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,DeleteDatastore,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""ok"": ""Deleted datastore with handle: u'xxxx'""}")); " is 131.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,AwaitListChanges,The length of the statement  "			mockListRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": []' ""token"": ""yyyy""}")); " is 124.
Long Statement,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,AwaitListChanges,The length of the statement  "				.Setup(api => api.CreateRequest("GET"' "await?list_datastores=" + Uri.EscapeDataString(args.ToString(Formatting.None))' Manager.ApiToken)) " is 138.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithIdGetter,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithAutoIdGeneration,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}'""EnumValue"": {""I"":""1""}'""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""Id"": ""1""' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}' ""NullableField"": {""I"": ""20""}' ""NullableProperty"": {""I"": ""21""}}'""rowid"": ""1""}]' ""rev"": 28}")); " is 913.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,Pull_WhenRemoteDoesNotHaveIdColumn_MapRowIdToId,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,Pull_WhenRemoteDoesNotHaveIdColumn_MapRowIdToId,The length of the statement  "			mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}'""EnumValue"": {""I"":""1""}'""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}}' ""rowid"": ""1""}]' ""rev"": 28}")); " is 824.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitPull,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 0' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitPull,The length of the statement  "				.Setup(api => api.CreateRequest("GET"' "await?get_deltas=" + Uri.EscapeDataString(args.ToString(Formatting.None))' Manager.ApiToken)) " is 133.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 0' ""dsid"": ""default""}]' ""token"": ""zzzz""}")); " is 177.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges,The length of the statement  "				.Setup(api => api.CreateRequest("GET"' "await?get_deltas=" + Uri.EscapeDataString(args.ToString(Formatting.None))' Manager.ApiToken)) " is 133.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges_WhenLocalDatastoreDoesNotHaveDeltas,The length of the statement  "			mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 0' ""dsid"": ""default""}' {""handle"": ""no-delta""' ""rev"": 0' ""dsid"": ""no-delta""}]' ""token"": ""zzzz""}")); " is 241.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges_WhenLocalDatastoreDoesNotHaveDeltas,The length of the statement  "				.Setup(api => api.CreateRequest("GET"' "await?get_deltas=" + Uri.EscapeDataString(args.ToString(Formatting.None))' Manager.ApiToken)) " is 133.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 3' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The length of the statement  "			mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""conflict"": ""Conflict: delta is for db rev 0' but actual db rev is 3""}")); " is 158.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 3' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The length of the statement  "			mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""conflict"": ""Conflict: delta is for db rev 0' but actual db rev is 3""}")); " is 158.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,SaveAndLoad,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,SaveAndLoad,The length of the statement  "			mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}' ""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""Id"": ""1""' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}}' ""rowid"": ""1""}]' ""rev"": 28}")); " is 811.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,SaveAndLoad,The length of the statement  "			string expected = @"{""id"":""default""'""handle"":""yyyy""'""rev"":28'""tables"":{""test_objects"":{""1"":{""ByteArray"":{""B"":""_wEA""}'""UInt32Value"":{""I"":""6""}'""FloatValue"":3.0'""ByteList"":{""B"":""AAH_""}'""TimeValue"":{""T"":""486086400000""}'""LongValue"":{""I"":""9""}'""Int32Value"":{""I"":""3""}'""DoubleValue"":1.0'""IntList"":[{""I"":""1""}'{""I"":""2""}'{""I"":""3""}]'""IntValue"":{""I"":""1""}'""Int16Value"":{""I"":""2""}'""UIntValue"":{""I"":""4""}'""UInt16Value"":{""I"":""5""}'""ULongValue"":{""I"":""10""}'""StringValue"":""hello""'""Int64Value"":{""I"":""7""}'""Id"":""1""'""SingleValue"":2.0'""StringList"":[""hello""'""world""]'""UInt64Value"":{""I"":""8""}}}}}"; " is 694.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CannotSerializeTypesNotSupportedInDropboxDatastore,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The length of the statement  "			string expectedRequest = (@"[[""I""'""test_objects""'""1""'{""Id"":""1""}]]").Replace(" "' string.Empty).Replace("\r\n"' string.Empty); " is 135.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The length of the statement  "			expectedRequest = (@"[[""U""'""test_objects""'""1""'{""NullableField"":[""P""'{""I"":""1""}]'""NullableProperty"":[""P""'{""I"":""2""}]}]]").Replace(" "' string.Empty).Replace("\r\n"' string.Empty); " is 198.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The length of the statement  "			expectedRequest = (@"[[""U""'""test_objects""'""1""'{""NullableField"":[""D""]'""NullableProperty"":[""D""]}]]").Replace(" "' string.Empty).Replace("\r\n"' string.Empty); " is 170.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableDouble,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableDouble,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": 1.0' ""NullableProperty"": 2.0 }'""rowid"": ""1""}]' ""rev"": 28}")); " is 223.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableDouble,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableDouble,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}")); " is 174.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableFloat,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableFloat,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": 1.0' ""NullableProperty"": 2.0 }'""rowid"": ""1""}]' ""rev"": 28}")); " is 223.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableFloat,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableFloat,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}")); " is 174.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeBooleanToTypeNullableBool,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeBooleanToTypeNullableBool,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": true' ""NullableProperty"": false }'""rowid"": ""1""}]' ""rev"": 28}")); " is 226.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonBooleanAndDestinationTypeIsNullableBool,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonBooleanAndDestinationTypeIsNullableBool,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}")); " is 174.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": {""T"": ""486086400000""} ' ""NullableProperty"": {""T"": ""486086400000""}  }'""rowid"": ""1""}]' ""rev"": 28}")); " is 269.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsTimeStampAndDestinationTypeIsNullableDateTime,The length of the statement  "            mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}")); " is 137.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsTimeStampAndDestinationTypeIsNullableDateTime,The length of the statement  "            mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { }'""rowid"": ""1""}]' ""rev"": 28}")); " is 173.
Long Statement,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertUpdateGetDynamicObjects,The length of the statement  "			mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}")); " is 136.
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetOrCreateDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetOrCreateDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""zzzz""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,GetDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""zzzz""' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,CreateDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": true}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""xxxx""' ""rev"": 0' ""dsid"": ""db1""}' {""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The following statement contains a magic number: Assert.AreEqual(2' list.Count());
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,ListDatastores,The following statement contains a magic number: Assert.AreEqual(2' list.Count());
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,DeleteDatastore,The following statement contains a magic number: mockListRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""xxxx""' ""rev"": 0' ""dsid"": ""db1""}' {""handle"": ""yyyy""' ""rev"": 23' ""dsid"": ""db2""}]' ""token"": ""zzzz""}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,DeleteDatastore,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""ok"": ""Deleted datastore with handle: u'xxxx'""}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,DeleteDatastore,The following statement contains a magic number: Assert.AreEqual(2' list.Count());
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,AwaitListChanges,The following statement contains a magic number: mockListRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": []' ""token"": ""yyyy""}"));
Magic Number,BobbyTables.Tests,DatastoreManagerTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreManagerTests.cs,AwaitListChanges,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{    ""list_datastores"": {      ""datastores"": [        {          ""handle"": ""xxxx""'          ""rev"": 0'          ""dsid"": ""db1""        }'        {          ""handle"": ""yyyy""'          ""rev"": 0'          ""dsid"": ""db2""        }      ]'      ""token"": ""zzzz""    }  }"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithIdGetter,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithIdGetter,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithIdGetter,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithAutoIdGeneration,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithAutoIdGeneration,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertWithAutoIdGeneration,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var obj = new TestObject{  				Id = "1"'  				EnumValue = TestEnum.Second'  				DoubleValue = 1.0'  				SingleValue = 2.0F'  				FloatValue = 3.0F'  				IntValue = 1'  				Int16Value = 2'  				Int32Value = 3'  				UIntValue = 4'  				UInt16Value = 5'  				UInt32Value = 6'  				Int64Value = 7'  				UInt64Value = 8'  				LongValue = 9'  				ULongValue = 10'  				StringValue = "hello"'  				TimeValue = new DateTime(1985'5'28'0'0'0'0)  			};
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: obj.ByteList = new List<byte> { 0' 1' 255 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: obj.ByteArray = new byte[] { 255' 1' 0 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: obj.IntList = new List<int> { 1'2'3 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: obj.IntList = new List<int> { 1'2'3 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: var found = from t in table where t.Int16Value == 2 select t;
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertDeleteObjects,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 3}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}'""EnumValue"": {""I"":""1""}'""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""Id"": ""1""' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}' ""NullableField"": {""I"": ""20""}' ""NullableProperty"": {""I"": ""21""}}'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 29}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.TimeValue = new DateTime(1985' 5' 29' 0' 0' 0' 0);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.TimeValue = new DateTime(1985' 5' 29' 0' 0' 0' 0);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.TimeValue = new DateTime(1985' 5' 29' 0' 0' 0' 0);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.ByteList = new List<byte> { 0' 1' 255' 1 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.ByteArray = new byte[] { 255' 1' 0' 255 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.ByteArray = new byte[] { 255' 1' 0' 255 };
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.IntList.RemoveAt(2);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.IntList.Add(4);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,PullAndUpdateObjects,The following statement contains a magic number: obj.IntList.Add(5);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,Pull_WhenRemoteDoesNotHaveIdColumn_MapRowIdToId,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,Pull_WhenRemoteDoesNotHaveIdColumn_MapRowIdToId,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}'""EnumValue"": {""I"":""1""}'""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}}' ""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitPull,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 0' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitPull,The following statement contains a magic number: mockAwaitPullRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{    ""get_deltas"": {      ""deltas"": {        ""yyyy"": {          ""deltas"": [            {              ""nonce"": """"'              ""changes"": [                [                  ""I""'                  ""test_objects""'                  ""1""'                  {                    ""ByteArray"": {                      ""B"": ""_wEA""                    }'                    ""EnumValue"": {                      ""I"":""1""                    }'                    ""UInt32Value"": {                      ""I"": ""6""                    }'                    ""FloatValue"": 3'                    ""LongValue"": {                      ""I"": ""9""                    }'                    ""ByteList"": {                      ""B"": ""AAH_""                    }'                    ""TimeValue"": {                      ""T"": ""486086400000""                    }'                    ""Int32Value"": {                      ""I"": ""3""                    }'                    ""DoubleValue"": 1'                    ""StringList"": [                      ""hello""'                      ""world""                    ]'                    ""ULongValue"": {                      ""I"": ""10""                    }'                    ""IntValue"": {                      ""I"": ""1""                    }'                    ""Int16Value"": {                      ""I"": ""2""                    }'                    ""UIntValue"": {                      ""I"": ""4""                    }'                    ""UInt16Value"": {                      ""I"": ""5""                    }'                    ""IntList"": [                      {                        ""I"": ""1""                      }'                      {                        ""I"": ""2""                      }'                      {                        ""I"": ""3""                      }                    ]'                    ""StringValue"": ""hello""'                    ""Int64Value"": {                      ""I"": ""7""                    }'                    ""SingleValue"": 2'                    ""Id"": ""1""'                    ""UInt64Value"": {                      ""I"": ""8""                    }                  }                ]              ]'              ""rev"": 1            }          ]        }      }    }  }"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 0' ""dsid"": ""default""}]' ""token"": ""zzzz""}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges,The following statement contains a magic number: mockAwaitPullRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{    ""get_deltas"": {      ""deltas"": {        ""yyyy"": {          ""deltas"": [            {              ""nonce"": """"'              ""changes"": [                [                  ""I""'                  ""test_objects""'                  ""1""'                  {                    ""ByteArray"": {                      ""B"": ""_wEA""                    }'                    ""EnumValue"": {                      ""I"":""1""                    }'                    ""UInt32Value"": {                      ""I"": ""6""                    }'                    ""FloatValue"": 3'                    ""LongValue"": {                      ""I"": ""9""                    }'                    ""ByteList"": {                      ""B"": ""AAH_""                    }'                    ""TimeValue"": {                      ""T"": ""486086400000""                    }'                    ""Int32Value"": {                      ""I"": ""3""                    }'                    ""DoubleValue"": 1'                    ""StringList"": [                      ""hello""'                      ""world""                    ]'                    ""ULongValue"": {                      ""I"": ""10""                    }'                    ""IntValue"": {                      ""I"": ""1""                    }'                    ""Int16Value"": {                      ""I"": ""2""                    }'                    ""UIntValue"": {                      ""I"": ""4""                    }'                    ""UInt16Value"": {                      ""I"": ""5""                    }'                    ""IntList"": [                      {                        ""I"": ""1""                      }'                      {                        ""I"": ""2""                      }'                      {                        ""I"": ""3""                      }                    ]'                    ""StringValue"": ""hello""'                    ""Int64Value"": {                      ""I"": ""7""                    }'                    ""SingleValue"": 2'                    ""Id"": ""1""'                    ""UInt64Value"": {                      ""I"": ""8""                    }                  }                ]              ]'              ""rev"": 1            }          ]        }      }    }  }"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges_WhenLocalDatastoreDoesNotHaveDeltas,The following statement contains a magic number: mockRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""datastores"": [{""handle"": ""yyyy""' ""rev"": 0' ""dsid"": ""default""}' {""handle"": ""no-delta""' ""rev"": 0' ""dsid"": ""no-delta""}]' ""token"": ""zzzz""}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,AwaitDatastoreChanges_WhenLocalDatastoreDoesNotHaveDeltas,The following statement contains a magic number: mockAwaitPullRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{    ""get_deltas"": {      ""deltas"": {        ""yyyy"": {          ""deltas"": [            {              ""nonce"": """"'              ""changes"": [                [                  ""I""'                  ""test_objects""'                  ""1""'                  {                    ""ByteArray"": {                      ""B"": ""_wEA""                    }'                    ""EnumValue"": {                      ""I"":""1""                    }'                    ""UInt32Value"": {                      ""I"": ""6""                    }'                    ""FloatValue"": 3'                    ""LongValue"": {                      ""I"": ""9""                    }'                    ""ByteList"": {                      ""B"": ""AAH_""                    }'                    ""TimeValue"": {                      ""T"": ""486086400000""                    }'                    ""Int32Value"": {                      ""I"": ""3""                    }'                    ""DoubleValue"": 1'                    ""StringList"": [                      ""hello""'                      ""world""                    ]'                    ""ULongValue"": {                      ""I"": ""10""                    }'                    ""IntValue"": {                      ""I"": ""1""                    }'                    ""Int16Value"": {                      ""I"": ""2""                    }'                    ""UIntValue"": {                      ""I"": ""4""                    }'                    ""UInt16Value"": {                      ""I"": ""5""                    }'                    ""IntList"": [                      {                        ""I"": ""1""                      }'                      {                        ""I"": ""2""                      }'                      {                        ""I"": ""3""                      }                    ]'                    ""StringValue"": ""hello""'                    ""Int64Value"": {                      ""I"": ""7""                    }'                    ""SingleValue"": 2'                    ""Id"": ""1""'                    ""UInt64Value"": {                      ""I"": ""8""                    }                  }                ]              ]'              ""rev"": 1            }          ]        }      }    }  }"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 3' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""conflict"": ""Conflict: delta is for db rev 0' but actual db rev is 3""}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 3}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,ChangesNotPushedWhenConflictOccurs,The following statement contains a magic number: Assert.AreEqual(3' db.Rev);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 3' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""conflict"": ""Conflict: delta is for db rev 0' but actual db rev is 3""}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 3}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: var transaction = db.Transaction(() =>  			{  				Assert.IsTrue(table.Insert(obj));  				if (attempts++ == 1)  				{  					// ensure the mock push request succeeds the second time  					mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 4}"));  				}  			});
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: Assert.AreEqual(2'attempts);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,TransactionRetryWithConflict,The following statement contains a magic number: Assert.AreEqual(4' db.Rev);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,SaveAndLoad,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,SaveAndLoad,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {""ByteArray"": {""B"": ""_wEA""}' ""UInt32Value"": {""I"": ""6""}' ""FloatValue"": 3.0' ""ByteList"": {""B"": ""AAH_""}' ""TimeValue"": {""T"": ""486086400000""}' ""LongValue"": {""I"": ""9""}' ""Int32Value"": {""I"": ""3""}' ""DoubleValue"": 1.0' ""IntList"": [{""I"": ""1""}' {""I"": ""2""}' {""I"": ""3""}]' ""IntValue"": {""I"": ""1""}' ""Int16Value"": {""I"": ""2""}' ""UIntValue"": {""I"": ""4""}' ""UInt16Value"": {""I"": ""5""}' ""ULongValue"": {""I"": ""10""}' ""StringValue"": ""hello""' ""Int64Value"": {""I"": ""7""}' ""Id"": ""1""' ""SingleValue"": 2.0' ""StringList"": [""hello""' ""world""]' ""UInt64Value"": {""I"": ""8""}}' ""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CannotSerializeTypesNotSupportedInDropboxDatastore,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CannotSerializeTypesNotSupportedInDropboxDatastore,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CannotSerializeTypesNotSupportedInDropboxDatastore,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanSetAndUnsetNullableValues,The following statement contains a magic number: obj.NullableProperty = 2;
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableDouble,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableDouble,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": 1.0' ""NullableProperty"": 2.0 }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableDouble,The following statement contains a magic number: Assert.AreEqual(item.NullableProperty' 2.0);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableDouble,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableDouble,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableFloat,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableFloat,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": 1.0' ""NullableProperty"": 2.0 }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeFloatToTypeNullableFloat,The following statement contains a magic number: Assert.AreEqual(item.NullableProperty' 2.0);
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableFloat,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonFloatAndDestinationTypeIsNullableFloat,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeBooleanToTypeNullableBool,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeJsonTypeBooleanToTypeNullableBool,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": true' ""NullableProperty"": false }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonBooleanAndDestinationTypeIsNullableBool,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsJsonBooleanAndDestinationTypeIsNullableBool,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": {  }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { ""NullableField"": {""T"": ""486086400000""} ' ""NullableProperty"": {""T"": ""486086400000""}  }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableField' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableField' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableField' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableProperty' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableProperty' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,CanDeserializeTimeStampToTypeNullableDateTime,The following statement contains a magic number: Assert.AreEqual(item.NullableProperty' new DateTime(1985' 5' 28' 0' 0' 0' 0));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsTimeStampAndDestinationTypeIsNullableDateTime,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 28' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,DeserializeAsNullWhenSourceTypeIsTimeStampAndDestinationTypeIsNullableDateTime,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": [{""tid"": ""test_objects""' ""data"": { }'""rowid"": ""1""}]' ""rev"": 28}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertUpdateGetDynamicObjects,The following statement contains a magic number: mockGetRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""handle"": ""yyyy""' ""rev"": 1' ""created"": false}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertUpdateGetDynamicObjects,The following statement contains a magic number: mockSnapshotRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rows"": []' ""rev"": 1}"));
Magic Number,BobbyTables.Tests,DatastoreTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\DatastoreTests.cs,InsertUpdateGetDynamicObjects,The following statement contains a magic number: mockPushRequest.Setup(req => req.GetResponse()).Returns(new ApiResponse(200' @"{""rev"": 2}"));
Magic Number,BobbyTables.Tests,LCSTests,C:\research\architectureSmells\repos\mrsharpoblunto_BobbyTables\BobbyTables.Tests\LCSTests.cs,TestSequence,The following statement contains a magic number: Assert.AreEqual(4' lcs.Count);
