Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,Main,The following statement contains a magic number: for (var i = 0; i < 40; i++) {  	var t = new Thread (TestRemoteService) {  		IsBackground = true  	};  	t.Start ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,Main,The following statement contains a magic number: Console.CancelKeyPress += (sender' eventArgs) => {  	_stopping = true;  	Thread.Sleep (1000);  	_containerClient.Dispose ();  };  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,Main,The following statement contains a magic number: Thread.Sleep (1000);  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: for (var i = 0; i < 100; i++) {  	// Console.WriteLine("new batch ");  	service.NoParamsOrReturn ();  	service.JustParams ("1");  	//				Assert.IsTrue(service.JustReturn().Equals("abc"));  	service.ParamsWithStruct (new MyCustomStruct () {  		Name = "1"'  		Age = 30  	});  	service.ParamsWithCustomType1 (new Impl1 () {    	});  	service.ParamsWithCustomType2 (new Contract1Impl () {  		Name = "2"'  		Age = 31  	});  	service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  	service.WithInheritanceParam (new Derived1 () {  		Something = 10'  		DerivedProp1 = 20  	});  	var b = service.WithInheritanceRet ();  	//				Assert.IsNotNull(b);  	//				Assert.IsInstanceOf(typeof(Derived2)' b);  	//				Assert.AreEqual(10' (b as Derived2).Something);  	//				Assert.AreEqual("test"' (b as Derived2).DerivedProp2);  	var enu = service.UsingEnumerators ();  	//				Assert.IsNotNull(enu);  	//				Assert.AreEqual(2' enu.Count());  	var array = service.UsingArray ();  	//				Assert.IsNotNull(array);  	//				Assert.AreEqual(2' array.Length);  	service.ReturningNull1 ();  	service.ReturningNull2 ();  }  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.ParamsWithStruct (new MyCustomStruct () {  	Name = "1"'  	Age = 30  });  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.ParamsWithCustomType2 (new Contract1Impl () {  	Name = "2"'  	Age = 31  });  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.ParamsAndReturn (Guid.NewGuid ()' ""' 1' DateTime.Now' 102.2m' FileAccess.ReadWrite' 1' 2' 3.0f' 4.0);  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.WithInheritanceParam (new Derived1 () {  	Something = 10'  	DerivedProp1 = 20  });  
Magic Number,Facility.ServiceConsumer,Program,D:\newReposJune17\castleproject_castlezmq\tests\Facility.ServiceConsumer\Program.cs,InvokeBatch,The following statement contains a magic number: service.WithInheritanceParam (new Derived1 () {  	Something = 10'  	DerivedProp1 = 20  });  
