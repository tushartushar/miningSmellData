Implementation smell,Namespace,Class,File,Method,Description
Magic Number,DiffClassifier,DiffAddedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffAddedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 166' 255' 166));
Magic Number,DiffClassifier,DiffAddedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffAddedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 166' 255' 166));
Magic Number,DiffClassifier,DiffAddedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffAddedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 166' 255' 166));
Magic Number,DiffClassifier,DiffAddedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffAddedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 166' 255' 166));
Magic Number,DiffClassifier,DiffRemovedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffRemovedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 255' 166' 166));
Magic Number,DiffClassifier,DiffRemovedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffRemovedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 255' 166' 166));
Magic Number,DiffClassifier,DiffRemovedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffRemovedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 255' 166' 166));
Magic Number,DiffClassifier,DiffRemovedFormat,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassificationDefinitions.cs,DiffRemovedFormat,The following statement contains a magic number: this.BackgroundBrush = new SolidColorBrush(Color.FromArgb(128' 255' 166' 166));
Magic Number,DiffClassifier,DiffClassifier,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassifier.cs,GetClassificationSpans,The following statement contains a magic number: for (int i = startno; i <= endno; i++)              {                  ITextSnapshotLine line = snapshot.GetLineFromLineNumber(i);                    IClassificationType type = null;                  string text = line.Snapshot.GetText(                          new SnapshotSpan(line.Start' Math.Min(4' line.Length))); // We only need the first 4                     if (text.StartsWith("!"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.changed");                    else if (text.StartsWith("---"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.header");                  else if (text.StartsWith("-"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.removed");                  else if (text.StartsWith("<"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.removed");                    else if (text.StartsWith("@@"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.patchline");                    else if (text.StartsWith("+++"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.header");                  else if (text.StartsWith("+"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.added");                  else if (text.StartsWith(">"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.added");                    else if (text.StartsWith("***"' StringComparison.Ordinal))                  {                      if (i < 2)                          type = _classificationTypeRegistry.GetClassificationType("diff.header");                      else                          type = _classificationTypeRegistry.GetClassificationType("diff.infoline");                  }                  else if (text.Length > 0 && !char.IsWhiteSpace(text[0]))                      type = _classificationTypeRegistry.GetClassificationType("diff.infoline");                    if (type != null)                      spans.Add(new ClassificationSpan(line.Extent' type));              }
Magic Number,DiffClassifier,DiffClassifier,C:\repos\yysun_Git-Source-Control-Provider\DiffClassifier\DiffClassifier.cs,GetClassificationSpans,The following statement contains a magic number: for (int i = startno; i <= endno; i++)              {                  ITextSnapshotLine line = snapshot.GetLineFromLineNumber(i);                    IClassificationType type = null;                  string text = line.Snapshot.GetText(                          new SnapshotSpan(line.Start' Math.Min(4' line.Length))); // We only need the first 4                     if (text.StartsWith("!"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.changed");                    else if (text.StartsWith("---"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.header");                  else if (text.StartsWith("-"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.removed");                  else if (text.StartsWith("<"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.removed");                    else if (text.StartsWith("@@"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.patchline");                    else if (text.StartsWith("+++"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.header");                  else if (text.StartsWith("+"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.added");                  else if (text.StartsWith(">"' StringComparison.Ordinal))                      type = _classificationTypeRegistry.GetClassificationType("diff.added");                    else if (text.StartsWith("***"' StringComparison.Ordinal))                  {                      if (i < 2)                          type = _classificationTypeRegistry.GetClassificationType("diff.header");                      else                          type = _classificationTypeRegistry.GetClassificationType("diff.infoline");                  }                  else if (text.Length > 0 && !char.IsWhiteSpace(text[0]))                      type = _classificationTypeRegistry.GetClassificationType("diff.infoline");                    if (type != null)                      spans.Add(new ClassificationSpan(line.Extent' type));              }
