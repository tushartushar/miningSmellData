Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,ZoomAndPan,AnimationHelper,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\AnimationHelper.cs,StartAnimation,The method has 5 parameters. Parameters: animatableElement' dependencyProperty' toValue' animationDurationSeconds' completedEvent
Long Identifier,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,,The length of the parameter enableContentOffsetUpdateFromScale is 34.
Long Identifier,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,,The length of the parameter constrainedContentViewportWidth is 31.
Long Identifier,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,,The length of the parameter constrainedContentViewportHeight is 32.
Long Identifier,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,,The length of the parameter IsMouseWheelScrollingEnabledProperty is 36.
Long Statement,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The length of the statement  "            AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' " is 137.
Long Statement,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The length of the statement  "            AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null); " is 144.
Long Statement,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The length of the statement  "            ZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))); " is 130.
Long Statement,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The length of the statement  "            Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2)); " is 120.
Long Statement,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The length of the statement  "            Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2)); " is 120.
Long Statement,XamlGeneratedNamespace,GeneratedInternalTypeHelper,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\obj\Debug\GeneratedInternalTypeHelper.g.cs,CreateInstance,The length of the statement  "            return System.Activator.CreateInstance(type' ((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)  " is 128.
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))'                  delegate(object sender' EventArgs e)                  {                      //                      // At the end of the animation' ensure that we are snapped to the specified content offset.                      // Due to zooming in on the content focus point and rounding errors' the content offset may                      // be slightly off what we want at the end of the animation and this bit of code corrects it.                      //                      this.ContentOffsetX = contentRect.X;                      this.ContentOffsetY = contentRect.Y;                  });
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))'                  delegate(object sender' EventArgs e)                  {                      //                      // At the end of the animation' ensure that we are snapped to the specified content offset.                      // Due to zooming in on the content focus point and rounding errors' the content offset may                      // be slightly off what we want at the end of the animation and this bit of code corrects it.                      //                      this.ContentOffsetX = contentRect.X;                      this.ContentOffsetY = contentRect.Y;                  });
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: AnimatedZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2))' null);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: ZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2)));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: ZoomPointToViewportCenter(newScale' new Point(contentRect.X + (contentRect.Width / 2)' contentRect.Y + (contentRect.Height / 2)));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,SnapTo,The following statement contains a magic number: this.ContentOffsetX = contentPoint.X - (this.ContentViewportWidth / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,SnapTo,The following statement contains a magic number: this.ContentOffsetY = contentPoint.Y - (this.ContentViewportHeight / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedSnapTo,The following statement contains a magic number: double newX = contentPoint.X - (this.ContentViewportWidth / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedSnapTo,The following statement contains a magic number: double newY = contentPoint.Y - (this.ContentViewportHeight / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomTo,The following statement contains a magic number: Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomTo,The following statement contains a magic number: Point zoomCenter = new Point(ContentOffsetX + (ContentViewportWidth / 2)' ContentOffsetY + (ContentViewportHeight / 2));
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomPointToViewportCenter,The following statement contains a magic number: AnimationHelper.StartAnimation(this' ViewportZoomFocusXProperty' ViewportWidth / 2' AnimationDuration);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,AnimatedZoomPointToViewportCenter,The following statement contains a magic number: AnimationHelper.StartAnimation(this' ViewportZoomFocusYProperty' ViewportHeight / 2' AnimationDuration);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomPointToViewportCenter,The following statement contains a magic number: this.ContentOffsetX = contentZoomFocus.X - (ContentViewportWidth / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ZoomPointToViewportCenter,The following statement contains a magic number: this.ContentOffsetY = contentZoomFocus.Y - (ContentViewportHeight / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c.enableContentOffsetUpdateFromScale)              {                  try                  {                      //                       // Disable content focus syncronization.  We are about to update content offset whilst zooming                      // to ensure that the viewport is focused on our desired content focus point.  Setting this                      // to 'true' stops the automatic update of the content focus when content offset changes.                      //                      c.disableContentFocusSync = true;                        //                      // Whilst zooming in or out keep the content offset up-to-date so that the viewport is always                      // focused on the content focus point (and also so that the content focus is locked to the                       // viewport focus point - this is how the google maps style zooming works).                      //                      double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);                      double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);                      double contentOffsetX = viewportOffsetX / c.ContentScale;                      double contentOffsetY = viewportOffsetY / c.ContentScale;                      c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;                      c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;                  }                  finally                  {                      c.disableContentFocusSync = false;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c.enableContentOffsetUpdateFromScale)              {                  try                  {                      //                       // Disable content focus syncronization.  We are about to update content offset whilst zooming                      // to ensure that the viewport is focused on our desired content focus point.  Setting this                      // to 'true' stops the automatic update of the content focus when content offset changes.                      //                      c.disableContentFocusSync = true;                        //                      // Whilst zooming in or out keep the content offset up-to-date so that the viewport is always                      // focused on the content focus point (and also so that the content focus is locked to the                       // viewport focus point - this is how the google maps style zooming works).                      //                      double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);                      double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);                      double contentOffsetX = viewportOffsetX / c.ContentScale;                      double contentOffsetY = viewportOffsetY / c.ContentScale;                      c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;                      c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;                  }                  finally                  {                      c.disableContentFocusSync = false;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c.enableContentOffsetUpdateFromScale)              {                  try                  {                      //                       // Disable content focus syncronization.  We are about to update content offset whilst zooming                      // to ensure that the viewport is focused on our desired content focus point.  Setting this                      // to 'true' stops the automatic update of the content focus when content offset changes.                      //                      c.disableContentFocusSync = true;                        //                      // Whilst zooming in or out keep the content offset up-to-date so that the viewport is always                      // focused on the content focus point (and also so that the content focus is locked to the                       // viewport focus point - this is how the google maps style zooming works).                      //                      double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);                      double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);                      double contentOffsetX = viewportOffsetX / c.ContentScale;                      double contentOffsetY = viewportOffsetY / c.ContentScale;                      c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;                      c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;                  }                  finally                  {                      c.disableContentFocusSync = false;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ContentScale_PropertyChanged,The following statement contains a magic number: if (c.enableContentOffsetUpdateFromScale)              {                  try                  {                      //                       // Disable content focus syncronization.  We are about to update content offset whilst zooming                      // to ensure that the viewport is focused on our desired content focus point.  Setting this                      // to 'true' stops the automatic update of the content focus when content offset changes.                      //                      c.disableContentFocusSync = true;                        //                      // Whilst zooming in or out keep the content offset up-to-date so that the viewport is always                      // focused on the content focus point (and also so that the content focus is locked to the                       // viewport focus point - this is how the google maps style zooming works).                      //                      double viewportOffsetX = c.ViewportZoomFocusX - (c.ViewportWidth / 2);                      double viewportOffsetY = c.ViewportZoomFocusY - (c.ViewportHeight / 2);                      double contentOffsetX = viewportOffsetX / c.ContentScale;                      double contentOffsetY = viewportOffsetY / c.ContentScale;                      c.ContentOffsetX = (c.ContentZoomFocusX - (c.ContentViewportWidth / 2)) - contentOffsetX;                      c.ContentOffsetY = (c.ContentZoomFocusY - (c.ContentViewportHeight / 2)) - contentOffsetY;                  }                  finally                  {                      c.disableContentFocusSync = false;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ContentOffsetY_Coerce,The following statement contains a magic number: maxOffsetY *= 2;
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ResetViewportZoomFocus,The following statement contains a magic number: ViewportZoomFocusX = ViewportWidth / 2;
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,ResetViewportZoomFocus,The following statement contains a magic number: ViewportZoomFocusY = ViewportHeight / 2;
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,UpdateTranslationX,The following statement contains a magic number: if (this.contentOffsetTransform != null)              {                  double scaledContentWidth = this.unScaledExtent.Width * this.ContentScale;                  if (scaledContentWidth < this.ViewportWidth)                  {                      //                      // When the content can fit entirely within the viewport' center it.                      //                      this.contentOffsetTransform.X = (this.ContentViewportWidth - this.unScaledExtent.Width) / 2;                  }                  else                  {                      this.contentOffsetTransform.X = -this.ContentOffsetX;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,UpdateTranslationY,The following statement contains a magic number: if (this.contentOffsetTransform != null)              {                  double scaledContentHeight = this.unScaledExtent.Height * this.ContentScale;                  if (scaledContentHeight < this.ViewportHeight)                  {                      //                      // When the content can fit entirely within the viewport' center it.                      //                      this.contentOffsetTransform.Y = (this.ContentViewportHeight - this.unScaledExtent.Height) / 2;                  }                  else                  {                      this.contentOffsetTransform.Y = -this.ContentOffsetY;                  }              }
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,UpdateContentZoomFocusX,The following statement contains a magic number: ContentZoomFocusX = ContentOffsetX + (constrainedContentViewportWidth / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,UpdateContentZoomFocusY,The following statement contains a magic number: ContentZoomFocusY = ContentOffsetY + (constrainedContentViewportHeight / 2);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,LineUp,The following statement contains a magic number: ContentOffsetY -= (ContentViewportHeight / 10);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,LineDown,The following statement contains a magic number: ContentOffsetY += (ContentViewportHeight / 10);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,LineLeft,The following statement contains a magic number: ContentOffsetX -= (ContentViewportWidth / 10);
Magic Number,ZoomAndPan,ZoomAndPanControl,C:\repos\yysun_Git-Source-Control-Provider\GitUI\ZoomAndPan\ZoomAndPanControl.cs,LineRight,The following statement contains a magic number: ContentOffsetX += (ContentViewportWidth / 10);
