Implementation smell,Namespace,Class,File,Method,Description
Long Method,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The method has 169 lines of code.
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(2' AND);
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(3' "<"'">"'"<="'">="'"~="'"==");
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(4' Associativity.Right' "..");
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(5' "+"' "-");
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(6' "*"' "/"' "%");
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(7' NOT);
Magic Number,LuaLanguage,LuaGrammar,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaGrammer.cs,LuaGrammar,The following statement contains a magic number: this.RegisterOperators(8' Associativity.Right' "^");
Magic Number,LuaLanguage,LuaStringLiteral,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaStringLiteral.cs,HandleSpecialEscape,The following statement contains a magic number: switch (first)              {                  case 'a':                  case 'b':                  case 'f':                   case 'n':                  case 'r':                  case 't':                   case 'v':                  case '\\':                   case '"':                   case '\'':                       break;                    case '0':                  case '1':                  case '2':                      {                          bool success = false;                          if (segment.Length >=3)                          {                              //Verify that a numeric escape is 3 characters                              string value = segment.Substring(0' 3);                              int dummy = 0;                              success = Int32.TryParse(value' out dummy);                                                    }                                                    if(!success)                              details.Error = "Invalid escape sequence: \000 must be a valid number.";                        }                      break;              }
Magic Number,LuaLanguage,LuaStringLiteral,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaStringLiteral.cs,HandleSpecialEscape,The following statement contains a magic number: switch (first)              {                  case 'a':                  case 'b':                  case 'f':                   case 'n':                  case 'r':                  case 't':                   case 'v':                  case '\\':                   case '"':                   case '\'':                       break;                    case '0':                  case '1':                  case '2':                      {                          bool success = false;                          if (segment.Length >=3)                          {                              //Verify that a numeric escape is 3 characters                              string value = segment.Substring(0' 3);                              int dummy = 0;                              success = Int32.TryParse(value' out dummy);                                                    }                                                    if(!success)                              details.Error = "Invalid escape sequence: \000 must be a valid number.";                        }                      break;              }
Missing Default,LuaLanguage,LuaStringLiteral,D:\research\architectureSmells\repos\yujiang_vsLua\LuaLanguage\Grammar\LuaStringLiteral.cs,HandleSpecialEscape,The following switch statement is missing a default case: switch (first)              {                  case 'a':                  case 'b':                  case 'f':                   case 'n':                  case 'r':                  case 't':                   case 'v':                  case '\\':                   case '"':                   case '\'':                       break;                    case '0':                  case '1':                  case '2':                      {                          bool success = false;                          if (segment.Length >=3)                          {                              //Verify that a numeric escape is 3 characters                              string value = segment.Substring(0' 3);                              int dummy = 0;                              success = Int32.TryParse(value' out dummy);                                                    }                                                    if(!success)                              details.Error = "Invalid escape sequence: \000 must be a valid number.";                        }                      break;              }
