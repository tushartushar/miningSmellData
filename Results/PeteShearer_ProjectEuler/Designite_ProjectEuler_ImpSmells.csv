Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,Solve,Cyclomatic complexity of the method is 8
Long Statement,ProjectEuler,ProblemEight,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemEight.cs,Solve,The length of the statement  "	var thousandDigitNumber = "731671765313306249192251196744265747423553491949349698352031277450632623957831801698480186947885184385861560789112949495459501737958331952853208805511" + "125406987471585238630507156932909632952274430435576689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749" + "303589072962904915604407723907138105158593079608667017242712188399879790879227492190169972088809377665727333001053367881220235421809751254540594752243" + "525849077116705560136048395864467063244157221553975369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474" + "821663704844031998900088952434506585412275886668811642717147992444292823086346567481391912316282458617866458359124566529476545682848912883142607690042" + "242190226710556263211111093705442175069416589604080719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606" + "0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"; " is 1059.
Long Statement,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The length of the statement  "	while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) { " is 378.
Magic Number,ProjectEuler,PrimeNumbers,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Helpers\PrimeNumbers.cs,GetPrimes,The following statement contains a magic number: for (int i = 2; i <= upToNumber; i++) {  	if (IsPrime (i)) {  		primeNumbers.Add (i);  	}  }  
Magic Number,ProjectEuler,PrimeNumbers,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Helpers\PrimeNumbers.cs,IsPrime,The following statement contains a magic number: if (number == 2)  	return true;  
Magic Number,ProjectEuler,PrimeNumbers,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Helpers\PrimeNumbers.cs,IsPrime,The following statement contains a magic number: if (number % 2 == 0)  	return false;  
Magic Number,ProjectEuler,PrimeNumbers,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Helpers\PrimeNumbers.cs,IsPrime,The following statement contains a magic number: for (int i = 2; i <= max; i++) {  	if (number % i == 0) {  		isPrime = false;  		break;  	}  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: while (number % 2 != 0 || number % 3 != 0 || number % 4 != 0 || number % 5 != 0 || number % 6 != 0 || number % 7 != 0 || number % 8 != 0 || number % 9 != 0 || number % 10 != 0 || number % 11 != 0 || number % 12 != 0 || number % 13 != 0 || number % 14 != 0 || number % 15 != 0 || number % 16 != 0 || number % 17 != 0 || number % 18 != 0 || number % 19 != 0 || number % 20 != 0) {  	number += 20;  }  
Magic Number,ProjectEuler,ProblemFive,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFive.cs,SolveBruteForce,The following statement contains a magic number: number += 20;  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var i = 100; i <= 999; i++) {  	for (var k = 100; k <= 999; k++) {  		var product = i * k;  		if (IsPalindrome (product) && product > max) {  			theI = i;  			theK = k;  			max = product;  		}  	}  }  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var i = 100; i <= 999; i++) {  	for (var k = 100; k <= 999; k++) {  		var product = i * k;  		if (IsPalindrome (product) && product > max) {  			theI = i;  			theK = k;  			max = product;  		}  	}  }  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var i = 100; i <= 999; i++) {  	for (var k = 100; k <= 999; k++) {  		var product = i * k;  		if (IsPalindrome (product) && product > max) {  			theI = i;  			theK = k;  			max = product;  		}  	}  }  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var i = 100; i <= 999; i++) {  	for (var k = 100; k <= 999; k++) {  		var product = i * k;  		if (IsPalindrome (product) && product > max) {  			theI = i;  			theK = k;  			max = product;  		}  	}  }  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var k = 100; k <= 999; k++) {  	var product = i * k;  	if (IsPalindrome (product) && product > max) {  		theI = i;  		theK = k;  		max = product;  	}  }  
Magic Number,ProjectEuler,ProblemFour,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemFour.cs,Solve,The following statement contains a magic number: for (var k = 100; k <= 999; k++) {  	var product = i * k;  	if (IsPalindrome (product) && product > max) {  		theI = i;  		theK = k;  		max = product;  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var a = 1; a < 1000; a++) {  	for (var b = 1; b < 1000; b++) {  		var c = 1000 - a - b;  		var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  		var rightSide = Math.Pow (c' 2);  		if (leftSide == rightSide) {  			Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  			return a * b * c;  		}  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var b = 1; b < 1000; b++) {  	var c = 1000 - a - b;  	var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  	var rightSide = Math.Pow (c' 2);  	if (leftSide == rightSide) {  		Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  		return a * b * c;  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var b = 1; b < 1000; b++) {  	var c = 1000 - a - b;  	var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  	var rightSide = Math.Pow (c' 2);  	if (leftSide == rightSide) {  		Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  		return a * b * c;  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var b = 1; b < 1000; b++) {  	var c = 1000 - a - b;  	var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  	var rightSide = Math.Pow (c' 2);  	if (leftSide == rightSide) {  		Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  		return a * b * c;  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var b = 1; b < 1000; b++) {  	var c = 1000 - a - b;  	var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  	var rightSide = Math.Pow (c' 2);  	if (leftSide == rightSide) {  		Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  		return a * b * c;  	}  }  
Magic Number,ProjectEuler,ProblemNine,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemNine.cs,Solve,The following statement contains a magic number: for (var b = 1; b < 1000; b++) {  	var c = 1000 - a - b;  	var leftSide = Math.Pow (a' 2) + Math.Pow (b' 2);  	var rightSide = Math.Pow (c' 2);  	if (leftSide == rightSide) {  		Console.WriteLine ("The Numbers are {0}' {1}' and {2}"' a' b' c);  		return a * b * c;  	}  }  
Magic Number,ProjectEuler,ProblemOne,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemOne.cs,Solve,The following statement contains a magic number: for (int i = 1; i < 1000; i++) {  	if (IsMultipleOfThreeOrFive (i)) {  		answer += i;  	}  }  
Magic Number,ProjectEuler,ProblemOne,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemOne.cs,IsMultipleOfThreeOrFive,The following statement contains a magic number: return (((number % 3) == 0) || ((number % 5) == 0));  
Magic Number,ProjectEuler,ProblemOne,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemOne.cs,IsMultipleOfThreeOrFive,The following statement contains a magic number: return (((number % 3) == 0) || ((number % 5) == 0));  
Magic Number,ProjectEuler,ProblemSeven,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemSeven.cs,Solve,The following statement contains a magic number: while (true) {  	if (PrimeNumbers.IsPrime (number)) {  		counter++;  		if (counter == 10001)  			break;  	}  	number++;  }  
Magic Number,ProjectEuler,ProblemSeven,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemSeven.cs,Solve,The following statement contains a magic number: if (PrimeNumbers.IsPrime (number)) {  	counter++;  	if (counter == 10001)  		break;  }  
Magic Number,ProjectEuler,ProblemSeven,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemSeven.cs,Solve,The following statement contains a magic number: if (counter == 10001)  	break;  
Magic Number,ProjectEuler,ProblemThree,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemThree.cs,Solve,The following statement contains a magic number: for (double i = 2; i <= limit; i++) {  	if (IsPrime (i) && (number % i == 0)) {  		currentLargestPrime = i;  	}  }  
Magic Number,ProjectEuler,ProblemThree,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemThree.cs,IsPrime,The following statement contains a magic number: if (n % 2 == 0)  	return false;  
Magic Number,ProjectEuler,ProblemThree,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemThree.cs,IsPrime,The following statement contains a magic number: for (double i = 3; i <= upperLimit; i++) {  	if (n % i == 0)  		return false;  }  
Magic Number,ProjectEuler,ProblemTwo,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemTwo.cs,ComputeFibonacci,The following statement contains a magic number: if (term < 2) {  	answer = term;  }  else {  	answer = ComputeFibonacci (term - 1) + ComputeFibonacci (term - 2);  }  
Magic Number,ProjectEuler,ProblemTwo,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemTwo.cs,ComputeFibonacci,The following statement contains a magic number: if (term < 2) {  	answer = term;  }  else {  	answer = ComputeFibonacci (term - 1) + ComputeFibonacci (term - 2);  }  
Magic Number,ProjectEuler,ProblemTwo,C:\repos\PeteShearer_ProjectEuler\ProjectEuler\Problems 1-10\ProblemTwo.cs,ComputeFibonacci,The following statement contains a magic number: answer = ComputeFibonacci (term - 1) + ComputeFibonacci (term - 2);  
