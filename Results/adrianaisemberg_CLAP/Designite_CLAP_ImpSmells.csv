Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CLAP,DefaultHelpGenerator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\DefaultHelpGenerator.cs,GetHelpString,Cyclomatic complexity of the method is 23
Complex Method,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,RunInternal,Cyclomatic complexity of the method is 10
Complex Method,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,SelectMethod,Cyclomatic complexity of the method is 8
Complex Method,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,HandleDefinedGlobals,Cyclomatic complexity of the method is 9
Complex Method,CLAP,TypeValidator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\TypeValidator.cs,Validate,Cyclomatic complexity of the method is 11
Complex Method,CLAP,ValuesFactory,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ValuesFactory.cs,CreateParameterValues,Cyclomatic complexity of the method is 9
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 5 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 6 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 7 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 8 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 9 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The method has 10 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 5 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 6 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 7 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 8 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 9 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The method has 10 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 5 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 6 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 7 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 8 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 9 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 10 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 5 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 6 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 7 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 8 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 9 parameters.
Long Parameter List,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,Run,The method has 10 parameters.
Long Parameter List,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,PostInterception,The method has 5 parameters.
Long Parameter List,CLAP,ValuesFactory,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ValuesFactory.cs,ConvertParameterValue,The method has 5 parameters.
Long Parameter List,CLAP.Interception,PostVerbExecutionContext,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Interception\PostVerbExecutionContext.cs,PostVerbExecutionContext,The method has 6 parameters.
Long Statement,CLAP,HelpGeneratorBase,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\HelpGeneratorBase.cs,GetParserHelp,The length of the statement  "				Separator = parameter != null ? parameter.ParameterInfo.ParameterType.IsArray ? parameter.Separator ?? SeparatorAttribute.DefaultSeparator : null : null' " is 153.
Long Statement,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunWinForms,The length of the statement  "	return new Parser<T1' T2' T3' T4' T5' T6' T7' T8' T9> ().WinForms ().RunTargets (args' t1' t2' t3' t4' t5' t6' t7' t8' t9); " is 123.
Long Statement,CLAP,Parser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Parser.WinForms.cs,RunConsole,The length of the statement  "	return new Parser<T1' T2' T3' T4' T5' T6' T7' T8' T9> ().Console ().RunTargets (args' t1' t2' t3' t4' t5' t6' t7' t8' t9); " is 122.
Long Statement,CLAP,EnvironmentParserHandlers,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\EnvironmentParserHandlers.cs,WinForms,The length of the statement  "	parser.Register.ErrorHandler (c => MessageBox.Show (c.Exception.Message' "Error"' MessageBoxButtons.OK' MessageBoxIcon.Error)); " is 127.
Long Statement,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,RunTargets,The length of the statement  "	var target = (targetResolver == null || targetResolver.RegisteredTypes.None ()) ? null : targetResolver.Resolve (parser.Type); " is 126.
Long Statement,CLAP,ParametersExpressionValidator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParametersExpressionValidator.cs,Validate,The length of the statement  "		throw new ValidationException ("Expression failed validation: '{0}' for arguments: [{1}]".FormatWith (Expression' parameters.Select (p => "{0}={1}".FormatWith (p.Name' p.Value.ToSafeString ("<NULL>"))).StringJoin ("' "))); " is 222.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,RunInternal,The length of the statement  "	var globals = GetDefinedGlobals ().Where (g => notVerbs.Any (a => a.Substring (1).StartsWith (g.Name.ToLowerInvariant ()))).ToList (); " is 134.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,RunInternal,The length of the statement  "	var notVerbsNotGlobals = notVerbs.Where (a => globals.All (g => !a.Substring (1).StartsWith (g.Name.ToLowerInvariant ()))).ToList (); " is 133.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,PostInterception,The length of the statement  "	var postVerbExecutionContext = new PostVerbExecutionContext (method' target' parameters' preVerbExecutionContext.Cancel' verbException' preVerbExecutionContext.UserContext); " is 173.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateParameterDefaults,The length of the statement  "	var hasBothDefaults = parameters.Where (p => p.HasAttribute<DefaultValueAttribute> () && p.HasAttribute<DefaultProviderAttribute> ()); " is 134.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateParameterDefaults,The length of the statement  "	var hasInvalidDefaultProvider = parameters.Where (p => p.HasAttribute<DefaultProviderAttribute> () && !typeof(DefaultProvider).IsAssignableFrom (p.GetAttribute<DefaultProviderAttribute> ().DefaultProviderType)); " is 211.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateSeparators,The length of the statement  "	var separators = parameters.Where (p => p.HasAttribute<SeparatorAttribute> ()).Select (p => Pair.Create (p' p.GetAttribute<SeparatorAttribute> ().Separator)); " is 158.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateSeparators,The length of the statement  "	var invalidSeparator = separators.FirstOrDefault (pair => string.IsNullOrEmpty (pair.Second) || pair.Second.Contains (" ")); " is 124.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateSeparators,The length of the statement  "	var invalidRegisteredHandlers = registration.RegisteredGlobalHandlers.FirstOrDefault (a => a.Value.Type.IsArray && (string.IsNullOrEmpty (a.Value.Separator) || a.Value.Separator.Contains (" "))); " is 195.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedEmptyHandlers,The length of the statement  "				if (definedEmptyHandlerParameters.Length > 1 || definedEmptyHandlerParameters.First ().ParameterType != typeof(string)) { " is 121.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedEmptyHandlers,The length of the statement  "				throw new ArgumentMismatchException ("Method '{0}' is marked as [Empty] so it should not have any parameters".FormatWith (definedEmptyHandler)); " is 144.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,GetParameters,The length of the statement  "	var duplicates = allNames.Where (name => allNames.Count (n => n.Equals (name' StringComparison.InvariantCultureIgnoreCase)) > 1); " is 129.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,GetParameters,The length of the statement  "		throw new InvalidOperationException ("Duplicate parameter names found in {0}: {1}".FormatWith (method.Name' duplicates.Distinct ().StringJoin ("' "))); " is 151.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,GetParameters,The length of the statement  "	var paramsToFirstCharDict = parameters.ToDictionary (p => p' p => p.ParameterInfo.Name.ToLowerInvariant () [0].ToString ()); " is 124.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,HandleDefinedGlobals,The length of the statement  "		var key = args.Keys.FirstOrDefault (k => allNames.Any (n => n.Equals (k' StringComparison.InvariantCultureIgnoreCase))); " is 120.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,HandleDefinedGlobals,The length of the statement  "				throw new NotSupportedException ("Method {0} has more than one parameter and cannot be handled as a global handler".FormatWith (method.Name)); " is 142.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,HandleHelp,The length of the statement  "		if (name.Equals (arg' StringComparison.InvariantCultureIgnoreCase) || att.Aliases.CommaSplit ().Any (s => s.Equals (arg' StringComparison.InvariantCultureIgnoreCase))) { " is 169.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,HandleEmptyArguments,The length of the statement  "		var parameters = ValuesFactory.CreateParameterValues (defaultVerb' target' new Dictionary<string' string> ()' GetParameters (defaultVerb.MethodInfo)); " is 150.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,VerifyMethodAndTarget,The length of the statement  "		throw new ParserExecutionTargetException ("Method '{0}' is not static but the target object is null".FormatWith (method)); " is 122.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,VerifyMethodAndTarget,The length of the statement  "		throw new ParserExecutionTargetException ("Method '{0}' is static but the target object is not null".FormatWith (method)); " is 122.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedErrorHandlers,The length of the statement  "		throw new ArgumentMismatchException ("Method '{0}' is marked as [Error] so it should have a single parameter of type CLAP.ExceptionContext".FormatWith (method)); " is 161.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedErrorHandlers,The length of the statement  "			throw new ArgumentMismatchException ("Method '{0}' is marked as [Error] so it should have a single parameter of type CLAP.ExceptionContext".FormatWith (method)); " is 161.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedPreInterceptors,The length of the statement  "		throw new ArgumentMismatchException ("Method '{0}' is marked as [PreVerbExecution] so it should have a single parameter of type CLAP.PreVerbExecutionContext".FormatWith (method)); " is 179.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedPreInterceptors,The length of the statement  "			throw new ArgumentMismatchException ("Method '{0}' is marked as [PreVerbExecution] so it should have a single parameter of type CLAP.PreVerbExecutionContext".FormatWith (method)); " is 179.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedPostInterceptors,The length of the statement  "		throw new ArgumentMismatchException ("Method '{0}' is marked as [PostVerbExecution] so it should have a single parameter of type CLAP.PostVerbExecutionContext".FormatWith (method)); " is 181.
Long Statement,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,ValidateDefinedPostInterceptors,The length of the statement  "			throw new ArgumentMismatchException ("Method '{0}' is marked as [PostVerbExecution] so it should have a single parameter of type CLAP.PostVerbExecutionContext".FormatWith (method)); " is 181.
Long Statement,CLAP,ParserRegistration,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRegistration.cs,GetTargetType,The length of the statement  "	var matchByTypeName = m_types.FirstOrDefault (t => t.Name.Equals (typeNameOrAlias' StringComparison.OrdinalIgnoreCase)); " is 120.
Long Statement,CLAP,ParserRegistration,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRegistration.cs,GetTargetAliasAttributeValue,The length of the statement  "	var aliasAttribute = targetType.GetCustomAttributes (typeof(TargetAliasAttribute)' false).FirstOrDefault () as TargetAliasAttribute; " is 132.
Long Statement,CLAP,TypeValidator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\TypeValidator.cs,Validate,The length of the statement  "	var propsAndValues = properties.Where (p => p.GetIndexParameters ().None ()).Select (p => new ValueInfo (p.Name' p.PropertyType' p.GetValue (obj' null))).ToArray (); " is 165.
Long Statement,CLAP,TypeValidator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\TypeValidator.cs,Validate,The length of the statement  "				var propertyCollectionValidators = property.GetAttributes<CollectionValidationAttribute> ().Select (a => a.GetValidator ()); " is 124.
Long Statement,CLAP,TypeValidator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\TypeValidator.cs,Validate,The length of the statement  "					var propertyPropsAndValues = value.GetType ().GetProperties (BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where (p => p.GetIndexParameters ().None ()).Select (p => new ValueInfo (p.Name' p.PropertyType' p.GetValue (value' null))).ToArray (); " is 266.
Long Statement,CLAP,Utils,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\Utils.cs,GetAllMethods,The length of the statement  "	var methods = type.GetMethods (BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static | BindingFlags.FlattenHierarchy); " is 155.
Long Statement,CLAP,ValuesFactory,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ValuesFactory.cs,ConvertParameterValue,The length of the statement  "			var convertToArrayMethod = typeof(ValuesFactory).GetMethod ("ConvertToArray"' BindingFlags.NonPublic | BindingFlags.Static).MakeGenericMethod (type); " is 149.
Magic Number,CLAP,DefaultHelpGenerator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\DefaultHelpGenerator.cs,GetHelpString,The following statement contains a magic number: for (int i = 0; i < count; i++) {  	var parser = helpInfo.Parsers [i];  	foreach (var verb in parser.Verbs.OrderByDescending (v => v.IsDefault)) {  		sb.AppendLine ();  		sb.Append (verbsLead);  		if (multi) {  			sb.AppendFormat ("{0}."' parser.Type.Name.ToLowerInvariant ());  		}  		sb.Append (verb.Names.StringJoin ("|").ToLowerInvariant ());  		if (verb.IsDefault) {  			sb.Append (" (Default)");  		}  		if (!string.IsNullOrEmpty (verb.Description)) {  			sb.AppendFormat (": {0}"' verb.Description);  		}  		sb.AppendLine ();  		if (verb.Parameters.Any ()) {  			var longestParameter = verb.Parameters.Max (p => p.Names.StringJoin (" /").Length);  			var longestType = verb.Parameters.Max (p => p.Type.GetGenericTypeName ().Length);  			foreach (var p in verb.Parameters.OrderBy (p => p.Names.First ())) {  				sb.Append (parametersLead);  				sb.AppendFormat ("/{0} : "' p.Names.StringJoin (" /").ToLowerInvariant ().PadRight (longestParameter' ' '));  				if (!string.IsNullOrEmpty (p.Description)) {  					sb.AppendFormat ("{0} "' p.Description);  				}  				var typeName = GetTypeName (p.Type);  				if (!string.IsNullOrEmpty (typeName)) {  					sb.AppendFormat ("({0}) "' typeName);  				}  				if (p.Required) {  					sb.Append ("(Required) ");  				}  				if (p.Separator != null && p.Separator != SeparatorAttribute.DefaultSeparator) {  					sb.AppendFormat ("(Separator = {0}) "' p.Separator);  				}  				if (p.Default != null) {  					sb.AppendFormat ("(Default = {0}) "' p.Default);  				}  				if (p.Validations.Any ()) {  					sb.AppendFormat ("({0}) "' p.Validations.StringJoin ("' "));  				}  				sb.AppendLine ();  			}  			// foreach (var p in verb.Parameters  		}  		if (verb.Validations.Any ()) {  			sb.AppendLine ();  			sb.Append (parametersLead);  			sb.AppendLine ("Validation:");  			foreach (var v in verb.Validations) {  				sb.Append (validationsLead);  				sb.AppendLine (v);  			}  		}  	}  	// foreach (var verb in parser.Verbs  	if (parser.Globals.Any ()) {  		sb.AppendLine ();  		sb.Append (verbsLead);  		sb.AppendLine ("Global Parameters:");  		var longestGlobal = parser.Globals.Max (p => p.Names.StringJoin ("|").Length);  		foreach (var g in parser.Globals.OrderBy (g => g.Names.First ())) {  			sb.Append (parametersLead);  			sb.AppendFormat ("/{0} : "' g.Names.StringJoin ("|").ToLowerInvariant ().PadRight (longestGlobal' ' '));  			if (!string.IsNullOrEmpty (g.Description)) {  				sb.AppendFormat ("{0} "' g.Description);  			}  			var typeName = GetTypeName (g.Type);  			if (!string.IsNullOrEmpty (typeName)) {  				sb.AppendFormat ("({0}) "' typeName);  			}  			if (g.Separator != null && g.Separator != SeparatorAttribute.DefaultSeparator) {  				sb.AppendFormat ("(Separator = {0}) "' g.Separator);  			}  			if (g.Validations != null && g.Validations.Any ()) {  				sb.AppendFormat ("({0}) "' g.Validations.StringJoin ("' "));  			}  			sb.AppendLine ();  		}  		// foreach (var g in parser.Globals  	}  	if (multi && i < count - 1) {  		sb.AppendLine ();  		sb.Append (verbsLead);  		sb.AppendLine (string.Empty.PadRight (80' '-'));  	}  }  
Magic Number,CLAP,DefaultHelpGenerator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\DefaultHelpGenerator.cs,GetHelpString,The following statement contains a magic number: if (multi && i < count - 1) {  	sb.AppendLine ();  	sb.Append (verbsLead);  	sb.AppendLine (string.Empty.PadRight (80' '-'));  }  
Magic Number,CLAP,DefaultHelpGenerator,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\DefaultHelpGenerator.cs,GetHelpString,The following statement contains a magic number: sb.AppendLine (string.Empty.PadRight (80' '-'));  
Magic Number,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,GetMultiTypesParser,The following statement contains a magic number: if (parts.Length != 2) {  	throw new InvalidVerbException ();  }  
Magic Number,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,GetSingleTypeParser,The following statement contains a magic number: if (verb.Contains (s_delimiters)) {  	var parts = verb.Split (s_delimiters' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length != 2) {  		throw new InvalidVerbException ();  	}  	Debug.Assert (parts.Length == 2);  	var typeName = parts [0];  	if (!type.Name.Equals (typeName' StringComparison.InvariantCultureIgnoreCase)) {  		throw new UnknownParserTypeException (typeName);  	}  	args [0] = args [0].Substring (typeName.Length + 1);  }  
Magic Number,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,GetSingleTypeParser,The following statement contains a magic number: if (verb.Contains (s_delimiters)) {  	var parts = verb.Split (s_delimiters' StringSplitOptions.RemoveEmptyEntries);  	if (parts.Length != 2) {  		throw new InvalidVerbException ();  	}  	Debug.Assert (parts.Length == 2);  	var typeName = parts [0];  	if (!type.Name.Equals (typeName' StringComparison.InvariantCultureIgnoreCase)) {  		throw new UnknownParserTypeException (typeName);  	}  	args [0] = args [0].Substring (typeName.Length + 1);  }  
Magic Number,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,GetSingleTypeParser,The following statement contains a magic number: if (parts.Length != 2) {  	throw new InvalidVerbException ();  }  
Magic Number,CLAP,MultiParser,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\MultiParser.cs,GetSingleTypeParser,The following statement contains a magic number: Debug.Assert (parts.Length == 2);  
Magic Number,CLAP,ParserRunner,F:\newReposMay17\adrianaisemberg_CLAP\CLAP\ParserRunner.cs,MapArguments,The following statement contains a magic number: foreach (var arg in args) {  	// all arguments must start with a valid prefix  	//  	if (!arg.StartsWith (ArgumentPrefixes)) {  		throw new MissingArgumentPrefixException (arg' string.Join ("'"' ArgumentPrefixes));  	}  	var prefix = arg.Substring (1);  	var parts = prefix.Split (new[] {  		'=''  		':'  	}' 2' StringSplitOptions.RemoveEmptyEntries);  	var name = parts [0].ToLowerInvariant ();  	string valueString = null;  	// a switch (a boolean parameter) doesn't need to have a separator'  	// in that case' a null string value is mapped  	//  	if (parts.Length > 1) {  		valueString = parts [1];  		// if it has a file input suffix - remove it  		//  		if (name.EndsWith (s_fileInputSuffix)) {  			name = name.Substring (0' name.Length - 1);  			// the value is replaced with the content of the input file  			//  			valueString = FileSystemHelper.ReadAllText (valueString);  		}  	}  	map.Add (name' valueString);  }  
