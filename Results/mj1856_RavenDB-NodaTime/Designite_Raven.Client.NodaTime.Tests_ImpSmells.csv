Implementation smell,Namespace,Class,File,Method,Description
Long Method,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The method has 118 lines of code.
Long Statement,Raven.Client.NodaTime.Tests,NodaDateTimeZoneTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDateTimeZoneTests.cs,Can_Use_NodaTime_DateTimeZone_In_Static_Index,The length of the statement  "                    var q1 = session.Query<Foo' TestIndex>().Customize(x => x.WaitForNonStaleResults()).Where(x => x.DateTimeZone.Equals(zone)); " is 124.
Long Statement,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/2"' Duration = duration + Duration.FromHours(1)' Timespan = TimeSpan.FromHours(-1) });" is 121.
Long Statement,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/3"' Duration = duration + Duration.FromHours(2)' Timespan = TimeSpan.FromHours(1) });" is 120.
Long Statement,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/2"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(1)) }); " is 131.
Long Statement,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/3"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(2)) }); " is 131.
Long Statement,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/2"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(1)) }); " is 131.
Long Statement,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The length of the statement  "                    session.Store(new Foo { Id = "foos/3"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(2)) }); " is 131.
Long Statement,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Dynamic_Index1,The length of the statement  "                    var q1 = session.Query<Foo>().Customize(x => x.WaitForNonStaleResults()).OrderBy(x => x.Period).Where(x => x.Period == period); " is 127.
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_All_Scheduled_Dates,The following statement contains a magic number: var q = session.Query<HoursForDate' SchedulesIndex>()                          .ProjectInto<HoursForDate>()                          .Take(1024);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_All_Scheduled_Dates,The following statement contains a magic number: Assert.Equal(2 * 364' results.Count);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_All_Scheduled_Dates,The following statement contains a magic number: Assert.Equal(2 * 364' results.Count);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_Schedule_For_Instant,The following statement contains a magic number: var now = Instant.FromUtc(2013' 4' 6' 18' 0);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_Schedule_For_Instant,The following statement contains a magic number: var now = Instant.FromUtc(2013' 4' 6' 18' 0);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_Schedule_For_Instant,The following statement contains a magic number: var now = Instant.FromUtc(2013' 4' 6' 18' 0);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,Get_Schedule_For_Instant,The following statement contains a magic number: var now = Instant.FromUtc(2013' 4' 6' 18' 0);
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2013' 1' 1)'                      ToDate = new LocalDate(2013' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The following statement contains a magic number: session.Store(new Schedule                  {                      BusinessId = "businesses/1"'                      FromDate = new LocalDate(2014' 1' 1)'                      ToDate = new LocalDate(2014' 12' 31)'                      BusinessHours =                      {                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Sunday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Monday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Tuesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Wednesday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Thursday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(22' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Friday'                              Open = new LocalTime(11' 0)'                              Close = new LocalTime(2' 0)                          }'                          new HoursOfOperation                          {                              DayOfWeek = IsoDayOfWeek.Saturday'                              Open = new LocalTime(6' 0)'                              Close = new LocalTime(2' 0)                          }                      }                  });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Document_Positive,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Document(Duration.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Document_Negative,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Document(Duration.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Dynamic_Index1(Duration.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Dynamic_Index2(Duration.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Duration = duration + Duration.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].Duration > results3[2].Duration);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Duration = duration - Duration.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].Duration < results3[2].Duration);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Static_Index1(Duration.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Duration_In_Static_Index2(Duration.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/1"' Duration = duration' Timespan = TimeSpan.FromHours(-2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Duration = duration + Duration.FromHours(2)' Timespan = TimeSpan.FromHours(1) });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: var qts1 = session.Query<Foo' TestTSIndex>().Customize(x => x.WaitForNonStaleResults())                         .Where(x => x.Timespan == TimeSpan.FromHours(-2));
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: var qts2 = session.Query<Foo' TestTSIndex>().Customize(x => x.WaitForNonStaleResults())                         .Where(x => x.Timespan > TimeSpan.FromHours(-1.5))                         .OrderByDescending(x => x.Timespan);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].Duration > results3[2].Duration);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Duration = duration - Duration.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaDurationTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaDurationTests.cs,Can_Use_NodaTime_Duration_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].Duration < results3[2].Duration);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Instant = instant + Duration.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].Instant > results3[2].Instant);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Instant = instant + Duration.FromMinutes(-2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].Instant < results3[2].Instant);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Instant = instant + Duration.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].Instant > results3[2].Instant);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Instant = instant + Duration.FromMinutes(-2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaInstantTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaInstantTests.cs,Can_Use_NodaTime_Instant_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].Instant < results3[2].Instant);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Document,The following statement contains a magic number: var start = now - Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Document,The following statement contains a magic number: var end = now + Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Dynamic_Index,The following statement contains a magic number: var start = now - Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Dynamic_Index,The following statement contains a magic number: var end = now + Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Dynamic_Index,The following statement contains a magic number: var interval2 = new Interval(end' end + Duration.FromMinutes(5));
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Dynamic_Index,The following statement contains a magic number: Assert.Equal(2' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Static_Index,The following statement contains a magic number: var start = now - Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Static_Index,The following statement contains a magic number: var end = now + Duration.FromMinutes(5);
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Static_Index,The following statement contains a magic number: var interval2 = new Interval(end' end + Duration.FromMinutes(5));
Magic Number,Raven.Client.NodaTime.Tests,NodaIntervalTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaIntervalTests.cs,Can_Use_NodaTime_Interval_In_Static_Index,The following statement contains a magic number: Assert.Equal(2' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDate = ld + Period.FromDays(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalDate > results3[2].LocalDate);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDate = ld - Period.FromDays(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalDate < results3[2].LocalDate);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDate = ld + Period.FromDays(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalDate > results3[2].LocalDate);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDate = ld - Period.FromDays(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTests.cs,Can_Use_NodaTime_LocalDate_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalDate < results3[2].LocalDate);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDateTime = ldt + Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalDateTime > results3[2].LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDateTime = ldt - Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalDateTime < results3[2].LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDateTime = ldt + Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalDateTime > results3[2].LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalDateTime = ldt - Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalDateTimeTests.cs,Can_Use_NodaTime_LocalDateTime_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalDateTime < results3[2].LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalTime = lt + Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalTime > results3[2].LocalTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalTime = lt - Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalTime < results3[2].LocalTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalTime = lt + Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].LocalTime > results3[2].LocalTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' LocalTime = lt - Period.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaLocalTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaLocalTimeTests.cs,Can_Use_NodaTime_LocalTime_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].LocalTime < results3[2].LocalTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(2)) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].OffsetDateTime.ToInstant() > results3[2].OffsetDateTime.ToInstant());
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results4.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results5.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results5[1].OffsetDateTime.LocalDateTime > results5[2].OffsetDateTime.LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo                      {                          Id = "foos/3"'                          OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(-2))                      });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].OffsetDateTime.ToInstant() < results3[2].OffsetDateTime.ToInstant());
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results4.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results5.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results5[1].OffsetDateTime.LocalDateTime < results5[2].OffsetDateTime.LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(2)) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].OffsetDateTime.ToInstant() > results3[2].OffsetDateTime.ToInstant());
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results4.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results5.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index1,The following statement contains a magic number: Assert.True(results5[1].OffsetDateTime.LocalDateTime > results5[2].OffsetDateTime.LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo                      {                          Id = "foos/3"'                          OffsetDateTime = OffsetDateTime.FromDateTimeOffset(odt.ToDateTimeOffset().AddMinutes(-2))                      });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].OffsetDateTime.ToInstant() < results3[2].OffsetDateTime.ToInstant());
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results4.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results5.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetDateTimeTests.cs,Can_Use_NodaTime_OffsetDateTime_In_Static_Index2,The following statement contains a magic number: Assert.True(results5[1].OffsetDateTime.LocalDateTime < results5[2].OffsetDateTime.LocalDateTime);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Document_Positive,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Document(Offset.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Document_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Document(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Document_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Document(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Dynamic_Index1(Offset.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Dynamic_Index2(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Dynamic_Index2(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Offst = offset + Offset.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index1,The following statement contains a magic number: Assert.True(results3[1].Offst > results3[2].Offst);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Offst = offset - Offset.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Dynamic_Index2,The following statement contains a magic number: Assert.True(results3[1].Offst < results3[2].Offst);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Static_Index1(Offset.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Static_Index2(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Offset_In_Static_Index2(Offset.FromHoursAndMinutes(-5' 30));
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Offst = offset + Offset.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index1,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index1,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index1,The following statement contains a magic number: Assert.True(results3[1].Offst > results3[2].Offst);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Offst = offset - Offset.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index2,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index2,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaOffsetTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaOffsetTests.cs,Can_Use_NodaTime_Offset_In_Static_Index2,The following statement contains a magic number: Assert.True(results3[1].Offst < results3[2].Offst);
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Document_Positive,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Document(Period.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Document_Negative,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Document(Period.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Dynamic_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Dynamic_Index1(Period.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Dynamic_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Dynamic_Index2(Period.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Dynamic_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Period = period + Period.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Dynamic_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Period = period - Period.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Static_Index_Positive,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Static_Index1(Period.FromHours(2));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Static_Index_Negative,The following statement contains a magic number: Can_Use_NodaTime_Period_In_Static_Index2(Period.FromHours(-5));
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Static_Index1,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Period = period + Period.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaPeriodTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaPeriodTests.cs,Can_Use_NodaTime_Period_In_Static_Index2,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' Period = period - Period.FromHours(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Document_NearIsoMax,The following statement contains a magic number: var instant = NodaUtil.Instant.MaxIsoValue - Duration.FromHours(24);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Dynamic_Index_NearIsoMax,The following statement contains a magic number: var instant = NodaUtil.Instant.MaxIsoValue - Duration.FromHours(24);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Dynamic_Index,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' ZonedDateTime = zdt - Duration.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Dynamic_Index,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Dynamic_Index,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Dynamic_Index,The following statement contains a magic number: Assert.True(ZonedDateTime.Comparer.Local.Compare(results3[1].ZonedDateTime' results3[2].ZonedDateTime) < 0);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_Index_NearIsoMax,The following statement contains a magic number: var instant = NodaUtil.Instant.MaxIsoValue - Duration.FromHours(24);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_Index,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' ZonedDateTime = zdt - Duration.FromMinutes(2) });
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_Index,The following statement contains a magic number: Assert.Equal(2' results2.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_Index,The following statement contains a magic number: Assert.Equal(3' results3.Count);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_Index,The following statement contains a magic number: Assert.True(ZonedDateTime.Comparer.Local.Compare(results3[1].ZonedDateTime' results3[2].ZonedDateTime) < 0);
Magic Number,Raven.Client.NodaTime.Tests,NodaZonedDateTimeTests,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\NodaZonedDateTimeTests.cs,Can_Use_NodaTime_ZonedDateTime_In_Static_MapReduceIndex,The following statement contains a magic number: session.Store(new Foo { Id = "foos/3"' ZonedDateTime = zdt - Duration.FromMinutes(2) });
Duplicate Code,Raven.Client.NodaTime.Tests,ComplexTest,D:\research\architectureSmells\repos\mj1856_RavenDB-NodaTime\test\Raven.Client.NodaTime.Tests\ComplexTest.cs,PopulateSchedules,The method contains a code clone-set at the following line numbers (starting from the method definition): ((24' 58)' (80' 114))
