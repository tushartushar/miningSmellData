Implementation smell,Namespace,Class,File,Method,Description
Complex Method,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,CheckForError,Cyclomatic complexity of the method is 10
Long Parameter List,OneDriveRestAPI,IClient,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\IClient.cs,UploadAsync,The method has 6 parameters. Parameters: parentFolderId' content' name' overwrite' downsizePhotoUpload' checkForQuota
Long Parameter List,OneDriveRestAPI,IRequestGenerator,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\IRequestGenerator.cs,Upload,The method has 5 parameters. Parameters: parentFolderId' name' content' overwrite' downsizePhotoUpload
Long Parameter List,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,UploadAsync,The method has 6 parameters. Parameters: parentFolderId' content' name' overwrite' downsizePhotoUpload' checkForQuota
Long Parameter List,OneDriveRestAPI,RequestGenerator,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\RequestGenerator.cs,Upload,The method has 5 parameters. Parameters: parentFolderId' name' content' overwrite' downsizePhotoUpload
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,GetAccessTokenAsync,The length of the statement  "            var getAccessToken = RequestGenerator.GetAccessToken(_options.ClientId' _options.ClientSecret' _options.CallbackUrl' authorizationCode); " is 136.
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,RefreshAccessTokenAsync,The length of the statement  "            var refreshAccessToken = RequestGenerator.RefreshAccessToken(_options.ClientId' _options.ClientSecret' _options.CallbackUrl' UserRefreshToken); " is 143.
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,GetProfilePictureAsync,The length of the statement  "            var response = await Execute(() => RequestGenerator.GetProfilePicture(size)' _clientContentNoRedirection).ConfigureAwait(false); " is 128.
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,CreateFolderAsync,The length of the statement  "            return await Execute<Folder>(() => RequestGenerator.CreateFolder(parentFolderId' name' description)).ConfigureAwait(false); " is 123.
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,DownloadAsync,The length of the statement  "            HttpResponseMessage restResponse = await Execute(() => RequestGenerator.Read(id)' _clientContentNoRedirection).ConfigureAwait(false); " is 133.
Long Statement,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,UploadAsync,The length of the statement  "            return await Execute<FileInfo>(() => RequestGenerator.Upload(parentFolderId' name' content' overwrite' downsizePhotoUpload)).ConfigureAwait(false); " is 147.
Long Statement,OneDriveRestAPI,RequestGenerator,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\RequestGenerator.cs,Upload,The length of the statement  "            string resource = string.IsNullOrWhiteSpace(parentFolderId) ? "me/skydrive/files/" + name : parentFolderId + "/files/" + name; " is 126.
Magic Number,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,CheckForError,The following statement contains a magic number: if ((int)statusCode == 420)              {                  if (httpResponse.Headers != null)                  {                      var retryAfter = httpResponse.Headers.FirstOrDefault(x => x.Key == "Retry-After");                      if (retryAfter.Value != null && retryAfter.Value.Any())                      {                          throw new RetryLaterException { RetryAfter = int.Parse(retryAfter.Value.First()) };                      }                  }                  throw new RetryLaterException { RetryAfter = 10 };              }
Magic Number,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,CheckForError,The following statement contains a magic number: if ((int)statusCode == 420)              {                  if (httpResponse.Headers != null)                  {                      var retryAfter = httpResponse.Headers.FirstOrDefault(x => x.Key == "Retry-After");                      if (retryAfter.Value != null && retryAfter.Value.Any())                      {                          throw new RetryLaterException { RetryAfter = int.Parse(retryAfter.Value.First()) };                      }                  }                  throw new RetryLaterException { RetryAfter = 10 };              }
Magic Number,OneDriveRestAPI,Client,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\Client.cs,CheckForError,The following statement contains a magic number: if (statusCode == HttpStatusCode.Unauthorized ||                  statusCode == HttpStatusCode.BadRequest ||                  statusCode == HttpStatusCode.ServiceUnavailable)              {                  var errorInfo = JsonConvert.DeserializeObject<ErrorInfo>(content);                  if (errorInfo == null || errorInfo.Error == null)                      throw new HttpServerException((int)statusCode' content) { Attempts = 1 };                    if (errorInfo.Error.Code == "request_token_expired")                      throw new TokenExpiredException();                  if (errorInfo.Error.Code == "server_busy")                      throw new RetryLaterException { RetryAfter = 5 };                  throw new ServiceErrorException(errorInfo.Error.Code' errorInfo.Error.Message);              }
Magic Number,OneDriveRestAPI,RequestGenerator,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\RequestGenerator.cs,Upload,The following statement contains a magic number: request.Content = new CompressedContent(new StreamContent(content' 64 * 1024)' "gzip");
Magic Number,OneDriveRestAPI,RequestGenerator,C:\repos\saguiitay_OneDriveRestAPI\src\OneDriveRestAPI\RequestGenerator.cs,Upload,The following statement contains a magic number: request.Content = new CompressedContent(new StreamContent(content' 64 * 1024)' "gzip");
