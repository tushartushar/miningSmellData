Implementation smell,Namespace,Class,File,Method,Description
Long Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,ProcessExpression,The method has 104 lines of code.
Long Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The method has 113 lines of code.
Long Method,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetMethod,The method has 106 lines of code.
Long Method,JinianNet.JNTemplate.Parser,ComplexParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ComplexParser.cs,Parse,The method has 129 lines of code.
Complex Method,JinianNet.JNTemplate.Common,OperatorConvert,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\OperatorConvert.cs,ToString,Cyclomatic complexity of the method is 18
Complex Method,JinianNet.JNTemplate.Common,OperatorConvert,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\OperatorConvert.cs,Parse,Cyclomatic complexity of the method is 18
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,ProcessExpression,Cyclomatic complexity of the method is 13
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 25
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,CalculateBoolean,Cyclomatic complexity of the method is 8
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 12
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 12
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 12
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 14
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 14
Complex Method,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,Cyclomatic complexity of the method is 14
Complex Method,JinianNet.JNTemplate.Dynamic,DynamicHelper,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\DynamicHelper.cs,ToIEnumerable,Cyclomatic complexity of the method is 9
Complex Method,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateExcuteMethodProxy,Cyclomatic complexity of the method is 12
Complex Method,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateExcuteMethodProxy,Cyclomatic complexity of the method is 9
Complex Method,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetMethod,Cyclomatic complexity of the method is 17
Complex Method,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,ExcuteMethod,Cyclomatic complexity of the method is 8
Complex Method,JinianNet.JNTemplate,TemplateRender,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\TemplateRender.cs,Render,Cyclomatic complexity of the method is 8
Complex Method,JinianNet.JNTemplate.Parser,CharScanner,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\CharScanner.cs,GetEscapeString,Cyclomatic complexity of the method is 13
Complex Method,JinianNet.JNTemplate.Parser,ComplexParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ComplexParser.cs,Parse,Cyclomatic complexity of the method is 24
Complex Method,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,JinianNet.JNTemplate.Parser,FunctionParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\FunctionParser.cs,Parse,Cyclomatic complexity of the method is 10
Complex Method,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,IsTagStart,Cyclomatic complexity of the method is 8
Complex Method,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,IsTagEnd,Cyclomatic complexity of the method is 9
Complex Method,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,ReadToken,Cyclomatic complexity of the method is 17
Complex Method,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,GetTokenKind,Cyclomatic complexity of the method is 13
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Object\" and \"Object\"")); " is 134.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Boolean\" and \"Boolean\"")); " is 136.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"String\" and \"String\"")); " is 134.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"DateTime\" and \"DateTime\"")); " is 138.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Double\" and \"Double\"")); " is 134.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Single\" and \"Single\"")); " is 134.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Decimal\" and \"Decimal\"")); " is 136.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Int32\" and \"Int32\"")); " is 132.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Int64\" and \"Int64\"")); " is 132.
Long Statement,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The length of the statement  "                    throw new Exception.TemplateException(String.Concat("Operator \""' value' "\" can not be applied operand \"Int16\" and \"Int16\"")); " is 132.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "            if ((mi = type.GetMethod(String.Concat("get_"' propertyName)' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | Engine.BindIgnoreCase' null' " is 183.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "            else if (isNumberRegex.Match(propertyName).Success && (mi = type.GetMethod("get_Item"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | Engine.BindIgnoreCase' null' " is 208.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "            else if ((mi = type.GetMethod("get_Item"' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | Engine.BindIgnoreCase' null' " is 163.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "            else if ((fi = type.GetField(propertyName' BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)) != null) " is 144.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "                //if ((fi.FieldType.IsArray && (fi.FieldType.GetArrayRank() > 1 || (!(t = fi.FieldType.GetElementType()).IsValueType && t != typeof(String) && t.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null))) || " is 272.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateGetPropertyOrFieldProxy,The length of the statement  "                //                          (!fi.FieldType.IsArray && fi.FieldType.GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic' null' Type.EmptyTypes' null) == null)) " is 190.
Long Statement,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,CreateExcuteMethodProxy,The length of the statement  "                MethodInfo[] mis = type.GetMethods(BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic); " is 127.
Long Statement,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetIndexedProperty,The length of the statement  "            PropertyInfo info = t.GetProperty("Item"' BindingFlags.Public | BindingFlags.Instance' null' null' new Type[] { propIndex.GetType() }' null); " is 141.
Long Statement,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetPropertyOrField,The length of the statement  "                    t.GetProperty(propName' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | Engine.BindIgnoreCase); " is 140.
Long Statement,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetPropertyOrField,The length of the statement  "                FieldInfo f = t.GetField(propName' BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Static | Engine.BindIgnoreCase); " is 151.
Long Statement,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetPropertyOrField,The length of the statement  "                exp = System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression.Constant(container)' propName); " is 123.
Long Statement,JinianNet.JNTemplate.Dynamic,ReflectionProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ReflectionProvider.cs,GetMethod,The length of the statement  "                type.GetMethods(BindingFlags.Public | BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Static | Engine.BindIgnoreCase); " is 132.
Long Statement,JinianNet.JNTemplate.Parser,ElseifParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ElseifParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("syntax error near if:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 121.
Long Statement,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("foreach is not properly closed by a end tag:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 144.
Long Statement,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("syntax error near foreach:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 126.
Long Statement,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The length of the statement  "                        throw new Exception.ParseException(String.Concat("syntax error near for:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 122.
Long Statement,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("for is not properly closed by a end tag:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 140.
Long Statement,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("syntax error near for:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 122.
Long Statement,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("if is not properly closed by a end tag:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 139.
Long Statement,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The length of the statement  "                    throw new Exception.ParseException(String.Concat("syntax error near if:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); " is 121.
Long Statement,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,IsTagEnd,The length of the statement  "                //    if (Char.IsControl(value) || (Char.IsPunctuation(value) && value != '_') || Char.IsSeparator(value) || Char.IsSymbol(value) || Char.IsWhiteSpace(value) || (Int32)value > 167) " is 180.
Long Statement,JinianNet.JNTemplate.Parser,TemplateParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateParser.cs,Read,The length of the statement  "                    throw new Exception.ParseException(String.Concat("Parse error:"' tc' "\r\nError message:"' e.Message)' tc.First.BeginLine' tc.First.BeginColumn);//标签分析异常 " is 153.
Long Statement,JinianNet.JNTemplate.Parser,TemplateParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateParser.cs,Read,The length of the statement  "                    throw new Exception.ParseException(String.Concat("Unexpected  tag:"' tc)' tc.First.BeginLine' tc.First.BeginColumn); //未知的标签 " is 124.
Complex Conditional,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,Calculate,The conditional expression  "!String.IsNullOrEmpty(strX = x.ToString())                              && !String.IsNullOrEmpty(strY = y.ToString())                              && Single.TryParse(strX' out fx)                              && Single.TryParse(strY' out fy)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Dynamic,ILProvider,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Dynamic\ILProvider.cs,Call,The conditional expression  "mi.IsStatic || (!mi.IsAbstract && !mi.IsVirtual) || type.IsValueType"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,BooleanParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\BooleanParser.cs,Parse,The conditional expression  "tc!=null                  && tc.Count == 1                  && (tc.First.Text == "true" || tc.First.Text == "false")"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,EleseParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\EleseParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.Count == 1                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_ELSE)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,ElseifParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ElseifParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.Count > 3                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_ELSEIF)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.Count > 0                   && Common.Utility.IsEqual(Field.KEY_FOREACH' tc.First.Text)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The conditional expression  "tc.Count > 5                      && tc[1].TokenKind == TokenKind.LeftParentheses                      && tc[2].TokenKind == TokenKind.TextData                      && Common.Utility.IsEqual(tc[3].Text' Field.KEY_IN)                      && tc.Last.TokenKind == TokenKind.RightParentheses"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.Count > 3                   && Common.Utility.IsEqual(Field.KEY_FOR' tc.First.Text)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,FunctionParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\FunctionParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.First.TokenKind == TokenKind.TextData                  && tc.Count > 2                  && (tc[1].TokenKind == TokenKind.LeftParentheses)                  && tc.Last.TokenKind == TokenKind.RightParentheses"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The conditional expression  "tc != null                  && parser != null                  && tc.Count > 3                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_IF)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,IncludeParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IncludeParser.cs,Parse,The conditional expression  "tc != null                      && parser != null                      && tc.Count > 2                      && (tc[1].TokenKind == TokenKind.LeftParentheses)                      && tc.Last.TokenKind == TokenKind.RightParentheses"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,LoadParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\LoadParser.cs,Parse,The conditional expression  "tc != null                      && parser != null                      && tc.Count > 2                      && (tc[1].TokenKind == TokenKind.LeftParentheses)                      && tc.Last.TokenKind == TokenKind.RightParentheses"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The conditional expression  "tc.Count > 5                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_SET)                  && tc[1].TokenKind == TokenKind.LeftParentheses                  && tc[3].Text == "="                  && tc.Last.TokenKind == TokenKind.RightParentheses"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The conditional expression  "tc.Count == 2                  && tc.First.TokenKind == TokenKind.TextData                  && tc.Last.TokenKind == TokenKind.Operator                  && (tc.Last.Text == "++" || tc.Last.Text == "--")"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,StringParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\StringParser.cs,Parse,The conditional expression  "tc!=null                  && tc.Count == 3                  && tc.First.TokenKind == TokenKind.StringStart                  && tc[1].TokenKind == TokenKind.String                  && tc.Last.TokenKind == TokenKind.StringEnd"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,IsTagEnd,The conditional expression  "((value == '(' || Common.Utility.IsWord(value)) && Common.Utility.IsWord(this._scanner.Read(-1)))                          || (Common.Utility.IsWord(value) && (this._scanner.Read(-1) == '.'))"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,ReadToken,The conditional expression  "this._kind == TokenKind.TagStart                          || this._kind == TokenKind.LeftBracket                          || this._kind == TokenKind.LeftParentheses                          || this._kind == TokenKind.Operator                          || this._kind == TokenKind.Punctuation                          || this._kind == TokenKind.Comma                          || this._kind == TokenKind.Space"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,ReadToken,The conditional expression  "Char.IsNumber(this._scanner.Read(1)) &&                          (this._kind != TokenKind.Number                          && this._kind != TokenKind.RightBracket                          && this._kind != TokenKind.RightParentheses                          && this._kind != TokenKind.String                           && this._kind != TokenKind.Tag                          && this._kind != TokenKind.TextData)"  is complex.
Complex Conditional,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,ReadToken,The conditional expression  "(this._kind != tk || this._kind == TokenKind.LeftParentheses || this._kind == TokenKind.RightParentheses)                      && (tk != TokenKind.Number || this._kind != TokenKind.TextData)"  is complex.
Magic Number,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,GetPriority,The following statement contains a magic number: switch (c)              {                  case "||":                  case "|":                  case "&":                  case "&&":                  case "Or":                  case "LogicalOr":                  case "LogicAnd":                  case "And":                      return 5;                  case ">":                  case ">=":                  case "<":                  case "<=":                  case "==":                  case "!=":                    case "GreaterThan":                  case "GreaterThanOrEqual":                  case "LessThan":                  case "LessThanOrEqual":                  case "Equal":                  case "NotEqual":                      return 6;                  case "+":                  case "-":                    case "Plus":                  case "Minus":                      return 7;                  case "%":                  case "*":                  case "Percent":                  case "Times":                  case "/":                  case "Divided":                      return 8;                  default:                      return 9;              }
Magic Number,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,GetPriority,The following statement contains a magic number: switch (c)              {                  case "||":                  case "|":                  case "&":                  case "&&":                  case "Or":                  case "LogicalOr":                  case "LogicAnd":                  case "And":                      return 5;                  case ">":                  case ">=":                  case "<":                  case "<=":                  case "==":                  case "!=":                    case "GreaterThan":                  case "GreaterThanOrEqual":                  case "LessThan":                  case "LessThanOrEqual":                  case "Equal":                  case "NotEqual":                      return 6;                  case "+":                  case "-":                    case "Plus":                  case "Minus":                      return 7;                  case "%":                  case "*":                  case "Percent":                  case "Times":                  case "/":                  case "Divided":                      return 8;                  default:                      return 9;              }
Magic Number,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,GetPriority,The following statement contains a magic number: switch (c)              {                  case "||":                  case "|":                  case "&":                  case "&&":                  case "Or":                  case "LogicalOr":                  case "LogicAnd":                  case "And":                      return 5;                  case ">":                  case ">=":                  case "<":                  case "<=":                  case "==":                  case "!=":                    case "GreaterThan":                  case "GreaterThanOrEqual":                  case "LessThan":                  case "LessThanOrEqual":                  case "Equal":                  case "NotEqual":                      return 6;                  case "+":                  case "-":                    case "Plus":                  case "Minus":                      return 7;                  case "%":                  case "*":                  case "Percent":                  case "Times":                  case "/":                  case "Divided":                      return 8;                  default:                      return 9;              }
Magic Number,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,GetPriority,The following statement contains a magic number: switch (c)              {                  case "||":                  case "|":                  case "&":                  case "&&":                  case "Or":                  case "LogicalOr":                  case "LogicAnd":                  case "And":                      return 5;                  case ">":                  case ">=":                  case "<":                  case "<=":                  case "==":                  case "!=":                    case "GreaterThan":                  case "GreaterThanOrEqual":                  case "LessThan":                  case "LessThanOrEqual":                  case "Equal":                  case "NotEqual":                      return 6;                  case "+":                  case "-":                    case "Plus":                  case "Minus":                      return 7;                  case "%":                  case "*":                  case "Percent":                  case "Times":                  case "/":                  case "Divided":                      return 8;                  default:                      return 9;              }
Magic Number,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,GetPriority,The following statement contains a magic number: switch (c)              {                  case "||":                  case "|":                  case "&":                  case "&&":                  case "Or":                  case "LogicalOr":                  case "LogicAnd":                  case "And":                      return 5;                  case ">":                  case ">=":                  case "<":                  case "<=":                  case "==":                  case "!=":                    case "GreaterThan":                  case "GreaterThanOrEqual":                  case "LessThan":                  case "LessThanOrEqual":                  case "Equal":                  case "NotEqual":                      return 6;                  case "+":                  case "-":                    case "Plus":                  case "Minus":                      return 7;                  case "%":                  case "*":                  case "Percent":                  case "Times":                  case "/":                  case "Divided":                      return 8;                  default:                      return 9;              }
Magic Number,JinianNet.JNTemplate.Parser,ComplexParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ComplexParser.cs,Parse,The following statement contains a magic number: tc != null                  && parser != null                  && tc.Count > 2
Magic Number,JinianNet.JNTemplate.Parser,ElseifParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ElseifParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 2' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,ElseifParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ElseifParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 2' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,ElseifParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ElseifParser.cs,Parse,The following statement contains a magic number: tc != null                  && parser != null                  && tc.Count > 3                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_ELSEIF)
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: tag.Name = tc[2].Text;
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 4' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 4' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: tc.Count > 5                      && tc[1].TokenKind == TokenKind.LeftParentheses                      && tc[2].TokenKind == TokenKind.TextData                      && Common.Utility.IsEqual(tc[3].Text' Field.KEY_IN)                      && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: tc.Count > 5                      && tc[1].TokenKind == TokenKind.LeftParentheses                      && tc[2].TokenKind == TokenKind.TextData                      && Common.Utility.IsEqual(tc[3].Text' Field.KEY_IN)                      && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,ForeachParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForeachParser.cs,Parse,The following statement contains a magic number: tc.Count > 5                      && tc[1].TokenKind == TokenKind.LeftParentheses                      && tc[2].TokenKind == TokenKind.TextData                      && Common.Utility.IsEqual(tc[3].Text' Field.KEY_IN)                      && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: Int32 pos = 0'                          start = 2'                          end;
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: List<Tag> ts = new List<Tag>(3);
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: i == tc.Count - 2
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: ts.Count != 3
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: tag.Do = ts[2];
Magic Number,JinianNet.JNTemplate.Parser,ForParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\ForParser.cs,Parse,The following statement contains a magic number: tc != null                  && parser != null                  && tc.Count > 3                   && Common.Utility.IsEqual(Field.KEY_FOR' tc.First.Text)
Magic Number,JinianNet.JNTemplate.Parser,FunctionParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\FunctionParser.cs,Parse,The following statement contains a magic number: Int32 pos = 0'                      start = 2'                      end;
Magic Number,JinianNet.JNTemplate.Parser,FunctionParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\FunctionParser.cs,Parse,The following statement contains a magic number: tc != null                  && parser != null                  && tc.First.TokenKind == TokenKind.TextData                  && tc.Count > 2                  && (tc[1].TokenKind == TokenKind.LeftParentheses)                  && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 2' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 2' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,IfParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IfParser.cs,Parse,The following statement contains a magic number: tc != null                  && parser != null                  && tc.Count > 3                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_IF)
Magic Number,JinianNet.JNTemplate.Parser,IncludeParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IncludeParser.cs,Parse,The following statement contains a magic number: tag.Path = parser.Read(new TokenCollection(tc' 2' tc.Count - 2));
Magic Number,JinianNet.JNTemplate.Parser,IncludeParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IncludeParser.cs,Parse,The following statement contains a magic number: tag.Path = parser.Read(new TokenCollection(tc' 2' tc.Count - 2));
Magic Number,JinianNet.JNTemplate.Parser,IncludeParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\IncludeParser.cs,Parse,The following statement contains a magic number: tc != null                      && parser != null                      && tc.Count > 2                      && (tc[1].TokenKind == TokenKind.LeftParentheses)                      && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,LoadParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\LoadParser.cs,Parse,The following statement contains a magic number: tag.Path = parser.Read(new TokenCollection(tc' 2' tc.Count - 2));
Magic Number,JinianNet.JNTemplate.Parser,LoadParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\LoadParser.cs,Parse,The following statement contains a magic number: tag.Path = parser.Read(new TokenCollection(tc' 2' tc.Count - 2));
Magic Number,JinianNet.JNTemplate.Parser,LoadParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\LoadParser.cs,Parse,The following statement contains a magic number: tc != null                      && parser != null                      && tc.Count > 2                      && (tc[1].TokenKind == TokenKind.LeftParentheses)                      && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: tag.Name = tc[2].Text;
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 4' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 4' tc.Count - 2);
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: tc.Count > 5                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_SET)                  && tc[1].TokenKind == TokenKind.LeftParentheses                  && tc[3].Text == "="                  && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: tc.Count > 5                  && Common.Utility.IsEqual(tc.First.Text' Field.KEY_SET)                  && tc[1].TokenKind == TokenKind.LeftParentheses                  && tc[3].Text == "="                  && tc.Last.TokenKind == TokenKind.RightParentheses
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: tc.Count == 2                  && tc.First.TokenKind == TokenKind.TextData                  && tc.Last.TokenKind == TokenKind.Operator                  && (tc.Last.Text == "++" || tc.Last.Text == "--")
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: coll.Add(tc' 2' tc.Count - 1);
Magic Number,JinianNet.JNTemplate.Parser,SetParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\SetParser.cs,Parse,The following statement contains a magic number: tc.Count > 2                  && tc.First.TokenKind == TokenKind.TextData                  && tc[1].Text == "="
Magic Number,JinianNet.JNTemplate.Parser,StringParser,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\StringParser.cs,Parse,The following statement contains a magic number: tc!=null                  && tc.Count == 3                  && tc.First.TokenKind == TokenKind.StringStart                  && tc[1].TokenKind == TokenKind.String                  && tc.Last.TokenKind == TokenKind.StringEnd
Magic Number,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,ReadToken,The following statement contains a magic number: this._scanner.Read(-1) != '\\'                              || GetPrevCharCount('\\') % 2 == 0
Missing Default,JinianNet.JNTemplate.Common,ExpressionEvaluator,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Common\ExpressionEvaluator.cs,ProcessExpression,The following switch statement is missing a default case: switch (value[i])                  {                      case '+':                      case '-':                      case '*':                      case '/':                      case '(':                      case ')':                      case '%':                          if (j < i)                          {                              num = value.Substring(j' i - j);                              if (num.IndexOf('.') == -1)                              {                                  result.Add(Int32.Parse(value.Substring(j' i - j)));                              }                              else                              {                                  result.Add(Double.Parse(value.Substring(j' i - j)));                              }                              j = i;                          }                          result.Add(OperatorConvert.Parse(value[i].ToString()));                          j++;                          break;                  }
Missing Default,JinianNet.JNTemplate.Parser,TemplateLexer,D:\research\architectureSmells\repos\jiniannet_jntemplate\src\JinianNet.JNTemplate\Parser\TemplateLexer.cs,Parse,The following switch statement is missing a default case: switch (this._kind)                              {                                  case TokenKind.StringStart:                                      this._pos.Push("\"");                                      break;                                  case TokenKind.LeftParentheses:                                      this._pos.Push("(");                                      break;                              }
