Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADMembershipServiceTestFacade,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADMembershipServiceTestFacade.cs,CreateUser,The method has 6 parameters. Parameters: username' password' givenName' surname' email' id
Long Parameter List,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADMembershipServiceTestFacade,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADMembershipServiceTestFacade.cs,CreateUser,The method has 5 parameters. Parameters: username' password' givenName' surname' email
Long Parameter List,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADMembershipServiceTestFacade,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADMembershipServiceTestFacade.cs,UpdateUser,The method has 6 parameters. Parameters: id' username' givenName' surname' email' password
Long Parameter List,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADTestSupport,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADTestSupport.cs,CreateUser,The method has 6 parameters. Parameters: username' password' givenName' surname' email' id
Long Identifier,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,,The length of the parameter Rfc3986UnreservedCharactersAndSlash is 35.
Long Statement,Bonobo.Git.Server.Test.MembershipTests.EFTests,EFRoleProviderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\EFRoleProviderTest.cs,TestAddingRealUserIsSuccessful,The length of the statement  "            CollectionAssert.AreEqual(new[] { GetAdminId()' userId }.OrderBy(id => id).ToArray()' users.OrderBy(user => user).ToArray()); " is 125.
Long Statement,Bonobo.Git.Server.Test.MembershipTests.EFTests,EFRoleProviderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\EFRoleProviderTest.cs,TestCreatingRole,The length of the statement  "            CollectionAssert.AreEqual(new[] { "Administrator"' "Programmer" }' _provider.GetAllRoles().OrderBy(role => role).ToArray()); " is 124.
Long Statement,Bonobo.Git.Server.Test.MembershipTests.EFTests,EFRoleProviderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\EFRoleProviderTest.cs,TestAddingUserToMultipleRoles,The length of the statement  "            CollectionAssert.AreEqual(new[] { "Administrator"' "Programmer" }' _provider.GetRolesForUser(fredId).OrderBy(role => role).ToArray()); " is 134.
Long Statement,Bonobo.Git.Server.Test.MembershipTests.EFTests,EFRoleProviderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\EFRoleProviderTest.cs,TestAddingUserToMultipleRoles,The length of the statement  "            CollectionAssert.AreEqual(new[] { GetAdminId()' fredId }.OrderBy(u => u).ToArray()' _provider.GetUsersInRole("Administrator").OrderBy(name => name).ToArray()); " is 159.
Long Statement,Bonobo.Git.Server.Test.MembershipTests.EFTests,SqlServerTestConnection,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\SqlServerTestConnection.cs,CreateDB,The length of the statement  "                    new SqlConnection(string.Format(@"Data Source=(LocalDb)\{0};Initial Catalog=Master;Integrated Security=True"' _instanceName))) " is 126.
Long Statement,Bonobo.Git.Server.Test.MembershipTests,PermissionServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\PermissionServiceTestBase.cs,GetAllPermittedReturnsOnlyRepositoriesPermittedForUser,The length of the statement  "                _service.GetAllPermittedRepositories(user.Id' RepositoryAccessLevel.Pull).Select(r => r.Name).OrderBy(r => r).ToArray()); " is 121.
Long Statement,Bonobo.Git.Server.Test.MembershipTests,PermissionServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\PermissionServiceTestBase.cs,GetAllPermittedReturnsAllRepositoriesToSystemAdmin,The length of the statement  "                _service.GetAllPermittedRepositories(GetAdminId()' RepositoryAccessLevel.Pull).Select(r => r.Name).OrderBy(r => r).ToArray()); " is 126.
Long Statement,Bonobo.Git.Server.Test.MembershipTests,PermissionServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\PermissionServiceTestBase.cs,AnonymousRepoIsPermittedToAnybodyToPull,The length of the statement  "            Assert.AreEqual("Repo1"' _service.GetAllPermittedRepositories(anonymousUser' RepositoryAccessLevel.Pull).Single().Name); " is 120.
Long Statement,Bonobo.Git.Server.Test.MembershipTests,PermissionServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\PermissionServiceTestBase.cs,RepositoryIsPermittedToRepoAdministrator,The length of the statement  "            Assert.AreEqual("Repo1"' _service.GetAllPermittedRepositories(user.Id' RepositoryAccessLevel.Administer).Single().Name); " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_2_1_96fa2a,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'TeamRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_2_1_96fa2a,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Administrator')) " is 133.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_2_1_96fa2a,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_2_1_96fa2a,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRole_InRole')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_2_1_96fa2a,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserTeam_Member')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_3_3_0_c6e0c6,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'TeamRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_3_3_0_c6e0c6,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Administrator')) " is 133.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_3_3_0_c6e0c6,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_3_3_0_c6e0c6,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRole_InRole')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_3_3_0_c6e0c6,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserTeam_Member')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_6_0_0_0861955,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'TeamRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_6_0_0_0861955,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Administrator')) " is 133.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_6_0_0_0861955,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRepository_Permission')) " is 130.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_6_0_0_0861955,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserRole_InRole')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,DatabaseUpdateTestsSqlServer,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\DatabaseUpdateTestsSqlServer.cs,RunUpdateOn_6_0_0_0861955,The length of the statement  "                    IF (NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND  TABLE_NAME = 'UserTeam_Member')) " is 120.
Long Statement,Bonobo.Git.Server.Test.UnitTests,UserExtensionsTests,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\UserExtensionsTests.cs,EscapeStringlistAsInFAQ,The length of the statement  "            Assert.AreEqual(@"Editors\\ Architects'Programmers\'Testers"' UserExtensions.StringlistToEscapedStringForEnvVar(new List<string>{@"Editors\ Architects"' "Programmers'Testers"})); " is 178.
Long Statement,Bonobo.Git.Server.Test.UnitTests,UserExtensionsTests,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\UserExtensionsTests.cs,EscapeStringlistWithCustomSeparatorMultiChar,The length of the statement  "            Assert.AreEqual(@"Editors\\ Architects<>Programmers\<>Testers"' UserExtensions.StringlistToEscapedStringForEnvVar(new List<string>{@"Editors\ Architects"' "Programmers<>Testers"}' "<>")); " is 187.
Long Statement,Bonobo.Git.Server.Test.UnitTests,UserExtensionsTests,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\UserExtensionsTests.cs,EscapeStringlistWithCustomSeparatorSingleChar,The length of the statement  "            Assert.AreEqual(@"Editors\\ Architects|Programmers\|Testers"' UserExtensions.StringlistToEscapedStringForEnvVar(new List<string>{@"Editors\ Architects"' "Programmers|Testers"}' "|")); " is 183.
Long Statement,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,UnicodeInput,The length of the statement  "            AssertAllRequirements("\u0041\u00df\u00fe\u0394\u017d\u0419\u05e7\u0645\u0e57\u1250\u3042\u53f6\u8449\ub5ab\u16a0\u0d37"); " is 122.
Empty Catch Block,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADBackendStoreTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADBackendStoreTest.cs,SafelyDeleteTestData,The method has an empty catch block.
Empty Catch Block,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADTestSupport,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADTestSupport.cs,SafelyDeleteTestData,The method has an empty catch block.
Empty Catch Block,Bonobo.Git.Server.Test.MembershipTests.EFTests,SqlServerTestConnection,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\EFTests\SqlServerTestConnection.cs,TryToDeleteDatabaseFiles,The method has an empty catch block.
Magic Number,Bonobo.Git.Server.Test.MembershipTests.ADTests,ADBackendStoreTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\ADTests\ADBackendStoreTest.cs,ItemCanBeDeletedById,The following statement contains a magic number: Assert.AreEqual(2' _store.Count());
Magic Number,Bonobo.Git.Server.Test.MembershipTests,TeamRepositoryTestsBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\TeamRepositoryTestsBase.cs,TestMultipleTeamsCanHaveDifferentTeamNames,The following statement contains a magic number: Assert.AreEqual(2' _repo.GetAllTeams().Count);
Magic Number,Bonobo.Git.Server.Test.MembershipTests,MembershipServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\MembershipServiceTestBase.cs,NewUserCanBeAdded,The following statement contains a magic number: Assert.AreEqual(2' _service.GetAllUsers().Count);
Magic Number,Bonobo.Git.Server.Test.MembershipTests,MembershipServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\MembershipServiceTestBase.cs,NewUserCanBeAddedWithKnownGuid,The following statement contains a magic number: Assert.AreEqual(2' _service.GetAllUsers().Count);
Magic Number,Bonobo.Git.Server.Test.MembershipTests,MembershipServiceTestBase,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\MembershipTests\MembershipServiceTestBase.cs,NewUserCanBeDeleted,The following statement contains a magic number: Assert.AreEqual(2' _service.GetAllUsers().Count);
Magic Number,Bonobo.Git.Server.Test.UnitTests,CustomHtmlHelperTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\CustomHtmlHelperTest.cs,InvalidEnumIsFormattedByFramework,The following statement contains a magic number: Assert.AreEqual("[[7]]"' Html.DisplayEnum((EnumWithoutAttributes)7).ToString());
Magic Number,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,AllByteCharacterInput,The following statement contains a magic number: AssertAllRequirements(GetStringCharacterRange(0' 255));
Magic Number,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,DoubleEncodeDecode,The following statement contains a magic number: var input = GetStringCharacterRange(30' 126);
Magic Number,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,DoubleEncodeDecode,The following statement contains a magic number: var input = GetStringCharacterRange(30' 126);
Magic Number,Bonobo.Git.Server.Test.Unit,PathEncoderTest,D:\research\architectureSmells\repos\jakubgarfield_Bonobo-Git-Server\Bonobo.Git.Server.Test\UnitTests\PathEncoderTest.cs,AllowSlashTrue,The following statement contains a magic number: Assert.AreEqual(2' PathEncoder.Encode("abc/def/ghi"' allowSlash: true).Where(c => '/' == c).Count());
