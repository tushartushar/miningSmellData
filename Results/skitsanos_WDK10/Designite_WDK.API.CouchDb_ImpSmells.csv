Implementation smell,Namespace,Class,File,Method,Description
Complex Method,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,Cyclomatic complexity of the method is 18
Complex Method,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,Cyclomatic complexity of the method is 19
Complex Method,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,setViewFunction,Cyclomatic complexity of the method is 16
Complex Method,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,setIndexFunction,Cyclomatic complexity of the method is 9
Complex Method,WDK.API.CouchDb,CouchDbEndpoint,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDbConfiguration.cs,getResponse,Cyclomatic complexity of the method is 12
Complex Method,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,add,Cyclomatic complexity of the method is 9
Complex Method,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,update,Cyclomatic complexity of the method is 10
Complex Method,WDK.API.CouchDb,Utilities,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\Utilities.cs,replicate,Cyclomatic complexity of the method is 11
Long Parameter List,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The method has 6 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,Database,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,setInlineAttachment,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,setInlineAttachment,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createTemporaryView,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createView,The method has 6 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,executeShowFunction,The method has 7 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDesignList,The method has 7 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDesignList,The method has 7 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,setViewFunction,The method has 5 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDesignIndex,The method has 6 parameters.
Long Parameter List,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,executeUpdateFunction,The method has 7 parameters.
Long Statement,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The length of the statement  "			request.Headers.Add (HttpRequestHeader.Authorization' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (username + ":" + password))); " is 143.
Long Statement,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The length of the statement  "				request.Headers.Add (HttpRequestHeader.Authorization' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (username + ":" + password))); " is 143.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createDocument,The length of the statement  "	//result	"{\"ok\":true'\"id\":\"4ac4e0e0f94b1e73e40403d1b3008263\"'\"rev\":\"1-ce363ec7fbf74f9b1417ae0dfd605bfd\"}\n"	string " is 124.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createDocument,The length of the statement  "	var result = doRequest (getUrl () + "/" + db' "POST"' JsonConvert.SerializeObject (content)' "application/json"' false); " is 120.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createBulkDocuments,The length of the statement  "	doRequest (getUrl () + "/" + db + "/_bulk_docs"' "POST"' JsonConvert.SerializeObject (content' converters)' "application/json"' false); " is 135.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,createBulkDocuments,The length of the statement  "	//[{"ok":true'"id":"d5d9dbcd389c150c2ec13d2dcc01ccb2"'"rev":"1-e89734df382523dc0ce5878a3352437e"}'{"ok":true'"id":"d5d9dbcd389c150c2ec13d2dcc01d461"'"rev":"1-e89734df382523dc0ce5878a3352437e"}] " is 193.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,deleteDocuments,The length of the statement  "		doRequest (getUrl () + "/" + db + "/_bulk_docs"' "POST"' JsonConvert.SerializeObject (bulkDeleteCommand)' "application/json"' false); " is 133.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getInlineAttachment,The length of the statement  "	var result = doRequest (getUrl () + "/" + dbName + "/" + docId + "/" + HttpUtility.UrlEncode (attachmentName)' "GET"' true); " is 124.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDocumentRevisions,The length of the statement  "	//result	"{\"ok\":true'\"id\":\"4ac4e0e0f94b1e73e40403d1b3008263\"'\"rev\":\"1-ce363ec7fbf74f9b1417ae0dfd605bfd\"}\n"	string " is 124.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getAllDesignDocuments,The length of the statement  "	var result = doRequest (getUrl () + "/" + db + "/_all_docs?startkey=" + HttpUtility.UrlEncode ("\"_design\"") + "&endkey=" + HttpUtility.UrlEncode ("\"_design0\"")' "GET"' false); " is 179.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,executeShowFunction,The length of the statement  "	var result = doRequest (getUrl () + "/" + db + "/_design/" + designDocumentId + "/_show/" + showFunctionName + "/" + documentId + param' "GET"' false); " is 151.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDesignList,The length of the statement  "	var result = doRequest (getUrl () + "/" + db + "/_design/" + name + "/_list/" + listName + "/" + viewName + param' "GET"' false); " is 129.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getDesignList,The length of the statement  "	return doRequest (getUrl () + "/" + db + "/_design/" + name + "/_list/" + listName + "/" + viewName + param' "GET"' false); " is 123.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getMapFunction,The length of the statement  "	if ((dd ["views"] != null) && (dd ["views"] [viewFunctionName] != null) && (dd ["views"] [viewFunctionName] ["map"] != null)) { " is 127.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,getReduceFunction,The length of the statement  "	if ((dd ["views"] != null) && (dd ["views"] [viewFunctionName] != null) && (dd ["views"] [viewFunctionName] ["reduce"] != null)) { " is 130.
Long Statement,WDK.API.CouchDb,Database,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDB.cs,executeUpdateFunction,The length of the statement  "	var result = doRequest (getUrl () + "/" + db + "/_design/" + designDocumentId + "/_update/" + updateFunctionName + "/" + documentId + param' "PUT"' false); " is 155.
Long Statement,WDK.API.CouchDb,CouchDbEndpoint,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDbConfiguration.cs,getRequest,The length of the statement  "			request.Headers.Add (HttpRequestHeader.Authorization' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (username + ":" + password))); " is 143.
Long Statement,WDK.API.CouchDb,CouchDbEndpoint,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDbConfiguration.cs,getRequest,The length of the statement  "			request.Headers.Add (HttpRequestHeader.Authorization' "Basic " + Convert.ToBase64String (Encoding.ASCII.GetBytes (username + ":" + password))); " is 143.
Long Statement,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,add,The length of the statement  "		content ["password_sha"] = BitConverter.ToString ((new SHA1CryptoServiceProvider ()).ComputeHash (buffer)).Replace ("-"' "").ToLower (); " is 136.
Long Statement,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,add,The length of the statement  "		ServerResponse result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "PUT"' JsonConvert.SerializeObject (content' converters)' "application/json"' false); " is 170.
Long Statement,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,update,The length of the statement  "			ro ["password_sha"] = BitConverter.ToString ((new SHA1CryptoServiceProvider ()).ComputeHash (buffer)).Replace ("-"' "").ToLower (); " is 131.
Long Statement,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,update,The length of the statement  "			result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "PUT"' JsonConvert.SerializeObject (ro' converters)' "application/json"' false); " is 150.
Long Statement,WDK.API.CouchDb,Utilities,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\Utilities.cs,viewsCompaction,The length of the statement  "	var req = configuration.endpoint.getRequest ("/" + configuration.endpoint.db + "/_compact/" + designDocumentName' "POST"); " is 122.
Long Statement,WDK.API.CouchDb,Utilities,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\Utilities.cs,viewsCompactionStatus,The length of the statement  "	var req = configuration.endpoint.getRequest ("/" + configuration.endpoint.db + "/_design/" + documentName + "/_info"' "GET"); " is 125.
Magic Number,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The following statement contains a magic number: if (isBinaryResult) {  	result.isBinaryResult = true;  	var buffer = new byte[32768];  	using (var ms = new MemoryStream ()) {  		while (true) {  			var responseStream = response.GetResponseStream ();  			if (responseStream == null)  				continue;  			var read = responseStream.Read (buffer' 0' buffer.Length);  			if (read <= 0) {  				result.contentBytes = ms.ToArray ();  				break;  			}  			ms.Write (buffer' 0' read);  		}  	}  	result.contentString = Convert.ToBase64String (result.contentBytes);  }  else {  	result.isBinaryResult = false;  	result.contentBytes = null;  	var encode = Encoding.GetEncoding ("utf-8");  	using (var reader = new StreamReader (response.GetResponseStream ()' encode)) {  		result.contentString = reader.ReadToEnd ();  	}  }  
Magic Number,WDK.API.CouchDb,ConnectionBase,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\ConnectionBase.cs,doRequest,The following statement contains a magic number: if (isBinaryResult) {  	var buffer = new byte[32768];  	using (var ms = new MemoryStream ()) {  		while (true) {  			var responseStream = response.GetResponseStream ();  			if (responseStream == null)  				continue;  			var read = responseStream.Read (buffer' 0' buffer.Length);  			if (read <= 0) {  				result.contentBytes = ms.ToArray ();  				break;  			}  			ms.Write (buffer' 0' read);  		}  	}  	result.contentString = Convert.ToBase64String (result.contentBytes);  }  else {  	result.isBinaryResult = false;  	result.contentBytes = null;  	using (var reader = new StreamReader (response.GetResponseStream ())) {  		result.contentString = reader.ReadToEnd ();  	}  }  
Magic Number,WDK.API.CouchDb,CouchDbEndpoint,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDbConfiguration.cs,getResponse,The following statement contains a magic number: if (response != null) {  	result.contentType = response.ContentType;  	if (isBinaryResult) {  		result.isBinaryResult = true;  		var buffer = new byte[32768];  		using (var ms = new MemoryStream ()) {  			while (true) {  				var responseStream = response.GetResponseStream ();  				if (responseStream == null)  					continue;  				var read = responseStream.Read (buffer' 0' buffer.Length);  				if (read <= 0) {  					result.contentBytes = ms.ToArray ();  					break;  				}  				ms.Write (buffer' 0' read);  			}  		}  		result.contentString = null;  	}  	else {  		result.isBinaryResult = false;  		result.contentBytes = null;  		using (var reader = new StreamReader (response.GetResponseStream ())) {  			result.contentString = reader.ReadToEnd ();  		}  	}  }  
Magic Number,WDK.API.CouchDb,CouchDbEndpoint,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\CouchDbConfiguration.cs,getResponse,The following statement contains a magic number: if (isBinaryResult) {  	result.isBinaryResult = true;  	var buffer = new byte[32768];  	using (var ms = new MemoryStream ()) {  		while (true) {  			var responseStream = response.GetResponseStream ();  			if (responseStream == null)  				continue;  			var read = responseStream.Read (buffer' 0' buffer.Length);  			if (read <= 0) {  				result.contentBytes = ms.ToArray ();  				break;  			}  			ms.Write (buffer' 0' read);  		}  	}  	result.contentString = null;  }  else {  	result.isBinaryResult = false;  	result.contentBytes = null;  	using (var reader = new StreamReader (response.GetResponseStream ())) {  		result.contentString = reader.ReadToEnd ();  	}  }  
Magic Number,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,add,The following statement contains a magic number: try {  	if (isExists (userId)) {  		throw new Exception ("The username already exists!");  	}  	var content = new JObject ();  	content ["_id"] = "org.couchdb.user:" + userId;  	content ["type"] = "user";  	content ["name"] = userId;  	// Generate salt  	var saltBytes = new byte[16];  	(new RNGCryptoServiceProvider ()).GetNonZeroBytes (saltBytes);  	content ["salt"] = BitConverter.ToString (saltBytes).Replace ("-"' "").ToLower ();  	// Generate password hash  	var buffer = (new UTF8Encoding ()).GetBytes (userPassword + content ["salt"]);  	content ["password_sha"] = BitConverter.ToString ((new SHA1CryptoServiceProvider ()).ComputeHash (buffer)).Replace ("-"' "").ToLower ();  	// Roles  	content ["roles"] = new JArray ();  	if (userRoles.Count != 0) {  		foreach (var item in userRoles) {  			(content ["roles"] as JArray).Add (item);  		}  	}  	var converters = new JsonConverter[] {  		new IsoDateTimeConverter ()  	};  	ServerResponse result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "PUT"' JsonConvert.SerializeObject (content' converters)' "application/json"' false);  	if (result.contentType.Contains ("text/plain") || result.contentType.Contains ("application/json")) {  		var jo = (JObject)JsonConvert.DeserializeObject (result.contentString);  		if (jo ["ok"] != null) {  			ret = true;  		}  		else if (jo ["error"] != null) {  			throw new Exception (jo ["reason"].ToString ());  		}  	}  	else {  		throw new InvalidServerResponseException ("Invalid Server Response!"' result);  	}  }  catch (InvalidServerResponseException) {  	throw;  }  catch (Exception ex) {  	throw new Exception (ex.Message);  }  
Magic Number,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,update,The following statement contains a magic number: try {  	if (!isExists (userId)) {  		throw new Exception ("The username does not exist or you do not have permissions to edit it!");  	}  	// Get existing user  	ServerResponse result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "GET"' false);  	if (result.contentType.Contains ("text/plain") || result.contentType.Contains ("application/json")) {  		var ro = (JObject)JsonConvert.DeserializeObject (result.contentString);  		// Generate salt  		var saltBytes = new byte[16];  		(new RNGCryptoServiceProvider ()).GetNonZeroBytes (saltBytes);  		ro ["salt"] = BitConverter.ToString (saltBytes).Replace ("-"' "").ToLower ();  		// Generate password hash  		var buffer = (new UTF8Encoding ()).GetBytes (userPassword + ro ["salt"]);  		ro ["password_sha"] = BitConverter.ToString ((new SHA1CryptoServiceProvider ()).ComputeHash (buffer)).Replace ("-"' "").ToLower ();  		// Roles  		ro ["roles"] = new JArray ();  		if (userRoles.Count != 0) {  			foreach (var item in userRoles) {  				(ro ["roles"] as JArray).Add (item);  			}  		}  		var converters = new JsonConverter[] {  			new IsoDateTimeConverter ()  		};  		result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "PUT"' JsonConvert.SerializeObject (ro' converters)' "application/json"' false);  		if (result.contentType.Contains ("text/plain") || result.contentType.Contains ("application/json")) {  			var jo = (JObject)JsonConvert.DeserializeObject (result.contentString);  			if (jo ["ok"] != null) {  				ret = true;  			}  			else if (jo ["error"] != null) {  				throw new Exception (jo ["reason"].ToString ());  			}  		}  		else {  			throw new InvalidServerResponseException ("Invalid Server Response!"' result);  		}  	}  }  catch (InvalidServerResponseException) {  	throw;  }  catch (Exception ex) {  	throw new Exception (ex.Message);  }  
Magic Number,WDK.API.CouchDb,UserManagement,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\UserManagement.cs,update,The following statement contains a magic number: if (result.contentType.Contains ("text/plain") || result.contentType.Contains ("application/json")) {  	var ro = (JObject)JsonConvert.DeserializeObject (result.contentString);  	// Generate salt  	var saltBytes = new byte[16];  	(new RNGCryptoServiceProvider ()).GetNonZeroBytes (saltBytes);  	ro ["salt"] = BitConverter.ToString (saltBytes).Replace ("-"' "").ToLower ();  	// Generate password hash  	var buffer = (new UTF8Encoding ()).GetBytes (userPassword + ro ["salt"]);  	ro ["password_sha"] = BitConverter.ToString ((new SHA1CryptoServiceProvider ()).ComputeHash (buffer)).Replace ("-"' "").ToLower ();  	// Roles  	ro ["roles"] = new JArray ();  	if (userRoles.Count != 0) {  		foreach (var item in userRoles) {  			(ro ["roles"] as JArray).Add (item);  		}  	}  	var converters = new JsonConverter[] {  		new IsoDateTimeConverter ()  	};  	result = doRequest (getUrl () + "/_users/org.couchdb.user:" + userId' "PUT"' JsonConvert.SerializeObject (ro' converters)' "application/json"' false);  	if (result.contentType.Contains ("text/plain") || result.contentType.Contains ("application/json")) {  		var jo = (JObject)JsonConvert.DeserializeObject (result.contentString);  		if (jo ["ok"] != null) {  			ret = true;  		}  		else if (jo ["error"] != null) {  			throw new Exception (jo ["reason"].ToString ());  		}  	}  	else {  		throw new InvalidServerResponseException ("Invalid Server Response!"' result);  	}  }  
Missing Default,WDK.API.CouchDb,Utilities,C:\repos\skitsanos_WDK10\WDK.API.CouchDb\Utilities.cs,replicate,The following switch statement is missing a default case: switch (type) {  case ReplicationType.PUSH:  	endpoint = new CouchDbEndpoint {  		host = config.source.host'  		port = config.source.port'  		db = config.source.db'  		useSsl = config.source.useSsl'  		username = config.source.username'  		password = config.source.password  	};  	break;  case ReplicationType.PULL:  	endpoint = new CouchDbEndpoint {  		host = config.target.host'  		port = config.target.port'  		db = config.target.db'  		useSsl = config.target.useSsl'  		username = config.target.username'  		password = config.target.password  	};  	break;  }  
