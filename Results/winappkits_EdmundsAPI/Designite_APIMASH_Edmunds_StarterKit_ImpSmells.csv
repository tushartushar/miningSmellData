Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,settingsPane_CommandsRequested,The method has 5 parameters.
Long Statement,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The length of the statement  "	if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) { " is 246.
Long Statement,APIMASH_Edmunds_StarterKit,SuspensionManager,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\SuspensionManager.cs,SaveAsync,The length of the statement  "		StorageFile file = await ApplicationData.Current.LocalFolder.CreateFileAsync (sessionStateFilename' CreationCollisionOption.ReplaceExisting); " is 141.
Long Statement,APIMASH_Edmunds_StarterKit,SuspensionManager,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\SuspensionManager.cs,RegisterFrame,The length of the statement  "		throw new InvalidOperationException ("Frames must be either be registered before accessing frame session state' or not registered at all"); " is 139.
Long Statement,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,InvokeModelSpecsByMakeModelYear,The length of the statement  "	var apiCall = Globals.EDMUNDS_API_MODELSPECS_MAKE + make + Globals.EDMUNDS_API_MODELSPECS_MODEL + model + Globals.EDMUNDS_API_MODELSPECS_YEAR + year + Globals.EDMUNDS_API_DEVKEY; " is 178.
Complex Conditional,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "(args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)"  is complex.
Complex Conditional,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)"  is complex.
Complex Conditional,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The conditional expression  "((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)"  is complex.
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if ((args.EventType == CoreAcceleratorKeyEventType.SystemKeyDown || args.EventType == CoreAcceleratorKeyEventType.KeyDown) && (virtualKey == VirtualKey.Left || virtualKey == VirtualKey.Right || (int)virtualKey == 166 || (int)virtualKey == 167)) {  	var coreWindow = Window.Current.CoreWindow;  	var downState = CoreVirtualKeyStates.Down;  	bool menuKey = (coreWindow.GetKeyState (VirtualKey.Menu) & downState) == downState;  	bool controlKey = (coreWindow.GetKeyState (VirtualKey.Control) & downState) == downState;  	bool shiftKey = (coreWindow.GetKeyState (VirtualKey.Shift) & downState) == downState;  	bool noModifiers = !menuKey && !controlKey && !shiftKey;  	bool onlyAlt = menuKey && !controlKey && !shiftKey;  	if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  		// When the previous key or Alt+Left are pressed navigate back  		args.Handled = true;  		this.GoBack (this' new RoutedEventArgs ());  	}  	else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  		// When the next key or Alt+Right are pressed navigate forward  		args.Handled = true;  		this.GoForward (this' new RoutedEventArgs ());  	}  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 166 && noModifiers) || (virtualKey == VirtualKey.Left && onlyAlt)) {  	// When the previous key or Alt+Left are pressed navigate back  	args.Handled = true;  	this.GoBack (this' new RoutedEventArgs ());  }  else if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,APIMASH_Edmunds_StarterKit,LayoutAwarePage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\Common\LayoutAwarePage.cs,CoreDispatcher_AcceleratorKeyActivated,The following statement contains a magic number: if (((int)virtualKey == 167 && noModifiers) || (virtualKey == VirtualKey.Right && onlyAlt)) {  	// When the next key or Alt+Right are pressed navigate forward  	args.Handled = true;  	this.GoForward (this' new RoutedEventArgs ());  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,MainPage,The following statement contains a magic number: ModelList.Height = bounds.Height - 400;  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: YearCombo.SelectedIndex = 13;  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,InvokeYearMakeModel,The following statement contains a magic number: Sleep (1000);  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,InvokeModelSpecsByMakeModelYear,The following statement contains a magic number: Sleep (1000);  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,InvokePhotoById,The following statement contains a magic number: Sleep (1000);  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (e.Status == APIMASHStatus.SUCCESS) {  	APIMASH_EdmundsPhotoCollection.Copy (response);  	if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  		var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  		var totalImages = 0;  		totalImages = maxPictures < maxImages ? maxPictures : maxImages;  		for (var i = 0; i < maxImages; i++)  			images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  		for (var i = 0; i < totalImages; i++)  			images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  		VehicleImage1.Source = images [0];  		VehicleImage2.Source = images [1];  		VehicleImage3.Source = images [2];  		VehicleImage4.Source = images [3];  		VehicleImage5.Source = images [4];  		VehicleImage6.Source = images [5];  		VehicleImage7.Source = images [6];  		VehicleImage8.Source = images [7];  		VehicleImage9.Source = images [8];  	}  	else {  		DisplayPlaceholderImages ();  	}  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: if (APIMASH_EdmundsPhotoCollection.Photos.All [0].Pictures.Count > 0) {  	var maxPictures = APIMASH_EdmundsPhotoCollection.Photos.All.Count;  	var totalImages = 0;  	totalImages = maxPictures < maxImages ? maxPictures : maxImages;  	for (var i = 0; i < maxImages; i++)  		images [i] = new BitmapImage (new Uri ("ms-appx:///Assets/Car.png"));  	for (var i = 0; i < totalImages; i++)  		images [i] = new BitmapImage (new Uri (APIMASH_EdmundsPhotoCollection.Photos.All [i].Pictures [0]));  	VehicleImage1.Source = images [0];  	VehicleImage2.Source = images [1];  	VehicleImage3.Source = images [2];  	VehicleImage4.Source = images [3];  	VehicleImage5.Source = images [4];  	VehicleImage6.Source = images [5];  	VehicleImage7.Source = images [6];  	VehicleImage8.Source = images [7];  	VehicleImage9.Source = images [8];  }  else {  	DisplayPlaceholderImages ();  }  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage3.Source = images [2];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage4.Source = images [3];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage5.Source = images [4];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage6.Source = images [5];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage7.Source = images [6];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage8.Source = images [7];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,_apiInvokePhotoByStyleId_OnResponse,The following statement contains a magic number: VehicleImage9.Source = images [8];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage3.Source = images [2];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage4.Source = images [3];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage5.Source = images [4];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage6.Source = images [5];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage7.Source = images [6];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage8.Source = images [7];  
Magic Number,APIMASH_Edmunds_StarterKit,MainPage,C:\repos\winappkits_EdmundsAPI\Windows81\APIMASH_Edmunds_StarterKit\MainPage.xaml.cs,DisplayPlaceholderImages,The following statement contains a magic number: VehicleImage9.Source = images [8];  
