Implementation smell,Namespace,Class,File,Method,Description
Long Statement,ProxyApi.Tests.Factories,TestActionMethodDefinitionFactory,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Factories\TestActionMethodDefinitionFactory.cs,Create_Throws_Exception_On_Null_ControllerDefinition,The length of the statement  "			var methodInfo = typeof(TestActionMethodDefinitionFactory).GetMethod("Create_Throws_Exception_On_Null_ControllerDefinition"); " is 125.
Long Statement,ProxyApi.Tests.Factories,TestActionMethodDefinitionFactory,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Factories\TestActionMethodDefinitionFactory.cs,CheckMethodType,The length of the statement  "			var definition = this.TestSubject.Create(new ControllerDefinition{ UrlName = "controller" }' GetMethodInfo(methodName)); " is 120.
Long Statement,ProxyApi.Tests.Factories,TestActionMethodDefinitionFactory,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Factories\TestActionMethodDefinitionFactory.cs,CheckMethodParameters,The length of the statement  "			var definition = this.TestSubject.Create(new ControllerDefinition { UrlName = "controller" }' GetMethodInfo(methodName)); " is 121.
Long Statement,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Returns_Overload_With_Most_Parameters,The length of the statement  "			Assert.AreEqual(2' methods[1].GetParameters().Count()' "GetMethods should select the overload with the most parameters"); " is 121.
Long Statement,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Treats_Named_Overloaded_Methods_As_Separate_Groups,The length of the statement  "			Assert.AreEqual(3' methods[1].GetParameters().Count()' "GetMethods should select the named overload with the most parameters' regardless of actual name"); " is 154.
Empty Catch Block,ProxyApi.Tests,TestProxyNameAttribute,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\TestProxyNameAttribute.cs,CheckConstructorThrowsFor,The method has an empty catch block.
Magic Number,ProxyApi.Tests.ElementDefinitions,TestParameterDefinition,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\ElementDefinitions\TestParameterDefinition.cs,Index_Can_Be_Set_And_Retrieved,The following statement contains a magic number: this.TestSubject.Index = 123;
Magic Number,ProxyApi.Tests.ElementDefinitions,TestParameterDefinition,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\ElementDefinitions\TestParameterDefinition.cs,Index_Can_Be_Set_And_Retrieved,The following statement contains a magic number: Assert.AreEqual(123' this.TestSubject.Index);
Magic Number,ProxyApi.Tests.Factories,TestControllerDefinitionFactory,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Factories\TestControllerDefinitionFactory.cs,Create_Populates_Action_Methods,The following statement contains a magic number: _actionFactory.Setup(af => af.Create(It.IsAny<IControllerDefinition>()' methods[2])).Returns(methodDefinitions[2]);
Magic Number,ProxyApi.Tests.Factories,TestControllerDefinitionFactory,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Factories\TestControllerDefinitionFactory.cs,Create_Populates_Action_Methods,The following statement contains a magic number: _actionFactory.Setup(af => af.Create(It.IsAny<IControllerDefinition>()' methods[2])).Returns(methodDefinitions[2]);
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetControllerTypes_Filters_Out_Inappropriate_Types,The following statement contains a magic number: Assert.AreEqual(2' controllerTypes.Count);
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Returns_Only_Public_Instance_Methods,The following statement contains a magic number: Assert.AreEqual(2' methods.Count);
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Returns_Overload_With_Most_Parameters,The following statement contains a magic number: Assert.AreEqual(2' methods[1].GetParameters().Count()' "GetMethods should select the overload with the most parameters");
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Treats_Named_Overloaded_Methods_As_Separate_Groups,The following statement contains a magic number: Assert.AreEqual(2' methods.Count);
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Treats_Named_Overloaded_Methods_As_Separate_Groups,The following statement contains a magic number: Assert.AreEqual(3' methods[1].GetParameters().Count()' "GetMethods should select the named overload with the most parameters' regardless of actual name");
Magic Number,ProxyApi.Tests.Reflection,TestControllerElementsProvider,D:\research\architectureSmells\repos1\stevegreatrex_ProxyApi\ProxyApi.Tests\Reflection\TestControllerElementsProvider.cs,GetMethods_Includes_All_Methods_If_Type_Has_Explicit_Include,The following statement contains a magic number: Assert.AreEqual(2' methods.Count);
