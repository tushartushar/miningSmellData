Implementation smell,Namespace,Class,File,Method,Description
Long Method,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The method has 124 lines of code.
Complex Method,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,Cyclomatic complexity of the method is 12
Complex Method,Swaggerator,Helpers,C:\repos\superstator_Swaggeratr\src\Swaggerator\Helpers.cs,MapSwaggerType,Cyclomatic complexity of the method is 22
Long Parameter List,Swaggerator.Attributes,ParameterSettingsAttribute,C:\repos\superstator_Swaggeratr\src\Swaggerator\Attributes\ParameterSettingsAttribute.cs,ParameterSettingsAttribute,The method has 5 parameters. Parameters: isRequired' underlyingType' description' hidden' typeSizeNote
Long Identifier,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,,The length of the parameter ShowRequiredQueryParamsInHeader is 31.
Long Statement,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The length of the statement  "				var methodTags = implementation.GetCustomAttributes<TagAttribute>().Select(t => t.TagName).Concat(declaration.GetCustomAttributes<TagAttribute>().Select(t => t.TagName)); " is 170.
Long Statement,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The length of the statement  "					//query parameters require checking and rewriting the name' as the query string name may not match the method signature name " is 124.
Long Statement,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The length of the statement  "					var settings = implementation.GetParameters().First(p => p.Position.Equals(parameter.Position)).GetCustomAttribute<ParameterSettingsAttribute>() ?? " is 147.
Long Statement,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The length of the statement  "						var paramTypeStringValue = HttpUtility.HtmlEncode(Helpers.MapSwaggerType(paramTypeToBeMapped' typeStack' settings.TypeSizeNote)); " is 129.
Long Statement,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,GetOperations,The length of the statement  "							pathToReturn += pathToReturn.Contains("?") ? string.Format("&{0}={{{1}}}"' parm.name' parm.name) : string.Format("?{0}={{{1}}}"' parm.name' parm.name); " is 151.
Long Statement,Swaggerator,Helpers,C:\repos\superstator_Swaggeratr\src\Swaggerator\Helpers.cs,MapElementType,The length of the statement  "			Type enumType = type.GetInterfaces().FirstOrDefault(i => i.IsGenericType && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)); " is 131.
Long Statement,Swaggerator,Serializer,C:\repos\superstator_Swaggeratr\src\Swaggerator\Serializer.cs,WriteProperties,The length of the statement  "				//only pass immediate class properties at a time to write properties in the order of inheritance from base. (i.e. base first' derived next.)  " is 140.
Long Statement,Swaggerator,Serializer,C:\repos\superstator_Swaggeratr\src\Swaggerator\Serializer.cs,WriteProperty,The length of the statement  "				var typeValue = memberProperties != null ? Helpers.MapSwaggerType(pType' typeStack' memberProperties.TypeSizeNote) : Helpers.MapSwaggerType(pType' typeStack); " is 158.
Missing Default,Swaggerator,Mapper,C:\repos\superstator_Swaggeratr\src\Swaggerator\Mapper.cs,Mapper,The following switch statement is missing a default case: switch (settingElement.Name)  				{  					case "ShowRequiredQueryParamsInHeader" :  						bool showQueryParamSetting;  						bool.TryParse(settingElement.Value' out showQueryParamSetting);  						ShowRequiredQueryParamsInHeader = showQueryParamSetting;  						break;  					case "MarkTaggedMethods" :  						bool markTaggedMethods;  						bool.TryParse(settingElement.Value' out markTaggedMethods);  						MarkTagged = markTaggedMethods;  						break;  				}
