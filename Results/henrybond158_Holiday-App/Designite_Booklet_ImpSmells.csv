Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The length of the statement  "	File.Copy (Path.Combine ("../../../../../PDFs/"' filename)' Path.Combine (Directory.GetCurrentDirectory ()' filename)' true); " is 125.
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (sheets * 4 < inputPages)  	sheets += 1;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: for (int idx = 1; idx <= sheets; idx += 1) {  	// Front page of a sheet:  	// Add a new page to the output document  	PdfPage page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	double width = page.Width;  	double height = page.Height;  	gfx = XGraphics.FromPdfPage (page);  	// Skip if left side has to remain blank  	XRect box;  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for left side  		form.PageNumber = allpages + 2 * (1 - idx);  		box = new XRect (0' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  	// Set page number (which is one-based) for right side  	form.PageNumber = 2 * idx - 1;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Back page of a sheet  	page = outputDocument.AddPage ();  	page.Orientation = PageOrientation.Landscape;  	page.Width = 2 * extWidth;  	page.Height = extHeight;  	gfx = XGraphics.FromPdfPage (page);  	// Set page number (which is one-based) for left side  	form.PageNumber = 2 * idx;  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  	// Skip if right side has to remain blank  	if (vacats > 0)  		vacats -= 1;  	else {  		// Set page number (which is one-based) for right side  		form.PageNumber = allpages + 1 - 2 * idx;  		box = new XRect (width / 2' 0' width / 2' height);  		// Draw the page identified by the page number like an image  		gfx.DrawImage (form' box);  	}  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: page.Width = 2 * extWidth;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (vacats > 0)  	vacats -= 1;  else {  	// Set page number (which is one-based) for left side  	form.PageNumber = allpages + 2 * (1 - idx);  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (vacats > 0)  	vacats -= 1;  else {  	// Set page number (which is one-based) for left side  	form.PageNumber = allpages + 2 * (1 - idx);  	box = new XRect (0' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: form.PageNumber = allpages + 2 * (1 - idx);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (0' 0' width / 2' height);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: form.PageNumber = 2 * idx - 1;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (width / 2' 0' width / 2' height);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (width / 2' 0' width / 2' height);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: page.Width = 2 * extWidth;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: form.PageNumber = 2 * idx;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (0' 0' width / 2' height);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (vacats > 0)  	vacats -= 1;  else {  	// Set page number (which is one-based) for right side  	form.PageNumber = allpages + 1 - 2 * idx;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (vacats > 0)  	vacats -= 1;  else {  	// Set page number (which is one-based) for right side  	form.PageNumber = allpages + 1 - 2 * idx;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: if (vacats > 0)  	vacats -= 1;  else {  	// Set page number (which is one-based) for right side  	form.PageNumber = allpages + 1 - 2 * idx;  	box = new XRect (width / 2' 0' width / 2' height);  	// Draw the page identified by the page number like an image  	gfx.DrawImage (form' box);  }  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: form.PageNumber = allpages + 1 - 2 * idx;  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (width / 2' 0' width / 2' height);  
Magic Number,Booklet,Program,C:\repos\henrybond158_Holiday-App\Holiday App\External Libraries\PDFsharp\samples\Samples C#\Based on GDI+\Booklet\Program.cs,Main,The following statement contains a magic number: box = new XRect (width / 2' 0' width / 2' height);  
