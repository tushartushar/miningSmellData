Implementation smell,Namespace,Class,File,Method,Description
Long Statement,WindowsPhoneDriver.OuterDriver.Automator,Automator,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\Automator\Automator.cs,RequestElementLocation,The length of the statement  "            var command = new Command(null' DriverCommand.GetElementLocationOnceScrolledIntoView' new Dictionary<string' object> { { "ID"' element } }); " is 140.
Long Statement,WindowsPhoneDriver.OuterDriver.CommandExecutors,ExecuteScriptExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\ExecuteScriptExecutor.cs,DoImpl,The length of the statement  "                var invokeCommand = new Command(this.ExecutedCommand.SessionId' ExtendedDriverCommand.InvokeAppBarItemCommand' parameters); " is 123.
Long Statement,WindowsPhoneDriver.OuterDriver.CommandExecutors,ExecuteScriptExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\ExecuteScriptExecutor.cs,DoImpl,The length of the statement  "                    "Unknown 'mobile:' script command. See https://github.com/2gis/winphonedriver/wiki/Command-Execute-Script for supported commands."' " is 131.
Long Statement,WindowsPhoneDriver.OuterDriver.CommandExecutors,SendKeysToElementExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\SendKeysToElementExecutor.cs,DoImpl,The length of the statement  "             * It is not recommended to use SendKeys for simulation of hardware buttons' use GoBack command or ExecuteScript with 'mobile:' prefixed commands. " is 145.
Long Statement,WindowsPhoneDriver.OuterDriver.CommandExecutors,NewSessionExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\NewSessionExecutor.cs,DoImpl,The length of the statement  "            // It is easier to reparse desired capabilities as JSON instead of re-mapping keys to attributes and calling type conversions'  " is 126.
Long Statement,WindowsPhoneDriver.OuterDriver.CommandExecutors,NewSessionExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\NewSessionExecutor.cs,DoImpl,The length of the statement  "            // so we will take possible one time performance hit by serializing Dictionary and deserializing it as Capabilities object " is 122.
Magic Number,WindowsPhoneDriver.OuterDriver.Automator,Capabilities,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\Automator\Capabilities.cs,Capabilities,The following statement contains a magic number: this.LaunchTimeout = 10000;
Magic Number,WindowsPhoneDriver.OuterDriver,Program,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\Program.cs,Main,The following statement contains a magic number: var listeningPort = 9999;
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,ExecuteScriptExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\ExecuteScriptExecutor.cs,DoImpl,The following statement contains a magic number: if (command.Equals("start"))              {                  this.Automator.EmulatorController.TypeKey(Keys.F2);              }              else if (command.Equals("search"))              {                  this.Automator.EmulatorController.TypeKey(Keys.F3);              }              else if (command.Equals("invokeAppBarItem"' StringComparison.OrdinalIgnoreCase))              {                  var arguments = this.ExecutedCommand.Parameters["args"] as Array;                  if (arguments == null)                  {                      throw new AutomationException("Bad parameters"' ResponseStatus.JavaScriptError);                  }                    var itemType = arguments.GetValue(0);                  var index = arguments.GetValue(1);                    var parameters = new Dictionary<string' object>();                  parameters["itemType"] = itemType;                  parameters["index"] = index;                    var invokeCommand = new Command(this.ExecutedCommand.SessionId' ExtendedDriverCommand.InvokeAppBarItemCommand' parameters);                  return this.Automator.CommandForwarder.ForwardCommand(invokeCommand);              }              else if (command.Equals("invokeMethod"' StringComparison.OrdinalIgnoreCase))              {                  var arguments = this.ExecutedCommand.Parameters["args"] as Array;                  if (arguments == null)                  {                      throw new AutomationException("Bad parameters"' ResponseStatus.JavaScriptError);                  }                    var type = arguments.GetValue(0);                  var method = arguments.GetValue(1);                    var parameters = new Dictionary<string' object>();                  parameters["type"] = type;                  parameters["method"] = method;                  var args = arguments.OfType<object>().Skip(2).ToArray();                  if (args.Any())                  {                      parameters["args"] = args;                  }                    var invokeCommand = new Command(this.ExecutedCommand.SessionId' DriverCommand.ExecuteScript' parameters);                  return this.Automator.CommandForwarder.ForwardCommand(invokeCommand);              }              else              {                  throw new AutomationException(                      "Unknown 'mobile:' script command. See https://github.com/2gis/winphonedriver/wiki/Command-Execute-Script for supported commands."'                      ResponseStatus.JavaScriptError);              }
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,TouchScrollExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\TouchScrollExecutor.cs,DoImpl,The following statement contains a magic number: var startPoint = new Point(screen.Width / 2' screen.Height / 2);
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,TouchScrollExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\TouchScrollExecutor.cs,DoImpl,The following statement contains a magic number: var startPoint = new Point(screen.Width / 2' screen.Height / 2);
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,TouchFlickExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\TouchFlickExecutor.cs,DoImpl,The following statement contains a magic number: var startPoint = new Point(screen.Width / 2' screen.Height / 2);
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,TouchFlickExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\TouchFlickExecutor.cs,DoImpl,The following statement contains a magic number: var startPoint = new Point(screen.Width / 2' screen.Height / 2);
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,NewSessionExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\NewSessionExecutor.cs,ConnectToApp,The following statement contains a magic number: const int PingStep = 500;
Magic Number,WindowsPhoneDriver.OuterDriver.CommandExecutors,NewSessionExecutor,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\CommandExecutors\NewSessionExecutor.cs,ConnectToApp,The following statement contains a magic number: while (timeout > 0)              {                  stopWatch.Restart();                    Logger.Trace("Ping inner driver");                  var pingCommand = new Command(null' "ping"' null);                  var responseBody = this.Automator.CommandForwarder.ForwardCommand(pingCommand' false' 2000);                  if (responseBody.StartsWith("<pong>"' StringComparison.Ordinal))                  {                      break;                  }                    Thread.Sleep(PingStep);                  stopWatch.Stop();                  timeout -= stopWatch.ElapsedMilliseconds;              }
Missing Default,WindowsPhoneDriver.OuterDriver,UriDispatchTables,C:\repos\2gis_winphonedriver\WindowsPhoneDriver\WindowsPhoneDriver.OuterDriver\UriDispatchTables.cs,FindDispatcherTable,The following switch statement is missing a default case: switch (httpMethod)              {                  case CommandInfo.GetCommand:                      tableToReturn = this.getDispatcherTable;                      break;                    case CommandInfo.PostCommand:                      tableToReturn = this.postDispatcherTable;                      break;                    case CommandInfo.DeleteCommand:                      tableToReturn = this.deleteDispatcherTable;                      break;              }
