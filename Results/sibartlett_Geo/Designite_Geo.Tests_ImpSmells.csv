Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Geo.Tests.Geodesy,SpheroidCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geodesy\SpheroidCalculatorTests.cs,CalculateLoxodromicLineDistance,The method has 5 parameters. Parameters: lat1' lon1' lat2' lon2' distance
Long Parameter List,Geo.Tests.Geodesy,SpheroidCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geodesy\SpheroidCalculatorTests.cs,CalculateLoxodromicCourse,The method has 5 parameters. Parameters: lat1' lon1' lat2' lon2' distance
Long Parameter List,Geo.Tests.Geodesy,SpheroidCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geodesy\SpheroidCalculatorTests.cs,CalculateOrthodromicCourse,The method has 6 parameters. Parameters: lat1' lon1' lat2' lon2' c12' c21
Long Parameter List,Geo.Tests.Geodesy,SpheroidCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geodesy\SpheroidCalculatorTests.cs,CalculateOrthodromicDestination,The method has 6 parameters. Parameters: lat1' lon1' angle' distance' lat2' lon2
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_Elevation,The length of the statement  "            Assert.True(new CoordinateZ(0' 0' 0).Equals(new CoordinateZ(0' 0' 0)' new SpatialEqualityOptions{ UseElevation = true })); " is 122.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_Elevation,The length of the statement  "            Assert.False(new CoordinateZ(0' 0' 0).Equals(new CoordinateZ(0' 0' 10)' new SpatialEqualityOptions{ UseElevation = true })); " is 124.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_Elevation,The length of the statement  "            Assert.True(new CoordinateZ(0' 0' 0).Equals(new CoordinateZ(0' 0' 10)' new SpatialEqualityOptions{ UseElevation = false })); " is 124.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_M,The length of the statement  "            Assert.True(new CoordinateZM(0' 0' 0' 0).Equals(new CoordinateZM(0' 0' 0' 0)' new SpatialEqualityOptions { UseM = true })); " is 123.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_M,The length of the statement  "            Assert.False(new CoordinateZM(0' 0' 0' 0).Equals(new CoordinateZM(0' 0' 0' 10)' new SpatialEqualityOptions { UseM = true })); " is 125.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_M,The length of the statement  "            Assert.True(new CoordinateZM(0' 0' 0' 0).Equals(new CoordinateZM(0' 0' 0' 10)' new SpatialEqualityOptions { UseM = false })); " is 125.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The length of the statement  "            Assert.True(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = true })); " is 146.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The length of the statement  "            Assert.False(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = false })); " is 148.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The length of the statement  "            Assert.True(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = true })); " is 138.
Long Statement,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The length of the statement  "            Assert.False(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = false })); " is 140.
Long Statement,Geo.Tests.IO.Wkb,WkbTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkb\WkbTests.cs,GeometryCollection,The length of the statement  "            Test("GEOMETRYCOLLECTION (LINESTRING ZM (45.89 23.9 0.45 34' 0 0 0.45 34)' POLYGON ZM ((0 0 2 -1' 1 0 2 -1' 0 1 2 -1' 0 0 2 -1)))"); " is 132.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The length of the statement  "            var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0))); " is 145.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The length of the statement  "            var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0))); " is 146.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The length of the statement  "            var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))); " is 152.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The length of the statement  "            var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))); " is 158.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The length of the statement  "            var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))); " is 160.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The length of the statement  "            var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))); " is 133.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The length of the statement  "            var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))); " is 125.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The length of the statement  "            var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))); " is 161.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The length of the statement  "            var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))); " is 278.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The length of the statement  "            var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))); " is 171.
Long Statement,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The length of the statement  "            var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))); " is 301.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The length of the statement  "            Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy); " is 137.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The length of the statement  "            Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy); " is 150.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The length of the statement  "            Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy); " is 151.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The length of the statement  "            Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points); " is 129.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The length of the statement  "            Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets); " is 136.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The length of the statement  "            Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one); " is 159.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The length of the statement  "            Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two); " is 276.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The length of the statement  "            Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one); " is 169.
Long Statement,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The length of the statement  "            Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two); " is 299.
Long Statement,Geo.Tests.Geodesy,SpheroidCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geodesy\SpheroidCalculatorTests.cs,CalculateOrthodromicDestination,The length of the statement  "            var result = calculator.CalculateOrthodromicLine(new Point(lat1' lon1)' angle' new Distance(distance' DistanceUnit.Nm).SiValue); " is 128.
Long Statement,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,GeometryCollection,The length of the statement  "                @"{""type"":""GeometryCollection""'""geometries"":[{""type"":""Point""'""coordinates"":[0'0]}'{""type"":""Point""'""coordinates"":[0'1]}]}"' " is 140.
Long Statement,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,Feature,The length of the statement  "            Assert.AreEqual(@"{""type"":""Feature""'""geometry"":{""type"":""Point""'""coordinates"":[0'0]}'""properties"":null'""id"":""test-id""}"' " is 137.
Long Statement,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,Feature,The length of the statement  "            Assert.AreEqual(@"{""type"":""Feature""'""geometry"":{""type"":""Point""'""coordinates"":[0'0]}'""properties"":null'""id"":""test-id""}"' " is 137.
Long Statement,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,Feature,The length of the statement  "            Assert.AreEqual(@"{""type"":""Feature""'""geometry"":{""type"":""Point""'""coordinates"":[0'0]}'""properties"":{""name"":""test""}'""id"":""test-id""}"' " is 152.
Long Statement,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,FeatureCollection,The length of the statement  "            Assert.AreEqual(@"{""type"":""FeatureCollection""'""features"":[{""type"":""Feature""'""geometry"":{""type"":""Point""'""coordinates"":[0'0]}'""properties"":null'""id"":""test-id""}]}"' " is 185.
Long Statement,Geo.Tests.Raven,RavenTestFixtureBase,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTestFixtureBase.cs,AssertThat,The length of the statement  "                var msg = string.Format("Geometry {0}{1} {2} {3}"' s ? "does" : "is"' result ? "" : " not"' relationString' _writer.Write(geometry2.GetSpatial4nShape())); " is 154.
Long Statement,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The length of the statement  "            AssertTrue(lineString' SpatialRelation.Intersects' new LineString(new[] { new Coordinate(1' 0)' new Coordinate(0' 1) })); " is 121.
Long Statement,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The length of the statement  "            AssertTrue(lineString' SpatialRelation.Intersects' new LineString(new[] { new Coordinate(0' 1)' new Coordinate(1' 1)' new Coordinate(2' 1) })); " is 143.
Long Statement,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The length of the statement  "            var polygon = new Polygon(new LinearRing(new[] { new Coordinate(0' 0)' new Coordinate(5' 0)' new Coordinate(0' 5)' new Coordinate(0' 0) })); " is 140.
Magic Number,Geo.Tests.Geomagnetism,GeomagnetismCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geomagnetism\GeomagnetismCalculatorTests.cs,Test,The following statement contains a magic number: var b = a.TryCalculate(new Coordinate(51.8' -0.15)' DateTime.UtcNow.Date);
Magic Number,Geo.Tests.Geomagnetism,GeomagnetismCalculatorTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geomagnetism\GeomagnetismCalculatorTests.cs,Test,The following statement contains a magic number: var b = a.TryCalculate(new Coordinate(51.8' -0.15)' DateTime.UtcNow.Date);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,AnEquatorialCircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var circle = new Circle(0' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,AnEquatorialCircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var circle = new Circle(0' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,AnEquatorialCircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: Assert.LessOrEqual(minLatError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,AnEquatorialCircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: Assert.LessOrEqual(maxLatError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: var circle = new Circle(0' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: var circle = new Circle(0' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: var minLonError = Distance(19' bounds.MinLon);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: Assert.LessOrEqual(minLonError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: var maxLonError = Distance(21' bounds.MaxLon);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,Bounds_A_111000_RadiusMeterEquatorialCircleShouldBeAboutTwoDegreesWide,The following statement contains a magic number: Assert.LessOrEqual(maxLonError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var minLatError = Distance(59' bounds.MinLat);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: Assert.LessOrEqual(minLatError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: var maxLatError = Distance(61' bounds.MaxLat);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutTwoDegreesTall,The following statement contains a magic number: Assert.LessOrEqual(maxLatError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: var circle = new Circle(60' 20' 111000);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: var minLonError = Distance(19.5' bounds.MinLon);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: Assert.LessOrEqual(minLonError' 0.002);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: var maxLonError = Distance(20.5' bounds.MaxLon);
Magic Number,Geo.Tests.Geometries,CircleTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Geometries\CircleTests.cs,An_60Degree_CircleWith_111000M_RadiusShouldBeAboutOneDegreeWide,The following statement contains a magic number: Assert.LessOrEqual(maxLonError' 0.002);
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_Elevation,The following statement contains a magic number: Assert.False(new CoordinateZ(0' 0' 0).Equals(new CoordinateZ(0' 0' 10)' new SpatialEqualityOptions{ UseElevation = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_Elevation,The following statement contains a magic number: Assert.True(new CoordinateZ(0' 0' 0).Equals(new CoordinateZ(0' 0' 10)' new SpatialEqualityOptions{ UseElevation = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_M,The following statement contains a magic number: Assert.False(new CoordinateZM(0' 0' 0' 0).Equals(new CoordinateZM(0' 0' 0' 10)' new SpatialEqualityOptions { UseM = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_M,The following statement contains a magic number: Assert.True(new CoordinateZM(0' 0' 0' 0).Equals(new CoordinateZM(0' 0' 0' 10)' new SpatialEqualityOptions { UseM = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.True(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.True(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.True(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.False(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.False(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_PoleCoordinates,The following statement contains a magic number: Assert.False(new CoordinateZM(90' 0' 0' 0).Equals(new CoordinateZM(90' 180' 0' 0)' new SpatialEqualityOptions { PoleCoordiantesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.True(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.True(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.True(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.True(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = true }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.False(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.False(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.False(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = false }));
Magic Number,Geo.Tests,CoordinateTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\CoordinateTests.cs,Equality_AntiMeridianCoordinates,The following statement contains a magic number: Assert.False(new Coordinate(4' 180).Equals(new Coordinate(4' -180)' new SpatialEqualityOptions{ AntiMeridianCoordinatesAreEqual = false }));
Magic Number,Geo.Tests.Gps.Serialization,GarminFlightplanDeSerializerTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Gps\Serialization\GarminFlightplanDeSerializerTests.cs,CanParse,The following statement contains a magic number: Assert.That(file.Routes[0].Coordinates.Count' Is.EqualTo(5));
Magic Number,Geo.Tests.Gps.Serialization,IgcDeSerializerTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Gps\Serialization\IgcDeSerializerTests.cs,igc2,The following statement contains a magic number: Assert.That(result.Tracks[0].Segments[0].Fixes.Count' Is.EqualTo(9));
Magic Number,Geo.Tests.Gps.Serialization,NmeaDeSerializerTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Gps\Serialization\NmeaDeSerializerTests.cs,Stockholm_Walk,The following statement contains a magic number: Assert.That(result.Tracks[0].Segments[0].Fixes.Count' Is.EqualTo(674));
Magic Number,Geo.Tests.Gps.Serialization,SkyDemonFlightplanDeSerializerTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Gps\Serialization\SkyDemonFlightplanDeSerializerTests.cs,CanParse,The following statement contains a magic number: Assert.That(file.Routes[0].Coordinates.Count' Is.EqualTo(4));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Encode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Google,GooglePolylineEncoderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Google\GooglePolylineEncoderTests.cs,Decode,The following statement contains a magic number: var lineString = new LineString(new Coordinate(38.5' -120.2)'  											new Coordinate(40.7' -120.95)'  											new Coordinate(43.252' -126.453));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xy = writer.Write(new Point(65.9' 0));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xyz = writer.Write(new Point(65.9' 0' 5));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xyz = writer.Write(new Point(65.9' 0' 5));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xym = writer.Write(new Point(new CoordinateM(65.9' 0' 5)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xym = writer.Write(new Point(new CoordinateM(65.9' 0' 5)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xyzm = writer.Write(new Point(65.9' 0' 4' 5));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xyzm = writer.Write(new Point(65.9' 0' 4' 5));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Point,The following statement contains a magic number: var xyzm = writer.Write(new Point(65.9' 0' 4' 5));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LineString,The following statement contains a magic number: var xy = writer.Write(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LineString,The following statement contains a magic number: var xy = writer.Write(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LineString,The following statement contains a magic number: var xy = writer.Write(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var lineString = writer.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,LinearRing,The following statement contains a magic number: var linearRing = writer2.Write(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(50' 0)' new Coordinate(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Polygon,The following statement contains a magic number: var xy = writer.Write(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var polygon = writer.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,Triangle,The following statement contains a magic number: var triangle = writer2.Write(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,GeometryCollection,The following statement contains a magic number: var brackets = writer.Write(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPoint,The following statement contains a magic number: var brackets = writer.Write(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0)));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var one = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiLineString,The following statement contains a magic number: var two = writer.Write(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var one = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktWriterTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktWriterTests.cs,MultiPolygon,The following statement contains a magic number: var two = writer.Write(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))));
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,ExponentialNumber,The following statement contains a magic number: Assert.AreEqual(new Point(-71.4920233210601' 5.5980439826435563E-06)' xyWithE);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,ExponentialNumber,The following statement contains a magic number: Assert.AreEqual(new Point(-71.4920233210601' 5.5980439826435563E-06)' xyWithE);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0)' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 5)' xyz);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 5)' xyz);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 5)' xyz2);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 5)' xyz2);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(new CoordinateM(65.9' 0' 5))' xym);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(new CoordinateM(65.9' 0' 5))' xym);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm2);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm2);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Point,The following statement contains a magic number: Assert.AreEqual(new Point(65.9' 0' 4' 5)' xyzm2);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LineString,The following statement contains a magic number: Assert.AreEqual(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LineString,The following statement contains a magic number: Assert.AreEqual(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LineString,The following statement contains a magic number: Assert.AreEqual(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,LinearRing,The following statement contains a magic number: Assert.AreEqual(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(65.9' 5)' new Coordinate(65.9' 0))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Polygon,The following statement contains a magic number: Assert.AreEqual(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,Triangle,The following statement contains a magic number: Assert.AreEqual(new Triangle(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' xy);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,GeometryCollection,The following statement contains a magic number: Assert.AreEqual(new GeometryCollection(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' points);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' none);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPoint,The following statement contains a magic number: Assert.AreEqual(new MultiPoint(new Point()' new Point(65.9' 0)' new Point(9' -34.5)' new Point(40' -20)' new Point(65.9' 0))' brackets);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiLineString,The following statement contains a magic number: Assert.AreEqual(new MultiLineString(new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))' new LineString(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' one);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.Wkt,WktReaderTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\Wkt\WktReaderTests.cs,MultiPolygon,The following statement contains a magic number: Assert.AreEqual(new MultiPolygon(new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0)))' new Polygon(new LinearRing(new Coordinate(65.9' 0)' new Coordinate(9' -34.5)' new Coordinate(40' -20)' new Coordinate(65.9' 0))))' two);
Magic Number,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,Polygon,The following statement contains a magic number: var geo =                  new Polygon(new LinearRing(new Coordinate(0' 0)' new Coordinate(1' 1)' new Coordinate(2' 0)'                                             new Coordinate(0' 0)));
Magic Number,Geo.Tests.IO.GeoJson,GeoJsonTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\IO\GeoJson\GeoJsonTests.cs,MultiPolygon,The following statement contains a magic number: var geo =                  new MultiPolygon(                      new Polygon(new LinearRing(new Coordinate(0' 0)' new Coordinate(1' 1)' new Coordinate(2' 0)'                                                 new Coordinate(0' 0))));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: var point = new Point(45.7' 0.45' 88.9' 433.4);
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: var point = new Point(45.7' 0.45' 88.9' 433.4);
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: var point = new Point(45.7' 0.45' 88.9' 433.4);
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: var point = new Point(45.7' 0.45' 88.9' 433.4);
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertTrue(point' SpatialRelation.Within' new Circle(45.7' 0.45' 110));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertTrue(point' SpatialRelation.Within' new Circle(45.7' 0.45' 110));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertTrue(point' SpatialRelation.Within' new Circle(45.7' 0.45' 110));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertFalse(point' SpatialRelation.Within' new Circle(45.7' 160.45' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertFalse(point' SpatialRelation.Within' new Circle(45.7' 160.45' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PointTests,The following statement contains a magic number: AssertFalse(point' SpatialRelation.Within' new Circle(45.7' 160.45' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: var circle = new Circle(0' 0' 110000);
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertTrue(circle' SpatialRelation.Within' new Circle(0' 0' 220000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertFalse(circle' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertFalse(circle' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertTrue(circle' SpatialRelation.Intersects' new Circle(1' 0' 110000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertFalse(circle' SpatialRelation.Intersects' new Circle(2' 0' 110000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,CircleTests,The following statement contains a magic number: AssertFalse(circle' SpatialRelation.Intersects' new Circle(2' 0' 110000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The following statement contains a magic number: var lineString = new LineString(new[] { new Coordinate(0' 0)' new Coordinate(1' 1)' new Coordinate(1' 2) });
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The following statement contains a magic number: AssertTrue(lineString' SpatialRelation.Within' new Circle(0' 0' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The following statement contains a magic number: AssertFalse(lineString' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The following statement contains a magic number: AssertFalse(lineString' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,LineStringTests,The following statement contains a magic number: AssertTrue(lineString' SpatialRelation.Intersects' new LineString(new[] { new Coordinate(0' 1)' new Coordinate(1' 1)' new Coordinate(2' 1) }));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: var polygon = new Polygon(new LinearRing(new[] { new Coordinate(0' 0)' new Coordinate(5' 0)' new Coordinate(0' 5)' new Coordinate(0' 0) }));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: var polygon = new Polygon(new LinearRing(new[] { new Coordinate(0' 0)' new Coordinate(5' 0)' new Coordinate(0' 5)' new Coordinate(0' 0) }));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertTrue(polygon' SpatialRelation.Within' new Circle(0' 0' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertFalse(polygon' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertFalse(polygon' SpatialRelation.Within' new Circle(0' 160' 600000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertTrue(polygon' SpatialRelation.Intersects' new Circle(0' 0' 110000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertFalse(polygon' SpatialRelation.Intersects' new Circle(0' 160' 110000));
Magic Number,Geo.Tests.Raven,RavenTests,D:\research\architectureSmells\repos1\sibartlett_Geo\Geo.Tests\Raven\RavenTests.cs,PolygonTests,The following statement contains a magic number: AssertFalse(polygon' SpatialRelation.Intersects' new Circle(0' 160' 110000));
