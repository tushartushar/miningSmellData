Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,HandleRemoteAuthenticateAsync,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ExecuteRequestAsync,Cyclomatic complexity of the method is 11
Long Parameter List,Microsoft.AspNetCore.Authentication.Twitter,TwitterCreatingTicketContext,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\Events\TwitterCreatingTicketContext.cs,TwitterCreatingTicketContext,The method has 10 parameters. Parameters: context' scheme' options' principal' properties' userId' screenName' accessToken' accessTokenSecret' user
Long Parameter List,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ExecuteRequestAsync,The method has 6 parameters. Parameters: url' httpMethod' accessToken' extraOAuthPairs' queryParameters' formData
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,RequestTokenSerializer,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\Messages\RequestTokenSerializer.cs,Read,The length of the statement  "            return new RequestToken { Token = token' TokenSecret = tokenSecret' CallbackConfirmed = callbackConfirmed' Properties = properties }; " is 133.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,CreateTicketAsync,The length of the statement  "            var context = new TwitterCreatingTicketContext(Context' Scheme' Options' new ClaimsPrincipal(identity)' properties' token.UserId' token.ScreenName' token.Token' token.TokenSecret' user); " is 186.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,HandleChallengeAsync,The length of the statement  "            var redirectContext = new RedirectContext<TwitterOptions>(Context' Scheme' Options' properties' twitterAuthenticationEndpoint); " is 127.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ExecuteRequestAsync,The length of the statement  "                parameterBuilder.AppendFormat("{0}={1}&"' Uri.EscapeDataString(signaturePart.Key)' Uri.EscapeDataString(signaturePart.Value)); " is 126.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ExecuteRequestAsync,The length of the statement  "            var signature = ComputeSignature(Options.ConsumerSecret' accessToken?.TokenSecret' canonicalizedRequestBuilder.ToString()); " is 123.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ExecuteRequestAsync,The length of the statement  "                authorizationHeaderBuilder.AppendFormat("{0}=\"{1}\"'"' authorizationPart.Key' Uri.EscapeDataString(authorizationPart.Value)); " is 126.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ObtainRequestTokenAsync,The length of the statement  "            var response = await ExecuteRequestAsync(TwitterDefaults.RequestTokenEndpoint' HttpMethod.Post' extraOAuthPairs: new Dictionary<string' string>() { { "oauth_callback"' callBackUri } }); " is 185.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ObtainRequestTokenAsync,The length of the statement  "            return new RequestToken { Token = Uri.UnescapeDataString(responseParameters["oauth_token"])' TokenSecret = Uri.UnescapeDataString(responseParameters["oauth_token_secret"])' CallbackConfirmed = true' Properties = properties }; " is 225.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,ObtainAccessTokenAsync,The length of the statement  "            var response = await ExecuteRequestAsync(TwitterDefaults.AccessTokenEndpoint' HttpMethod.Post' token' formData: formPost); " is 122.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterHandler.cs,RetrieveUserDetailsAsync,The length of the statement  "            var response = await ExecuteRequestAsync("https://api.twitter.com/1.1/account/verify_credentials.json"' HttpMethod.Get' accessToken' queryParameters: new Dictionary<string' string>() { { "include_email"' "true" } }); " is 216.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(ConsumerKey))' nameof(ConsumerKey)); " is 155.
Long Statement,Microsoft.AspNetCore.Authentication.Twitter,TwitterOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(ConsumerSecret))' nameof(ConsumerSecret)); " is 161.
Long Statement,Microsoft.AspNetCore.Builder,TwitterAppBuilderExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterAppBuilderExtensions.cs,UseTwitterAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,Microsoft.AspNetCore.Builder,TwitterAppBuilderExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterAppBuilderExtensions.cs,UseTwitterAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,Microsoft.Extensions.DependencyInjection,TwitterExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterExtensions.cs,AddTwitter,The length of the statement  "            builder.Services.TryAddEnumerable(ServiceDescriptor.Singleton<IPostConfigureOptions<TwitterOptions>' TwitterPostConfigureOptions>()); " is 133.
Magic Number,Microsoft.AspNetCore.Authentication.Twitter,TwitterOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterOptions.cs,TwitterOptions,The following statement contains a magic number: BackchannelTimeout = TimeSpan.FromSeconds(60);
Magic Number,Microsoft.AspNetCore.Authentication.Twitter,TwitterPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.AspNetCore.Authentication.Twitter,TwitterPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.AspNetCore.Authentication.Twitter,TwitterPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\TwitterPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _obtainAccessToken = LoggerMessage.Define(                  eventId: 2'                  logLevel: LogLevel.Debug'                  formatString: "ObtainAccessToken");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.Twitter\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _retrieveUserDetails = LoggerMessage.Define(                  eventId: 3'                  logLevel: LogLevel.Debug'                  formatString: "RetrieveUserDetails");
