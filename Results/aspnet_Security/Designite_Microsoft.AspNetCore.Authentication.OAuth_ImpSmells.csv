Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Microsoft.AspNetCore.Authentication.OAuth,OAuthHandler<TOptions>,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthHandler.cs,HandleRemoteAuthenticateAsync,Cyclomatic complexity of the method is 15
Long Parameter List,Microsoft.AspNetCore.Authentication,ClaimActionCollectionMapExtensions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\Claims\ClaimActionCollectionMapExtensions.cs,MapJsonSubKey,The method has 5 parameters. Parameters: collection' claimType' jsonKey' subKey' valueType
Long Parameter List,Microsoft.AspNetCore.Authentication.OAuth,OAuthCreatingTicketContext,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\Events\OAuthCreatingTicketContext.cs,OAuthCreatingTicketContext,The method has 7 parameters. Parameters: principal' properties' context' scheme' options' backchannel' tokens
Long Parameter List,Microsoft.AspNetCore.Authentication.OAuth,OAuthCreatingTicketContext,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\Events\OAuthCreatingTicketContext.cs,OAuthCreatingTicketContext,The method has 8 parameters. Parameters: principal' properties' context' scheme' options' backchannel' tokens' user
Long Statement,Microsoft.AspNetCore.Authentication.OAuth.Claims,ClaimActionCollection,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\Claims\ClaimActionCollection.cs,Remove,The length of the statement  "            var itemsToRemove = Actions.Where(map => string.Equals(claimType' map.ClaimType' StringComparison.OrdinalIgnoreCase)).ToList(); " is 127.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthHandler<TOptions>,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthHandler.cs,CreateTicketAsync,The length of the statement  "            var context = new OAuthCreatingTicketContext(new ClaimsPrincipal(identity)' properties' Context' Scheme' Options' Backchannel' tokens); " is 135.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthOptions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(ClientId))' nameof(ClientId)); " is 149.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthOptions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(ClientSecret))' nameof(ClientSecret)); " is 157.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthOptions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(AuthorizationEndpoint))' nameof(AuthorizationEndpoint)); " is 175.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthOptions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(TokenEndpoint))' nameof(TokenEndpoint)); " is 159.
Long Statement,Microsoft.AspNetCore.Authentication.OAuth,OAuthOptions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthOptions.cs,Validate,The length of the statement  "                throw new ArgumentException(string.Format(CultureInfo.CurrentCulture' Resources.Exception_OptionMustBeProvided' nameof(CallbackPath))' nameof(CallbackPath)); " is 157.
Long Statement,Microsoft.AspNetCore.Builder,OAuthAppBuilderExtensions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthAppBuilderExtensions.cs,UseOAuthAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,Microsoft.AspNetCore.Builder,OAuthAppBuilderExtensions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthAppBuilderExtensions.cs,UseOAuthAuthentication,The length of the statement  "            throw new NotSupportedException("This method is no longer supported' see https://go.microsoft.com/fwlink/?linkid=845470"); " is 122.
Long Statement,Microsoft.Extensions.DependencyInjection,OAuthExtensions,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthExtensions.cs,AddOAuth,The length of the statement  "            builder.Services.TryAddEnumerable(ServiceDescriptor.Singleton<IPostConfigureOptions<TOptions>' OAuthPostConfigureOptions<TOptions' THandler>>()); " is 145.
Magic Number,Microsoft.Extensions.DependencyInjection,OAuthPostConfigureOptions<TOptions;THandler>,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: if (options.Backchannel == null)              {                  options.Backchannel = new HttpClient(options.BackchannelHttpHandler ?? new HttpClientHandler());                  options.Backchannel.DefaultRequestHeaders.UserAgent.ParseAdd("Microsoft ASP.NET Core OAuth handler");                  options.Backchannel.Timeout = options.BackchannelTimeout;                  options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10; // 10 MB              }
Magic Number,Microsoft.Extensions.DependencyInjection,OAuthPostConfigureOptions<TOptions;THandler>,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: if (options.Backchannel == null)              {                  options.Backchannel = new HttpClient(options.BackchannelHttpHandler ?? new HttpClientHandler());                  options.Backchannel.DefaultRequestHeaders.UserAgent.ParseAdd("Microsoft ASP.NET Core OAuth handler");                  options.Backchannel.Timeout = options.BackchannelTimeout;                  options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10; // 10 MB              }
Magic Number,Microsoft.Extensions.DependencyInjection,OAuthPostConfigureOptions<TOptions;THandler>,C:\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.OAuth\OAuthPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: if (options.Backchannel == null)              {                  options.Backchannel = new HttpClient(options.BackchannelHttpHandler ?? new HttpClientHandler());                  options.Backchannel.DefaultRequestHeaders.UserAgent.ParseAdd("Microsoft ASP.NET Core OAuth handler");                  options.Backchannel.Timeout = options.BackchannelTimeout;                  options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10; // 10 MB              }
