Implementation smell,Namespace,Class,File,Method,Description
Long Method,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,ConfigureServices,The method has 163 lines of code.
Long Method,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,Configure,The method has 190 lines of code.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,ConfigureServices,The length of the statement  "                o.AuthorizationEndpoint += "?prompt=consent"; // Hack so we always get a refresh token' it only comes on the first authorization response " is 137.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,ConfigureServices,The length of the statement  "                // http://stackoverflow.com/questions/36330675/get-users-email-from-twitter-api-for-external-login-authentication-asp-net-mvc?lq=1 " is 130.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,HandleOnRemoteFailure,The length of the statement  "            await context.Response.WriteAsync("A remote failure has occurred: " + UrlEncoder.Default.Encode(context.Failure.Message) + "<br>"); " is 131.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,HandleOnRemoteFailure,The length of the statement  "                    await context.Response.WriteAsync($"-{ UrlEncoder.Default.Encode(pair.Key)}={ UrlEncoder.Default.Encode(pair.Value)}<br>"); " is 123.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,Configure,The length of the statement  "                        await response.WriteAsync("<a href=\"?authscheme=" + provider.Name + "\">" + (provider.DisplayName ?? "(suppressed)") + "</a><br>"); " is 132.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,Configure,The length of the statement  "                        if (int.TryParse(payload.Value<string>("expires_in")' NumberStyles.Integer' CultureInfo.InvariantCulture' out var seconds)) " is 123.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,Configure,The length of the statement  "                        if (int.TryParse(payload.Value<string>("expires_in")' NumberStyles.Integer' CultureInfo.InvariantCulture' out var seconds)) " is 123.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,GetOAuthOptionsAsync,The length of the statement  "                return Task.FromResult<OAuthOptions>(context.RequestServices.GetRequiredService<IOptionsMonitor<GoogleOptions>>().Get(currentAuthType)); " is 136.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,GetOAuthOptionsAsync,The length of the statement  "                return Task.FromResult<OAuthOptions>(context.RequestServices.GetRequiredService<IOptionsMonitor<MicrosoftAccountOptions>>().Get(currentAuthType)); " is 146.
Long Statement,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,GetOAuthOptionsAsync,The length of the statement  "                return Task.FromResult<OAuthOptions>(context.RequestServices.GetRequiredService<IOptionsMonitor<FacebookOptions>>().Get(currentAuthType)); " is 138.
Magic Number,SocialSample,Program,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Program.cs,Main,The following statement contains a magic number: var host = new WebHostBuilder()                  .ConfigureLogging(factory =>                  {                      factory.AddConsole();                      factory.AddFilter("Console"' level => level >= LogLevel.Information);                  })                  .UseKestrel(options =>                  {                      options.Listen(IPAddress.Loopback' 44318' listenOptions =>                      {                          // Configure SSL                          var serverCertificate = LoadCertificate();                          listenOptions.UseHttps(serverCertificate);                      });                  })                  .UseContentRoot(Directory.GetCurrentDirectory())                  .UseIISIntegration()                  .UseStartup<Startup>()                  .Build();
Magic Number,SocialSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\SocialSample\Startup.cs,HandleOnRemoteFailure,The following statement contains a magic number: context.Response.StatusCode = 500;
