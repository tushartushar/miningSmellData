Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CookieSessionSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\CookieSessionSample\Startup.cs,Configure,The length of the statement  "                        claims.Add(new Claim(ClaimTypes.Role' "SomeRandomGroup" + i' ClaimValueTypes.String' "IssuedByBob"' "OriginalIssuerJoe")); " is 122.
Magic Number,CookieSessionSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\CookieSessionSample\Startup.cs,Configure,The following statement contains a magic number: app.Run(async context =>              {                  if (!context.User.Identities.Any(identity => identity.IsAuthenticated))                  {                      // Make a large identity                      var claims = new List<Claim>(1001);                      claims.Add(new Claim(ClaimTypes.Name' "bob"));                      for (int i = 0; i < 1000; i++)                      {                          claims.Add(new Claim(ClaimTypes.Role' "SomeRandomGroup" + i' ClaimValueTypes.String' "IssuedByBob"' "OriginalIssuerJoe"));                      }                        await context.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme'                          new ClaimsPrincipal(new ClaimsIdentity(claims' CookieAuthenticationDefaults.AuthenticationScheme)));                        context.Response.ContentType = "text/plain";                      await context.Response.WriteAsync("Hello First timer");                      return;                  }                    context.Response.ContentType = "text/plain";                  await context.Response.WriteAsync("Hello old timer");              });
Magic Number,CookieSessionSample,Startup,D:\research\architectureSmells\repos\aspnet_Security\samples\CookieSessionSample\Startup.cs,Configure,The following statement contains a magic number: app.Run(async context =>              {                  if (!context.User.Identities.Any(identity => identity.IsAuthenticated))                  {                      // Make a large identity                      var claims = new List<Claim>(1001);                      claims.Add(new Claim(ClaimTypes.Name' "bob"));                      for (int i = 0; i < 1000; i++)                      {                          claims.Add(new Claim(ClaimTypes.Role' "SomeRandomGroup" + i' ClaimValueTypes.String' "IssuedByBob"' "OriginalIssuerJoe"));                      }                        await context.SignInAsync(CookieAuthenticationDefaults.AuthenticationScheme'                          new ClaimsPrincipal(new ClaimsIdentity(claims' CookieAuthenticationDefaults.AuthenticationScheme)));                        context.Response.ContentType = "text/plain";                      await context.Response.WriteAsync("Hello First timer");                      return;                  }                    context.Response.ContentType = "text/plain";                  await context.Response.WriteAsync("Hello old timer");              });
