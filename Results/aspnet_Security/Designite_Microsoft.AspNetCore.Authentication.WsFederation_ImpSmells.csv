Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The method has 156 lines of code.
Complex Method,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,SignOutAsync,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.AspNetCore.Authentication.WsFederation,SecurityTokenValidatedContext,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\Events\SecurityTokenValidatedContext.cs,SecurityTokenValidatedContext,The method has 5 parameters. Parameters: context' scheme' options' principal' properties
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRequestAsync,The length of the statement  "            if (Options.RemoteSignOutPath.HasValue && Options.RemoteSignOutPath == Request.Path && HttpMethods.IsGet(Request.Method) " is 120.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                wsFederationMessage = new WsFederationMessage(form.Select(pair => new KeyValuePair<string' string[]>(pair.Key' pair.Value))); " is 125.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                tvp.IssuerSigningKeys = (tvp.IssuerSigningKeys == null ? _configuration.SigningKeys : tvp.IssuerSigningKeys.Concat(_configuration.SigningKeys)); " is 144.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                // Refresh the configuration for exceptions that may be caused by key rollovers. The user can also request a refresh in the notification. " is 137.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The length of the statement  "                if (Options.RefreshOnIssuerKeyNotFound && exception.GetType().Equals(typeof(SecurityTokenSignatureKeyNotFoundException))) " is 121.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteSignOutAsync,The length of the statement  "            var message = new WsFederationMessage(Request.Query.Select(pair => new KeyValuePair<string' string[]>(pair.Key' pair.Value))); " is 126.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The length of the statement  "            if (!options.CallbackPath.HasValue && !string.IsNullOrEmpty(options.Wreply) && Uri.TryCreate(options.Wreply' UriKind.Absolute' out var wreply)) " is 143.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The length of the statement  "                // Wreply must be a very specific' case sensitive value' so we can't generate it. Instead we generate CallbackPath from it. " is 123.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The length of the statement  "                    if (options.RequireHttpsMetadata && !options.MetadataAddress.StartsWith("https://"' StringComparison.OrdinalIgnoreCase)) " is 120.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The length of the statement  "                        throw new InvalidOperationException("The MetadataAddress must use HTTPS unless disabled for development by setting RequireHttpsMetadata=false."); " is 145.
Long Statement,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The length of the statement  "                    options.ConfigurationManager = new ConfigurationManager<WsFederationConfiguration>(options.MetadataAddress' new WsFederationConfigurationRetriever()' " is 149.
Long Statement,Microsoft.Extensions.DependencyInjection,WsFederationExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationExtensions.cs,AddWsFederation,The length of the statement  "            builder.Services.TryAddEnumerable(ServiceDescriptor.Singleton<IPostConfigureOptions<WsFederationOptions>' WsFederationPostConfigureOptions>()); " is 143.
Long Statement,Microsoft.Extensions.DependencyInjection,WsFederationExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationExtensions.cs,AddWsFederation,The length of the statement  "            return builder.AddRemoteScheme<WsFederationOptions' WsFederationHandler>(authenticationScheme' displayName' configureOptions); " is 126.
Complex Conditional,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRequestAsync,The conditional expression  "Options.RemoteSignOutPath.HasValue && Options.RemoteSignOutPath == Request.Path && HttpMethods.IsGet(Request.Method)                  && string.Equals(Request.Query[WsFederationConstants.WsFederationParameterNames.Wa]'                      WsFederationConstants.WsFederationActions.SignOutCleanup' StringComparison.OrdinalIgnoreCase)"  is complex.
Complex Conditional,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationHandler,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationHandler.cs,HandleRemoteAuthenticateAsync,The conditional expression  "HttpMethods.IsPost(Request.Method)                && !string.IsNullOrEmpty(Request.ContentType)                // May have media/type; charset=utf-8' allow partial match.                && Request.ContentType.StartsWith("application/x-www-form-urlencoded"' StringComparison.OrdinalIgnoreCase)                && Request.Body.CanRead"  is complex.
Magic Number,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.AspNetCore.Authentication.WsFederation,WsFederationPostConfigureOptions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\WsFederationPostConfigureOptions.cs,PostConfigure,The following statement contains a magic number: options.Backchannel.MaxResponseContentBufferSize = 1024 * 1024 * 10;
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _signInWithoutToken = LoggerMessage.Define(                  eventId: 2'                  logLevel: LogLevel.Debug'                  formatString: "Received a sign-in message without a token.");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _exceptionProcessingMessage = LoggerMessage.Define(                  eventId: 3'                  logLevel: LogLevel.Error'                  formatString: "Exception occurred while processing message.");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _malformedRedirectUri = LoggerMessage.Define<string>(                  eventId: 4'                  logLevel: LogLevel.Warning'                  formatString: "The sign-out redirect URI '{0}' is malformed.");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _remoteSignOutHandledResponse = LoggerMessage.Define(                 eventId: 5'                 logLevel: LogLevel.Debug'                 formatString: "RemoteSignOutContext.HandledResponse");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _remoteSignOutSkipped = LoggerMessage.Define(                 eventId: 6'                 logLevel: LogLevel.Debug'                 formatString: "RemoteSignOutContext.Skipped");
Magic Number,Microsoft.Extensions.Logging,LoggingExtensions,D:\research\architectureSmells\repos\aspnet_Security\src\Microsoft.AspNetCore.Authentication.WsFederation\LoggingExtensions.cs,LoggingExtensions,The following statement contains a magic number: _remoteSignOut = LoggerMessage.Define(                 eventId: 7'                 logLevel: LogLevel.Information'                 formatString: "Remote signout request processed.");
