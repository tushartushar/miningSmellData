Implementation smell,Namespace,Class,File,Method,Description
Long Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The method has 158 lines of code.
Long Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The method has 157 lines of code.
Long Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The method has 104 lines of code.
Long Method,de4dot.code.deobfuscators,MethodStack,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodStack.cs,getLoadedType,The method has 121 lines of code.
Long Method,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateMethod,The method has 145 lines of code.
Long Method,de4dot.code.deobfuscators.Babel_NET,BabelMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelMethodCallInliner.cs,getNewValue,The method has 104 lines of code.
Long Method,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,emulateInstructions,The method has 127 lines of code.
Long Method,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The method has 663 lines of code.
Long Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,The method has 114 lines of code.
Long Method,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The method has 130 lines of code.
Long Method,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findFirstBlocks,The method has 115 lines of code.
Long Method,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,initializeInterfaceMethods,The method has 132 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The method has 103 lines of code.
Long Method,ICSharpCode.SharpZipLib.Zip.Compression,InflaterDynHeader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterDynHeader.cs,Decode,The method has 116 lines of code.
Complex Method,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,getServerName,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code,MethodPrinter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodPrinter.cs,getOperandString,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,Cyclomatic complexity of the method is 17
Complex Method,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,fixIntArg,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,Cyclomatic complexity of the method is 22
Complex Method,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,findMethodTokens,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,splitMethodDesc,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,deobfuscateMethods,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,deobfuscate,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code,StringInlinerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\StringInliner.cs,inlineReturnValues,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code,Utils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Utils.cs,toCsharpString,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,deobfuscateEnd,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Agile_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\ResourceDecrypter.cs,findResourceType,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Agile_NET,StackFrameHelper,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\StackFrameHelper.cs,find,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CilOperandInstructionRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CilOperandInstructionRestorer.cs,restore,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CilOperandInstructionRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CilOperandInstructionRestorer.cs,isValidType,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateLocalInstruction,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateArgInstruction,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,readTypeRef,Cyclomatic complexity of the method is 22
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,fixOperand,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,restoreConstrainedPrefix,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandler,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,detect,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,Cyclomatic complexity of the method is 20
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,UnknownHandlerInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\UnknownHandlerInfo.cs,findOverrideMethods,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,isStackType,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators,ArrayFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ArrayFinder.cs,getInitializedArray,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,Cyclomatic complexity of the method is 42
Complex Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,Cyclomatic complexity of the method is 46
Complex Method,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,Cyclomatic complexity of the method is 27
Complex Method,de4dot.code.deobfuscators,DeobfuscatorBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobfuscatorBase.cs,isTypeCalled,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,getInitCctors,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators,ExceptionLoggerRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ExceptionLoggerRemover.cs,find,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators,InlinedMethodsFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InlinedMethodsFinder.cs,find,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators,MethodStack,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodStack.cs,getPushedArgInstructions,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators,MethodStack,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodStack.cs,getLoadedType,Cyclomatic complexity of the method is 26
Complex Method,de4dot.code.deobfuscators,ProxyCallFixer1,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,find,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators,ProxyCallFixer1,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,findProxyCall,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators,ProxyCallFixer2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,find2,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,getTypeWords,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateMethod,Cyclomatic complexity of the method is 25
Complex Method,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateFields,Cyclomatic complexity of the method is 21
Complex Method,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,isValidType,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators,UnusedMethodsFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\UnusedMethodsFinder.cs,check,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Babel_NET,BabelMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelMethodCallInliner.cs,getNewValue,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Babel_NET,BabelUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelUtils.cs,findRegisterMethod,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Babel_NET,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ConstantsDecrypter.cs,isConstantDecrypter,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Babel_NET,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ConstantsDecrypter.cs,deobfuscate,Cyclomatic complexity of the method is 18
Complex Method,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,compareMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,initializeTypeRefs,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,findDelegateCreator,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Babel_NET,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceResolver.cs,initXorKeys,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkDecryptMethodBabel2x,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkNested,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,getOffsetMagic,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Babel_NET,ReflectionToDot10MethodCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,create,Cyclomatic complexity of the method is 16
Complex Method,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findBundleType,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findAssemblyManagerType,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findXmlParserType,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findStreamProviderType,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.CodeVeil,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\Deobfuscator.cs,deobfuscateEnd,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,find,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,checkInitMethod,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,removeInitCall,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ProxyCallFixer.cs,findOtherTypes,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,Cyclomatic complexity of the method is 22
Complex Method,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findResourceEnumerator,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findEncryptedResourceStreamType,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators.CodeVeil,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\TamperDetection.cs,isTamperDetectionClass,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.CodeVeil,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\TamperDetection.cs,callsMainTypeTamperCheckMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeWall,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,getResource,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,checkMethods_v36,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodsDecrypter.cs,getTokens,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,getProxyCreateMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,getProxyCreatorType,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,findDesktopOrCompactFrameworkV1,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,updateFlags,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,getDecrypterMethods,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,decrypt,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceResolver.cs,checkSetupMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\StringDecrypter.cs,findStringDecrypterType,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.CryptoObfuscator,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\TamperDetection.cs,findSilverlight,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate3,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,findFieldsToKeep,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkHandlerV4,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkHandlerV404_41,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators.DeepSea,CastDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\CastDeobfuscator.cs,deobfuscate,Cyclomatic complexity of the method is 23
Complex Method,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,inlineMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,emulateInstructions,Cyclomatic complexity of the method is 18
Complex Method,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,canInline,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,getMovedTypes,Cyclomatic complexity of the method is 20
Complex Method,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,getPossibleFields,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,checkMethods,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,fixFieldCtorCalls,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Retail,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,checkHandlerV40,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findKey,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,find,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findKeyShift,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findFields,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.DeepSea,DecrypterInfo13,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findFields,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,findStringDecrypterMethods,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC1,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMoveNext,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,checkCalledMethods,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,ResourceMethodsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\ResourceMethodsRestorer.cs,find,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findConstants,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findFlags2,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,getFlagsLocal,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findResourceFromStringBuilder,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInts,Cyclomatic complexity of the method is 17
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,emulateDynocode,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInitIntsIndex,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findIntsCctor,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInt3New,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,Cyclomatic complexity of the method is 23
Complex Method,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,getNestedType,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v3,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\AntiStrongName.cs,remove,Cyclomatic complexity of the method is 30
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v3,LibAssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\LibAssemblyResolver.cs,checkInitMethod,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,getPatchInfo,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,checkType,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,remove,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AssemblyResolver.cs,checkMethod,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,Cyclomatic complexity of the method is 17
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,deobfuscateBegin,Cyclomatic complexity of the method is 17
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,init,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,isEmptyClass,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,EncryptedResource,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EncryptedResource.cs,init,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,MetadataTokenObfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MetadataTokenObfuscator.cs,find,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,MetadataTokenObfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MetadataTokenObfuscator.cs,deobfuscate,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,find,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,Cyclomatic complexity of the method is 18
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeImageUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeImageUnpacker.cs,unpack,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\ResourceResolver.cs,find,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\ResourceResolver.cs,findInitMethod,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\StringDecrypter.cs,find,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.dotNET_Reactor.v4,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\StringDecrypter.cs,findKeyIv,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,initialize,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,getDecrypterInfo,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,findDelegateInitType,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Goliath_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\Deobfuscator.cs,deobfuscateBegin,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Goliath_NET,LocalsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\LocalsRestorer.cs,initialize,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Goliath_NET,LocalsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\LocalsRestorer.cs,deobfuscate,Cyclomatic complexity of the method is 17
Complex Method,de4dot.code.deobfuscators.Goliath_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\ProxyCallFixer.cs,checkProxyMethod,Cyclomatic complexity of the method is 22
Complex Method,de4dot.code.deobfuscators.Goliath_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StringDecrypter.cs,checkDecrypterType,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Goliath_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StringDecrypter.cs,deobfuscate,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Goliath_NET,StrongNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StrongNameChecker.cs,deobfuscate,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,readType,Cyclomatic complexity of the method is 28
Complex Method,de4dot.code.deobfuscators.ILProtector,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,decompress,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.MaxtoCode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Deobfuscator.cs,removeDuplicateEmbeddedResources,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,detectVersion,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,Cyclomatic complexity of the method is 21
Complex Method,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.Rummage,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getStringInfo,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initializeBaseOffs,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Skater_NET,EnumClassFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\EnumClassFinder.cs,find,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,deobfuscate,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.deobfuscators.SmartAssembly,AutomatedErrorReportingFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AutomatedErrorReportingFinder.cs,checkMethod,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.SmartAssembly,AutomatedErrorReportingFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AutomatedErrorReportingFinder.cs,isExceptionLoggerMethod,Cyclomatic complexity of the method is 16
Complex Method,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,getTypeIdAttribute,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initStringDecrypterInfos,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.SmartAssembly,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ProxyCallFixer.cs,checkCctor,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,checkAttachAppMethod,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,getResolverHandlers,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,init,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,findSimpleZipTypeMethod,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,removeInitCode_v2,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findFirstBlocks,Cyclomatic complexity of the method is 21
Complex Method,de4dot.code.deobfuscators.Spices_Net,ResourceNamesRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\ResourceNamesRestorer.cs,deobfuscate,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Spices_Net,SpicesMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\SpicesMethodCallInliner.cs,restoreMethodBodies,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.deobfuscators.Spices_Net,SpicesMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\SpicesMethodCallInliner.cs,checkRestoreBody,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Spices_Net,SpicesMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\SpicesMethodCallInliner.cs,checkMethodsType,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Spices_Net,SpicesMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\SpicesMethodCallInliner.cs,checkMethods,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,find,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,getStringDataFlags,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,callsDecompressor,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,initialize,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,isTypeWithThousandsOfMethods,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,find,Cyclomatic complexity of the method is 12
Complex Method,de4dot.code.renamer.asmmodules,MemberRefFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\MemberRefFinder.cs,processAll,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.renamer.asmmodules,MemberRefFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\MemberRefFinder.cs,getObjectType2,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.renamer.asmmodules,MemberRefFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\MemberRefFinder.cs,add,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer.asmmodules,MemberRefFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\MemberRefFinder.cs,add,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer.asmmodules,Module,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\Module.cs,resolveAllRefs,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.renamer.asmmodules,Modules,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\Modules.cs,initAllTypes,Cyclomatic complexity of the method is 16
Complex Method,de4dot.code.renamer.asmmodules,Modules,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\Modules.cs,resolveOther,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer.asmmodules,Modules,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\Modules.cs,findModules,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.renamer.asmmodules,AssemblyKeyDictionary<T>,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\Modules.cs,tryGetSimilarValue,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,addMembers,Cyclomatic complexity of the method is 16
Complex Method,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,initializeInterfaceMethods,Cyclomatic complexity of the method is 34
Complex Method,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,instantiateVirtualMembers,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,MemberInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\MemberInfos.cs,initialize,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,getNameCreator,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,removeUselessOverrides,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,removeOneClassNamespaces,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,renameMethods,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,renameMemberRefs,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,resetVirtualPropertyNames,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,resetVirtualEventNames,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreVirtualProperties,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restorePropertiesFromNames,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,createPropertyGetter,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,createPropertySetter,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreVirtualEvents,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreEventsFromNames,Cyclomatic complexity of the method is 15
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameMemberDefs,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreMethodArgs,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,getValidArgNames,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameEvent,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameProperty,Cyclomatic complexity of the method is 13
Complex Method,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameVirtualMethods,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,GroupHelper,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,visit,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,getResourceName,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,rename,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,renameResourceNamesInCode,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,prepareRenameTypes,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,prepareRenameFields,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,prepareRenameMethodArgs,Cyclomatic complexity of the method is 14
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,renameMethod,Cyclomatic complexity of the method is 8
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initializeWindowsFormsFieldsAndProps,Cyclomatic complexity of the method is 19
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,getFieldRef,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,getVbHandler,Cyclomatic complexity of the method is 23
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initFieldEventHandlers,Cyclomatic complexity of the method is 21
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initTypeEventHandlers,Cyclomatic complexity of the method is 18
Complex Method,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,findWindowsFormsClassName,Cyclomatic complexity of the method is 10
Complex Method,de4dot.code.renamer,TypeNames,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeNames.cs,create,Cyclomatic complexity of the method is 9
Complex Method,de4dot.code.resources,BuiltInResourceData,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\BuiltInResourceData.cs,writeData,Cyclomatic complexity of the method is 19
Complex Method,de4dot.code.resources,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceReader.cs,read,Cyclomatic complexity of the method is 11
Complex Method,de4dot.code.resources,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceReader.cs,readResourceData,Cyclomatic complexity of the method is 20
Complex Method,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,Cyclomatic complexity of the method is 15
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,Decode,Cyclomatic complexity of the method is 19
Complex Method,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,Cyclomatic complexity of the method is 10
Long Parameter List,de4dot.code,Logger,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Logger.cs,Log,The method has 5 parameters. Parameters: canIgnore' sender' loggerEvent' format' args
Long Parameter List,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,deobfuscate,The method has 5 parameters. Parameters: method' cflowDeobfuscator' methodPrinter' isVerbose' isVV
Long Parameter List,de4dot.code,OneArgOption,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Option.cs,OneArgOption,The method has 5 parameters. Parameters: shortName' longName' description' typeName' action
Long Parameter List,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,desDecrypt,The method has 5 parameters. Parameters: data' start' len' key' iv
Long Parameter List,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,addInitializeArrayCode,The method has 5 parameters. Parameters: block' start' numToRemove' elementType' data
Long Parameter List,de4dot.code.deobfuscators,MemberRefBuilder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MemberReferenceBuilder.cs,method,The method has 5 parameters. Parameters: isInstance' name' declaringType' returnType' args
Long Parameter List,de4dot.code.deobfuscators,MethodStack,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodStack.cs,getLoadedType,The method has 5 parameters. Parameters: method' instructions' instrIndex' argIndexFromEnd' wasNewobj
Long Parameter List,de4dot.code.deobfuscators,ProxyCallFixer1,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,findProxyCall,The method has 5 parameters. Parameters: di' block' index' visited' stack
Long Parameter List,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,copy,The method has 5 parameters. Parameters: src' srcIndex' dst' dstIndex' size
Long Parameter List,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,getLoadedType,The method has 5 parameters. Parameters: gpp' method' instructions' instrIndex' wasNewobj
Long Parameter List,de4dot.code.deobfuscators.CodeFort,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyData.cs,TypeInfo,The method has 5 parameters. Parameters: baseType' name' dcNamespace' dcName' fieldInfos
Long Parameter List,de4dot.code.deobfuscators.CodeFort,AssemblyInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,AssemblyInfo,The method has 5 parameters. Parameters: data' resource' asmFullName' asmSimpleName' extension
Long Parameter List,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,compare,The method has 5 parameters. Parameters: a1' i1' a2' i2' len
Long Parameter List,de4dot.code.deobfuscators.CodeWall,AssemblyInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,AssemblyInfo,The method has 5 parameters. Parameters: data' extension' assemblyFullName' assemblySimpleName' isEntryPointAssembly
Long Parameter List,de4dot.code.deobfuscators.DeepSea,AssemblyInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,AssemblyInfo,The method has 5 parameters. Parameters: data' fullName' simpleName' extension' resource
Long Parameter List,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail,The method has 7 parameters. Parameters: magic2' magic3' keyCharOffs' cachedIndexOffs' flagsOffset' flag' keyDispl
Long Parameter List,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,getTheOnlyMethod,The method has 5 parameters. Parameters: type' typeName' methodName' returnType' parameters
Long Parameter List,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,The method has 5 parameters. Parameters: peImage' simpleDeobfuscator' dumpedMethods' tokenToNativeCode' unpackedNativeFile
Long Parameter List,de4dot.code.deobfuscators.ILProtector,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,copy,The method has 5 parameters. Parameters: src' srcIndex' dst' dstIndex' size
Long Parameter List,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt,The method has 5 parameters. Parameters: decrypter' type' dataOffset' encryptedSize' realSize
Long Parameter List,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The method has 6 parameters. Parameters: outBuf' outIndex' outLen' inBuf' inIndex' inLen
Long Parameter List,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,createProperty,The method has 5 parameters. Parameters: ownerType' name' propType' getter' setter
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findEncryptedResourceStreamType,The length of the parameter getManifestResourceStreamMethodTmp1 is 35.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findManifestResourceStreamMethods,The length of the parameter getManifestResourceStreamMethodTmp1 is 35.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findManifestResourceStreamMethods,The length of the parameter getManifestResourceStreamMethodTmp2 is 35.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,,The length of the parameter encryptedResourceSet_GetDefaultReader is 37.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,,The length of the parameter encryptedResourceReaderTypeDict is 31.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,,The length of the parameter encryptedResourceReaderType_fields is 34.
Long Identifier,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,,The length of the parameter encryptedResourceStreamType_fields is 34.
Long Identifier,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,,The length of the parameter foundCryptoObfuscatorAttribute is 30.
Long Identifier,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the parameter CompileAssemblyFromSourceBatch2 is 31.
Long Identifier,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,,The length of the parameter codeCompilerMethodCallRestorer is 30.
Long Identifier,de4dot.code.deobfuscators.Eazfuscator_NET,ResourceMethodsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\ResourceMethodsRestorer.cs,,The length of the parameter getManifestResourceStreamTypeResource is 37.
Long Identifier,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,The length of the parameter compileMethodHasConstant_0x70000000 is 35.
Long Identifier,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,,The length of the parameter initializeVirtualMembersCalled is 30.
Long Statement,de4dot.code,DumpedMethodsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\DumpedMethodsRestorer.cs,GetMethodBody,The length of the statement  "			return MethodBodyReader.Create(module' dm.code' dm.extraSections' parameters' dm.mhFlags' dm.mhMaxStack' dm.mhCodeSize' dm.mhLocalVarSigTok); " is 141.
Long Statement,de4dot.code,MethodPrinter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodPrinter.cs,print,The length of the statement  "					Logger.log(loggerEvent' "{0'-9} {1} // {2:X8}"' instrString' Utils.removeNewlines(operandString)' memberRef.MDToken.ToUInt32()); " is 128.
Long Statement,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,unpackNativeImage,The length of the statement  "						Logger.w("Could not load unpacked data. File: {0}' deobfuscator: {0}"' peImage.FileName ?? "(unknown filename)"' deob.TypeLong); " is 128.
Long Statement,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,findMethodTokens,The length of the statement  "					if (method.MethodSig.GetRetType().GetElementType() != ElementType.String && method.MethodSig.GetRetType().GetElementType() != ElementType.Object) " is 145.
Long Statement,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,findMethodTokens,The length of the statement  "					Logger.v("Adding string decrypter; token: {0:X8}' method: {1}"' method.MDToken.ToInt32()' Utils.removeNewlines(method.FullName)); " is 129.
Long Statement,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,findCliSecureAttribute,The length of the statement  "				if (Utils.StartsWith(type.FullName' "SecureTeam.Attributes.ObfuscatedByCliSecureAttribute"' StringComparison.Ordinal)) { " is 120.
Long Statement,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,findCliSecureAttribute,The length of the statement  "				else if (Utils.StartsWith(type.FullName' "SecureTeam.Attributes.ObfuscatedByAgileDotNetAttribute"' StringComparison.Ordinal)) { " is 127.
Long Statement,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,isOldHeader,The length of the statement  "			if ((uint)methodDefTable.StartOffset - peImage.rvaToOffset((uint)peImage.Cor20Header.MetaData.VirtualAddress) != codeHeader.methodDefTableOffset) " is 145.
Long Statement,de4dot.code.deobfuscators.Agile_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\ResourceDecrypter.cs,findResourceType,The length of the statement  "				var resolveHandler = DotNetUtils.getMethod(type' "System.Reflection.Assembly"' "(System.Object'System.ResolveEventArgs)"); " is 122.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,Csvm,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\Csvm.cs,getVmOpCodeHandlerDetector,The length of the statement  "				deobfuscatorContext.setData(dataKey' dict = new Dictionary<string' VmOpCodeHandlerDetector>(StringComparer.OrdinalIgnoreCase)); " is 127.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,fixOperand,The length of the statement  "				return fixLoadStoreFieldInstruction(instr' ((LoadFieldAddressOperand)vmOperand).token' OpCodes.Ldsflda' OpCodes.Ldflda); " is 120.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,endfinally_check,The length of the statement  "			return DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MethodInfo System.Type::GetMethod(System.String'System.Reflection.BindingFlags)"); " is 152.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,ldtoken_check,The length of the statement  "			return DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MemberInfo System.Reflection.Module::ResolveMember(System.Int32)"); " is 137.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,leave_check,The length of the statement  "			return !DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MethodBase System.Reflection.Module::ResolveMethod(System.Int32)") && " is 140.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,leave_check,The length of the statement  "				!DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MemberInfo System.Reflection.Module::ResolveMember(System.Int32)"); " is 131.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,ret_check,The length of the statement  "			return DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MethodBase System.Reflection.Module::ResolveMethod(System.Int32)"); " is 137.
Long Statement,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,throw_check,The length of the statement  "			return !DotNetUtils.callsMethod(info.ExecuteMethod' "System.Reflection.MethodInfo System.Type::GetMethod(System.String'System.Reflection.BindingFlags)"); " is 153.
Long Statement,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The length of the statement  "				xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl]; " is 121.
Long Statement,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The length of the statement  "				xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl]; " is 121.
Long Statement,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,findSection,The length of the statement  "				if (section.VirtualAddress <= rva && rva < section.VirtualAddress + Math.Max(section.VirtualSize' section.SizeOfRawData)) " is 121.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,createInitializeArrayMethod,The length of the statement  "				var runtimeHelpersType = DotNetUtils.findOrCreateTypeRef(module' module.CorLibTypes.AssemblyRef' "System.Runtime.CompilerServices"' "RuntimeHelpers"' false); " is 157.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,createInitializeArrayMethod,The length of the statement  "				var systemArrayType = DotNetUtils.findOrCreateTypeRef(module' module.CorLibTypes.AssemblyRef' "System"' "Array"' false); " is 120.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,createInitializeArrayMethod,The length of the statement  "				var runtimeFieldHandleType = DotNetUtils.findOrCreateTypeRef(module' module.CorLibTypes.AssemblyRef' "System"' "RuntimeFieldHandle"' true); " is 139.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,createInitializeArrayMethod,The length of the statement  "				initializeArrayMethod = module.UpdateRowId(new MemberRefUser(module' "InitializeArray"' methodSig' runtimeHelpersType.TypeDefOrRef)); " is 133.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,addInitializeArrayCode,The length of the statement  "			block.replace(index++' numToRemove' Instruction.CreateLdcI4(data.Length / elementType.ToTypeSig().ElementType.GetPrimitiveSize())); " is 131.
Long Statement,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,createOurType,The length of the statement  "			ourType = new TypeDefUser(""' string.Format("<PrivateImplementationDetails>{0}"' getModuleId())' module.CorLibTypes.Object.TypeDefOrRef); " is 137.
Long Statement,de4dot.code.deobfuscators,MethodCallRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodCallRestorerBase.cs,createGetManifestResourceStream1,The length of the statement  "			var newMethod = builder.instanceMethod("GetManifestResourceStream"' assemblyType.TypeDefOrRef' streamType' builder.String); " is 123.
Long Statement,de4dot.code.deobfuscators,MethodCallRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodCallRestorerBase.cs,createGetManifestResourceStream2,The length of the statement  "			var newMethod = builder.instanceMethod("GetManifestResourceStream"' assemblyType.TypeDefOrRef' streamType' typeType' builder.String); " is 133.
Long Statement,de4dot.code.deobfuscators,ProxyCallFixer1,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,fixBrokenCalls,The length of the statement  "					Logger.w("Holy obfuscator bugs' Batman! Found a proxy delegate call with no instance push in {0:X8}. Replacing it with a throw..."' obfuscatedMethod.MDToken.ToInt32()); " is 168.
Long Statement,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,restoreFieldTypes,The length of the statement  "				Logger.v("Field {0:X8}: type {1} ({2:X8})"' updatedField.token' Utils.removeNewlines(updatedField.newFieldType.FullName)' updatedField.newFieldType.MDToken.ToInt32()); " is 167.
Long Statement,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateMethod,The length of the statement  "							addMethodArgType(method' getParameter(methodParams' ldInstr)' DotNetUtils.getArg(calledMethodParams' calledMethodParamIndex)); " is 126.
Long Statement,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateFields,The length of the statement  "						calledMethodArgs = DotNetUtils.replaceGenericParameters(calledMethodDefOrRef.DeclaringType.TryGetGenericInstSig()' calledMethodSpec' calledMethodArgs); " is 151.
Long Statement,de4dot.code.deobfuscators,ValueInlinerBase<TValue>,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ValueInlinerBase.cs,add,The length of the statement  "				throw new ApplicationException(string.Format("Handler for method {0:X8} has already been added"' method.MDToken.ToInt32())); " is 124.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ConstantsDecrypter.cs,deobfuscate,The length of the statement  "					initializedDataCreator.addInitializeArrayCode(block' info.start' info.len' info.arrayType.Next.ToTypeDefOrRef()' decrypted); " is 124.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,scanForObfuscator,The length of the statement  "			methodsDecrypter = new MethodsDecrypter(module' resourceDecrypterCreator.create()' DeobfuscatedFile.DeobfuscatorContext); " is 121.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,checkVersion,The length of the statement  "			if (versionField != null && versionField.IsLiteral && versionField.Constant != null && versionField.Constant.Value is string) { " is 127.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				int32ValueInliner.add(constantsDecrypter.Int32Decrypter' (method' gim' args) => constantsDecrypter.decryptInt32((int)args[0])); " is 127.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				int64ValueInliner.add(constantsDecrypter.Int64Decrypter' (method' gim' args) => constantsDecrypter.decryptInt64((int)args[0])); " is 127.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				singleValueInliner.add(constantsDecrypter.SingleDecrypter' (method' gim' args) => constantsDecrypter.decryptSingle((int)args[0])); " is 130.
Long Statement,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				doubleValueInliner.add(constantsDecrypter.DoubleDecrypter' (method' gim' args) => constantsDecrypter.decryptDouble((int)args[0])); " is 130.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,readMethodRef,The length of the statement  "			var mr = new MemberRefUser(module' method.Name' method.MethodSig.Clone()' babelMethodRef.DeclaringType.ToTypeDefOrRef()); " is 121.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Ldtoken' OpCodes.Ldc_I4' OpCodes.Ldc_I4' OpCodes.Ldtoken' OpCodes.Call); " is 138.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,The length of the statement  "				else if ((instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Ldtoken' OpCodes.Ldc_I4' OpCodes.Ldtoken' OpCodes.Call)) != null) { " is 139.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,findDelegateCreator,The length of the statement  "					if (!DotNetUtils.isMethod(method' "System.Void"' "(System.RuntimeTypeHandle'System.Int32'System.RuntimeFieldHandle)") && " is 120.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,findDelegateCreator,The length of the statement  "						!DotNetUtils.isMethod(method' "System.Void"' "(System.RuntimeTypeHandle'System.Int32'System.Int32'System.RuntimeFieldHandle)")) " is 127.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,getProxyCreatorType,The length of the statement  "				if (DotNetUtils.isMethod(calledMethod' "System.Void"' "(System.Reflection.FieldInfo'System.Type'System.Reflection.MethodInfo)")) " is 128.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,getProxyCreatorType,The length of the statement  "				if (DotNetUtils.isMethod(calledMethod' "System.Void"' "(System.Reflection.FieldInfo'System.Type'System.Reflection.ConstructorInfo)")) " is 133.
Long Statement,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkNested,The length of the statement  "				var decrypterBuilderMethod = DotNetUtils.getMethod(nested' "System.Reflection.Emit.MethodBuilder"' "(System.Reflection.Emit.TypeBuilder)"); " is 139.
Long Statement,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,getOffsetMagic,The length of the statement  "				if (calledMethod.FullName != "System.Void System.Reflection.Emit.ILGenerator::Emit(System.Reflection.Emit.OpCode'System.Int32)") " is 128.
Long Statement,de4dot.code.deobfuscators.Babel_NET,ReflectionToDot10MethodCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,doCall,The length of the statement  "				else if (sig != null && sig.HasThis && calledMethod.DeclaringType.FullName == "System.Reflection.Emit.ILGenerator" && calledMethod.Name == "Emit") { " is 148.
Long Statement,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,checkType,The length of the statement  "			if (DotNetUtils.getMethod(type' "System.Byte[]"' "(System.Byte[]'System.String'System.String'System.Int32'System.String'System.Int32)") == null) " is 144.
Long Statement,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,decrypt,The length of the statement  "			var key = new Rfc2898DeriveBytes(password.passphrase' Encoding.UTF8.GetBytes(password.salt)' iterations).GetBytes(numBits / 8); " is 127.
Long Statement,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,getAssemblyInfos,The length of the statement  "				infos.Add(new AssemblyInfo(asmData' resource' mod.Assembly.FullName' mod.Assembly.Name.String' DeobUtils.getExtension(mod.Kind))); " is 130.
Long Statement,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,checkMethods,The length of the statement  "				if (DotNetUtils.isMethod(method' "System.MulticastDelegate"' "(System.Type'System.Reflection.MethodInfo'System.Int32)")) " is 120.
Long Statement,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findEncryptedResourceStreamType,The length of the statement  "				if (!findManifestResourceStreamMethods(type' out getManifestResourceStreamMethodTmp1' out getManifestResourceStreamMethodTmp2)) " is 127.
Long Statement,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findXxteaMethod,The length of the statement  "				else if (DotNetUtils.isMethod(method' "System.Void"' "(System.UInt32[]'System.UInt32[]'System.UInt32'System.UInt32'System.UInt32'System.UInt32'System.UInt32'System.UInt32'System.UInt32'System.UInt32'System.UInt32)")) { " is 218.
Long Statement,de4dot.code.deobfuscators.CodeVeil,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\TamperDetection.cs,callsMainTypeTamperCheckMethod,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Ldtoken' OpCodes.Call' OpCodes.Call' OpCodes.Ldc_I8' OpCodes.Call); " is 133.
Long Statement,de4dot.code.deobfuscators.CodeWall,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,getMainResourceKey,The length of the statement  "				return BitConverter.ToString(new MD5CryptoServiceProvider().ComputeHash(new ASCIIEncoding().GetBytes(keyInfo))).Replace("-"' ""); " is 129.
Long Statement,de4dot.code.deobfuscators.CodeWall,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,decryptAllAssemblies,The length of the statement  "				assemblyInfos.Add(new AssemblyInfo(assemblyData' DeobUtils.getExtension(theModule.Kind)' theModule.Assembly.FullName' theModule.Assembly.Name.String' isMain)); " is 159.
Long Statement,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,initializeStringDecrypter,The length of the statement  "				staticStringInliner.add(info.Method' (method' gim' args) => stringDecrypter.decrypt(method' (int)args[0]' (int)args[1]' (int)args[2])); " is 135.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\AssemblyResolver.cs,checkInitMethod,The length of the statement  "				if (methodRef == null || methodRef.FullName != "System.Void System.ResolveEventHandler::.ctor(System.Object'System.IntPtr)") " is 124.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,CoUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\CoUtils.cs,getResource,The length of the statement  "					resource = DotNetUtils.getResource(module' Encoding.UTF8.GetString(Convert.FromBase64String(name))) as EmbeddedResource; " is 120.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,scanForObfuscator,The length of the statement  "			foundObfuscatorUserString = Utils.StartsWith(module.ReadUserString(0x70000001)' "\u0011\"3D9B94A98B-76A8-4810-B1A0-4BE7C4F9C98D"' StringComparison.Ordinal); " is 156.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				int32ValueInliner.add(constantsDecrypter.Int32Decrypter' (method' gim' args) => constantsDecrypter.decryptInt32((int)args[0])); " is 127.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				int64ValueInliner.add(constantsDecrypter.Int64Decrypter' (method' gim' args) => constantsDecrypter.decryptInt64((int)args[0])); " is 127.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				singleValueInliner.add(constantsDecrypter.SingleDecrypter' (method' gim' args) => constantsDecrypter.decryptSingle((int)args[0])); " is 130.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				doubleValueInliner.add(constantsDecrypter.DoubleDecrypter' (method' gim' args) => constantsDecrypter.decryptDouble((int)args[0])); " is 130.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,dumpEmbeddedAssemblies,The length of the statement  "					dumpEmbeddedFile(info.symbolsResource' info.assemblyName' ".pdb"' string.Format("Embedded pdb: {0}"' info.assemblyName)); " is 121.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,dumpEmbeddedFile,The length of the statement  "			DeobfuscatedFile.createAssemblyFile(resourceDecrypter.decrypt(resource.GetResourceStream())' Utils.getAssemblySimpleName(assemblyName)' extension); " is 147.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,checkCctor,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Ldc_I4' OpCodes.Ldc_I4' OpCodes.Ldc_I4' OpCodes.Call); " is 120.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,findDesktopOrCompactFrameworkV1,The length of the statement  "					if (!DotNetUtils.callsMethod(method' "System.Void"' "(System.Array'System.Int32'System.Array'System.Int32'System.Int32)")) " is 122.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceResolver.cs,mergeResources,The length of the statement  "			DeobUtils.decryptAndAddResources(module' resource.Name.String' () => resourceDecrypter.decrypt(resource.Data.CreateStream())); " is 126.
Long Statement,de4dot.code.deobfuscators.CryptoObfuscator,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceResolver.cs,checkSetupMethod,The length of the statement  "				if (methodRef == null || methodRef.FullName != "System.Void System.ResolveEventHandler::.ctor(System.Object'System.IntPtr)") " is 124.
Long Statement,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Newarr' OpCodes.Dup' OpCodes.Ldtoken' OpCodes.Call' OpCodes.Stsfld); " is 134.
Long Statement,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,The length of the statement  "				if (calledMethod == null || calledMethod.FullName != "System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array'System.RuntimeFieldHandle)") " is 171.
Long Statement,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The length of the statement  "					if (calledMethod == null || calledMethod.FullName != "System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array'System.RuntimeFieldHandle)") " is 171.
Long Statement,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV3Old,The length of the statement  "			return DotNetUtils.callsMethod(method' "System.Int32 System.IO.Stream::Read(System.Byte[]'System.Int32'System.Int32)") && " is 121.
Long Statement,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkResolverInitMethodInternal,The length of the statement  "			return DotNetUtils.callsMethod(resolverInitMethod' "System.Void System.AppDomain::add_AssemblyResolve(System.ResolveEventHandler)"); " is 132.
Long Statement,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkHandlerV4,The length of the statement  "				if (!DotNetUtils.isMethod(decryptMethodTmp' "System.Reflection.Assembly"' "(System.RuntimeFieldHandle'System.Int32'System.Int32)")) " is 131.
Long Statement,de4dot.code.deobfuscators.DeepSea,CastDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\CastDeobfuscator.cs,deobfuscate,The length of the statement  "							addCast(block' castIndex' i + 1' instr.Instruction.GetArgumentType(blocks.Method.MethodSig' blocks.Method.DeclaringType)); " is 122.
Long Statement,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,initialize,The length of the statement  "						var newField = module.UpdateRowId(new FieldDefUser(structField.Name' structField.FieldSig.Clone()' structField.Attributes)); " is 124.
Long Statement,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,checkMethods,The length of the statement  "				if (type.BaseType != null && type.BaseType.FullName == "System.Object" && method.Name == ".ctor" && method.MethodSig.GetParamCount() == 0) " is 138.
Long Statement,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,checkResolverInitMethodInternal,The length of the statement  "			return DotNetUtils.callsMethod(resolverInitMethod' "System.Void System.AppDomain::add_ResourceResolve(System.ResolveEventHandler)"); " is 132.
Long Statement,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,decryptResource,The length of the statement  "			string name = string.Format("Embedded data field {0:X8} RVA {1:X8}"' resourceField.MDToken.ToInt32()' (uint)resourceField.RVA); " is 127.
Long Statement,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,removeInitializeArrayCall,The length of the statement  "				if (calledMethod.ToString() != "System.Void System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(System.Array'System.RuntimeFieldHandle)") " is 149.
Long Statement,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,getArrayInfo,The length of the statement  "					var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Newarr' OpCodes.Dup' OpCodes.Ldtoken' OpCodes.Call' OpCodes.Stsfld); " is 134.
Long Statement,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findEncryptedStrings,The length of the statement  "					var instrs = DotNetUtils.getInstructions(initMethod.Body.Instructions' i' OpCodes.Ldtoken' OpCodes.Call' OpCodes.Stsfld); " is 121.
Long Statement,de4dot.code.deobfuscators.Dotfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "				staticStringInliner.add(info.method' (method' gim' args) => stringDecrypter.decrypt(method' (string)args[0]' (int)args[1])); " is 124.
Long Statement,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,findStringDecrypterMethods,The length of the statement  "			foreach (var method in DotNetUtils.findMethods(type.Methods' "System.String"' new string[] { "System.String"' "System.Int32" })) { " is 130.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromDom1         = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.CodeDomProvider"' "CompileAssemblyFromDom"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.CodeDom.CodeCompileUnit[]"); " is 258.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromFile1        = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.CodeDomProvider"' "CompileAssemblyFromFile"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String[]"); " is 242.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromSource1      = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.CodeDomProvider"' "CompileAssemblyFromSource"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String[]"); " is 244.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromDom2         = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromDom"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.CodeDom.CodeCompileUnit"); " is 254.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromDomBatch2    = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromDomBatch"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.CodeDom.CodeCompileUnit[]"); " is 261.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromFile2        = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromFile"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String"); " is 238.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromFileBatch2   = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromFileBatch"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String[]"); " is 245.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromSource2      = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromSource"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String"); " is 240.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The length of the statement  "				var CompileAssemblyFromSourceBatch2 = getTheOnlyMethod(nestedType' "System.CodeDom.Compiler.ICodeCompiler"' "CompileAssemblyFromSourceBatch"' "System.CodeDom.Compiler.CompilerResults"' "System.CodeDom.Compiler.CompilerParameters'System.String[]"); " is 247.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_CodeDomProvider_CompileAssemblyFromDom,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromDom"' CodeDomProvider' CompilerResults' CompilerParameters' CodeCompileUnitArray)); " is 141.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_CodeDomProvider_CompileAssemblyFromFile,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromFile"' CodeDomProvider' CompilerResults' CompilerParameters' StringArray)); " is 133.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_CodeDomProvider_CompileAssemblyFromSource,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromSource"' CodeDomProvider' CompilerResults' CompilerParameters' StringArray)); " is 135.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromDom,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromDom"' ICodeCompiler' CompilerResults' CompilerParameters' CodeCompileUnit)); " is 134.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromDomBatch,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromDomBatch"' ICodeCompiler' CompilerResults' CompilerParameters' CodeCompileUnitArray)); " is 144.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromFile,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromFile"' ICodeCompiler' CompilerResults' CompilerParameters' builder.String)); " is 134.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromFileBatch,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromFileBatch"' ICodeCompiler' CompilerResults' CompilerParameters' StringArray)); " is 136.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromSource,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromSource"' ICodeCompiler' CompilerResults' CompilerParameters' builder.String)); " is 136.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,CodeCompilerMethodCallRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\CodeCompilerMethodCallRestorer.cs,add_ICodeCompiler_CompileAssemblyFromSourceBatch,The length of the statement  "			add(oldMethod' builder.instanceMethod("CompileAssemblyFromSourceBatch"' ICodeCompiler' CompilerResults' CompilerParameters' StringArray)); " is 138.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod1,The length of the statement  "			return binOp3(binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[0].DeclaringType.MDToken.ToInt32()' efConstMethods[4].DeclaringType.MDToken.ToInt32()))' constMethod6()); " is 199.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod2,The length of the statement  "			return binOp1(efConstMethods[2].DeclaringType.MDToken.ToInt32()' efConstMethods[3].DeclaringType.MDToken.ToInt32() ^ binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[5].DeclaringType.MDToken.ToInt32()' constMethod4()))); " is 251.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod3,The length of the statement  "			return binOp3(binOp1(constMethod2() ^ i1' efConstMethods[3].DeclaringType.MDToken.ToInt32())' binOp2(efConstMethods[0].DeclaringType.MDToken.ToInt32() ^ efConstMethods[5].DeclaringType.MDToken.ToInt32()' i2)); " is 209.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod4,The length of the statement  "			return binOp3(efConstMethods[3].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[0].DeclaringType.MDToken.ToInt32()' binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[5].DeclaringType.MDToken.ToInt32()))))); " is 352.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod5,The length of the statement  "			return binOp2(binOp2(constMethod3()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' constMethod2()))' efConstMethods[5].DeclaringType.MDToken.ToInt32()); " is 164.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod6,The length of the statement  "			return binOp1(efConstMethods[5].DeclaringType.MDToken.ToInt32()' binOp3(binOp2(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[0].DeclaringType.MDToken.ToInt32())' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32() ^ i3' constMethod5()))); " is 263.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Deobfuscator.cs,stringDecrypterBugWorkaround,The length of the statement  "			var newType = module.UpdateRowId(new TypeDefUser(Guid.NewGuid().ToString("B")' module.CorLibTypes.Object.TypeDefOrRef)); " is 120.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Deobfuscator.cs,stringDecrypterBugWorkaround,The length of the statement  "			var newMethod = module.UpdateRowId(new MethodDefUser("x"' MethodSig.CreateStatic(module.CorLibTypes.Void)' 0' MethodAttributes.Static | MethodAttributes.HideBySig)); " is 165.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,checkDecrypterMethod,The length of the statement  "				if (calledMethod != null && calledMethod.FullName == "System.IO.Stream System.Reflection.Assembly::GetManifestResourceStream(System.String)") " is 141.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findResourceFromStringBuilder,The length of the statement  "			int endIndex = EfUtils.findOpCodeIndex(method' startIndex' Code.Call' "System.String System.Text.StringBuilder::ToString()"); " is 125.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findResourceFromStringBuilder,The length of the statement  "				if (instr.OpCode.Code == Code.Call && instr.Operand.ToString() == "System.Text.StringBuilder System.Text.StringBuilder::Append(System.Char)") { " is 143.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInts,The length of the statement  "					if (field == null || field.DeclaringType != stringMethod.DeclaringType || field.FieldType.GetElementType() != ElementType.I4) " is 125.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInts,The length of the statement  "					if (field == null || field.DeclaringType != stringMethod.DeclaringType || field.FieldType.GetElementType() != ElementType.I4) " is 125.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findCallReadInt16,The length of the statement  "			return findCall(stringMethod' ref index' streamHelperType == null ? "System.Int16 System.IO.BinaryReader::ReadInt16()" : streamHelperType.readInt16Method.FullName); " is 164.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findCallReadInt32,The length of the statement  "			return findCall(stringMethod' ref index' streamHelperType == null ? "System.Int32 System.IO.BinaryReader::ReadInt32()" : streamHelperType.readInt32Method.FullName); " is 164.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findCallReadBytes,The length of the statement  "			return findCall(stringMethod' ref index' streamHelperType == null ? "System.Byte[] System.IO.BinaryReader::ReadBytes(System.Int32)" : streamHelperType.readBytesMethod.FullName); " is 177.
Long Statement,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findCallGetFrame,The length of the statement  "			return findCall(method' ref index' "System.Diagnostics.StackFrame System.Diagnostics.StackTrace::GetFrame(System.Int32)"); " is 122.
Long Statement,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,The length of the statement  "				bool callsReverse = DotNetUtils.callsMethod(methodsDecrypter.Method' "System.Void System.Array::Reverse(System.Array)"); " is 120.
Long Statement,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,encryptNativeMethods,The length of the statement  "				Logger.v("Native method {0:X8}' code RVA {1:X8}"' new MDToken(Table.Method' moduleWriter.MetaData.GetRid(method)).Raw' codeRva); " is 128.
Long Statement,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,findDnrCompileMethod,The length of the statement  "				if (!DotNetUtils.isMethod(method' "System.UInt32"' "(System.UInt64&'System.IntPtr'System.IntPtr'System.UInt32'System.IntPtr&'System.UInt32&)")) " is 143.
Long Statement,de4dot.code.deobfuscators.Goliath_NET,ArrayValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\ArrayValueInliner.cs,inlineReturnValues,The length of the statement  "				initializedDataCreator.addInitializeArrayCode(block' callResult.callStartIndex' num' module.CorLibTypes.Byte.TypeDefOrRef' arrayData); " is 134.
Long Statement,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,decrypt,The length of the statement  "				decryptedData[i] = (byte)(encryptedData[KEY_LEN + i] ^ encryptedData[(encryptedData[j] + encryptedData[ki]) % (KEY_LEN - 1)]); " is 126.
Long Statement,de4dot.code.deobfuscators.MaxtoCode,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decryptMethods,The length of the statement  "				var mbHeader = MethodBodyParser.parseMethodBody(MemoryImageStream.Create(info.body)' out dm.code' out dm.extraSections); " is 120.
Long Statement,de4dot.code.deobfuscators.MaxtoCode,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decryptStrings,The length of the statement  "					Logger.v("Decrypted string: {0}"' Utils.toCsharpString(Encoding.Unicode.GetString(fileData' usHeapOffsetString' stringDataLength - 1))); " is 136.
Long Statement,de4dot.code.deobfuscators.MaxtoCode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\StringDecrypter.cs,findDecryptMethod,The length of the statement  "				if (!DotNetUtils.callsMethod(method' "System.String System.Runtime.InteropServices.Marshal::PtrToStringAnsi(System.IntPtr)")) " is 125.
Long Statement,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initialize,The length of the statement  "				reader = new BinaryReader(new FileStream(decrypterMethod.DeclaringType.Module.Location' FileMode.Open' FileAccess.Read' FileShare.Read)); " is 137.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AssemblyResolver.cs,removeDecryptedResource,The length of the statement  "				throw new ApplicationException(string.Format("Could not remove resource {0}"' Utils.toCsharpString(info.resourceName))); " is 120.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,getResolverHandlers,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i' OpCodes.Call' OpCodes.Ldnull' OpCodes.Ldftn' OpCodes.Newobj' OpCodes.Callvirt); " is 137.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,findDecrypterMethod,The length of the statement  "			var methods = new List<MethodDef>(DotNetUtils.findMethods(stringsEncodingClass.Methods' "System.String"' new string[] { "System.Int32" })); " is 139.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findFirstBlocks,The length of the statement  "			int start = findCallMethod(block' index' true' (calledMethod) => calledMethod.ToString() == "System.Reflection.Assembly System.Reflection.Assembly::GetExecutingAssembly()"); " is 173.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findFirstBlocks,The length of the statement  "			index = findCallMethod(block' index' false' (calledMethod) => calledMethod.ToString() == "System.String System.Reflection.Assembly::get_Location()"); " is 149.
Long Statement,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,removeTamperProtection,The length of the statement  "					Logger.w("Could not remove tamper protection code: {0} ({1:X8})"' Utils.removeNewlines(blocks.Method)' blocks.Method.MDToken.ToUInt32()); " is 137.
Long Statement,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,checkCctor,The length of the statement  "				var instrs = DotNetUtils.getInstructions(instructions' i + 1' OpCodes.Newarr' OpCodes.Dup' OpCodes.Ldtoken' OpCodes.Call); " is 122.
Long Statement,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,deobfuscateBegin,The length of the statement  "			staticStringInliner.add(stringDecrypter.Method' (method' gim' args) => stringDecrypter.decrypt((string)args[0]' (int)args[1])); " is 127.
Long Statement,de4dot.code.renamer.asmmodules,MTypeDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\TypeDef.cs,instantiateVirtualMembers,The length of the statement  "					virtualMethodInstances.initializeFrom(baseType.typeDef.virtualMethodInstances' baseType.typeRef.TryGetGenericInstSig()); " is 120.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,renameGenericParams,The length of the statement  "					Logger.v("GenParam: {0} => {1}"' Utils.removeNewlines(info.oldFullName)' Utils.removeNewlines(param.GenericParam.FullName)); " is 124.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,renameMethods,The length of the statement  "						Logger.v("Name: {0} => {1}"' Utils.removeNewlines(methodInfo.oldFullName)' Utils.removeNewlines(methodDef.MethodDef.FullName)); " is 127.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,renameMethods,The length of the statement  "								Logger.v("Param ({0}/{1}): {2} => {3}"' param.ParameterDef.MethodSigIndex + 1' methodDef.MethodDef.MethodSig.GetParamCount()' Utils.removeNewlines(paramInfo.oldName)' Utils.removeNewlines(paramInfo.newName)); " is 208.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameMemberDefs,The length of the statement  "				else if (group.hasGetterOrSetterPropertyMethod() && getPropertyMethodType(group.Methods[0]) != PropertyMethodType.Other) " is 120.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameProperty,The length of the statement  "				newPropName = getAvailableName(propPrefix' trySameName' group' (group2' newName) => isPropertyAvailable(group2' newName)); " is 122.
Long Statement,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameEntryPoints,The length of the statement  "					Logger.w(string.Format("Could not find entry point. Module: {0}' Method: {1}"' module.ModuleDefMD.Location' Utils.removeNewlines(entryPoint))); " is 143.
Long Statement,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,rename,The length of the statement  "					case "System.IO.UnmanagedMemoryStream System.Resources.ResourceManager::GetStream(System.String'System.Globalization.CultureInfo)": " is 131.
Long Statement,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,rename,The length of the statement  "					Logger.v("Renamed resource key {0} => {1}"' Utils.toCsharpString(info.element.Name)' Utils.toCsharpString(info.newName)); " is 121.
Long Statement,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,renameResourceNamesInCode,The length of the statement  "						Logger.v("Possible resource name in code: '{0}' => '{1}' in method {2}"' Utils.removeNewlines(codeString)' newName' Utils.removeNewlines(method)); " is 146.
Long Statement,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,renameResourceNamesInCode,The length of the statement  "						Logger.v("Renamed resource string in code: '{0}' => '{1}' ({2})"' Utils.removeNewlines(codeString)' newName' Utils.removeNewlines(method)); " is 139.
Long Statement,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,isCallingResourceManagerCtor,The length of the statement  "				if (newobj.Operand.ToString() != "System.Void System.Resources.ResourceManager::.ctor(System.String'System.Reflection.Assembly)") " is 129.
Long Statement,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,prepareRenameMethods2,The length of the statement  "				prepareRenameGenericParams(methodDef.GenericParams' checker' methodDef.Owner == null ? null : methodDef.Owner.GenericParams); " is 125.
Long Statement,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initFieldEventHandlers,The length of the statement  "					memberInfos.method(handlerMethod).suggestedName = string.Format("{0}_{1}"' memberInfos.field(fieldDef).newName' eventName); " is 123.
Long Statement,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The length of the statement  "			var formatter = new BinaryFormatter(null' new StreamingContext(StreamingContextStates.File | StreamingContextStates.Persistence)); " is 130.
Complex Conditional,de4dot.code.deobfuscators.Agile_NET,CliSecureRtType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CliSecureRtType.cs,find2,The conditional expression  "!fieldTypes.exactly(requiredFields1) && !fieldTypes.exactly(requiredFields2) &&  						!fieldTypes.exactly(requiredFields3) && !fieldTypes.exactly(requiredFields4)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Agile_NET,StackFrameHelper,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\StackFrameHelper.cs,find,The conditional expression  "sig != null && method.IsStatic && method.HasBody &&  						sig.Params.Count == 2 && !method.HasGenericParameters &&  						!DotNetUtils.hasReturnValue(method) &&  						sig.Params[0].GetFullName() == "System.Exception" &&  						sig.Params[1].GetFullName() == "System.Object[]""  is complex.
Complex Conditional,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,checkVersion,The conditional expression  "versionField != null && versionField.IsLiteral && versionField.Constant != null && versionField.Constant.Value is string"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Babel_NET,ReflectionToDot10MethodCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,doCall,The conditional expression  "sig != null && sig.HasThis && calledMethod.DeclaringType.FullName == "System.Reflection.Emit.ILGenerator" && calledMethod.Name == "Emit""  is complex.
Complex Conditional,de4dot.code.deobfuscators.CodeVeil,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\Deobfuscator.cs,deobfuscateEnd,The conditional expression  "!type.HasNestedTypes && !type.HasProperties && !type.HasEvents && !type.HasFields"  is complex.
Complex Conditional,de4dot.code.deobfuscators.CryptoObfuscator,AntiDebugger,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\AntiDebugger.cs,find,The conditional expression  "!containsString(method' "debugger is activ") &&  					!containsString(method' "debugger is running") &&  					!containsString(method' "Debugger detected") &&  					!containsString(method' "Debugger was detected") &&  					!containsString(method' "{0} was detected") &&  					!containsString(method' "run under")"  is complex.
Complex Conditional,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,emulateInstructions,The conditional expression  "!foundOpCodes.ContainsKey(Code.Brtrue) && !foundOpCodes.ContainsKey(Code.Brtrue_S) &&  					!foundOpCodes.ContainsKey(Code.Brfalse) && !foundOpCodes.ContainsKey(Code.Brfalse_S)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,checkMethods,The conditional expression  "type.BaseType != null && type.BaseType.FullName == "System.Object" && method.Name == ".ctor" && method.MethodSig.GetParamCount() == 0"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,findCodeDomMethods,The conditional expression  "CompileAssemblyFromDom1 == null && CompileAssemblyFromFile1 == null &&  					CompileAssemblyFromSource1 == null && CompileAssemblyFromDom2 == null &&  					CompileAssemblyFromDomBatch2 == null && CompileAssemblyFromFile2 == null &&  					CompileAssemblyFromFileBatch2 == null && CompileAssemblyFromSource2 == null &&  					CompileAssemblyFromSourceBatch2 == null"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,ResourceMethodsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\ResourceMethodsRestorer.cs,find,The conditional expression  "getStream2 == null && getNames == null && bitmapCtor == null && iconCtor == null"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,StreamHelperType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,StreamHelperType,The conditional expression  "method.IsStatic || method.Body == null || method.IsPrivate || method.GenericParameters.Count > 0"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals11) &&  				checkTypeFields(fields11)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals13) &&  				checkTypeFields(fields13)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 150 &&  				decryptStringMethod.Body.MaxStack <= 200 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals14) &&  				checkTypeFields(fields14)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals24) &&  				checkTypeFields(fields24)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals26) &&  				checkTypeFields(fields26)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals27) &&  				checkTypeFields(fields27)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals28) &&  				checkTypeFields(fields28)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals29) &&  				checkTypeFields(fields29)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals30) &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals30) &&  				checkTypeFields(fields30)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals31) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals31) &&  				checkTypeFields(fields31)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals32) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals32) &&  				checkTypeFields(fields32)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 1 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					hasConstantM2 &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33_149) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33_149) &&  					checkTypeFields2(fields33_149)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The conditional expression  "otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals35) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					decryptStringMethod.Body.ExceptionHandlers.Count >= 2 &&  					new LocalTypes(decryptStringMethod).all(locals35) &&  					checkTypeFields2(fields35)"  is complex.
Complex Conditional,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The conditional expression  "clrVerMajor <= 0 || clrVerMajor >= 20 || clrVerMinor >= 20 || clrVerBuild >= 1000000"  is complex.
Complex Conditional,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,hasEmptyClassesInEveryNamespace,The conditional expression  "type.Name != "" || type.IsPublic || type.HasFields || type.HasMethods || type.HasProperties || type.HasEvents"  is complex.
Complex Conditional,de4dot.code.deobfuscators.Spices_Net,SpicesMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\SpicesMethodCallInliner.cs,checkMethodsType,The conditional expression  "type.HasProperties || type.HasEvents || type.HasFields || type.HasNestedTypes"  is complex.
Complex Conditional,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,prepareRenameMethodArgs,The conditional expression  "(methodDef.Property != null && methodDef == methodDef.Property.SetMethod) ||  				(methodDef.Event != null && (methodDef == methodDef.Event.AddMethod || methodDef == methodDef.Event.RemoveMethod))"  is complex.
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Virtual Method Call from Constructor,de4dot.code.renamer,TypeNameCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\NameCreators.cs,TypeNameCreator,The constructor "TypeNameCreator" calls a virtual method "createNameCreator".
Empty Catch Block,de4dot.code.AssemblyClient,AssemblyClient,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClient.cs,waitConnected,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,AssemblyClient,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClient.cs,Dispose,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,AssemblyClient,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClient.cs,Dispose,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,loadServer,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,loadServer,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,Dispose,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,unloadAppDomain,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,unloadAppDomain,The method has an empty catch block.
Empty Catch Block,de4dot.code.AssemblyClient,NewProcessAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewProcessAssemblyServerLoader.cs,Dispose,The method has an empty catch block.
Empty Catch Block,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,unpackNativeImage,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt2,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,detect,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,detect,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators,MethodStack,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodStack.cs,getPushedArgInstructions,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.Babel_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\MethodsDecrypter.cs,getFile,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.CryptoObfuscator,CoUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\CoUtils.cs,getResource,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.CryptoObfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\StringDecrypter.cs,getResourceName,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,initializeNameAndExtension,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.ILProtector,DecrypterV106,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,getMethodsData,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.ILProtector,DecrypterV106,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,getMethodsData,The method has an empty catch block.
Empty Catch Block,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The method has an empty catch block.
Empty Catch Block,de4dot.code.resources,ResourceDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceDataCreator.cs,getSerializedTypeAndAssemblyName,The method has an empty catch block.
Magic Number,de4dot.code.AssemblyClient,AssemblyClient,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClient.cs,waitConnected,The following statement contains a magic number: Thread.Sleep(20);
Magic Number,de4dot.code.AssemblyClient,NewProcessAssemblyClientFactory,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClientFactory.cs,getServerClrVersion,The following statement contains a magic number: switch (module.GetPointerSize()) {  			default:  			case 4:  				if (module.IsClr40)  					return ServerClrVersion.CLR_v40_x86;  				return ServerClrVersion.CLR_v20_x86;    			case 8:  				if (module.IsClr40)  					return ServerClrVersion.CLR_v40_x64;  				return ServerClrVersion.CLR_v20_x64;  			}
Magic Number,de4dot.code.AssemblyClient,NewProcessAssemblyClientFactory,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\AssemblyClientFactory.cs,getServerClrVersion,The following statement contains a magic number: switch (module.GetPointerSize()) {  			default:  			case 4:  				if (module.IsClr40)  					return ServerClrVersion.CLR_v40_x86;  				return ServerClrVersion.CLR_v20_x86;    			case 8:  				if (module.IsClr40)  					return ServerClrVersion.CLR_v40_x64;  				return ServerClrVersion.CLR_v20_x64;  			}
Magic Number,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,IpcAssemblyServerLoader,The following statement contains a magic number: ipcName = Utils.randomName(15' 20);
Magic Number,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,IpcAssemblyServerLoader,The following statement contains a magic number: ipcName = Utils.randomName(15' 20);
Magic Number,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,IpcAssemblyServerLoader,The following statement contains a magic number: ipcUri = Utils.randomName(15' 20);
Magic Number,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,IpcAssemblyServerLoader,The following statement contains a magic number: ipcUri = Utils.randomName(15' 20);
Magic Number,de4dot.code.AssemblyClient,IpcAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\IpcAssemblyServerLoader.cs,getServerName,The following statement contains a magic number: serverVersion = IntPtr.Size == 4 ? ServerClrVersion.CLR_ANY_x86 : ServerClrVersion.CLR_ANY_x64;
Magic Number,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,loadServer,The following statement contains a magic number: appDomain = AppDomain.CreateDomain(Utils.randomName(15' 20));
Magic Number,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,loadServer,The following statement contains a magic number: appDomain = AppDomain.CreateDomain(Utils.randomName(15' 20));
Magic Number,de4dot.code.AssemblyClient,NewAppDomainAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewAppDomainAssemblyServerLoader.cs,Dispose,The following statement contains a magic number: !thread.Join(100)
Magic Number,de4dot.code.AssemblyClient,NewProcessAssemblyServerLoader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\AssemblyClient\NewProcessAssemblyServerLoader.cs,Dispose,The following statement contains a magic number: !process.WaitForExit(300)
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,VariableValues,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					obj = instr.Operand;  					return true;  				case Code.Ldc_I4_S:  					obj = (int)(sbyte)instr.Operand;  					return true;    				case Code.Ldc_I4_0: obj = 0; return true;  				case Code.Ldc_I4_1: obj = 1; return true;  				case Code.Ldc_I4_2: obj = 2; return true;  				case Code.Ldc_I4_3: obj = 3; return true;  				case Code.Ldc_I4_4: obj = 4; return true;  				case Code.Ldc_I4_5: obj = 5; return true;  				case Code.Ldc_I4_6: obj = 6; return true;  				case Code.Ldc_I4_7: obj = 7; return true;  				case Code.Ldc_I4_8: obj = 8; return true;  				case Code.Ldc_I4_M1:obj = -1; return true;  				case Code.Ldnull:	obj = null; return true;    				default:  					obj = null;  					return false;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,getArg,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ldc_I4:  				case Code.Ldc_I8:  				case Code.Ldc_R4:  				case Code.Ldc_R8:  				case Code.Ldstr:  					arg = instr.Operand;  					break;  				case Code.Ldc_I4_S:  					arg = (int)(sbyte)instr.Operand;  					break;    				case Code.Ldc_I4_0: arg = 0; break;  				case Code.Ldc_I4_1: arg = 1; break;  				case Code.Ldc_I4_2: arg = 2; break;  				case Code.Ldc_I4_3: arg = 3; break;  				case Code.Ldc_I4_4: arg = 4; break;  				case Code.Ldc_I4_5: arg = 5; break;  				case Code.Ldc_I4_6: arg = 6; break;  				case Code.Ldc_I4_7: arg = 7; break;  				case Code.Ldc_I4_8: arg = 8; break;  				case Code.Ldc_I4_M1:arg = -1; break;  				case Code.Ldnull:	arg = null; break;    				case Code.Nop:  					continue;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					getLocalVariableValue(instr.Instruction.GetLocal(theMethod.Body.Variables)' out arg);  					break;    				case Code.Ldfld:  				case Code.Ldsfld:  					arg = instr.Operand;  					break;    				default:  					int pushes' pops;  					instr.Instruction.CalculateStackUsage(false' out pushes' out pops);  					if (!useUnknownArgs || pushes != 1) {  						Logger.w("Could not find all arguments to method {0} ({1:X8})' instr: {2}"'  									Utils.removeNewlines(method)'  									method.MDToken.ToInt32()'  									instr);  						errors++;  						return false;  					}    					for (int i = 0; i < pops; i++) {  						if (!getArg(method' block' ref arg' ref instrIndex))  							return false;  					}  					arg = null;  					break;  				}
Magic Number,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,getMethodTokens,The following statement contains a magic number: tokenStr = tokenStr.Substring(2);
Magic Number,de4dot.code,ObfuscatedFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\ObfuscatedFile.cs,splitMethodDesc,The following statement contains a magic number: remaining = remaining.Substring(index + 2);
Magic Number,de4dot.code,Utils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Utils.cs,toCsharpString,The following statement contains a magic number: var sb = new StringBuilder(s.Length + 2);
Magic Number,de4dot.code,Utils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Utils.cs,shellEscape,The following statement contains a magic number: var sb = new StringBuilder(s.Length + 2);
Magic Number,de4dot.code,Utils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Utils.cs,randomName,The following statement contains a magic number: sb.Append((char)((int)'A' + random.Next(26)));
Magic Number,de4dot.code,Utils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\Utils.cs,randomName,The following statement contains a magic number: numLower = random.Next(1' 5);
Magic Number,de4dot.code.deobfuscators.Agile_NET,CliSecureRtType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CliSecureRtType.cs,find2,The following statement contains a magic number: DeobUtils.getInitCctors(module' 3)
Magic Number,de4dot.code.deobfuscators.Agile_NET,CliSecureRtType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CliSecureRtType.cs,find3,The following statement contains a magic number: type.Methods.Count != 2
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,encrypt,The following statement contains a magic number: xl = (xl >> 24) ^ xr;
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,encrypt,The following statement contains a magic number: i < 16
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,encrypt,The following statement contains a magic number: rxr = xl ^ P[16];
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,encrypt,The following statement contains a magic number: rxl = xr ^ P[17];
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,decrypt,The following statement contains a magic number: xl = (xl >> 24) ^ xr;
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsBlowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\CsBlowfish.cs,decrypt,The following statement contains a magic number: i >= 2
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: const int dataDirNum = 6;
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: const int dotNetDirNum = 14;
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: int dataDir = (int)dataDirBaseOffset + dataDirNum * 8;
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: int dotNetDir = (int)dataDirBaseOffset + dotNetDirNum * 8;
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: writeUInt32(fileData' dotNetDir + 4' BitConverter.ToUInt32(fileData' dataDir + 4));
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: writeUInt32(fileData' dotNetDir + 4' BitConverter.ToUInt32(fileData' dataDir + 4));
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile1,The following statement contains a magic number: writeUInt32(fileData' dataDir + 4' 0);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,unpackNativeFile2,The following statement contains a magic number: var data = peImage.FindWin32ResourceData("ASSEMBLY"' 101' 0);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,writeUInt32,The following statement contains a magic number: data[offset + 1] = (byte)(value >> 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,writeUInt32,The following statement contains a magic number: data[offset + 2] = (byte)(value >> 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,writeUInt32,The following statement contains a magic number: data[offset + 2] = (byte)(value >> 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,writeUInt32,The following statement contains a magic number: data[offset + 3] = (byte)(value >> 24);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,writeUInt32,The following statement contains a magic number: data[offset + 3] = (byte)(value >> 24);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Agile_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: var moduleCctorBytes = new byte[6];
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[2] = (byte)(initToken >> 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[2] = (byte)(initToken >> 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[3] = (byte)(initToken >> 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[3] = (byte)(initToken >> 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[4] = (byte)(initToken >> 24);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[4] = (byte)(initToken >> 24);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getModuleCctorBytes,The following statement contains a magic number: moduleCctorBytes[5] = 0x2A;
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,readCodeHeader,The following statement contains a magic number: codeHeader.signature = peImage.offsetReadBytes(offset' 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,readCodeHeader,The following statement contains a magic number: codeHeader.decryptionKey = peImage.offsetReadBytes(offset + 0x10' 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,detect,The following statement contains a magic number: isValidSignature(peImage.offsetReadBytes(codeHeaderOffset' 16))
Magic Number,de4dot.code.deobfuscators.Agile_NET,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,detect,The following statement contains a magic number: codeHeaderOffset != 0 && isValidSignature(peImage.offsetReadBytes(codeHeaderOffset' 16))
Magic Number,de4dot.code.deobfuscators.Agile_NET,Decrypter45,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: b ^= codeHeader.decryptionKey[(methodInfo.codeOffs - 0x28 + i) % 16];
Magic Number,de4dot.code.deobfuscators.Agile_NET,Decrypter5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: b ^= codeHeader.decryptionKey[(methodInfo.codeOffs - codeHeaderSize + i) % 16];
Magic Number,de4dot.code.deobfuscators.Agile_NET,Decrypter5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: b ^= codeHeader.decryptionKey[(methodInfo.codeOffs - codeHeaderSize + i + 7) % 16];
Magic Number,de4dot.code.deobfuscators.Agile_NET,Decrypter5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: b ^= codeHeader.decryptionKey[(methodInfo.codeOffs - codeHeaderSize + i + 7) % 16];
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,ProDecrypter,The following statement contains a magic number: key[i] = be_readUInt32(codeHeader.decryptionKey' i * 4);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,ProDecrypter,The following statement contains a magic number: i < 4
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: int numQwords = (int)(methodInfo.codeSize / 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: int offset = i * 8;
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: uint q1 = be_readUInt32(data' offset + 4);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q1 -= ((q0 << 4) + key[2]) ^ (val + q0) ^ ((q0 >> 5) + key[3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q1 -= ((q0 << 4) + key[2]) ^ (val + q0) ^ ((q0 >> 5) + key[3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q1 -= ((q0 << 4) + key[2]) ^ (val + q0) ^ ((q0 >> 5) + key[3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q1 -= ((q0 << 4) + key[2]) ^ (val + q0) ^ ((q0 >> 5) + key[3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q0 -= ((q1 << 4) + key[0]) ^ (val + q1) ^ ((q1 >> 5) + key[1]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: q0 -= ((q1 << 4) + key[0]) ^ (val + q1) ^ ((q1 >> 5) + key[1]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: j < 32
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: be_writeUInt32(data' offset + 4' q1);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_readUInt32,The following statement contains a magic number: return (uint)((data[offset] << 24) +  						(data[offset + 1] << 16) +  						(data[offset + 2] << 8) +  						data[offset + 3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_readUInt32,The following statement contains a magic number: return (uint)((data[offset] << 24) +  						(data[offset + 1] << 16) +  						(data[offset + 2] << 8) +  						data[offset + 3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_readUInt32,The following statement contains a magic number: return (uint)((data[offset] << 24) +  						(data[offset + 1] << 16) +  						(data[offset + 2] << 8) +  						data[offset + 3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_readUInt32,The following statement contains a magic number: return (uint)((data[offset] << 24) +  						(data[offset + 1] << 16) +  						(data[offset + 2] << 8) +  						data[offset + 3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_readUInt32,The following statement contains a magic number: return (uint)((data[offset] << 24) +  						(data[offset + 1] << 16) +  						(data[offset + 2] << 8) +  						data[offset + 3]);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_writeUInt32,The following statement contains a magic number: data[offset] = (byte)(value >> 24);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_writeUInt32,The following statement contains a magic number: data[offset + 1] = (byte)(value >> 16);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_writeUInt32,The following statement contains a magic number: data[offset + 2] = (byte)(value >> 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_writeUInt32,The following statement contains a magic number: data[offset + 2] = (byte)(value >> 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,be_writeUInt32,The following statement contains a magic number: data[offset + 3] = (byte)value;
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsHeaderBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getMethodInfos2,The following statement contains a magic number: uint codeSize = methodsDecrypter.peImage.offsetReadUInt32(offset + 4);
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsHeaderBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getMethodInfos4,The following statement contains a magic number: uint codeSize = methodsDecrypter.peImage.offsetReadUInt32(offset + 4);
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsHeaderBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getMethodInfos4,The following statement contains a magic number: uint flags = methodsDecrypter.peImage.offsetReadUInt32(offset + 8);
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsHeaderBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,getMethodInfos4,The following statement contains a magic number: uint localVarSigTok = methodsDecrypter.peImage.offsetReadUInt32(offset + 12);
Magic Number,de4dot.code.deobfuscators.Agile_NET,CsHeader5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\MethodsDecrypter.cs,patchMethodTable,The following statement contains a magic number: methodsDecrypter.peImage.writeUInt32(rva + 8' methodInfo.localVarSigTok);
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs.Count != 3
Magic Number,de4dot.code.deobfuscators.Agile_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs[2].OpCode != OpCodes.Ret
Magic Number,de4dot.code.deobfuscators.Agile_NET,StackFrameHelper,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\StackFrameHelper.cs,find,The following statement contains a magic number: type.Methods.Count > 3
Magic Number,de4dot.code.deobfuscators.Agile_NET,StackFrameHelper,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\StackFrameHelper.cs,find,The following statement contains a magic number: sig != null && method.IsStatic && method.HasBody &&  						sig.Params.Count == 2 && !method.HasGenericParameters &&  						!DotNetUtils.hasReturnValue(method) &&  						sig.Params[0].GetFullName() == "System.Exception" &&  						sig.Params[1].GetFullName() == "System.Object[]"
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,Csvm,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\Csvm.cs,findVmAssemblyRef,The following statement contains a magic number: sig.Params.Count != 2
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmDataReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmDataReader.cs,read,The following statement contains a magic number: csvmMethod.Guid = new Guid(reader.ReadBytes(16));
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateLocalInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldloc_S:  			case Code.Ldloc:  				if (index == 0)  					opcode = OpCodes.Ldloc_0;  				else if (index == 1)  					opcode = OpCodes.Ldloc_1;  				else if (index == 2)  					opcode = OpCodes.Ldloc_2;  				else if (index == 3)  					opcode = OpCodes.Ldloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloc;  					operand = local;  				}  				break;    			case Code.Stloc:  			case Code.Stloc_S:  				if (index == 0)  					opcode = OpCodes.Stloc_0;  				else if (index == 1)  					opcode = OpCodes.Stloc_1;  				else if (index == 2)  					opcode = OpCodes.Stloc_2;  				else if (index == 3)  					opcode = OpCodes.Stloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Stloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Stloc;  					operand = local;  				}  				break;    			case Code.Ldloca:  			case Code.Ldloca_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloca_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloca;  					operand = local;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateLocalInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldloc_S:  			case Code.Ldloc:  				if (index == 0)  					opcode = OpCodes.Ldloc_0;  				else if (index == 1)  					opcode = OpCodes.Ldloc_1;  				else if (index == 2)  					opcode = OpCodes.Ldloc_2;  				else if (index == 3)  					opcode = OpCodes.Ldloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloc;  					operand = local;  				}  				break;    			case Code.Stloc:  			case Code.Stloc_S:  				if (index == 0)  					opcode = OpCodes.Stloc_0;  				else if (index == 1)  					opcode = OpCodes.Stloc_1;  				else if (index == 2)  					opcode = OpCodes.Stloc_2;  				else if (index == 3)  					opcode = OpCodes.Stloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Stloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Stloc;  					operand = local;  				}  				break;    			case Code.Ldloca:  			case Code.Ldloca_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloca_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloca;  					operand = local;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateLocalInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldloc_S:  			case Code.Ldloc:  				if (index == 0)  					opcode = OpCodes.Ldloc_0;  				else if (index == 1)  					opcode = OpCodes.Ldloc_1;  				else if (index == 2)  					opcode = OpCodes.Ldloc_2;  				else if (index == 3)  					opcode = OpCodes.Ldloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloc;  					operand = local;  				}  				break;    			case Code.Stloc:  			case Code.Stloc_S:  				if (index == 0)  					opcode = OpCodes.Stloc_0;  				else if (index == 1)  					opcode = OpCodes.Stloc_1;  				else if (index == 2)  					opcode = OpCodes.Stloc_2;  				else if (index == 3)  					opcode = OpCodes.Stloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Stloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Stloc;  					operand = local;  				}  				break;    			case Code.Ldloca:  			case Code.Ldloca_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloca_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloca;  					operand = local;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateLocalInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldloc_S:  			case Code.Ldloc:  				if (index == 0)  					opcode = OpCodes.Ldloc_0;  				else if (index == 1)  					opcode = OpCodes.Ldloc_1;  				else if (index == 2)  					opcode = OpCodes.Ldloc_2;  				else if (index == 3)  					opcode = OpCodes.Ldloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloc;  					operand = local;  				}  				break;    			case Code.Stloc:  			case Code.Stloc_S:  				if (index == 0)  					opcode = OpCodes.Stloc_0;  				else if (index == 1)  					opcode = OpCodes.Stloc_1;  				else if (index == 2)  					opcode = OpCodes.Stloc_2;  				else if (index == 3)  					opcode = OpCodes.Stloc_3;  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Stloc_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Stloc;  					operand = local;  				}  				break;    			case Code.Ldloca:  			case Code.Ldloca_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					opcode = OpCodes.Ldloca_S;  					operand = local;  				}  				else {  					opcode = OpCodes.Ldloca;  					operand = local;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateArgInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldarg:  			case Code.Ldarg_S:  				if (index == 0) {  					instr.OpCode = OpCodes.Ldarg_0;  					instr.Operand = null;  				}  				else if (index == 1) {  					instr.OpCode = OpCodes.Ldarg_1;  					instr.Operand = null;  				}  				else if (index == 2) {  					instr.OpCode = OpCodes.Ldarg_2;  					instr.Operand = null;  				}  				else if (index == 3) {  					instr.OpCode = OpCodes.Ldarg_3;  					instr.Operand = null;  				}  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Ldarg_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Ldarg;  					instr.Operand = arg;  				}  				break;    			case Code.Starg:  			case Code.Starg_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Starg_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Starg;  					instr.Operand = arg;  				}  				break;    			case Code.Ldarga:  			case Code.Ldarga_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Ldarga_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Ldarga;  					instr.Operand = arg;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,updateArgInstruction,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldarg:  			case Code.Ldarg_S:  				if (index == 0) {  					instr.OpCode = OpCodes.Ldarg_0;  					instr.Operand = null;  				}  				else if (index == 1) {  					instr.OpCode = OpCodes.Ldarg_1;  					instr.Operand = null;  				}  				else if (index == 2) {  					instr.OpCode = OpCodes.Ldarg_2;  					instr.Operand = null;  				}  				else if (index == 3) {  					instr.OpCode = OpCodes.Ldarg_3;  					instr.Operand = null;  				}  				else if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Ldarg_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Ldarg;  					instr.Operand = arg;  				}  				break;    			case Code.Starg:  			case Code.Starg_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Starg_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Starg;  					instr.Operand = arg;  				}  				break;    			case Code.Ldarga:  			case Code.Ldarga_S:  				if (byte.MinValue <= index && index <= byte.MaxValue) {  					instr.OpCode = OpCodes.Ldarga_S;  					instr.Operand = arg;  				}  				else {  					instr.OpCode = OpCodes.Ldarga;  					instr.Operand = arg;  				}  				break;    			default:  				throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,getInstructionSize,The following statement contains a magic number: return 5;
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,CsvmToCilMethodConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\CsvmToCilMethodConverter.cs,getInstructionSize,The following statement contains a magic number: return instr.OpCode.Size + (op.targetDisplacements.Length + 1) * 4;
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,arithmetic_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.Add.ToInstruction();  			case 1: return OpCodes.Add_Ovf.ToInstruction();  			case 2: return OpCodes.Add_Ovf_Un.ToInstruction();  			case 3: return OpCodes.Sub.ToInstruction();  			case 4: return OpCodes.Sub_Ovf.ToInstruction();  			case 5: return OpCodes.Sub_Ovf_Un.ToInstruction();  			case 6: return OpCodes.Mul.ToInstruction();  			case 7: return OpCodes.Mul_Ovf.ToInstruction();  			case 8: return OpCodes.Mul_Ovf_Un.ToInstruction();  			case 9: return OpCodes.Div.ToInstruction();  			case 10: return OpCodes.Div_Un.ToInstruction();  			case 11: return OpCodes.Rem.ToInstruction();  			case 12: return OpCodes.Rem_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,call_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: instr.OpCode = OpCodes.Newobj; break;  			case 1: instr.OpCode = OpCodes.Call; break;  			case 2: instr.OpCode = OpCodes.Callvirt; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: switch (type) {  			case 0: instr.OpCode = OpCodes.Br; break;  			case 1: instr.OpCode = OpCodes.Brtrue; break;  			case 2: instr.OpCode = OpCodes.Brfalse; break;  			case 3: instr.OpCode = OpCodes.Beq; break;  			case 4: instr.OpCode = OpCodes.Bge; break;  			case 5: instr.OpCode = OpCodes.Bgt; break;  			case 6: instr.OpCode = OpCodes.Ble; break;  			case 7: instr.OpCode = OpCodes.Blt; break;  			case 8: instr.OpCode = OpCodes.Bne_Un; break;  			case 9: instr.OpCode = OpCodes.Bge_Un; break;  			case 10: instr.OpCode = OpCodes.Bgt_Un; break;  			case 11: instr.OpCode = OpCodes.Ble_Un; break;  			case 12: instr.OpCode = OpCodes.Blt_Un; break;  			case 13: instr.OpCode = OpCodes.Ceq; break;  			case 14: instr.OpCode = OpCodes.Cgt; break;  			case 15: instr.OpCode = OpCodes.Clt; break;  			case 16: instr.OpCode = OpCodes.Cgt_Un; break;  			case 17: instr.OpCode = OpCodes.Clt_Un; break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,compare_read,The following statement contains a magic number: type < 13
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,ldfld_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: instr.Operand = new LoadFieldOperand(reader.ReadInt32()); break;  			case 1: instr.Operand = new LoadFieldAddressOperand(reader.ReadInt32()); break;  			case 2: instr.Operand = new StoreFieldOperand(reader.ReadInt32()); break;  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,logical_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.And.ToInstruction();  			case 1: return OpCodes.Or.ToInstruction();  			case 2: return OpCodes.Xor.ToInstruction();  			case 3: return OpCodes.Shl.ToInstruction();  			case 4: return OpCodes.Shr.ToInstruction();  			case 5: return OpCodes.Shr_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,logical_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.And.ToInstruction();  			case 1: return OpCodes.Or.ToInstruction();  			case 2: return OpCodes.Xor.ToInstruction();  			case 3: return OpCodes.Shl.ToInstruction();  			case 4: return OpCodes.Shr.ToInstruction();  			case 5: return OpCodes.Shr_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,logical_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.And.ToInstruction();  			case 1: return OpCodes.Or.ToInstruction();  			case 2: return OpCodes.Xor.ToInstruction();  			case 3: return OpCodes.Shl.ToInstruction();  			case 4: return OpCodes.Shr.ToInstruction();  			case 5: return OpCodes.Shr_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,OpCodeHandlers,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\OpCodeHandler.cs,logical_read,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return OpCodes.And.ToInstruction();  			case 1: return OpCodes.Or.ToInstruction();  			case 2: return OpCodes.Xor.ToInstruction();  			case 3: return OpCodes.Shl.ToInstruction();  			case 4: return OpCodes.Shr.ToInstruction();  			case 5: return OpCodes.Shr_Un.ToInstruction();  			default: throw new ApplicationException("Invalid opcode");  			}
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,isStackType,The following statement contains a magic number: type.Fields.Count != 2
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,isStackType,The following statement contains a magic number: type.Interfaces.Count != 2
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,isStackType,The following statement contains a magic number: stackValueTypes != 2 || int32Types != 2 || objectTypes != 1
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,isStackType,The following statement contains a magic number: stackValueTypes != 2 || int32Types != 2 || objectTypes != 1
Magic Number,de4dot.code.deobfuscators.Agile_NET.vm,VmOpCodeHandlerDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Agile_NET\vm\VmOpCodeHandlerDetector.cs,findVmHandlerTypes,The following statement contains a magic number: handlers.Count != 31
Magic Number,de4dot.code.deobfuscators,ArrayFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ArrayFinder.cs,getArray,The following statement contains a magic number: index = i - 3;
Magic Number,de4dot.code.deobfuscators,ArrayFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ArrayFinder.cs,getArray,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators,ArrayFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ArrayFinder.cs,getInitializedArray,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Newarr:  				case Code.Newobj:  					goto done;    				case Code.Stloc:  				case Code.Stloc_S:  				case Code.Stloc_0:  				case Code.Stloc_1:  				case Code.Stloc_2:  				case Code.Stloc_3:  				case Code.Starg:  				case Code.Starg_S:  				case Code.Stsfld:  				case Code.Stfld:  					if (emulator.peek() == theArray && i != newarrIndex + 1 && i != newarrIndex + 2)  						goto done;  					break;  				}
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: P[i] = Pboxes[i] ^ (((uint)key[ki++ % kl] << 24) | ((uint)key[ki++ % kl] << 16) |  							((uint)key[ki++ % kl] << 8) | key[ki++ % kl]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: P[i] = Pboxes[i] ^ (((uint)key[ki++ % kl] << 24) | ((uint)key[ki++ % kl] << 16) |  							((uint)key[ki++ % kl] << 8) | key[ki++ % kl]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: P[i] = Pboxes[i] ^ (((uint)key[ki++ % kl] << 24) | ((uint)key[ki++ % kl] << 16) |  							((uint)key[ki++ % kl] << 8) | key[ki++ % kl]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: i < 18
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: i < 18
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,init,The following statement contains a magic number: i < 1024
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: uint xr = BitConverter.ToUInt32(data' i + 4);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 1] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 3] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 3] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 4] = (byte)xr;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 7] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: data[i + 7] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt_LE,The following statement contains a magic number: i + 8 <= data.Length
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 1] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 3] = (byte)xl;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 4] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 4] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: data[i + 7] = (byte)xr;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: i + 8 <= data.Length
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: i < 16
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: rxr = xl ^ P[16];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,encrypt,The following statement contains a magic number: rxl = xr ^ P[17];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: uint xr = BitConverter.ToUInt32(data' i + 4);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 1] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 3] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 3] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 4] = (byte)xr;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 7] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: data[i + 7] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt_LE,The following statement contains a magic number: i + 8 <= data.Length
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xl = (uint)((data[i] << 24) | (data[i + 1] << 16) | (data[i + 2] << 8) | data[i + 3]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: uint xr = (uint)((data[i + 4] << 24) | (data[i + 5] << 16) | (data[i + 6] << 8) | data[i + 7]);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i] = (byte)(xl >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 1] = (byte)(xl >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 2] = (byte)(xl >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 3] = (byte)xl;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 4] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 4] = (byte)(xr >> 24);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 5] = (byte)(xr >> 16);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 6] = (byte)(xr >> 8);
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: data[i + 7] = (byte)xr;
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: i + 8 <= data.Length
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: xr ^= ((S[0 * 256 + (xl >> 24)] + S[1 * 256 + (byte)(xl >> 16)]) ^ S[2 * 256 + (byte)(xl >> 8)]) + S[3 * 256 + (byte)xl];
Magic Number,de4dot.code.deobfuscators,Blowfish,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Blowfish.cs,decrypt,The following statement contains a magic number: i >= 2
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt32,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<int>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt32(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<int>(index' op1));  					break;    				case Code.Ldc_I4:  				case Code.Ldc_I4_S:  				case Code.Ldc_I4_0:  				case Code.Ldc_I4_1:  				case Code.Ldc_I4_2:  				case Code.Ldc_I4_3:  				case Code.Ldc_I4_4:  				case Code.Ldc_I4_5:  				case Code.Ldc_I4_6:  				case Code.Ldc_I4_7:  				case Code.Ldc_I4_8:  				case Code.Ldc_I4_M1:  					stack.Push(new ConstantInfo<int>(index' instr.GetLdcI4Value()));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<int>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getInt64,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_I1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (sbyte)stack.Pop().constant));  					break;    				case Code.Conv_U1:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (byte)stack.Pop().constant));  					break;    				case Code.Conv_I2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (short)stack.Pop().constant));  					break;    				case Code.Conv_U2:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (ushort)stack.Pop().constant));  					break;    				case Code.Conv_I4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (int)stack.Pop().constant));  					break;    				case Code.Conv_U4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' (uint)stack.Pop().constant));  					break;    				case Code.Conv_I8:  				case Code.Conv_U8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' stack.Pop().constant));  					break;    				case Code.Not:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' ~stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<long>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantInt64(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<long>(index' op1));  					break;    				case Code.Ldc_I8:  					stack.Push(new ConstantInfo<long>(index' (long)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant - info2.constant));  					break;    				case Code.Xor:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant ^ info2.constant));  					break;    				case Code.Or:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant | info2.constant));  					break;    				case Code.And:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant & info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					if (info2.constant == 0)  						goto done;  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<long>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_R4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' (float)stack.Pop().constant));  					break;    				case Code.Conv_R8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldc_R4:  					stack.Push(new ConstantInfo<double>(index' (float)instr.Operand));  					break;    				case Code.Ldc_R8:  					stack.Push(new ConstantInfo<double>(index' (double)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant - info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_R4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' (float)stack.Pop().constant));  					break;    				case Code.Conv_R8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldc_R4:  					stack.Push(new ConstantInfo<double>(index' (float)instr.Operand));  					break;    				case Code.Ldc_R8:  					stack.Push(new ConstantInfo<double>(index' (double)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant - info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_R4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' (float)stack.Pop().constant));  					break;    				case Code.Conv_R8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldc_R4:  					stack.Push(new ConstantInfo<double>(index' (float)instr.Operand));  					break;    				case Code.Ldc_R8:  					stack.Push(new ConstantInfo<double>(index' (double)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant - info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_R4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' (float)stack.Pop().constant));  					break;    				case Code.Conv_R8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldc_R4:  					stack.Push(new ConstantInfo<double>(index' (float)instr.Operand));  					break;    				case Code.Ldc_R8:  					stack.Push(new ConstantInfo<double>(index' (double)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant - info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,ConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ConstantsReader.cs,getDouble,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Conv_R4:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' (float)stack.Pop().constant));  					break;    				case Code.Conv_R8:  					if (!emulateConvInstrs || stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' stack.Pop().constant));  					break;    				case Code.Neg:  					if (stack.Count < 1)  						goto done;  					stack.Push(new ConstantInfo<double>(index' -stack.Pop().constant));  					break;    				case Code.Ldloc:  				case Code.Ldloc_S:  				case Code.Ldloc_0:  				case Code.Ldloc_1:  				case Code.Ldloc_2:  				case Code.Ldloc_3:  					if (!getLocalConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  					if (!getArgConstantDouble(instr' out op1))  						goto done;  					stack.Push(new ConstantInfo<double>(index' op1));  					break;    				case Code.Ldc_R4:  					stack.Push(new ConstantInfo<double>(index' (float)instr.Operand));  					break;    				case Code.Ldc_R8:  					stack.Push(new ConstantInfo<double>(index' (double)instr.Operand));  					break;    				case Code.Add:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant + info2.constant));  					break;    				case Code.Sub:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant - info2.constant));  					break;    				case Code.Mul:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant * info2.constant));  					break;    				case Code.Div:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' info1.constant / info2.constant));  					break;    				case Code.Div_Un:  					if (stack.Count < 2)  						goto done;  					info2 = stack.Pop();  					info1 = stack.Pop();  					stack.Push(new ConstantInfo<double>(index' (int)((uint)info1.constant / (uint)info2.constant)));  					break;    				default:  					goto done;  				}
Magic Number,de4dot.code.deobfuscators,CRC32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CRC32.cs,checksum,The following statement contains a magic number: cs = (cs >> 8) ^ table[i];
Magic Number,de4dot.code.deobfuscators,DeobfuscatorBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobfuscatorBase.cs,isFatHeader,The following statement contains a magic number: body.InitLocals || body.MaxStack > 8
Magic Number,de4dot.code.deobfuscators,DeobfuscatorBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobfuscatorBase.cs,isFatHeader,The following statement contains a magic number: getCodeSize(method) > 63
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: uint rounds = (uint)(6 + 52 / n);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: uint rounds = (uint)(6 + 52 / n);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: int e = (int)((sum >> 2) & 3);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: int e = (int)((sum >> 2) & 3);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[p] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[p] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[p] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[p] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[p] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[0] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[0] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[0] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[0] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xxteaDecrypt,The following statement contains a magic number: y = v[0] -= (((z >> 5 ^ y << 2) + (y >> 3 ^ z << 4)) ^ ((sum ^ y) + (key[(p & 3) ^ e] ^ z)));
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v1 -= (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v1 -= (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v1 -= (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v1 -= (((v0 << 4) ^ (v0 >> 5)) + v0) ^ (sum + key[(sum >> 11) & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v0 -= (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v0 -= (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,xteaDecrypt,The following statement contains a magic number: v0 -= (((v1 << 4) ^ (v1 >> 5)) + v1) ^ (sum + key[sum & 3]);
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,readVariableLengthInt32,The following statement contains a magic number: return (((int)b & 0x3F) << 8) + data[index++];
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,readVariableLengthInt32,The following statement contains a magic number: return (((int)b & 0x1F) << 24) +  					((int)data[index++] << 16) +  					((int)data[index++] << 8) +  					data[index++];
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,readVariableLengthInt32,The following statement contains a magic number: return (((int)b & 0x1F) << 24) +  					((int)data[index++] << 16) +  					((int)data[index++] << 8) +  					data[index++];
Magic Number,de4dot.code.deobfuscators,DeobUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeobUtils.cs,readVariableLengthInt32,The following statement contains a magic number: return (((int)b & 0x1F) << 24) +  					((int)data[index++] << 16) +  					((int)data[index++] << 8) +  					data[index++];
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt32,The following statement contains a magic number: peImageData[offset + 1] = (byte)(val >> 8);
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt32,The following statement contains a magic number: peImageData[offset + 2] = (byte)(val >> 16);
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt32,The following statement contains a magic number: peImageData[offset + 2] = (byte)(val >> 16);
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt32,The following statement contains a magic number: peImageData[offset + 3] = (byte)(val >> 24);
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt32,The following statement contains a magic number: peImageData[offset + 3] = (byte)(val >> 24);
Magic Number,de4dot.code.deobfuscators,MyPEImage,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MyPEImage.cs,offsetWriteUInt16,The following statement contains a magic number: peImageData[offset + 1] = (byte)(val >> 8);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InitializedDataCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InitializedDataCreator.cs,getModuleId,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  								BitConverter.ToInt16(hash' 4)'  								BitConverter.ToInt16(hash' 6)'  								hash[8]' hash[9]' hash[10]' hash[11]'  								hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators,InlinedMethodsFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InlinedMethodsFinder.cs,find,The following statement contains a magic number: instrs.Count < 2
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: mbHeader.flags = 2;
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: mbHeader.maxStack = 8;
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: mbHeader.codeSize = (uint)(reader.ReadByte() >> 2);
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: (b & 3) == 2
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: (b & 3) == 2
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseMethodBody2,The following statement contains a magic number: (mbHeader.flags & 8) != 0
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,readExtraSections2,The following statement contains a magic number: align(reader' 4);
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseSection,The following statement contains a magic number: align(reader' 4);
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseSection,The following statement contains a magic number: int num = (int)(reader.ReadUInt32() >> 8) / 24;
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseSection,The following statement contains a magic number: int num = (int)(reader.ReadUInt32() >> 8) / 24;
Magic Number,de4dot.code.deobfuscators,MethodBodyParser,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MethodBodyParser.cs,parseSection,The following statement contains a magic number: reader.Position += num * 24;
Magic Number,de4dot.code.deobfuscators,ProxyCallFixerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ProxyCallFixerBase.cs,deobfuscate,The following statement contains a magic number: int loops = ProxyCallIsObfuscated ? 50 : 1;
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: inIndex += 4;
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: count = (val2 & 0xFF) >> 2;
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: copy(outData' (int)(outIndex - count)' outData' outIndex' 3);
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: outIndex += 3;
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: (val2 & 3) == 0
Magic Number,de4dot.code.deobfuscators,QuickLZBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: inIndex += 4;
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,isCompressed,The following statement contains a magic number: data.Length < 4
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: int mode = BitConverter.ToInt32(inData' 4);
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: int compressedLength = BitConverter.ToInt32(inData' 8);
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: int decompressedLength = BitConverter.ToInt32(inData' 12);
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: bool isDataCompressed = BitConverter.ToInt32(inData' 16) == 1;
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: int headerLength = 32;
Magic Number,de4dot.code.deobfuscators,QuickLZ,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\QuickLZ.cs,decompress,The following statement contains a magic number: BitConverter.ToInt32(inData' 0) != sig || BitConverter.ToInt32(inData' compressedLength - 4) != sig
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: name.Length < 5
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isNonRandom,The following statement contains a magic number: switch (words.Count) {  			case 1:  				return vowels == words.Count;  			case 2:  			case 3:  				return vowels >= 1;  			case 4:  			case 5:  				return vowels >= 2;  			case 6:  				return vowels >= 3;  			case 7:  				return vowels >= 4;  			default:  				return vowels >= words.Count - 4;  			}
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: len < 5
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: countNumbers(typeWords' 2)
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: upper >= 3
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: bool hasTwoUpperWords = upper == 2;
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: isDigit(typeWords[i - 1][0]) && isLower(typeWords[i - 2][0]) && isLower(typeWords[i][0])
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: isLower(name[len - 3]) && isUpper(name[len - 2]) && isDigit(name[len - 1])
Magic Number,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,isRandom,The following statement contains a magic number: isLower(name[len - 3]) && isUpper(name[len - 2]) && isDigit(name[len - 1])
Magic Number,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateLoop,The following statement contains a magic number: i < 10
Magic Number,de4dot.code.deobfuscators,TypesRestorerBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\TypesRestorer.cs,deobfuscateMethod,The following statement contains a magic number: switch (instr.OpCode.Code) {  				case Code.Ret:  					if (!fixReturnType)  						break;  					bool wasNewobj;  					var type = getLoadedType(method' method' instructions' i' out wasNewobj);  					if (type == null)  						break;  					methodReturnInfo.add(type);  					break;    				case Code.Call:  				case Code.Calli:  				case Code.Callvirt:  				case Code.Newobj:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					var calledMethod = instr.Operand as IMethod;  					if (calledMethod == null)  						break;  					var calledMethodParams = DotNetUtils.getArgs(calledMethod);  					for (int j = 0; j < pushedArgs.NumValidArgs; j++) {  						int calledMethodParamIndex = calledMethodParams.Count - j - 1;  						var ldInstr = pushedArgs.getEnd(j);  						switch (ldInstr.OpCode.Code) {  						case Code.Ldarg:  						case Code.Ldarg_S:  						case Code.Ldarg_0:  						case Code.Ldarg_1:  						case Code.Ldarg_2:  						case Code.Ldarg_3:  							addMethodArgType(method' getParameter(methodParams' ldInstr)' DotNetUtils.getArg(calledMethodParams' calledMethodParamIndex));  							break;    						default:  							break;  						}  					}  					break;    				case Code.Castclass:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					if (pushedArgs.NumValidArgs < 1)  						break;  					addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(0))' instr.Operand as ITypeDefOrRef);  					break;    				case Code.Stloc:  				case Code.Stloc_S:  				case Code.Stloc_0:  				case Code.Stloc_1:  				case Code.Stloc_2:  				case Code.Stloc_3:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					if (pushedArgs.NumValidArgs < 1)  						break;  					addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(0))' instr.GetLocal(method.Body.Variables));  					break;    				case Code.Stsfld:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					if (pushedArgs.NumValidArgs < 1)  						break;  					addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(0))' instr.Operand as IField);  					break;    				case Code.Stfld:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					if (pushedArgs.NumValidArgs >= 1) {  						var field = instr.Operand as IField;  						addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(0))' field);  						if (pushedArgs.NumValidArgs >= 2 && field != null)  							addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(1))' field.DeclaringType);  					}  					break;    				case Code.Ldfld:  				case Code.Ldflda:  					pushedArgs = MethodStack.getPushedArgInstructions(instructions' i);  					if (pushedArgs.NumValidArgs < 1)  						break;  					addMethodArgType(method' getParameter(methodParams' pushedArgs.getEnd(0))' instr.Operand as IField);  					break;    				//TODO: For better results' these should be checked:  				case Code.Starg:  				case Code.Starg_S:    				case Code.Ldelema:  				case Code.Ldelem:  				case Code.Ldelem_I:  				case Code.Ldelem_I1:  				case Code.Ldelem_I2:  				case Code.Ldelem_I4:  				case Code.Ldelem_I8:  				case Code.Ldelem_R4:  				case Code.Ldelem_R8:  				case Code.Ldelem_Ref:  				case Code.Ldelem_U1:  				case Code.Ldelem_U2:  				case Code.Ldelem_U4:    				case Code.Ldind_I:  				case Code.Ldind_I1:  				case Code.Ldind_I2:  				case Code.Ldind_I4:  				case Code.Ldind_I8:  				case Code.Ldind_R4:  				case Code.Ldind_R8:  				case Code.Ldind_Ref:  				case Code.Ldind_U1:  				case Code.Ldind_U2:  				case Code.Ldind_U4:    				case Code.Ldobj:    				case Code.Stelem:  				case Code.Stelem_I:  				case Code.Stelem_I1:  				case Code.Stelem_I2:  				case Code.Stelem_I4:  				case Code.Stelem_I8:  				case Code.Stelem_R4:  				case Code.Stelem_R8:  				case Code.Stelem_Ref:    				case Code.Stind_I:  				case Code.Stind_I1:  				case Code.Stind_I2:  				case Code.Stind_I4:  				case Code.Stind_I8:  				case Code.Stind_R4:  				case Code.Stind_R8:  				case Code.Stind_Ref:    				case Code.Stobj:  				default:  					break;  				}
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelInflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelInflater.cs,ReadHeader,The following statement contains a magic number: const int numBits = 4;
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelInflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelInflater.cs,ReadHeader,The following statement contains a magic number: switch (type >> 1) {  			case 1: blockType = STORED_BLOCK; break;  			case 5: blockType = STATIC_TREES; break;  			case 6: blockType = DYN_TREES; break;  			default: throw new SharpZipBaseException("Unknown block type: " + type);  			}
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelInflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelInflater.cs,ReadHeader,The following statement contains a magic number: switch (type >> 1) {  			case 1: blockType = STORED_BLOCK; break;  			case 5: blockType = STATIC_TREES; break;  			case 6: blockType = DYN_TREES; break;  			default: throw new SharpZipBaseException("Unknown block type: " + type);  			}
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelInflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelInflater.cs,DecodeStoredLength,The following statement contains a magic number: (uncomprLen = input.PeekBits(16)) < 0
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelInflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelInflater.cs,DecodeStoredLength,The following statement contains a magic number: input.DropBits(16);
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelMethodCallInliner.cs,getNewValue,The following statement contains a magic number: counter++ >= 50
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelUtils.cs,getXorKey2,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.Babel_NET,BabelUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\BabelUtils.cs,getXorKey2,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Babel_NET,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ConstantsDecrypter.cs,deobfuscate,The following statement contains a magic number: i < instrs.Count - 6
Magic Number,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Babel_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\Deobfuscator.cs,checkVersion,The following statement contains a magic number: val.Groups.Count < 2
Magic Number,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,initialize,The following statement contains a magic number: long pos = metadataOffset + 4;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,getMetadataOffset,The following statement contains a magic number: reader.Position = reader.Length - 4;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,getMetadataOffset,The following statement contains a magic number: return (int)reader.Position - 4;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,getMetadataOffset,The following statement contains a magic number: reader.Position -= 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ImageReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ImageReader.cs,getMetadataOffset,The following statement contains a magic number: i < 30
Magic Number,de4dot.code.deobfuscators.Babel_NET,InflaterCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\InflaterCreator.cs,getMagic,The following statement contains a magic number: !ldci4_1.IsLdcI4() || ldci4_1.GetLdcI4Value() != 16
Magic Number,de4dot.code.deobfuscators.Babel_NET,InflaterCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\InflaterCreator.cs,getMagic,The following statement contains a magic number: var ldci4_2 = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Babel_NET,InflaterCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\InflaterCreator.cs,getMagic,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.Babel_NET,InflaterCreator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\InflaterCreator.cs,getMagic,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.Babel_NET,MethodBodyReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\MethodBodyReader.cs,ReadInlineTok,The following statement contains a magic number: switch (reader.ReadByte()) {  			case 0: return imageReader.readTypeSig().ToTypeDefOrRef();  			case 1: return imageReader.readFieldRef();  			case 2: return imageReader.readMethodRef();  			default: throw new ApplicationException("Unknown token type");  			}
Magic Number,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: declaringTypeToken = instrs[2].GetLdcI4Value();
Magic Number,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: delegateField = instrs[3].Operand as IField;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: createMethod = instrs[4].Operand as IMethod;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,createDecrypter,The following statement contains a magic number: decryptMethod != null && DeobUtils.hasInteger(decryptMethod' 6)
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,isV30,The following statement contains a magic number: return data.Length > 10 && data[0] == 8 && data[9] <= 1 && data[10] == 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,isV30,The following statement contains a magic number: return data.Length > 10 && data[0] == 8 && data[9] <= 1 && data[10] == 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,isV30,The following statement contains a magic number: return data.Length > 10 && data[0] == 8 && data[9] <= 1 && data[10] == 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,isV30,The following statement contains a magic number: return data.Length > 10 && data[0] == 8 && data[9] <= 1 && data[10] == 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,isV30,The following statement contains a magic number: return data.Length > 10 && data[0] == 8 && data[9] <= 1 && data[10] == 8;
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: Array.Copy(encryptedData' index + 2' headerData' 0' headerData.Length);
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: index += headerData.Length + 2;
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: var key = new byte[8];
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getKeyIv,The following statement contains a magic number: headerData[(int)reader.BaseStream.Position] != 8
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getKeyIv,The following statement contains a magic number: headerData[(int)reader.BaseStream.Position] != 8
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: Array.Copy(encryptedData' index + 2' headerData' 0' headerData.Length);
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: index += headerData.Length + 2;
Magic Number,de4dot.code.deobfuscators.Babel_NET,Decrypter3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceDecrypter.cs,getHeaderData,The following statement contains a magic number: var key = new byte[6];
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceResolver.cs,initXorKeys,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.Babel_NET,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\ResourceResolver.cs,initXorKeys,The following statement contains a magic number: ints.Count == 2
Magic Number,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkDecrypterType,The following statement contains a magic number: type.NestedTypes.Count > 2
Magic Number,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkNested,The following statement contains a magic number: nested.Fields.Count == 1 || nested.Fields.Count == 3
Magic Number,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,getOffsetMagic,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.Babel_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Babel_NET\StringDecrypter.cs,checkFields,The following statement contains a magic number: type.Fields.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,checkCalledMethods,The following statement contains a magic number: calls != 2
Magic Number,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,decrypt,The following statement contains a magic number: const int iterations = 2;
Magic Number,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,decrypt,The following statement contains a magic number: var key = new Rfc2898DeriveBytes(password.passphrase' Encoding.UTF8.GetBytes(password.salt)' iterations).GetBytes(numBits / 8);
Magic Number,de4dot.code.deobfuscators.CodeFort,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\AssemblyDecrypter.cs,getEmbedPassword,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.CodeFort,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeFort,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeFort,PasswordFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\PasswordFinder.cs,findEmbedPassword,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,checkMethods,The following statement contains a magic number: type.Methods.Count != 3
Magic Number,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs.Count != 3
Magic Number,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,getCallInfo,The following statement contains a magic number: rid = (rid << 4) + (uint)hexToInt((char)((byte)c + 0x2F));
Magic Number,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,hexToInt,The following statement contains a magic number: return c - 'a' + 10;
Magic Number,de4dot.code.deobfuscators.CodeFort,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\ProxyCallFixer.cs,hexToInt,The following statement contains a magic number: return c - 'A' + 10;
Magic Number,de4dot.code.deobfuscators.CodeFort,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeFort\StringDecrypter.cs,checkMethods,The following statement contains a magic number: !hasDouble(method' 3992.0)
Magic Number,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findBundleType,The following statement contains a magic number: type.Fields.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findAssemblyManagerType,The following statement contains a magic number: type.Fields.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\AssemblyResolver.cs,findAssemblyManagerType,The following statement contains a magic number: sig == null || sig.Params.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeVeil,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeVeil,ErexResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ErexResourceReader.cs,decrypt,The following statement contains a magic number: bool isDeflated = (flags & 2) != 0;
Magic Number,de4dot.code.deobfuscators.CodeVeil,ErexResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ErexResourceReader.cs,decrypt,The following statement contains a magic number: var block = new uint[4];
Magic Number,de4dot.code.deobfuscators.CodeVeil,ErexResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ErexResourceReader.cs,decrypt,The following statement contains a magic number: var decrypted = new byte[16];
Magic Number,de4dot.code.deobfuscators.CodeVeil,ErexResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ErexResourceReader.cs,decrypt,The following statement contains a magic number: block[2] = reader.ReadUInt32();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ErexResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ErexResourceReader.cs,decrypt,The following statement contains a magic number: block[3] = reader.ReadUInt32();
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,find,The following statement contains a magic number: var call = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,find,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,checkMethodsType,The following statement contains a magic number: fields.Count < 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,removeInitCall,The following statement contains a magic number: var call = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,removeInitCall,The following statement contains a magic number: block.remove(i' 3);
Magic Number,de4dot.code.deobfuscators.CodeVeil,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MainType.cs,removeInitCall,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,createDumpedMethods,The following statement contains a magic number: b != 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,createDumpedMethods,The following statement contains a magic number: dm.mhFlags = 2;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,createDumpedMethods,The following statement contains a magic number: dm.mhMaxStack = 8;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,createDumpedMethods,The following statement contains a magic number: (b & 3) == 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,createDumpedMethods,The following statement contains a magic number: (b & 3) == 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,The following statement contains a magic number: const int RVA_EXECUTIVE_OFFSET = 1 * 4;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,The following statement contains a magic number: const int ENC_CODE_OFFSET = 6 * 4;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,The following statement contains a magic number: const int ENC_CODE_OFFSET = 6 * 4;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,The following statement contains a magic number: offset += 2;
Magic Number,de4dot.code.deobfuscators.CodeVeil,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,findMethodsData,The following statement contains a magic number: offset + ENC_CODE_OFFSET + 4 > lastOffset
Magic Number,de4dot.code.deobfuscators.CodeVeil,Decrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: (dm.mhFlags & 8) != 0
Magic Number,de4dot.code.deobfuscators.CodeVeil,DecrypterV5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,initialize,The following statement contains a magic number: var newMethodsData = new byte[data.Length - 4];
Magic Number,de4dot.code.deobfuscators.CodeVeil,DecrypterV5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,initialize,The following statement contains a magic number: Array.Copy(data' 4' newMethodsData' 0' newMethodsData.Length);
Magic Number,de4dot.code.deobfuscators.CodeVeil,DecrypterV5,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\MethodsDecrypter.cs,decryptCode,The following statement contains a magic number: j < 4 && i + j < code.Length
Magic Number,de4dot.code.deobfuscators.CodeVeil,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ProxyCallFixer.cs,getCallInfo,The following statement contains a magic number: int methodToken = 0x06000000 + ((flags & 0x3F) << 24) + (int)reader.ReadCompressedUInt32();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ProxyCallFixer.cs,findOtherTypes,The following statement contains a magic number: sig == null || sig.Params.Count != 4
Magic Number,de4dot.code.deobfuscators.CodeVeil,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ProxyCallFixer.cs,findOtherTypes,The following statement contains a magic number: sig.Params[2].GetFullName() != "System.Type[]"
Magic Number,de4dot.code.deobfuscators.CodeVeil,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ProxyCallFixer.cs,findOtherTypes,The following statement contains a magic number: var ilgType = sig.Params[3].TryGetTypeDef();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceConverter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceConverter.cs,convert,The following statement contains a magic number: switch (type) {  			case 1:		// bool  				resourceData = dataCreator.create(reader.ReadBoolean());  				break;    			case 2:		// byte  				resourceData = dataCreator.create(reader.ReadByte());  				break;    			case 3:		// byte[]  				resourceData = dataCreator.create(reader.ReadBytes(info.length));  				break;    			case 4:		// char[]  				resourceData = dataCreator.create(reader.ReadChars(info.length));  				break;    			case 5:		// sbyte  				resourceData = dataCreator.create(reader.ReadSByte());  				break;    			case 6:		// char  				resourceData = dataCreator.create(reader.ReadChar());  				break;    			case 7:		// decimal  				resourceData = dataCreator.create(reader.ReadDecimal());  				break;    			case 8:		// double  				resourceData = dataCreator.create(reader.ReadDouble());  				break;    			case 9:		// short  				resourceData = dataCreator.create(reader.ReadInt16());  				break;    			case 10:	// int  				resourceData = dataCreator.create(reader.ReadInt32());  				break;    			case 11:	// long  				resourceData = dataCreator.create(reader.ReadInt64());  				break;    			case 12:	// float  				resourceData = dataCreator.create(reader.ReadSingle());  				break;    			case 13:	// string  				resourceData = dataCreator.create(reader.ReadString());  				break;    			case 14:	// ushort  				resourceData = dataCreator.create(reader.ReadUInt16());  				break;    			case 15:	// uint  				resourceData = dataCreator.create(reader.ReadUInt32());  				break;    			case 16:	// ulong  				resourceData = dataCreator.create(reader.ReadUInt64());  				break;    			case 17:	// DateTime  				resourceData = dataCreator.create(DateTime.FromBinary(reader.ReadInt64()));  				break;    			case 18:	// TimeSpan  				resourceData = dataCreator.create(TimeSpan.FromTicks(reader.ReadInt64()));  				break;    			case 19:	// Icon  				resourceData = dataCreator.createIcon(reader.ReadBytes(info.length));  				break;    			case 20:	// Image  				resourceData = dataCreator.createImage(reader.ReadBytes(info.length));  				break;    			case 31:	// binary  				resourceData = dataCreator.createSerialized(reader.ReadBytes(info.length));  				break;    			case 21:	// Point (CV doesn't restore this type)  			default:  				throw new Exception("Unknown type");  			}
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findResourceFlags,The following statement contains a magic number: sig == null || sig.Params.Count != 4
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findResourceFlags,The following statement contains a magic number: var type = sig.Params[2].TryGetTypeDef();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findResType,The following statement contains a magic number: sig == null || sig.Params.Count != 4
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,getDlxResDict,The following statement contains a magic number: fieldType.GenericArguments.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceDecrypter.cs,findXxteaMethod,The following statement contains a magic number: !DeobUtils.hasInteger(method' 52)
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,The following statement contains a magic number: bool encrypted = (flags & 2) != 0;
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,The following statement contains a magic number: var key = new uint[4];
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,The following statement contains a magic number: key[2] = dataReader.ReadUInt32();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,The following statement contains a magic number: key[3] = dataReader.ReadUInt32();
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,read,The following statement contains a magic number: byte[] decryptedData = new byte[encryptedData.Length * 4];
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,rol3,The following statement contains a magic number: return (char)((s << 3) | (s >> (16 - 3)));
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,rol3,The following statement contains a magic number: return (char)((s << 3) | (s >> (16 - 3)));
Magic Number,de4dot.code.deobfuscators.CodeVeil,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\ResourceReader.cs,rol3,The following statement contains a magic number: return (char)((s << 3) | (s >> (16 - 3)));
Magic Number,de4dot.code.deobfuscators.CodeVeil,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\StringDecrypter.cs,checkFields,The following statement contains a magic number: data == null || data.Length == 0 || data.Length % 4 != 0
Magic Number,de4dot.code.deobfuscators.CodeVeil,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\StringDecrypter.cs,getKey,The following statement contains a magic number: ldci4.GetLdcI4Value() != 4
Magic Number,de4dot.code.deobfuscators.CodeVeil,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\StringDecrypter.cs,getKey,The following statement contains a magic number: var key = ArrayFinder.getInitializedUInt32Array(4' method' ref i);
Magic Number,de4dot.code.deobfuscators.CodeVeil,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\StringDecrypter.cs,decryptStrings,The following statement contains a magic number: var encryptedData = new uint[data.Length / 4];
Magic Number,de4dot.code.deobfuscators.CodeVeil,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\TamperDetection.cs,callsMainTypeTamperCheckMethod,The following statement contains a magic number: !checkInvokeCall(instrs[2]' "System.Reflection.Assembly"' "(System.Object)")
Magic Number,de4dot.code.deobfuscators.CodeVeil,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeVeil\TamperDetection.cs,callsMainTypeTamperCheckMethod,The following statement contains a magic number: !checkInvokeCall(instrs[4]' "System.Void"' "(System.Reflection.Assembly'System.UInt64)")
Magic Number,de4dot.code.deobfuscators.CodeWall,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,decrypt,The following statement contains a magic number: return DeobUtils.inflate(DeobUtils.aesDecrypt(encrypted' keyGenerator.GetBytes(32)' keyGenerator.GetBytes(16))' false);
Magic Number,de4dot.code.deobfuscators.CodeWall,AssemblyDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\AssemblyDecrypter.cs,decrypt,The following statement contains a magic number: return DeobUtils.inflate(DeobUtils.aesDecrypt(encrypted' keyGenerator.GetBytes(32)' keyGenerator.GetBytes(16))' false);
Magic Number,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 50;
Magic Number,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,initializeStringDecrypter,The following statement contains a magic number: staticStringInliner.add(info.Method' (method' gim' args) => stringDecrypter.decrypt(method' (int)args[0]' (int)args[1]' (int)args[2]));
Magic Number,de4dot.code.deobfuscators.CodeWall,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\MethodsDecrypter.cs,find,The following statement contains a magic number: DeobUtils.getInitCctors(module' 3)
Magic Number,de4dot.code.deobfuscators.CodeWall,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: dm.code.Length < 6 || dm.code[0] != 0x2A || dm.code[1] != 0x2A
Magic Number,de4dot.code.deobfuscators.CodeWall,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: int seed = BitConverter.ToInt32(dm.code' 2);
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,checkMethods_v30,The following statement contains a magic number: type.Methods.Count < 1 || type.Methods.Count > 2
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,checkMethods_v36,The following statement contains a magic number: type.Methods.Count != 2
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic1,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic1,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic2,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic2,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic3,The following statement contains a magic number: !ldarg.IsLdarg() || ldarg.GetParameterIndex() != 2
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic3,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.CodeWall,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\StringDecrypter.cs,findMagic3,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMersenne,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMersenne.cs,Init0,The following statement contains a magic number: const uint factor = 1812433253;
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMersenne,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMersenne.cs,Init0,The following statement contains a magic number: mt[mti] = (factor * (mt[mti - 1] ^ (mt[mti - 1] >> 30)) + (uint)mti);
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMersenne,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMersenne.cs,RandomInit,The following statement contains a magic number: i < 37
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,RandomInit,The following statement contains a magic number: s = s * 29943829 - 1;
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,RandomInit,The following statement contains a magic number: i < 5
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,RandomInit,The following statement contains a magic number: i < 19
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: sum = (ulong)2111111111UL * (ulong)x[3] +  			   (ulong)1492 * (ulong)(x[2]) +  			   (ulong)1776 * (ulong)(x[1]) +  			   (ulong)5115 * (ulong)(x[0]) +  			   (ulong)x[4];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: x[3] = x[2];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: x[3] = x[2];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: x[2] = x[1];
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: x[4] = (uint)(sum >> 32);
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,BRandom,The following statement contains a magic number: x[4] = (uint)(sum >> 32);
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,Random,The following statement contains a magic number: return (double)BRandom() * (1.0/(65536.0*65536.0));
Magic Number,de4dot.code.deobfuscators.CodeWall.randomc,CRandomMother,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\randomc\CRandomMother.cs,Random,The following statement contains a magic number: return (double)BRandom() * (1.0/(65536.0*65536.0));
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\AssemblyResolver.cs,checkInitMethod,The following statement contains a magic number: var newobj = instrs[2];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\AssemblyResolver.cs,initializeEmbeddedAssemblies,The following statement contains a magic number: var newAssemblyInfos = new List<AssemblyInfo>(tmpAssemblyInfos.Length / 2);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ConstantsDecrypter.cs,checkType,The following statement contains a magic number: type.Methods.Count != 7
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ConstantsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ConstantsDecrypter.cs,checkType,The following statement contains a magic number: type.Fields.Count < 1 || type.Fields.Count > 2
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: val.Groups.Count < 2
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodBodyReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodBodyReader.cs,readExceptionHandlers,The following statement contains a magic number: readExceptionHandlers((totalSize - 4) / 24);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodBodyReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodBodyReader.cs,readExceptionHandlers,The following statement contains a magic number: readExceptionHandlers((totalSize - 4) / 24);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodsDecrypter.cs,check,The following statement contains a magic number: type.Fields.Count != 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodsDecrypter.cs,getTokens,The following statement contains a magic number: var ldci4_3 = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodsDecrypter.cs,getTokens,The following statement contains a magic number: var call = instrs[i + 3];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\MethodsDecrypter.cs,getTokens,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: uint declaringTypeToken = (uint)(int)instrs[2].Operand;
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: var createMethod = instrs[3].Operand as MethodDef;
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,getProxyCreateMethod,The following statement contains a magic number: type.Fields.Count < 1 || type.Fields.Count > 14
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,findDesktopOrCompactFramework,The following statement contains a magic number: type.Fields.Count != 5
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,initializeHeaderInfo,The following statement contains a magic number: deflatedFlag = 2;
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,initializeHeaderInfo,The following statement contains a magic number: bitwiseNotEncryptedFlag = 4;
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,updateFlags,The following statement contains a magic number: method == null || method.Body == null || method.Body.Variables.Count < 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,updateFlags,The following statement contains a magic number: var ldloc = instructions[i - 2];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,updateFlags,The following statement contains a magic number: switch (frameworkType) {  			case FrameworkType.Desktop:  				if (!module.IsClr1x) {  					if (constants.Count == 2) {  						desEncryptedFlag = (byte)constants[0];  						deflatedFlag = (byte)constants[1];  						return true;  					}  				}  				else {  					if (constants.Count == 1) {  						desEncryptedFlag = (byte)constants[0];  						return true;  					}  				}  				break;    			case FrameworkType.Silverlight:  				if (constants.Count == 1) {  					bitwiseNotEncryptedFlag = (byte)constants[0];  					return true;  				}  				break;    			case FrameworkType.CompactFramework:  				if (constants.Count == 1) {  					desEncryptedFlag = (byte)constants[0];  					return true;  				}  				break;  			}
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,getHeaderSkipBytes,The following statement contains a magic number: loopCount < 2 || loopCount > 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,getHeaderSkipBytes,The following statement contains a magic number: loopCount < 2 || loopCount > 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: var iv = new byte[8];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: sourceStream.Read(iv' 0' 8);
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,getKey,The following statement contains a magic number: byte[] key = new byte[8];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceResolver.cs,checkSetupMethod,The following statement contains a magic number: var newobj = instrs[2];
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceResolver.cs,checkSetupMethod,The following statement contains a magic number: switch (foundCount) {  			case 1: return ResolverVersion.V1;  			case 2: return ResolverVersion.V2;  			default: return ResolverVersion.None;  			}
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\StringDecrypter.cs,findStringDecrypterType,The following statement contains a magic number: type.Methods.Count != 2 && type.Methods.Count != 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\StringDecrypter.cs,findStringDecrypterType,The following statement contains a magic number: type.Methods.Count != 2 && type.Methods.Count != 3
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\TamperDetection.cs,findDesktop,The following statement contains a magic number: type.Methods.Count < 3 || type.Methods.Count > 20
Magic Number,de4dot.code.deobfuscators.CryptoObfuscator,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\TamperDetection.cs,findDesktop,The following statement contains a magic number: type.Methods.Count < 3 || type.Methods.Count > 20
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate1,The following statement contains a magic number: i >= instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate1,The following statement contains a magic number: var ldelem = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate1,The following statement contains a magic number: block.remove(i' 3 - 1);
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate2,The following statement contains a magic number: i >= instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate2,The following statement contains a magic number: var ldelem = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate2,The following statement contains a magic number: block.remove(i' 3 - 1);
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockDeobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockDeobfuscator.cs,deobfuscate3,The following statement contains a magic number: i += 2;
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,The following statement contains a magic number: var arrayInitField = instrs[2].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,The following statement contains a magic number: var calledMethod = instrs[3].Operand as IMethod;
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,initializeArrays2,The following statement contains a magic number: var targetField = instrs[4].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Dup
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: var ldtoken = instrs[i + 3];
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: var call = instrs[i + 4];
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: var stsfld = instrs[i + 5];
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: block.remove(i' 6);
Magic Number,de4dot.code.deobfuscators.DeepSea,ArrayBlockState,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,removeInitCode,The following statement contains a magic number: i < instrs.Count - 5
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,createArray,The following statement contains a magic number: switch (etype) {  				case ElementType.Boolean:  				case ElementType.I1:  				case ElementType.U1:  					return (byte[])data.Clone();    				case ElementType.Char:  				case ElementType.I2:  				case ElementType.U2:  					var ary2 = new ushort[data.Length / 2];  					Buffer.BlockCopy(data' 0' ary2' 0' ary2.Length * 2);  					return ary2;    				case ElementType.I4:  				case ElementType.U4:  					var ary4 = new uint[data.Length / 4];  					Buffer.BlockCopy(data' 0' ary4' 0' ary4.Length * 4);  					return ary4;    				default:  					throw new ApplicationException("Invalid etype");  				}
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,createArray,The following statement contains a magic number: switch (etype) {  				case ElementType.Boolean:  				case ElementType.I1:  				case ElementType.U1:  					return (byte[])data.Clone();    				case ElementType.Char:  				case ElementType.I2:  				case ElementType.U2:  					var ary2 = new ushort[data.Length / 2];  					Buffer.BlockCopy(data' 0' ary2' 0' ary2.Length * 2);  					return ary2;    				case ElementType.I4:  				case ElementType.U4:  					var ary4 = new uint[data.Length / 4];  					Buffer.BlockCopy(data' 0' ary4' 0' ary4.Length * 4);  					return ary4;    				default:  					throw new ApplicationException("Invalid etype");  				}
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,createArray,The following statement contains a magic number: switch (etype) {  				case ElementType.Boolean:  				case ElementType.I1:  				case ElementType.U1:  					return (byte[])data.Clone();    				case ElementType.Char:  				case ElementType.I2:  				case ElementType.U2:  					var ary2 = new ushort[data.Length / 2];  					Buffer.BlockCopy(data' 0' ary2' 0' ary2.Length * 2);  					return ary2;    				case ElementType.I4:  				case ElementType.U4:  					var ary4 = new uint[data.Length / 4];  					Buffer.BlockCopy(data' 0' ary4' 0' ary4.Length * 4);  					return ary4;    				default:  					throw new ApplicationException("Invalid etype");  				}
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ArrayBlockState.cs,createArray,The following statement contains a magic number: switch (etype) {  				case ElementType.Boolean:  				case ElementType.I1:  				case ElementType.U1:  					return (byte[])data.Clone();    				case ElementType.Char:  				case ElementType.I2:  				case ElementType.U2:  					var ary2 = new ushort[data.Length / 2];  					Buffer.BlockCopy(data' 0' ary2' 0' ary2.Length * 2);  					return ary2;    				case ElementType.I4:  				case ElementType.U4:  					var ary4 = new uint[data.Length / 4];  					Buffer.BlockCopy(data' 0' ary4' 0' ary4.Length * 4);  					return ary4;    				default:  					throw new ApplicationException("Invalid etype");  				}
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV3SL,The following statement contains a magic number: !instrs[i + 2].IsLdcI4()
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV3SL,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.And
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV3SL,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV41SL,The following statement contains a magic number: !instrs[i].IsLdcI4() || instrs[i].GetLdcI4Value() != 5
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV41SL,The following statement contains a magic number: !instrs[i + 2].IsLdcI4() || instrs[i + 2].GetLdcI4Value() != 0x1F
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV41SL,The following statement contains a magic number: !instrs[i + 2].IsLdcI4() || instrs[i + 2].GetLdcI4Value() != 0x1F
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,isV41SL,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.And
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkHandlerV4,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,checkHandlerV404_41,The following statement contains a magic number: i < instrs.Count - 6
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,getMagicIndex404,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,getMagicIndex41Trial,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,getCallDecryptMethodIndex,The following statement contains a magic number: calledMethod == null || calledMethod.MethodSig.GetParamCount() < 2
Magic Number,de4dot.code.deobfuscators.DeepSea,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\AssemblyResolver.cs,decrypt41Trial,The following statement contains a magic number: data[i] ^= (byte)(i / 3 + magic);
Magic Number,de4dot.code.deobfuscators.DeepSea,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.DeepSea,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.DeepSea,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\Deobfuscator.cs,detectMethodProxyObfuscation,The following statement contains a magic number: const int MIN_FOUND_PROXIES = 10;
Magic Number,de4dot.code.deobfuscators.DeepSea,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\Deobfuscator.cs,detectMethodProxyObfuscation,The following statement contains a magic number: checkedMethods++ >= 1000
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,inlineMethod,The following statement contains a magic number: instrIndex < 2
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,inlineMethod,The following statement contains a magic number: var ldci4_1st = block.Instructions[instrIndex - 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,inlineMethod,The following statement contains a magic number: arg1 = parameters[parameters.Count - 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,inlineMethod,The following statement contains a magic number: var patcher = tryInlineOtherMethod(instrIndex' methodToInline' methodToInline.Body.Instructions[index]' index + 1' 2);
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,emulateInstructions,The following statement contains a magic number: counter++ >= 50
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,canInline,The following statement contains a magic number: paramCount < 2
Magic Number,de4dot.code.deobfuscators.DeepSea,DsMethodCallInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsMethodCallInliner.cs,canInline,The following statement contains a magic number: var param2 = parameters[paramCount - 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,DsUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\DsUtils.cs,getArgValue,The following statement contains a magic number: switch (instr.OpCode.Code) {  			case Code.Ldc_I4_S: arg = (int)(sbyte)instr.Operand; return true;  			case Code.Ldc_I4_M1: arg = -1; return true;  			case Code.Ldc_I4_0: arg = 0; return true;  			case Code.Ldc_I4_1: arg = 1; return true;  			case Code.Ldc_I4_2: arg = 2; return true;  			case Code.Ldc_I4_3: arg = 3; return true;  			case Code.Ldc_I4_4: arg = 4; return true;  			case Code.Ldc_I4_5: arg = 5; return true;  			case Code.Ldc_I4_6: arg = 6; return true;  			case Code.Ldc_I4_7: arg = 7; return true;  			case Code.Ldc_I4_8: arg = 8; return true;  			case Code.Ldnull: arg = null; return true;    			case Code.Ldstr:  			case Code.Ldc_I4:  			case Code.Ldc_I8:  			case Code.Ldc_R4:  			case Code.Ldc_R8:  				arg = instr.Operand;  				return true;    			case Code.Ldarg:  			case Code.Ldarg_S:  			case Code.Ldarg_0:  			case Code.Ldarg_1:  			case Code.Ldarg_2:  			case Code.Ldarg_3:  			case Code.Ldloc:  			case Code.Ldloc_S:  			case Code.Ldloc_0:  			case Code.Ldloc_1:  			case Code.Ldloc_2:  			case Code.Ldloc_3:  				arg = null;  				return true;    			default:  				arg = null;  				return false;  			}
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,fixFieldCtorCalls,The following statement contains a magic number: instrPushes == null || instrPushes.Count != 2
Magic Number,de4dot.code.deobfuscators.DeepSea,FieldsRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\FieldsRestorer.cs,fixFieldCtorCalls,The following statement contains a magic number: i -= 3;
Magic Number,de4dot.code.deobfuscators.DeepSea,ResolverBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResolverBase.cs,decryptResourceV41SL,The following statement contains a magic number: data[i + 1] ^= (byte)((k << (i & 5)) + i);
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,checkHandlerV41,The following statement contains a magic number: data41.magic = (int)val >> 3;
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Retail,The following statement contains a magic number: var ldarg = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Retail,The following statement contains a magic number: var sub = instrs[i + 3];
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Retail,The following statement contains a magic number: var ldci4 = instrs[i + 4];
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Retail,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Trial,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Shr
Magic Number,de4dot.code.deobfuscators.DeepSea,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\ResourceResolver.cs,getMagicArgIndex41Trial,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findKey,The following statement contains a magic number: var stloc = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findKey,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findMagic,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findMagic,The following statement contains a magic number: (arg2 = instrs[i + 3].GetParameterIndex()) < 0
Magic Number,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findMagic,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,isPossibleDecrypterMethod,The following statement contains a magic number: fields == null || fields.Count != 3
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,checkMethodSignature,The following statement contains a magic number: return count >= 2;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,initialize,The following statement contains a magic number: arrayInfo.initField.InitialValue.Length % 2 == 1
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,initialize,The following statement contains a magic number: encryptedData = new ushort[arrayInfo.initField.InitialValue.Length / 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findKeyShift,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,getArrayInfo,The following statement contains a magic number: var initField = instrs[2].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,getArrayInfo,The following statement contains a magic number: var field = instrs[4].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptTrial,The following statement contains a magic number: int numChars = ((keyChar ^ encryptedData[offset + 2]) << 16) + (keyChar ^ encryptedData[offset + 3]);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptTrial,The following statement contains a magic number: int numChars = ((keyChar ^ encryptedData[offset + 2]) << 16) + (keyChar ^ encryptedData[offset + 3]);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptTrial,The following statement contains a magic number: int numChars = ((keyChar ^ encryptedData[offset + 2]) << 16) + (keyChar ^ encryptedData[offset + 3]);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptTrial,The following statement contains a magic number: offset += 4;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail2,The following statement contains a magic number: return decryptRetail(magic2' magic3' 2' 1' 0' 8' 0);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail2,The following statement contains a magic number: return decryptRetail(magic2' magic3' 2' 1' 0' 8' 0);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail3,The following statement contains a magic number: return decryptRetail(magic2' magic3' 0' 2' 1' 0x20' 17);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail3,The following statement contains a magic number: return decryptRetail(magic2' magic3' 0' 2' 1' 0x20' 17);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail,The following statement contains a magic number: numChars <<= 15;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail,The following statement contains a magic number: numChars |= encryptedData[offset + 3] ^ keyChar;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo41,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decryptRetail,The following statement contains a magic number: offset += 3;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,initialize,The following statement contains a magic number: charArrayFields == null || charArrayFields.Count != 2
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,initialize,The following statement contains a magic number: encryptedDataField.InitialValue.Length % 2 == 1
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,initialize,The following statement contains a magic number: encryptedData = new ushort[encryptedDataField.InitialValue.Length / 2];
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findEncryptedStrings,The following statement contains a magic number: var savedField = instrs[2].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,getPublicKeyTokenKey,The following statement contains a magic number: key[i] = (short)((b << 4) ^ b);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo40,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,decrypt,The following statement contains a magic number: int stringLen = encryptedData[index++] + ((int)encryptedData[index++] << 16);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo13,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,getPublicKeyTokenKey,The following statement contains a magic number: key[i] = (short)((b << 4) ^ b);
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo13,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findMagic,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Xor
Magic Number,de4dot.code.deobfuscators.DeepSea,DecrypterInfo13,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,findMagic,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Dotfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100;
Magic Number,de4dot.code.deobfuscators.Dotfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Dotfuscator,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: val.Groups.Count < 2
Magic Number,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,findStringDecrypterMethods,The following statement contains a magic number: instructions[i + 2].OpCode.Code != Code.Add
Magic Number,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,findStringDecrypterMethods,The following statement contains a magic number: i <= instructions.Count - 3
Magic Number,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,decrypt,The following statement contains a magic number: byte b2 = (byte)((byte)(c >> 8) ^ key++);
Magic Number,de4dot.code.deobfuscators.Dotfuscator,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Dotfuscator\StringDecrypter.cs,decrypt,The following statement contains a magic number: chars[i] = (char)((b1 << 8) | b2);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: swLabels == null || swLabels.Count < 7
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: !getMagicXorDC1(method' swLabels[2]' out dcGen.magic3)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: !getMagicDC1(method' swLabels[3]' out dcGen.magic4)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: !getMagicDC1(method' swLabels[4]' out dcGen.magic5)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: !getMagicDC1(method' swLabels[5]' out dcGen.magic6)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getDCGen1,The following statement contains a magic number: !getMagicXorDC1(method' swLabels[6]' out dcGen.magic7)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC1,The following statement contains a magic number: var ldci4 = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC1,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.Stfld
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC1,The following statement contains a magic number: i < instrs.Count - 3
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicXorDC1,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Stfld
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicXorDC1,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC3,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Stfld
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC3,The following statement contains a magic number: index = i + 3;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Dynocode,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getMagicDC3,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DCGen3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getValues,The following statement contains a magic number: int i = 7;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DCGen3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getValues,The following statement contains a magic number: (x % 4) == 0
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DCGen3,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Dynocode.cs,getValues,The following statement contains a magic number: (x % 16) == 0
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,checkInitMethodSilverlight,The following statement contains a magic number: type.NestedTypes.Count != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,checkInitMethod,The following statement contains a magic number: type.NestedTypes.Count < 2 || type.NestedTypes.Count > 6
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,checkInitMethod,The following statement contains a magic number: type.NestedTypes.Count < 2 || type.NestedTypes.Count > 6
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,getDecryptMethod,The following statement contains a magic number: !DeobUtils.hasInteger(method' 32) ||  					!DeobUtils.hasInteger(method' 121)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,getDecryptMethod,The following statement contains a magic number: !DeobUtils.hasInteger(method' 32) ||  					!DeobUtils.hasInteger(method' 121)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: var data = new byte[8];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[7] = (byte)(magic >> 8);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[7] = (byte)(magic >> 8);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[6] = (byte)(magic >> 16);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[6] = (byte)(magic >> 16);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[5] = (byte)(magic >> 24);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[5] = (byte)(magic >> 24);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[4] = (byte)(magic >> 32);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[4] = (byte)(magic >> 32);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[1] = (byte)(magic >> 40);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[3] = (byte)(magic >> 48);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[3] = (byte)(magic >> 48);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[2] = (byte)(magic >> 56);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createDecryptKey,The following statement contains a magic number: data[2] = (byte)(magic >> 56);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createAssemblyInfos,The following statement contains a magic number: int numElements = DeobUtils.hasInteger(handlerMethod' 3) ? 3 : 2;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createAssemblyInfos,The following statement contains a magic number: int numElements = DeobUtils.hasInteger(handlerMethod' 3) ? 3 : 2;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,createAssemblyInfos,The following statement contains a magic number: int numElements = DeobUtils.hasInteger(handlerMethod' 3) ? 3 : 2;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,tryCreateAssemblyInfos,The following statement contains a magic number: info.Filename = Encoding.UTF8.GetString(Convert.FromBase64String(ary[i + 2]));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,tryCreateAssemblyInfos,The following statement contains a magic number: numElements >= 3
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decrypt,The following statement contains a magic number: var indexes = new byte[256];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decrypt,The following statement contains a magic number: encryptedData[i] ^= (byte)(val ^ key2[(i >> 2) & 3] ^ key2[(i + 1) & 3]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decrypt,The following statement contains a magic number: encryptedData[i] ^= (byte)(val ^ key2[(i >> 2) & 3] ^ key2[(i + 1) & 3]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decrypt,The following statement contains a magic number: encryptedData[i] ^= (byte)(val ^ key2[(i >> 2) & 3] ^ key2[(i + 1) & 3]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decompress,The following statement contains a magic number: return DeobUtils.inflate(compressedData' 8' compressedData.Length - 8' true);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\AssemblyResolver.cs,decompress,The following statement contains a magic number: return DeobUtils.inflate(compressedData' 8' compressedData.Length - 8' true);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods = new MethodDef[6];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods[5] = findEfConstMethodCall(efConstMethods[0]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods[4] = findEfConstMethodCall(efConstMethods[5]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods[4] = findEfConstMethodCall(efConstMethods[5]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: var calls = findEfConstMethodCalls(efConstMethods[4]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: calls.Count != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods[2] = calls[0];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: getNumberOfTypeofs(calls[0]) == 3
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,initializeEfConstMethods,The following statement contains a magic number: efConstMethods[3] = findEfConstMethodCall(efConstMethods[1]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findInt1And2,The following statement contains a magic number: var consts = getConstants(efConstMethods[2]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findInt1And2,The following statement contains a magic number: consts.Count != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findInt3,The following statement contains a magic number: var consts = getConstants(efConstMethods[5]);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findMethodInts,The following statement contains a magic number: methods.Count < 3
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findMethod2Int,The following statement contains a magic number: constants.Count != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,findMethod3Int,The following statement contains a magic number: countInstructions(method' Code.Ldarg_0) != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod1,The following statement contains a magic number: return binOp3(binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[0].DeclaringType.MDToken.ToInt32()' efConstMethods[4].DeclaringType.MDToken.ToInt32()))' constMethod6());
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod2,The following statement contains a magic number: return binOp1(efConstMethods[2].DeclaringType.MDToken.ToInt32()' efConstMethods[3].DeclaringType.MDToken.ToInt32() ^ binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[5].DeclaringType.MDToken.ToInt32()' constMethod4())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod2,The following statement contains a magic number: return binOp1(efConstMethods[2].DeclaringType.MDToken.ToInt32()' efConstMethods[3].DeclaringType.MDToken.ToInt32() ^ binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[5].DeclaringType.MDToken.ToInt32()' constMethod4())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod2,The following statement contains a magic number: return binOp1(efConstMethods[2].DeclaringType.MDToken.ToInt32()' efConstMethods[3].DeclaringType.MDToken.ToInt32() ^ binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[5].DeclaringType.MDToken.ToInt32()' constMethod4())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod3,The following statement contains a magic number: return binOp3(binOp1(constMethod2() ^ i1' efConstMethods[3].DeclaringType.MDToken.ToInt32())' binOp2(efConstMethods[0].DeclaringType.MDToken.ToInt32() ^ efConstMethods[5].DeclaringType.MDToken.ToInt32()' i2));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod3,The following statement contains a magic number: return binOp3(binOp1(constMethod2() ^ i1' efConstMethods[3].DeclaringType.MDToken.ToInt32())' binOp2(efConstMethods[0].DeclaringType.MDToken.ToInt32() ^ efConstMethods[5].DeclaringType.MDToken.ToInt32()' i2));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod4,The following statement contains a magic number: return binOp3(efConstMethods[3].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[0].DeclaringType.MDToken.ToInt32()' binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[5].DeclaringType.MDToken.ToInt32())))));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod4,The following statement contains a magic number: return binOp3(efConstMethods[3].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[0].DeclaringType.MDToken.ToInt32()' binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[5].DeclaringType.MDToken.ToInt32())))));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod4,The following statement contains a magic number: return binOp3(efConstMethods[3].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[0].DeclaringType.MDToken.ToInt32()' binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[5].DeclaringType.MDToken.ToInt32())))));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod4,The following statement contains a magic number: return binOp3(efConstMethods[3].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[0].DeclaringType.MDToken.ToInt32()' binOp2(efConstMethods[1].DeclaringType.MDToken.ToInt32()' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[5].DeclaringType.MDToken.ToInt32())))));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod5,The following statement contains a magic number: return binOp2(binOp2(constMethod3()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' constMethod2()))' efConstMethods[5].DeclaringType.MDToken.ToInt32());
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod5,The following statement contains a magic number: return binOp2(binOp2(constMethod3()' binOp1(efConstMethods[4].DeclaringType.MDToken.ToInt32()' constMethod2()))' efConstMethods[5].DeclaringType.MDToken.ToInt32());
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod6,The following statement contains a magic number: return binOp1(efConstMethods[5].DeclaringType.MDToken.ToInt32()' binOp3(binOp2(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[0].DeclaringType.MDToken.ToInt32())' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32() ^ i3' constMethod5())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod6,The following statement contains a magic number: return binOp1(efConstMethods[5].DeclaringType.MDToken.ToInt32()' binOp3(binOp2(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[0].DeclaringType.MDToken.ToInt32())' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32() ^ i3' constMethod5())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,constMethod6,The following statement contains a magic number: return binOp1(efConstMethods[5].DeclaringType.MDToken.ToInt32()' binOp3(binOp2(efConstMethods[4].DeclaringType.MDToken.ToInt32()' efConstMethods[0].DeclaringType.MDToken.ToInt32())' binOp3(efConstMethods[2].DeclaringType.MDToken.ToInt32() ^ i3' constMethod5())));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(type.MDToken.ToInt32() >> 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(cm1 >> 16));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(type.MDToken.ToInt32() >> 8));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(type.MDToken.ToInt32() >> 16));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(cm1 >> 8));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: bytes.Add((byte)(cm1 >> 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: magic += magic << 20;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: magic ^= magic >> 12;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: magic += magic << 6;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: magic ^= magic >> 22;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\DecrypterType.cs,getMagic,The following statement contains a magic number: magic += magic << 30;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,EfConstantsReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\EfConstantsReader.cs,findConstants,The following statement contains a magic number: localsValuesInt32.Count != 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,checkIfV32OrLater,The following statement contains a magic number: return numInts >= 2;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findConstants,The following statement contains a magic number: checkMinus2 = isV32OrLater || DeobUtils.hasInteger(stringMethod' -2);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findFlags2,The following statement contains a magic number: var flags = new List<FlagsInfo>(3);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findFlags2,The following statement contains a magic number: flags.Count != 3
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,getFlagsLocal,The following statement contains a magic number: index + 5 >= instrs.Count
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: tmpKey[i] ^= (byte)(magic1 >> ((i & 3) << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: tmpKey[i] ^= (byte)(magic1 >> ((i & 3) << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: var ary2 = reader.ReadBytes(4);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: val = -(magic1 ^ i5) ^ (ary2[2] | (ary2[0] << 8) | (ary2[3] << 16) | (ary2[1] << 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: val = -(magic1 ^ i5) ^ (ary2[2] | (ary2[0] << 8) | (ary2[3] << 16) | (ary2[1] << 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: val = -(magic1 ^ i5) ^ (ary2[2] | (ary2[0] << 8) | (ary2[3] << 16) | (ary2[1] << 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: val = -(magic1 ^ i5) ^ (ary2[2] | (ary2[0] << 8) | (ary2[3] << 16) | (ary2[1] << 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: val = -(magic1 ^ i5) ^ (ary2[2] | (ary2[0] << 8) | (ary2[3] << 16) | (ary2[1] << 24));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: checkMinus2 && flags == -2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: bytes[i] ^= (byte)((pkt.Data[i & 7] >> 5) + (pkt.Data[i & 7] << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: bytes[i] ^= (byte)((pkt.Data[i & 7] >> 5) + (pkt.Data[i & 7] << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: bytes[i] ^= (byte)((pkt.Data[i & 7] >> 5) + (pkt.Data[i & 7] << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: bytes[i] ^= (byte)((pkt.Data[i & 7] >> 5) + (pkt.Data[i & 7] << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: var dst = new byte[src[2] + (src[3] << 8) + (src[0] << 16) + (src[1] << 24)];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: var dst = new byte[src[2] + (src[3] << 8) + (src[0] << 16) + (src[1] << 24)];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: var dst = new byte[src[2] + (src[3] << 8) + (src[0] << 16) + (src[1] << 24)];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: var dst = new byte[src[2] + (src[3] << 8) + (src[0] << 16) + (src[1] << 24)];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: var dst = new byte[src[2] + (src[3] << 8) + (src[0] << 16) + (src[1] << 24)];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: int srcIndex = 4;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: int bit = 128;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: bit == 256
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: int numBytes = (src[srcIndex] >> 2) + 3;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: int numBytes = (src[srcIndex] >> 2) + 3;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: int copyIndex = dstIndex - ((src[srcIndex + 1] + (src[srcIndex] << 8)) & 0x3FF);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,rld,The following statement contains a magic number: srcIndex += 2;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: byte b = (byte)((key[1] + 7) ^ (dest.Length + 11));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: byte b = (byte)((key[1] + 7) ^ (dest.Length + 11));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: uint lcg = (uint)((key[0] | (key[2] << 8)) + (b << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: uint lcg = (uint)((key[0] | (key[2] << 8)) + (b << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: uint lcg = (uint)((key[0] | (key[2] << 8)) + (b << 3));
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: b += 3;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: xn = (ushort)(lcg >> 16);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: b = (byte)(tmp + 3);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,decrypt1,The following statement contains a magic number: xn >>= 8;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,lcgNext,The following statement contains a magic number: return lcg * 214013 + 2531011;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,lcgNext,The following statement contains a magic number: return lcg * 214013 + 2531011;
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInts,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,emulateDynocode,The following statement contains a magic number: index + 4 >= instrs.Count
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,emulateDynocode,The following statement contains a magic number: var ldloc = instrs[index + 3];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,emulateDynocode,The following statement contains a magic number: !ldloc.IsLdloc() || instrs[index + 4].OpCode.Code != Code.Stfld
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInitIntsIndex,The following statement contains a magic number: var instr = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInt3Old,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInt3New,The following statement contains a magic number: index + 3 >= instrs.Count
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\StringDecrypter.cs,findInt5,The following statement contains a magic number: ldci4.GetLdcI4Value() != 4
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: bool hasConstantM2 = DeobUtils.hasInteger(decryptStringMethod' -2);
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals11) &&  				checkTypeFields(fields11)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals11) &&  				checkTypeFields(fields11)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals13) &&  				checkTypeFields(fields13)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 35 &&  				decryptStringMethod.Body.MaxStack <= 50 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals13) &&  				checkTypeFields(fields13)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 150 &&  				decryptStringMethod.Body.MaxStack <= 200 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals14) &&  				checkTypeFields(fields14)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 150 &&  				decryptStringMethod.Body.MaxStack <= 200 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals14) &&  				checkTypeFields(fields14)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 0 &&  				new LocalTypes(decryptStringMethod).exactly(locals24) &&  				checkTypeFields(fields24)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				!decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals26) &&  				checkTypeFields(fields26)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsPublic &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals27) &&  				checkTypeFields(fields27)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				decryptStringMethod.Body.ExceptionHandlers.Count == 1 &&  				new LocalTypes(decryptStringMethod).exactly(locals28) &&  				checkTypeFields(fields28)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals29) &&  				checkTypeFields(fields29)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 0 &&  				decryptStringType.NestedTypes.Count == 0 &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals29) &&  				checkTypeFields(fields29)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals30) &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals30) &&  				checkTypeFields(fields30)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals30) &&  				!hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals30) &&  				checkTypeFields(fields30)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals31) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals31) &&  				checkTypeFields(fields31)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Int32"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals31) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals31) &&  				checkTypeFields(fields31)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals32) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals32) &&  				checkTypeFields(fields32)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  				decryptStringType.NestedTypes.Count == 0 &&  				DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  				otherMethods[0].IsPrivate &&  				otherMethods[0].IsStatic &&  				new LocalTypes(otherMethods[0]).exactly(olocals32) &&  				hasConstantM2 &&  				decryptStringMethod.IsNoInlining &&  				decryptStringMethod.IsAssembly &&  				!decryptStringMethod.IsSynchronized &&  				decryptStringMethod.Body.MaxStack >= 1 &&  				decryptStringMethod.Body.MaxStack <= 8 &&  				(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  				new LocalTypes(decryptStringMethod).exactly(locals32) &&  				checkTypeFields(fields32)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 1 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					hasConstantM2 &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 1 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					hasConstantM2 &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: var fields33 = new string[] {  					getNestedTypeName(0)'  					getNestedTypeName(1)'  					"System.Byte[]"'  					"System.Int16"'  					"System.Int32"'  					"System.Byte[]"'  					"System.Int32"'  					"System.Int32"'  					getNestedTypeName(2)'  				};
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33) &&  					checkTypeFields(fields33)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: var fields33_149 = new string[] {  					getNestedTypeName(0)'  					getNestedTypeName(1)'  					"System.Byte[]"'  					"System.Int16"'  					"System.Int32"'  					"System.Byte[]"'  					"System.Int32"'  					"System.Int32"'  					getNestedTypeName(2)'  				};
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33_149) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33_149) &&  					checkTypeFields2(fields33_149)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33_149) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33_149) &&  					checkTypeFields2(fields33_149)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals33_149) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					(decryptStringMethod.Body.ExceptionHandlers.Count == 1 || decryptStringMethod.Body.ExceptionHandlers.Count == 2) &&  					new LocalTypes(decryptStringMethod).exactly(locals33_149) &&  					checkTypeFields2(fields33_149)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: var fields35 = new string[] {  					getNestedTypeName(0)'  					getNestedTypeName(1)'  					"System.Byte[]"'  					"System.Int16"'  					"System.Int32"'  					"System.Byte[]"'  					"System.Int32"'  					"System.Int32"'  					getNestedTypeName(2)'  				};
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals35) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					decryptStringMethod.Body.ExceptionHandlers.Count >= 2 &&  					new LocalTypes(decryptStringMethod).all(locals35) &&  					checkTypeFields2(fields35)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals35) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					decryptStringMethod.Body.ExceptionHandlers.Count >= 2 &&  					new LocalTypes(decryptStringMethod).all(locals35) &&  					checkTypeFields2(fields35)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: otherMethods.Count == 1 &&  					decryptStringType.NestedTypes.Count == 3 &&  					DotNetUtils.isMethod(otherMethods[0]' "System.Void"' "(System.Byte[]'System.Int32'System.Byte[])") &&  					otherMethods[0].IsPrivate &&  					otherMethods[0].IsStatic &&  					new LocalTypes(otherMethods[0]).exactly(olocals35) &&  					decryptStringMethod.IsNoInlining &&  					decryptStringMethod.IsAssembly &&  					!decryptStringMethod.IsSynchronized &&  					decryptStringMethod.Body.MaxStack >= 1 &&  					decryptStringMethod.Body.MaxStack <= 8 &&  					decryptStringMethod.Body.ExceptionHandlers.Count >= 2 &&  					new LocalTypes(decryptStringMethod).all(locals35) &&  					checkTypeFields2(fields35)
Magic Number,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,detect,The following statement contains a magic number: decryptStringType.NestedTypes.Count == 3
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\AntiStrongName.cs,remove,The following statement contains a magic number: const int numInstrsToRemove = 11;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,IniFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,IniFile,The following statement contains a magic number: match.Groups.Count < 3
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,IniFile,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,IniFile,The following statement contains a magic number: var value = match.Groups[2].ToString().Trim();
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint headerOffset = (uint)peImage.Length - 12;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint ezencryptionLibLength = peImage.offsetReadUInt32(headerOffset + 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint iniFileLength = peImage.offsetReadUInt32(headerOffset + 8);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint offsetClrVersionNumber = checked(offsetEncryptedAssembly - 12);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint clrVerMinor = peImage.offsetReadUInt32(offsetClrVersionNumber + 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: uint clrVerBuild = peImage.offsetReadUInt32(offsetClrVersionNumber + 8);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: clrVerMajor <= 0 || clrVerMajor >= 20 || clrVerMinor >= 20 || clrVerBuild >= 1000000
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: clrVerMajor <= 0 || clrVerMajor >= 20 || clrVerMinor >= 20 || clrVerBuild >= 1000000
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,unpack2,The following statement contains a magic number: clrVerMajor <= 0 || clrVerMajor >= 20 || clrVerMinor >= 20 || clrVerBuild >= 1000000
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,clearDllBit,The following statement contains a magic number: uint characteristicsOffset = (uint)mainPeImage.PEImage.ImageNTHeaders.FileHeader.StartOffset + 18;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,ApplicationModeUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\ApplicationModeUnpacker.cs,clearDllBit,The following statement contains a magic number: characteristics |= 2;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: uint numPatches = peImage.offsetReadUInt32(peImage.Length - 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: uint offset = checked(peImage.Length - 4 - numPatches * 8);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: uint offset = checked(peImage.Length - 4 - numPatches * 8);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: var value = peImage.offsetReadUInt32(offset + 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: offset += 8;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: value = peImage.offsetReadUInt32(offset + 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,patch2,The following statement contains a magic number: value == 4
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,getValue,The following statement contains a magic number: const uint magic = 2749;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,getValue,The following statement contains a magic number: value % 3 != 0
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,getValue,The following statement contains a magic number: return value / 3;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecryptMethod,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecryptMethod.cs,getKey,The following statement contains a magic number: var tmpKey = ArrayFinder.getInitializedByteArray(method' 32);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecryptMethod,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecryptMethod.cs,getKey,The following statement contains a magic number: var tmpIv = ArrayFinder.getInitializedByteArray(method' 16);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,getPatchInfo,The following statement contains a magic number: size1 <= 0 || size1 > 35
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,decrypt,The following statement contains a magic number: decrypted.Length / 4 * 4 != decrypted.Length
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,decrypt,The following statement contains a magic number: decrypted.Length / 4 * 4 != decrypted.Length
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,decrypt,The following statement contains a magic number: var newData = new int[decrypted.Length / 4];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v3,MemoryPatcher,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\MemoryPatcher.cs,decrypt,The following statement contains a magic number: newData[i] = BitConverter.ToInt32(decrypted' i * 4);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,checkType,The following statement contains a magic number: sig == null || sig.Params.Count != 2
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,remove,The following statement contains a magic number: badBlock2.FallThrough == badBlock2 && badBlock2.Sources.Count == 2 && badBlock2.Targets == null
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: const int NUM_INSTRS = 11;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 2]' "System.Reflection.Assembly System.Type::get_Assembly()")
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 3]' "System.Reflection.AssemblyName System.Reflection.Assembly::GetName()")
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 4]' "System.Byte[] System.Reflection.AssemblyName::GetPublicKeyToken()")
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 5]' "System.String System.Convert::ToBase64String(System.Byte[])")
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: instructions[i + 6].OpCode.Code != Code.Ldstr
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 7]' antiStrongNameMethod)
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: instructions[i + 8].OpCode.Code != Code.Ldstr
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AntiStrongName,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AntiStrongName.cs,findBlock,The following statement contains a magic number: !checkCall(instructions[i + 9]' "System.Boolean System.String::op_Inequality(System.String'System.String)")
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AssemblyResolver.cs,checkMethod,The following statement contains a magic number: type.Fields.Count != 2
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,AssemblyResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\AssemblyResolver.cs,checkFields,The following statement contains a magic number: fields.Count != 2
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,The following statement contains a magic number: minVer = 3800;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,The following statement contains a magic number: minVer >= 3800
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,detectVersion,The following statement contains a magic number: minVer >= 3800
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,init,The following statement contains a magic number: count >= 40
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,init,The following statement contains a magic number: numCalls >= 10
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,isEmptyClass,The following statement contains a magic number: method.Body.Instructions.Count > 20
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EmptyClass,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EmptyClass.cs,isEmptyClass,The following statement contains a magic number: otherMethods > 8
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EncryptedResource,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EncryptedResource.cs,init,The following statement contains a magic number: key = ArrayFinder.getInitializedByteArray(resourceDecrypterMethod' 32);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EncryptedResource,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EncryptedResource.cs,init,The following statement contains a magic number: iv = ArrayFinder.getInitializedByteArray(resourceDecrypterMethod' 16);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EncryptedResource,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EncryptedResource.cs,init,The following statement contains a magic number: iv[i * 2 + 1] = publicKeyToken.Data[i];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,EncryptedResource,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\EncryptedResource.cs,init,The following statement contains a magic number: i < 8
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,find,The following statement contains a magic number: int typesLeft = 30;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,xorEncrypt,The following statement contains a magic number: int count = data.Length / 8;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,xorEncrypt,The following statement contains a magic number: stream.Position -= 8;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: methodsDataReader.Position -= 4;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: methodsDataReader.Position += 8L * patchCount;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,decrypt,The following statement contains a magic number: patchDwords(peImage' methodsDataReader' numDwords / 2);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,prepareEncryptNativeMethods,The following statement contains a magic number: int len = 12;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,prepareEncryptNativeMethods,The following statement contains a magic number: len += 3 * 4 + kv.Value.Length;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,prepareEncryptNativeMethods,The following statement contains a magic number: len += 3 * 4 + kv.Value.Length;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,prepareEncryptNativeMethods,The following statement contains a magic number: len = (len & ~15) + 16;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,prepareEncryptNativeMethods,The following statement contains a magic number: len = (len & ~15) + 16;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\MethodsDecrypter.cs,findDnrCompileMethod,The following statement contains a magic number: sig == null || sig.Params.Count != 6
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var keyInit = new byte[] {  				0x78' 0x61' 0x32' keyData[0]' keyData[2]'  				0x62' keyData[3]' keyData[0]' keyData[1]' keyData[1]'  				0x66' keyData[1]' keyData[5]' 0x33' keyData[2]'  				keyData[4]' 0x74' 0x32' keyData[3]' keyData[2]'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: key = new byte[32];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i < 32
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var transformTemp = new ushort[256' 256];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: var transformTemp = new ushort[256' 256];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i1 = 1 + (this.key[(i + 37 + counter) % key.Length] + counter + kb) % 255;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i1 = 1 + (this.key[(i + 37 + counter) % key.Length] + counter + kb) % 255;
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: transformTemp[i0' i1] = transformTemp[(i0 + ki) % 256' 0];
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i0 < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: j < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,NativeFileDecrypter,The following statement contains a magic number: i < 256
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeFileDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeFileDecrypter.cs,decrypt,The following statement contains a magic number: int blockLen = Math.Min(1024' count - i);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeImageUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeImageUnpacker.cs,unpack,The following statement contains a magic number: var dataEntry = peImage.PEImage.Win32Resources.Find(10' "__"' 0);
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeImageUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeImageUnpacker.cs,getKeyData,The following statement contains a magic number: return new byte[6] { 0x34' 0x38' 0x63' 0x65' 0x7A' 0x35 };
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeImageUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeImageUnpacker.cs,getKeyData,The following statement contains a magic number: return new byte[6] {  				peImage.offsetReadByte(baseOffset + 5)'  				peImage.offsetReadByte(baseOffset + 0xF)'  				peImage.offsetReadByte(baseOffset + 0x58)'  				peImage.offsetReadByte(baseOffset + 0x6D)'  				peImage.offsetReadByte(baseOffset + 0x98)'  				peImage.offsetReadByte(baseOffset + 0xA6)'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,NativeImageUnpacker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\NativeImageUnpacker.cs,getKeyData,The following statement contains a magic number: return new byte[6] {  				peImage.offsetReadByte(baseOffset + 5)'  				peImage.offsetReadByte(baseOffset + 0xF)'  				peImage.offsetReadByte(baseOffset + 0x58)'  				peImage.offsetReadByte(baseOffset + 0x6D)'  				peImage.offsetReadByte(baseOffset + 0x98)'  				peImage.offsetReadByte(baseOffset + 0xA6)'  			};
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\ResourceResolver.cs,checkFields,The following statement contains a magic number: fields.Count != 3
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,ResourceResolver,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\ResourceResolver.cs,checkFields,The following statement contains a magic number: fieldTypes.count("System.Object") == 2
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\StringDecrypter.cs,findKeyIv,The following statement contains a magic number: field.InitialValue.Length == 32
Magic Number,de4dot.code.deobfuscators.dotNET_Reactor.v4,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\StringDecrypter.cs,decrypt,The following statement contains a magic number: return Encoding.Unicode.GetString(decryptedData' offset + 4' length);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,find,The following statement contains a magic number: splitTypeName(resource.Name.String.Substring(0' resource.Name.String.Length - 10)' out ns' out name);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,decrypt,The following statement contains a magic number: pkt = new byte[8];
Magic Number,de4dot.code.deobfuscators.Goliath_NET,DecrypterBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\DecrypterBase.cs,decrypt,The following statement contains a magic number: j = (j + encryptedData[ki] + pkt[i % 8]) % (KEY_LEN - 1);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Goliath_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: val.Groups.Count < 2
Magic Number,de4dot.code.deobfuscators.Goliath_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\ProxyCallFixer.cs,checkProxyMethod,The following statement contains a magic number: instrs.Count < 7
Magic Number,de4dot.code.deobfuscators.Goliath_NET,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\ProxyCallFixer.cs,checkProxyMethod,The following statement contains a magic number: index + 2 > instrs.Count
Magic Number,de4dot.code.deobfuscators.Goliath_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StringDecrypter.cs,checkDecrypterType,The following statement contains a magic number: fields.Count != 2
Magic Number,de4dot.code.deobfuscators.Goliath_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StringDecrypter.cs,checkDecrypterType,The following statement contains a magic number: dict == null || dict.GenericArguments.Count != 2
Magic Number,de4dot.code.deobfuscators.Goliath_NET,StrongNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StrongNameChecker.cs,deobfuscate,The following statement contains a magic number: var call2 = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Goliath_NET,StrongNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StrongNameChecker.cs,deobfuscate,The following statement contains a magic number: block.remove(i' 3);
Magic Number,de4dot.code.deobfuscators.Goliath_NET,StrongNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Goliath_NET\StrongNameChecker.cs,deobfuscate,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.ILProtector,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\Deobfuscator.cs,detectInternal,The following statement contains a magic number: return mainType.Detected ? 150 : 0;
Magic Number,de4dot.code.deobfuscators.ILProtector,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MainType.cs,checkMethod,The following statement contains a magic number: methods.Count != 2
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,getTypeDefOrRefToken,The following statement contains a magic number: switch (token & 3) {  			case 0: return 0x02000000 + (int)(token >> 2);  			case 1: return 0x01000000 + (int)(token >> 2);  			case 2: return 0x1B000000 + (int)(token >> 2);  			default: throw new ApplicationException("Invalid token");  			}
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,getTypeDefOrRefToken,The following statement contains a magic number: switch (token & 3) {  			case 0: return 0x02000000 + (int)(token >> 2);  			case 1: return 0x01000000 + (int)(token >> 2);  			case 2: return 0x1B000000 + (int)(token >> 2);  			default: throw new ApplicationException("Invalid token");  			}
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,getTypeDefOrRefToken,The following statement contains a magic number: switch (token & 3) {  			case 0: return 0x02000000 + (int)(token >> 2);  			case 1: return 0x01000000 + (int)(token >> 2);  			case 2: return 0x1B000000 + (int)(token >> 2);  			default: throw new ApplicationException("Invalid token");  			}
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,getTypeDefOrRefToken,The following statement contains a magic number: switch (token & 3) {  			case 0: return 0x02000000 + (int)(token >> 2);  			case 1: return 0x01000000 + (int)(token >> 2);  			case 2: return 0x1B000000 + (int)(token >> 2);  			default: throw new ApplicationException("Invalid token");  			}
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,getTypeDefOrRefToken,The following statement contains a magic number: switch (token & 3) {  			case 0: return 0x02000000 + (int)(token >> 2);  			case 1: return 0x01000000 + (int)(token >> 2);  			case 2: return 0x1B000000 + (int)(token >> 2);  			default: throw new ApplicationException("Invalid token");  			}
Magic Number,de4dot.code.deobfuscators.ILProtector,MethodReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodReader.cs,readExceptionHandler,The following statement contains a magic number: var eh = new ExceptionHandler((ExceptionHandlerType)(reader.Read7BitEncodedUInt32() & 7));
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV100,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,DecrypterV100,The following statement contains a magic number: this.startOffset = 8;
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV100,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,DecrypterV100,The following statement contains a magic number: this.decryptionKeyMod = 8;
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV100,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,create,The following statement contains a magic number: reader.Length < 12
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV105,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,create,The following statement contains a magic number: !Utils.compare(reader.ReadBytes(8)' ilpPublicKeyToken)
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV106,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,create,The following statement contains a magic number: int keyXorOffs7 = (ReadByteAt(reader' 0) ^ ReadByteAt(reader' 2)) + 2;
Magic Number,de4dot.code.deobfuscators.ILProtector,DecrypterV106,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ILProtector\MethodsDecrypter.cs,create,The following statement contains a magic number: int keyXorOffs7 = (ReadByteAt(reader' 0) ^ ReadByteAt(reader' 2)) + 2;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,CryptDecrypter,The following statement contains a magic number: key.Length <= 8
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: encrypted.Length % 8 != 0
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: var key2 = createKey(key' 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: int count = encrypted.Length / 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: var buf = new byte[8];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: Array.Copy(encrypted' i * 8' buf' 0' buf.Length);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: Array.Copy(buf' 0' decrypted' i * 8' buf.Length);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: var oldBits = bits.extract(0' 32);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: var tmp = decrypt(oldBits.clone()' key.extract(ki' 48));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: tmp.xor(bits.extract(32' 32));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: tmp.xor(bits.extract(32' 32));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: bits.set(32' oldBits);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,decrypt,The following statement contains a magic number: i < 16
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: var sboxByteBits = new byte[32];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int di = i * 6;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: int index = (data[di + 0] << 5) + (data[di + 5] << 4) + (data[di + 1] << 3) +  							(data[di + 2] << 2) + (data[di + 3] << 1) + data[di + 4] + i * 64;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: Bits.fromBytes(sbox' index' 4).copyTo(sboxByteBits' i * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: Bits.fromBytes(sbox' index' 4).copyTo(sboxByteBits' i * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,getSbox,The following statement contains a magic number: i < 8
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: byte[] newKey = new byte[16 * 6];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: byte[] newKey = new byte[16 * 6];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: byte[] tmpData = new byte[28 * 2];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: byte[] tmpData = new byte[28 * 2];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: Bits.fromByteBits(key1.ByteBits' key2.ByteBits).transpose(pc2).toBits(newKey' i * 6);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKey,The following statement contains a magic number: i < 16
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKeys,The following statement contains a magic number: var tmpKey = new byte[8];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKeys,The following statement contains a magic number: key1 = Bits.fromByteBits(bits.ByteBits' 0' 28);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKeys,The following statement contains a magic number: key2 = Bits.fromByteBits(bits.ByteBits' 28' 28);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,CryptDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,createKeys,The following statement contains a magic number: key2 = Bits.fromByteBits(bits.ByteBits' 28' 28);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Bits,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,fromBytes,The following statement contains a magic number: return fromBytes(bytes' 0' bytes.Length * 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Bits,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,toByteBits,The following statement contains a magic number: int j = i / 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Bits,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,toByteBits,The following statement contains a magic number: int k = i & 7;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Bits,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,toBits,The following statement contains a magic number: var bits = new byte[(byteBits.Length + 7) / 8];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Bits,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\CryptDecrypter.cs,toBits,The following statement contains a magic number: var bits = new byte[(byteBits.Length + 7) / 8];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,Decrypter6,The following statement contains a magic number: key.Length != 32
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,Decrypter6,The following statement contains a magic number: this.key = new uint[8];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: (encrypted.Length & 7) != 0
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: int count = decrypted.Length / 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: decrypt(BitConverter.ToUInt32(encrypted' i * 8)' BitConverter.ToUInt32(encrypted' i * 8 + 4)' out x' out y);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: decrypt(BitConverter.ToUInt32(encrypted' i * 8)' BitConverter.ToUInt32(encrypted' i * 8 + 4)' out x' out y);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: decrypt(BitConverter.ToUInt32(encrypted' i * 8)' BitConverter.ToUInt32(encrypted' i * 8 + 4)' out x' out y);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: j < 100
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: writeUInt32(decrypted' i * 8' x);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: writeUInt32(decrypted' i * 8 + 4' y);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: writeUInt32(decrypted' i * 8 + 4' y);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,writeUInt32,The following statement contains a magic number: data[index + 1] = (byte)(value >> 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,writeUInt32,The following statement contains a magic number: data[index + 2] = (byte)(value >> 16);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,writeUInt32,The following statement contains a magic number: data[index + 2] = (byte)(value >> 16);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,writeUInt32,The following statement contains a magic number: data[index + 3] = (byte)(value >> 24);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,writeUInt32,The following statement contains a magic number: data[index + 3] = (byte)(value >> 24);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen1[i] = (byte)((d1h[i / 16] << 4) | d1l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen1[i] = (byte)((d1h[i / 16] << 4) | d1l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen2[i] = (byte)((d2h[i / 16] << 4) | d2l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen2[i] = (byte)((d2h[i / 16] << 4) | d2l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen3[i] = (byte)((d3h[i / 16] << 4) | d3l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen3[i] = (byte)((d3h[i / 16] << 4) | d3l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen4[i] = (byte)((d4h[i / 16] << 4) | d4l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,initialize,The following statement contains a magic number: gen4[i] = (byte)((d4h[i / 16] << 4) | d4l[i & 0x0F]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[2]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[3]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[4]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[5]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[6]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[7]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[7]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[6]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[5]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[4]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: y ^= decrypt(x + key[3]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: x ^= decrypt(y + key[2]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: i < 3
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: uint x = (uint)((gen1[(byte)(val >> 24)] << 24) |  				(gen2[(byte)(val >> 16)] << 16) |  				(gen3[(byte)(val >> 8)] << 8) |  				gen4[(byte)val]);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,decrypt,The following statement contains a magic number: return ror(x' 21);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Decrypter6,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Decrypter6.cs,ror,The following statement contains a magic number: return (val << (32 - n)) + (val >> n);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,DeobfuscatorInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Deobfuscator.cs,DeobfuscatorInfo,The following statement contains a magic number: stringCodePage = new IntOption(null' makeArgName("cp")' "String code page"' 936);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val = 150;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MainType.cs,find,The following statement contains a magic number: DeobUtils.getInitCctors(module' 3)
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MainType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MainType.cs,getPinvokeList,The following statement contains a magic number: list.Count != 2
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decryptStrings,The following statement contains a magic number: int encryptedLength = stringDataLength - (usHeapOffset - usHeapOffsetOrig == 1 ? 1 : 2);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decryptStrings,The following statement contains a magic number: fileData[usHeapOffset] = rolb((byte)(fileData[usHeapOffset] ^ k)' 3);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodsDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,rolb,The following statement contains a magic number: return (byte)((b << n) | (b >> (8 - n)));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,getStructSize,The following statement contains a magic number: return 0xC + 6 * ENCRYPTED_DATA_INFO_SIZE;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,getStructSize,The following statement contains a magic number: return 0xC + 3 * ENCRYPTED_DATA_INFO_SIZE;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: int numMethods = readInt32(0) ^ readInt32(4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint offset = 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint totalSize = readEncryptedUInt32(offset + 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint methodInstructionRva = readEncryptedUInt32(offset + 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint dataOffset = readEncryptedUInt32(offset2 + 3);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint encryptedSize = readEncryptedUInt32(offset2 + 7);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: uint realSize = readEncryptedUInt32(offset2 + 11);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,initializeInfos2,The following statement contains a magic number: exOffset = readEncryptedInt32(offset2 + 15);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt1b,The following statement contains a magic number: return decrypt1(encrypted' 6' 6' 0x500);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt1b,The following statement contains a magic number: return decrypt1(encrypted' 6' 6' 0x500);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt1c,The following statement contains a magic number: return decrypt1(encrypted' 6' 0' 0x1000);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt1d,The following statement contains a magic number: return decrypt1(encrypted' 5' 5' 0x500);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt1d,The following statement contains a magic number: return decrypt1(encrypted' 5' 5' 0x500);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2b,The following statement contains a magic number: return decrypt2(encrypted' 0x00FA + 9);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2d,The following statement contains a magic number: return decrypt2(encrypted' 0x00FA + 7);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: (encrypted.Length & 7) != 0
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint key4 = mcKey.readUInt32(offset + 4 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint key4 = mcKey.readUInt32(offset + 4 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint key5 = mcKey.readUInt32(offset + 5 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint key5 = mcKey.readUInt32(offset + 5 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: byte[] decrypted = new byte[encrypted.Length & ~7];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: int loopCount = encrypted.Length / 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint val0 = BitConverter.ToUInt32(encrypted' i * 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint val1 = BitConverter.ToUInt32(encrypted' i * 8 + 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint val1 = BitConverter.ToUInt32(encrypted' i * 8 + 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint x = (val1 >> 26) + (val0 << 6);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint x = (val1 >> 26) + (val0 << 6);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint y = (val0 >> 26) + (val1 << 6);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt2,The following statement contains a magic number: uint y = (val0 >> 26) + (val1 << 6);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3d,The following statement contains a magic number: return decrypt3(encrypted' 0x015E + 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: (encrypted.Length & 7) != 0
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint key0 = mcKey.readUInt32(offset + 0 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint key3 = mcKey.readUInt32(offset + 3 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint key3 = mcKey.readUInt32(offset + 3 * 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: byte[] decrypted = new byte[encrypted.Length & ~7];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: int loopCount = encrypted.Length / 8;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint x = BitConverter.ToUInt32(encrypted' i * 8);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint y = BitConverter.ToUInt32(encrypted' i * 8 + 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: uint y = BitConverter.ToUInt32(encrypted' i * 8 + 4);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt3,The following statement contains a magic number: int shift1 = 32 - shift;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4c,The following statement contains a magic number: return decrypt4(encrypted' 5' 0' 0x2000);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: var decrypted = new byte[encrypted.Length / 3 * 2 + 1];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: var decrypted = new byte[encrypted.Length / 3 * 2 + 1];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: int count = encrypted.Length / 3;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: byte k2 = mcKey.readByte(ki + 2);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: byte k3 = mcKey.readByte(ki + 3);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: decrypted[j++] = (byte)(((encrypted[i + 1] ^ k2) >> 4) | ((encrypted[i] ^ k1) & 0xF0));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: decrypted[j++] = (byte)(((encrypted[i + 1] ^ k2) << 4) + ((encrypted[i + 2] ^ k3) & 0x0F));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: decrypted[j++] = (byte)(((encrypted[i + 1] ^ k2) << 4) + ((encrypted[i + 2] ^ k3) & 0x0F));
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: i += 3;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: ki += 4;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt4,The following statement contains a magic number: (encrypted.Length % 3) != 0
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt5,The following statement contains a magic number: return CryptDecrypter.decrypt(mcKey.readBytes(0x0032' 15)' encrypted);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,decrypt6,The following statement contains a magic number: return Decrypter6.decrypt(mcKey.readBytes(0x0096' 32)' encrypted);
Magic Number,de4dot.code.deobfuscators.MaxtoCode,MethodInfos,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\MethodsDecrypter.cs,getBlowfishKey,The following statement contains a magic number: var key = new byte[100];
Magic Number,de4dot.code.deobfuscators.MaxtoCode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\StringDecrypter.cs,initializeStrings,The following statement contains a magic number: ki += 2;
Magic Number,de4dot.code.deobfuscators.MaxtoCode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MaxtoCode\StringDecrypter.cs,initializeStrings,The following statement contains a magic number: soffs += 4;
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100;
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,detectVersion,The following statement contains a magic number: module.Types.Count != 2
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,getDecryptedModule,The following statement contains a magic number: offset += 16;
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,getDecryptedModule,The following statement contains a magic number: switch (version) {  				case Version.V0x:  					compressedLen = fileData.Length - (int)offset;  					compressed = peImage.offsetReadBytes(offset' compressedLen);  					decompressed = Lzmat.decompress_old(compressed);  					if (decompressed == null)  						throw new ApplicationException("LZMAT decompression failed");  					break;    				case Version.V1x_217:  				case Version.V218:  					if (peImage.PEImage.ImageNTHeaders.FileHeader.Machine == Machine.AMD64 && version == Version.V218)  						offset = section.PointerToRawData + section.VirtualSize;  					int decompressedLen = (int)peImage.offsetReadUInt32(offset);  					compressedLen = fileData.Length - (int)offset - 4;  					compressed = peImage.offsetReadBytes(offset + 4' compressedLen);  					decompressed = new byte[decompressedLen];  					uint decompressedLen2;  					if (Lzmat.decompress(decompressed' out decompressedLen2' compressed) != LzmatStatus.OK)  						throw new ApplicationException("LZMAT decompression failed");  					break;    				default:  					throw new ApplicationException("Unknown MPRESS version");  				}
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,getDecryptedModule,The following statement contains a magic number: switch (version) {  				case Version.V0x:  					compressedLen = fileData.Length - (int)offset;  					compressed = peImage.offsetReadBytes(offset' compressedLen);  					decompressed = Lzmat.decompress_old(compressed);  					if (decompressed == null)  						throw new ApplicationException("LZMAT decompression failed");  					break;    				case Version.V1x_217:  				case Version.V218:  					if (peImage.PEImage.ImageNTHeaders.FileHeader.Machine == Machine.AMD64 && version == Version.V218)  						offset = section.PointerToRawData + section.VirtualSize;  					int decompressedLen = (int)peImage.offsetReadUInt32(offset);  					compressedLen = fileData.Length - (int)offset - 4;  					compressed = peImage.offsetReadBytes(offset + 4' compressedLen);  					decompressed = new byte[decompressedLen];  					uint decompressedLen2;  					if (Lzmat.decompress(decompressed' out decompressedLen2' compressed) != LzmatStatus.OK)  						throw new ApplicationException("LZMAT decompression failed");  					break;    				default:  					throw new ApplicationException("Unknown MPRESS version");  				}
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Deobfuscator.cs,fixInvalidMvid,The following statement contains a magic number: var guid = new Guid(BitConverter.ToInt32(hash' 0)'  									BitConverter.ToInt16(hash' 4)'  									BitConverter.ToInt16(hash' 6)'  									hash[8]' hash[9]' hash[10]' hash[11]'  									hash[12]' hash[13]' hash[14]' hash[15]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,LZMAT_GET_U4,The following statement contains a magic number: return (_n_^=1)!=0?(uint)(_p_[_i_]&0xF):(uint)(_p_[_i_++]>>4);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,LZMAT_GET_U8,The following statement contains a magic number: return (byte)(((_n_)!=0?((_p_[_i_]>>4)|(_p_[_i_+1]<<4)):_p_[_i_]));
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,LZMAT_GET_U8,The following statement contains a magic number: return (byte)(((_n_)!=0?((_p_[_i_]>>4)|(_p_[_i_+1]<<4)):_p_[_i_]));
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,LZMAT_GET_LE16,The following statement contains a magic number: return (ushort)((_n_)!=0?((_p_[_i_]>>4)|((ushort)(GET_LE16(_p_'_i_+1))<<4)):GET_LE16(_p_'_i_));
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,LZMAT_GET_LE16,The following statement contains a magic number: return (ushort)((_n_)!=0?((_p_[_i_]>>4)|((ushort)(GET_LE16(_p_'_i_+1))<<4)):GET_LE16(_p_'_i_));
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: dist = r_cnt>>2;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: r_cnt += 3;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: return LzmatStatus.INTEGRITY_FAILURE+4;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following statement contains a magic number: bc<8 && inPos<(cbIn-cur_nib) && outPos<cbOutBuf
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int srcIndex = 3;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int decompressedLen = compressed[0] + (compressed[1] << 8) + (compressed[2] << 16);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int decompressedLen = compressed[0] + (compressed[1] << 8) + (compressed[2] << 16);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int decompressedLen = compressed[0] + (compressed[1] << 8) + (compressed[2] << 16);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int partLen = compressed[srcIndex++] + (compressed[srcIndex++] << 8) + (compressed[srcIndex++] << 16);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress_old,The following statement contains a magic number: int partLen = compressed[srcIndex++] + (compressed[srcIndex++] << 8) + (compressed[srcIndex++] << 16);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: ushort outPosDispl = (ushort)((((inBuf[inIndex + inPos + 1]) & 0xF) << 8) + inBuf[inIndex + inPos]);
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: int r_cnt = (inBuf[inIndex + inPos++] >> 4) + 3;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: int r_cnt = (inBuf[inIndex + inPos++] >> 4) + 3;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: r_cnt = inBuf[inIndex + inPos++] + 18;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: r_cnt == 18
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: inPos + 2 > inLen
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: r_cnt = (inBuf[inIndex + inPos + 1] << 8) + inBuf[inIndex + inPos] + 0x111;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: inPos += 2;
Magic Number,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,lzmat_old,The following statement contains a magic number: bc < 8 && inPos < inLen && outPos < outLen
Magic Number,de4dot.code.deobfuscators.Rummage,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Rummage,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Rummage,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getStringInfo,The following statement contains a magic number: var stsfld = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Rummage,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getStringInfo,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decryptInternal,The following statement contains a magic number: DeobUtils.xteaDecrypt(ref v0' ref v1' key' 32);
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decryptInternal,The following statement contains a magic number: var decrypted = new uint[(utf8Length + 11) / 8 * 2 - 1];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decryptInternal,The following statement contains a magic number: var decrypted = new uint[(utf8Length + 11) / 8 * 2 - 1];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decryptInternal,The following statement contains a magic number: var decrypted = new uint[(utf8Length + 11) / 8 * 2 - 1];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterBaseV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decryptInternal,The following statement contains a magic number: DeobUtils.xteaDecrypt(ref v0' ref v1' key' 32);
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: var sub = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initKey,The following statement contains a magic number: reader.BaseStream.Position = reader.BaseStream.Length - 48;
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initKey,The following statement contains a magic number: key = new uint[4];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV11,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decrypt,The following statement contains a magic number: reader.BaseStream.Position = reader.BaseStream.Length + (stringId * 4 - fileDispl);
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: !ldci4_1.IsLdcI4() || ldci4_1.GetLdcI4Value() != 4
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Conv_I8
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.Add
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: var ldci4 = instrs[i + 4];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: instrs[i + 5].OpCode.Code != Code.Conv_I8
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: instrs[i + 6].OpCode.Code != Code.Sub
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,getDispl,The following statement contains a magic number: i < instrs.Count - 6
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initKey,The following statement contains a magic number: reader.BaseStream.Position = baseOffs - 16;
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initKey,The following statement contains a magic number: key = new uint[4];
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,initializeBaseOffs,The following statement contains a magic number: reader.BaseStream.Position -= buf.Length * 2 - 0x20;
Magic Number,de4dot.code.deobfuscators.Rummage,DecrypterV21,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Rummage\StringDecrypter.cs,decrypt,The following statement contains a magic number: reader.BaseStream.Position = baseOffs + stringId * 4 - fileDispl;
Magic Number,de4dot.code.deobfuscators.Skater_NET,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100;
Magic Number,de4dot.code.deobfuscators.Skater_NET,EnumClassFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\EnumClassFinder.cs,deobfuscate,The following statement contains a magic number: var stfld = instrs[i + 2];
Magic Number,de4dot.code.deobfuscators.Skater_NET,EnumClassFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\EnumClassFinder.cs,deobfuscate,The following statement contains a magic number: block.remove(i' 3);
Magic Number,de4dot.code.deobfuscators.Skater_NET,EnumClassFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\EnumClassFinder.cs,deobfuscate,The following statement contains a magic number: i < instrs.Count - 2
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,The following statement contains a magic number: instrs[i + 2].OpCode.Code != Code.Ldsfld
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,The following statement contains a magic number: instrs[i + 3].OpCode.Code != Code.Call
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,The following statement contains a magic number: instrs[i + 4].OpCode.Code != Code.Stsfld
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,The following statement contains a magic number: var field = instrs[i + 4].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,initialize,The following statement contains a magic number: i < instrs.Count - 4
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,checkMethodV1,The following statement contains a magic number: var key = passwordBytes.GetBytes(16);
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,checkMethodV1,The following statement contains a magic number: var iv = passwordBytes.GetBytes(8);
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: s.Length < 10 || s.Length > 30 || s.Length / 2 * 2 != s.Length
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: s.Length < 10 || s.Length > 30 || s.Length / 2 * 2 != s.Length
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: s.Length < 10 || s.Length > 30 || s.Length / 2 * 2 != s.Length
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: s.Length < 10 || s.Length > 30 || s.Length / 2 * 2 != s.Length
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: var saltAry = new byte[(int)Math.Round((double)s2.Length / 2 - 1) + 1];
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: !int.TryParse(s2.Substring(i * 2' 2)' NumberStyles.AllowHexSpecifier' null' out result)
Magic Number,de4dot.code.deobfuscators.Skater_NET,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,fixSalt,The following statement contains a magic number: !int.TryParse(s2.Substring(i * 2' 2)' NumberStyles.AllowHexSpecifier' null' out result)
Magic Number,de4dot.code.deobfuscators.Skater_NET,DecrypterV2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: ints.Length % 3 != 0
Magic Number,de4dot.code.deobfuscators.Skater_NET,DecrypterV2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: var sb = new StringBuilder(ints.Length / 3);
Magic Number,de4dot.code.deobfuscators.Skater_NET,DecrypterV2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: (double)val2 / 2.0 == Math.Round((double)val2 / 2.0)
Magic Number,de4dot.code.deobfuscators.Skater_NET,DecrypterV2,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Skater_NET\StringDecrypter.cs,decrypt,The following statement contains a magic number: (double)val2 / 2.0 == Math.Round((double)val2 / 2.0)
Magic Number,de4dot.code.deobfuscators.SmartAssembly,AssemblyResolverInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AssemblyResolverInfo.cs,initInfos,The following statement contains a magic number: strings.Length % 2 == 1
Magic Number,de4dot.code.deobfuscators.SmartAssembly,AutomatedErrorReportingFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AutomatedErrorReportingFinder.cs,isExceptionLoggerMethod,The following statement contains a magic number: var type1 = sig.Params.Count < 2 ? "" : sig.Params[1].GetFullName();
Magic Number,de4dot.code.deobfuscators.SmartAssembly,AutomatedErrorReportingFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\AutomatedErrorReportingFinder.cs,isExceptionLoggerMethod,The following statement contains a magic number: index = 2;
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100;
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: val.Groups.Count < 6
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: approxVersion = new Version(int.Parse(val.Groups[2].ToString())'  										int.Parse(val.Groups[3].ToString())'  										int.Parse(val.Groups[4].ToString())'  										int.Parse(val.Groups[5].ToString()));
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: approxVersion = new Version(int.Parse(val.Groups[2].ToString())'  										int.Parse(val.Groups[3].ToString())'  										int.Parse(val.Groups[4].ToString())'  										int.Parse(val.Groups[5].ToString()));
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: approxVersion = new Version(int.Parse(val.Groups[2].ToString())'  										int.Parse(val.Groups[3].ToString())'  										int.Parse(val.Groups[4].ToString())'  										int.Parse(val.Groups[5].ToString()));
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initializeVersion,The following statement contains a magic number: approxVersion = new Version(int.Parse(val.Groups[2].ToString())'  										int.Parse(val.Groups[3].ToString())'  										int.Parse(val.Groups[4].ToString())'  										int.Parse(val.Groups[5].ToString()));
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,guessVersion,The following statement contains a magic number: approxVersion = new Version(5' 0' 0' 0);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,guessVersion,The following statement contains a magic number: approxVersion = new Version(4' 0' 0' 0);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,guessVersion,The following statement contains a magic number: approxVersion = new Version(2' 0' 0' 0);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,guessVersion,The following statement contains a magic number: ver == 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,guessVersion,The following statement contains a magic number: approxVersion = new Version(3' 0' 0' 0);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,checkTypeIdAttribute,The following statement contains a magic number: return 2;
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,checkTypeIdAttribute,The following statement contains a magic number: fields.Count == 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,getTypeIdAttribute,The following statement contains a magic number: attrs.Count == 1 && counter >= 30
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,initStringDecrypterInfos,The following statement contains a magic number: i < 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,findBigType,The following statement contains a magic number: approxVersion <= new Version(6' 5' 3' 53)
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,findBigType,The following statement contains a magic number: approxVersion <= new Version(6' 5' 3' 53)
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,findBigType,The following statement contains a magic number: approxVersion <= new Version(6' 5' 3' 53)
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,findBigType,The following statement contains a magic number: approxVersion <= new Version(6' 5' 3' 53)
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,isBigType,The following statement contains a magic number: type.Methods.Count < 50
Magic Number,de4dot.code.deobfuscators.SmartAssembly,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\Deobfuscator.cs,isBigType,The following statement contains a magic number: type.Fields.Count > 3
Magic Number,de4dot.code.deobfuscators.SmartAssembly,MemoryManagerInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\MemoryManagerInfo.cs,checkMemoryManagerType,The following statement contains a magic number: fields != 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs.Count > 10
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs.Count != 3
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs.Count != 3
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ProxyCallFixer.cs,checkCctor,The following statement contains a magic number: instrs[2].OpCode != OpCodes.Ret
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,getResolverHandlers,The following statement contains a magic number: var ldftn = instrs[2];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,getResolverHandlers,The following statement contains a magic number: var newobj = instrs[3];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResolverInfoBase,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResolverInfoBase.cs,getResolverHandlers,The following statement contains a magic number: var callvirt = instrs[4];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: byte encryption = (byte)(headerMagic >> 24);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypter.cs,decrypt,The following statement contains a magic number: switch (encryption) {  			case 1:  				int totalInflatedLength = reader.ReadInt32();  				if (totalInflatedLength < 0)  					throw new ApplicationException("Invalid length");  				var inflatedBytes = new byte[totalInflatedLength];  				int partInflatedLength;  				for (int inflateOffset = 0; inflateOffset < totalInflatedLength; inflateOffset += partInflatedLength) {  					int partLength = reader.ReadInt32();  					partInflatedLength = reader.ReadInt32();  					if (partLength < 0 || partInflatedLength < 0)  						throw new ApplicationException("Invalid length");  					var inflater = new Inflater(true);  					inflater.SetInput(encryptedData' checked((int)reader.BaseStream.Position)' partLength);  					reader.BaseStream.Seek(partLength' SeekOrigin.Current);  					int realInflatedLen = inflater.Inflate(inflatedBytes' inflateOffset' inflatedBytes.Length - inflateOffset);  					if (realInflatedLen != partInflatedLength)  						throw new ApplicationException("Could not inflate");  				}  				return inflatedBytes;    			case 2:  				if (resourceDecrypterInfo.DES_Key == null || resourceDecrypterInfo.DES_IV == null)  					throw new ApplicationException("DES key / iv have not been set yet");  				using (var provider = new DESCryptoServiceProvider()) {  					provider.Key = resourceDecrypterInfo.DES_Key;  					provider.IV  = resourceDecrypterInfo.DES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			case 3:  				if (resourceDecrypterInfo.AES_Key == null || resourceDecrypterInfo.AES_IV == null)  					throw new ApplicationException("AES key / iv have not been set yet");  				using (var provider = new RijndaelManaged()) {  					provider.Key = resourceDecrypterInfo.AES_Key;  					provider.IV  = resourceDecrypterInfo.AES_IV;  					using (var transform = provider.CreateDecryptor()) {  						return decrypt(transform.TransformFinalBlock(encryptedData' 4' encryptedData.Length - 4));  					}  				}    			default:  				throw new ApplicationException(string.Format("Unknown encryption type 0x{0:X2}"' encryption));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: var desList = new List<byte[]>(2);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: var aesList = new List<byte[]>(2);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: field.InitialValue.Length == 8
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: i <= instructions.Count - 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: DES_Key = desList[desList.Count - 2];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: desList.Count >= 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: AES_Key = aesList[aesList.Count - 2];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,ResourceDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\ResourceDecrypterInfo.cs,init,The following statement contains a magic number: aesList.Count >= 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypter.cs,decrypt,The following statement contains a magic number: switch (StringDecrypterInfo.DecrypterVersion) {  			case StringDecrypterVersion.V1:  				// Some weird problem with 1.x decrypted strings. They all have a \x01 char at the end.  				var buf = Convert.FromBase64String(Encoding.ASCII.GetString(decryptedData' index' len));  				if (buf.Length % 2 != 0)  					Array.Resize(ref buf' buf.Length - 1);  				return Encoding.Unicode.GetString(buf);    			case StringDecrypterVersion.V2:  				return Encoding.UTF8.GetString(Convert.FromBase64String(Encoding.ASCII.GetString(decryptedData' index' len)));    			default:  				return Encoding.UTF8.GetString(Convert.FromBase64String(Encoding.UTF8.GetString(decryptedData' index' len)));  			}
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,init,The following statement contains a magic number: stringOffset ^= ((int)pkt.Data[i] << 8) + pkt.Data[i + 1];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,findOffsetField,The following statement contains a magic number: i <= instructions.Count - 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,findOffsetValue,The following statement contains a magic number: i <= instructions.Count - 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,findSimpleZipTypeMethod,The following statement contains a magic number: i <= instructions.Count - 2
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,removeInitCode_v2,The following statement contains a magic number: var call2 = instructions[i + 2];
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,removeInitCode_v2,The following statement contains a magic number: block.remove(i' 3);
Magic Number,de4dot.code.deobfuscators.SmartAssembly,StringDecrypterInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\StringDecrypterInfo.cs,removeInitCode_v2,The following statement contains a magic number: i <= instructions.Count - 3
Magic Number,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findFirstBlocks,The following statement contains a magic number: !instrs[index + 2].isBrfalse()
Magic Number,de4dot.code.deobfuscators.SmartAssembly,TamperProtectionRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\SmartAssembly\TamperProtectionRemover.cs,findBadBlock,The following statement contains a magic number: instrs.Count != 3
Magic Number,de4dot.code.deobfuscators.Spices_Net,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Spices_Net,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100 + 10 * (sum - 1);
Magic Number,de4dot.code.deobfuscators.Spices_Net,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Spices_Net,QclzDecompressor,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\QclzDecompressor.cs,decompress,The following statement contains a magic number: headerLength = 9;
Magic Number,de4dot.code.deobfuscators.Spices_Net,QclzDecompressor,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\QclzDecompressor.cs,decompress,The following statement contains a magic number: decompressedLength = (int)read32(data' 5);
Magic Number,de4dot.code.deobfuscators.Spices_Net,QclzDecompressor,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\QclzDecompressor.cs,decompress,The following statement contains a magic number: (data[0] & 2) != 0
Magic Number,de4dot.code.deobfuscators.Spices_Net,ResourceNamesRestorer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\ResourceNamesRestorer.cs,ror,The following statement contains a magic number: return (val << (32 - n)) + (val >> n);
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,find,The following statement contains a magic number: type.Fields.Count < 2 || type.Fields.Count > 3
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,find,The following statement contains a magic number: type.Fields.Count < 2 || type.Fields.Count > 3
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,checkCctor,The following statement contains a magic number: var field = instrs[2].Operand as FieldDef;
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,get3DesKeyIv,The following statement contains a magic number: arrays.Count != 1 && arrays.Count != 2
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,callsDecompressor,The following statement contains a magic number: parameters.Count != 4
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,callsDecompressor,The following statement contains a magic number: !checkClass(parameters[2]' "System.Byte[]")
Magic Number,de4dot.code.deobfuscators.Spices_Net,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\StringDecrypter.cs,callsDecompressor,The following statement contains a magic number: parameters[3].GetElementType() != ElementType.I4
Magic Number,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 100;
Magic Number,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,detectInternal,The following statement contains a magic number: val += 10;
Magic Number,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,isTypeWithThousandsOfMethods,The following statement contains a magic number: type.Methods.Count < 100
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,find,The following statement contains a magic number: type.Methods.Count < 1 || type.Methods.Count > 3
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: int newLen = es.Length / 4;
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: char c = (char)((es[i] - 'a') +  							((es[i + 1] - 'a') << 4) +  							((es[i + 2] - 'a') << 8) +  							((es[i + 3] - 'a') << 12) - magic);
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: char c = (char)((es[i] - 'a') +  							((es[i + 1] - 'a') << 4) +  							((es[i + 2] - 'a') << 8) +  							((es[i + 3] - 'a') << 12) - magic);
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: char c = (char)((es[i] - 'a') +  							((es[i + 1] - 'a') << 4) +  							((es[i + 2] - 'a') << 8) +  							((es[i + 3] - 'a') << 12) - magic);
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: char c = (char)((es[i] - 'a') +  							((es[i + 1] - 'a') << 4) +  							((es[i + 2] - 'a') << 8) +  							((es[i + 3] - 'a') << 12) - magic);
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: char c = (char)((es[i] - 'a') +  							((es[i + 1] - 'a') << 4) +  							((es[i + 2] - 'a') << 8) +  							((es[i + 3] - 'a') << 12) - magic);
Magic Number,de4dot.code.deobfuscators.Xenocode,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\StringDecrypter.cs,decrypt,The following statement contains a magic number: i < newLen * 4
Magic Number,de4dot.code.renamer.asmmodules,MPropertyDef,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\PropertyDef.cs,isItemProperty,The following statement contains a magic number: SetMethod != null && SetMethod.VisibleParameterCount >= 2
Magic Number,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restorePropertiesFromNames,The following statement contains a magic number: var propName = methodName.Substring(4);
Magic Number,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restorePropertiesFromNames,The following statement contains a magic number: createPropertyGetter(methodName.Substring(4)' method);
Magic Number,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreEventsFromNames,The following statement contains a magic number: var eventName = methodName.Substring(4);
Magic Number,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,restoreEventsFromNames,The following statement contains a magic number: createEventAdder(methodName.Substring(4)' method);
Magic Number,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,rename,The following statement contains a magic number: switch (calledMethod.FullName) {  					case "System.String System.Resources.ResourceManager::GetString(System.String'System.Globalization.CultureInfo)":  					case "System.IO.UnmanagedMemoryStream System.Resources.ResourceManager::GetStream(System.String'System.Globalization.CultureInfo)":  					case "System.Object System.Resources.ResourceManager::GetObject(System.String'System.Globalization.CultureInfo)":  						ldstrIndex = i - 2;  						break;    					case "System.String System.Resources.ResourceManager::GetString(System.String)":  					case "System.IO.UnmanagedMemoryStream System.Resources.ResourceManager::GetStream(System.String)":  					case "System.Object System.Resources.ResourceManager::GetObject(System.String)":  						ldstrIndex = i - 1;  						break;    					default:  						continue;  					}
Magic Number,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,createPrefixFromStringData,The following statement contains a magic number: data = data.Substring(0' Math.Min(data.Length' 100));
Magic Number,de4dot.code.renamer,ResourceKeysRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceKeysRenamer.cs,createPrefixFromStringData,The following statement contains a magic number: sb.Length <= 3
Magic Number,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,rename,The following statement contains a magic number: nameToResource = new Dictionary<string' Resource>(module.ModuleDefMD.Resources.Count * 3' StringComparer.Ordinal);
Magic Number,de4dot.code.renamer,ResourceRenamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\ResourceRenamer.cs,rename,The following statement contains a magic number: nameToResource[name.Substring(0' name.Length - 12)] = resource;
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,isEventHandler,The following statement contains a magic number: sig == null || sig.Params.Count != 2
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initializeWindowsFormsFieldsAndProps,The following statement contains a magic number: var instr = instructions[i - 2];
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,getVbHandler,The following statement contains a magic number: eventName = addMethod.Name.String.Substring(4);
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,getVbHandler,The following statement contains a magic number: eventName != removeMethod.Name.String.Substring(7)
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,findEventCall,The following statement contains a magic number: callvirt < 2
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,findEventCall,The following statement contains a magic number: var ldfld = instructions[callvirt - 2];
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initFieldEventHandlers,The following statement contains a magic number: var eventName = addHandler.Name.String.Substring(4);
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initFieldEventHandlers,The following statement contains a magic number: i < instructions.Count - 6
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initTypeEventHandlers,The following statement contains a magic number: var eventName = addMethod.Name.String.Substring(4);
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,initTypeEventHandlers,The following statement contains a magic number: i < instructions.Count - 5
Magic Number,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,findWindowsFormsClassName,The following statement contains a magic number: instructions[i - 2].GetParameterIndex() != 0
Magic Number,de4dot.code.resources,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceReader.cs,read,The following statement contains a magic number: version != 2
Magic Number,de4dot.code.resources,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceReader.cs,read,The following statement contains a magic number: reader.Position = (reader.Position + 7) & ~7;
Magic Number,de4dot.code.resources,ResourceReader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceReader.cs,read,The following statement contains a magic number: reader.Position = (reader.Position + 7) & ~7;
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The following statement contains a magic number: writer.Write(2);
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The following statement contains a magic number: int extraBytes = 8 - ((int)writer.BaseStream.Position & 7);
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The following statement contains a magic number: int extraBytes = 8 - ((int)writer.BaseStream.Position & 7);
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The following statement contains a magic number: extraBytes != 8
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,write,The following statement contains a magic number: writer.Write((int)writer.BaseStream.Position + (int)nameOffsetStream.Length + 4);
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,writeUInt32,The following statement contains a magic number: value >>= 7;
Magic Number,de4dot.code.resources,ResourceWriter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\resources\ResourceWriter.cs,hash,The following statement contains a magic number: val = ((val << 5) + val) ^ (uint)c;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,The following statement contains a magic number: uint s2 = checksum >> 16;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,The following statement contains a magic number: checksum = (s2 << 16) + s1;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,The following statement contains a magic number: uint s2 = checksum >> 16;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,The following statement contains a magic number: int n = 3800;
Magic Number,ICSharpCode.SharpZipLib.Checksums,Adler32,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Checksums\Adler32.cs,Update,The following statement contains a magic number: checksum = (s2 << 16) | s1;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: int header = input.PeekBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: input.DropBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header = ((header << 8) | (header >> 8)) & 0xffff;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header = ((header << 8) | (header >> 8)) & 0xffff;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: header % 31 != 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHeader,The following statement contains a magic number: (header & 0x0f00) != (DEFLATED << 8)
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: int dictByte = input.PeekBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: input.DropBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: readAdler = (readAdler << 8) | dictByte;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeDict,The following statement contains a magic number: neededBits -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: switch (mode)   				{  					case DECODE_HUFFMAN:  						// This is the inner loop so it is optimized a bit  						while (((symbol = litlenTree.GetSymbol(input)) & ~0xff) == 0)   						{  							outputWindow.Write(symbol);  							if (--free < 258)   							{  								return true;  							}  						}  						  						if (symbol < 257)   						{  							if (symbol < 0)   							{  								return false;  							}   							else   							{  								// symbol == 256: end of block  								distTree = null;  								litlenTree = null;  								mode = DECODE_BLOCKS;  								return true;  							}  						}  						  						try   						{  							repLength = CPLENS[symbol - 257];  							neededBits = CPLEXT[symbol - 257];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep length code");  						}  						goto case DECODE_HUFFMAN_LENBITS; // fall through  						  					case DECODE_HUFFMAN_LENBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_LENBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repLength += i;  						}  						mode = DECODE_HUFFMAN_DIST;  						goto case DECODE_HUFFMAN_DIST; // fall through  						  					case DECODE_HUFFMAN_DIST:  						symbol = distTree.GetSymbol(input);  						if (symbol < 0)   						{  							return false;  						}  						  						try   						{  							repDist = CPDIST[symbol];  							neededBits = CPDEXT[symbol];  						}   						catch (Exception)   						{  							throw new SharpZipBaseException("Illegal rep dist code");  						}  						  						goto case DECODE_HUFFMAN_DISTBITS; // fall through  						  					case DECODE_HUFFMAN_DISTBITS:  						if (neededBits > 0)   						{  							mode = DECODE_HUFFMAN_DISTBITS;  							int i = input.PeekBits(neededBits);  							if (i < 0)   							{  								return false;  							}  							input.DropBits(neededBits);  							repDist += i;  						}  						  						outputWindow.Repeat(repLength' repDist);  						free -= repLength;  						mode = DECODE_HUFFMAN;  						break;  					  					default:  						throw new SharpZipBaseException("Inflater unknown mode");  				}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeHuffman,The following statement contains a magic number: free >= 258
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: int chkByte = input.PeekBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: input.DropBits(8);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: readAdler = (readAdler << 8) | chkByte;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeChksum,The following statement contains a magic number: neededBits -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,Decode,The following statement contains a magic number: switch (mode) {  				case DECODE_HEADER:  					return DecodeHeader();    				case DECODE_DICT:  					return DecodeDict();    				case DECODE_CHKSUM:  					return DecodeChksum();  				  				case DECODE_BLOCKS:  					if (isLastBlock) {  						if (noHeader) {  							mode = FINISHED;  							return false;  						} else {  							input.SkipToByteBoundary();  							neededBits = 32;  							mode = DECODE_CHKSUM;  							return true;  						}  					}  					  					int blockType;  					if (!ReadHeader(ref isLastBlock' out blockType)) {  						return false;  					}  					switch (blockType){  						case STORED_BLOCK:  							input.SkipToByteBoundary();  							mode = DECODE_STORED_LEN1;  							break;  						case STATIC_TREES:  							litlenTree = InflaterHuffmanTree.defLitLenTree;  							distTree = InflaterHuffmanTree.defDistTree;  							mode = DECODE_HUFFMAN;  							break;  						case DYN_TREES:  							dynHeader = new InflaterDynHeader();  							mode = DECODE_DYN_HEADER;  							break;  						default:  							throw new SharpZipBaseException("Unknown block type " + blockType);  					}  					return true;  				  				case DECODE_STORED_LEN1:  					if (!DecodeStoredLength()) {  						return false;  					}  					mode = DECODE_STORED;  					goto case DECODE_STORED; // fall through  					  				case DECODE_STORED:   				{  					int more = outputWindow.CopyStored(input' uncomprLen);  					uncomprLen -= more;  					if (uncomprLen == 0) {  						mode = DECODE_BLOCKS;  						return true;  					}  					return !input.IsNeedingInput;  				}  				  				case DECODE_DYN_HEADER:  					if (!dynHeader.Decode(input)) {  						return false;  					}  					  					litlenTree = dynHeader.BuildLitLenTree();  					distTree = dynHeader.BuildDistTree();  					mode = DECODE_HUFFMAN;  					goto case DECODE_HUFFMAN; // fall through  					  				case DECODE_HUFFMAN:  				case DECODE_HUFFMAN_LENBITS:  				case DECODE_HUFFMAN_DIST:  				case DECODE_HUFFMAN_DISTBITS:  					return DecodeHuffman();  				  				case FINISHED:  					return false;  				  				default:  					throw new SharpZipBaseException("Inflater.Decode unknown mode");  			}
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,ReadHeader,The following statement contains a magic number: int type = input.PeekBits(3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,ReadHeader,The following statement contains a magic number: input.DropBits(3);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeStoredLength,The following statement contains a magic number: (uncomprLen = input.PeekBits(16)) < 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeStoredLength,The following statement contains a magic number: input.DropBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeStoredLength,The following statement contains a magic number: int nlen = input.PeekBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,Inflater,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Inflater.cs,DecodeStoredLength,The following statement contains a magic number: input.DropBits(16);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: byte[] codeLengths = new byte[288];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 144
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 9;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 256
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 7;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 280
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 288
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths = new byte[32];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: codeLengths[i++] = 5;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,InflaterHuffmanTree,The following statement contains a magic number: i < 32
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: int treeSize = 512;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: code += blCount[bits] << (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: treeSize += (end - start) >> (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits >= 10
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: int treePtr = 512;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: code -= blCount[bits] << (16 - bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: tree[BitReverse(i)] = (short) ((-treePtr << 4) | bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: treePtr += 1 << (bits-9);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits >= 10
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: tree[revcode] = (short) ((i << 4) | bits);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: bits <= 9
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BuildTree,The following statement contains a magic number: nextCode[bits] = code + (1 << (16 - bits));
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,BitReverse,The following statement contains a magic number: return (short) (bit4Reverse[toReverse & 0xF] << 12 |   			                bit4Reverse[(toReverse >> 4) & 0xF] << 8 |   			                bit4Reverse[(toReverse >> 8) & 0xF] << 4 |  			                bit4Reverse[toReverse >> 12]);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: input.DropBits(symbol & 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: return symbol >> 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: int subtree = -(symbol >> 4);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: int bitlen = symbol & 15;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: symbol = tree[subtree | (lookahead >> 9)];
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: input.DropBits(symbol & 15);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: return symbol >> 4;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression,InflaterHuffmanTree,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterHuffmanTree.cs,GetSymbol,The following statement contains a magic number: (lookahead = input.PeekBits(9)) >= 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,PeekBits,The following statement contains a magic number: buffer_ |= (uint)((window_[windowStart_++] & 0xff |  								 (window_[windowStart_++] & 0xff) << 8) << bitsInBuffer_);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,PeekBits,The following statement contains a magic number: bitsInBuffer_ += 16;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,SkipToByteBoundary,The following statement contains a magic number: buffer_ >>= (bitsInBuffer_ & 7);
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,SkipToByteBoundary,The following statement contains a magic number: bitsInBuffer_ &= ~7;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: (bitsInBuffer_ & 7) != 0
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: buffer_ >>= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: bitsInBuffer_ -= 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,CopyBytes,The following statement contains a magic number: bitsInBuffer_ = 8;
Magic Number,ICSharpCode.SharpZipLib.Zip.Compression.Streams,StreamManipulator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\Streams\StreamManipulator.cs,SetInput,The following statement contains a magic number: bitsInBuffer_ += 8;
Missing Default,de4dot.code,MethodPrinter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodPrinter.cs,initTargets,The following switch statement is missing a default case: switch (instr.OpCode.OperandType) {  				case OperandType.ShortInlineBrTarget:  				case OperandType.InlineBrTarget:  					setTarget(instr.Operand as Instruction);  					break;    				case OperandType.InlineSwitch:  					foreach (var targetInstr in (Instruction[])instr.Operand)  						setTarget(targetInstr);  					break;  				}
Missing Default,de4dot.code,MethodReturnValueInliner,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\MethodReturnValueInliner.cs,fixIntArg,The following switch statement is missing a default case: switch (type.ElementType) {  			case ElementType.Boolean: return value != 0;  			case ElementType.Char: return (char)value;  			case ElementType.I1: return (sbyte)value;  			case ElementType.U1: return (byte)value;  			case ElementType.I2: return (short)value;  			case ElementType.U2: return (ushort)value;  			case ElementType.I4: return (int)value;  			case ElementType.U4: return (uint)value;  			case ElementType.I8: return (long)value;  			case ElementType.U8: return (ulong)value;  			}
Missing Default,de4dot.code.deobfuscators,ArrayFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ArrayFinder.cs,getInitializedArray,The following switch statement is missing a default case: switch (instr.OpCode.Code) {  				case Code.Newarr:  				case Code.Newobj:  					goto done;    				case Code.Stloc:  				case Code.Stloc_S:  				case Code.Stloc_0:  				case Code.Stloc_1:  				case Code.Stloc_2:  				case Code.Stloc_3:  				case Code.Starg:  				case Code.Starg_S:  				case Code.Stsfld:  				case Code.Stfld:  					if (emulator.peek() == theArray && i != newarrIndex + 1 && i != newarrIndex + 2)  						goto done;  					break;  				}
Missing Default,de4dot.code.deobfuscators,ExceptionLoggerRemover,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\ExceptionLoggerRemover.cs,find,The following switch statement is missing a default case: switch (instr.OpCode.Code) {  						case Code.Call:  						case Code.Calli:  						case Code.Callvirt:  							calls++;  							callInstr = instr;  							break;  						}
Missing Default,de4dot.code.deobfuscators,InlinedMethodsFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\InlinedMethodsFinder.cs,isCallMethod,The following switch statement is missing a default case: switch (instr.OpCode.Code) {  				case Code.Ldarg:  				case Code.Ldarg_S:  				case Code.Ldarg_0:  				case Code.Ldarg_1:  				case Code.Ldarg_2:  				case Code.Ldarg_3:  				case Code.Ldarga:  				case Code.Ldarga_S:  					if (instr.GetParameterIndex() != loadIndex)  						return false;  					loadIndex++;  					continue;  				}
Missing Default,de4dot.code.deobfuscators,RandomNameChecker,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\RandomNameChecker.cs,hasVowel,The following switch statement is missing a default case: switch (c) {  				case 'A':  				case 'a':  				case 'E':  				case 'e':  				case 'I':  				case 'i':  				case 'O':  				case 'o':  				case 'U':  				case 'u':  				case 'Y':  				case 'y':  					return true;  				}
Missing Default,de4dot.code.deobfuscators.CodeWall,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CodeWall\Deobfuscator.cs,detectVersion,The following switch statement is missing a default case: switch (stringDecrypter.TheVersion) {  				case StringDecrypter.Version.V30: return "v3.0 - v3.5";  				case StringDecrypter.Version.V36: return "v3.6 - v4.1";  				}
Missing Default,de4dot.code.deobfuscators.CryptoObfuscator,ProxyCallFixer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ProxyCallFixer.cs,getProxyCreatorType,The following switch statement is missing a default case: switch (field.FullName) {  				case "System.Reflection.Emit.OpCode System.Reflection.Emit.OpCodes::Call":  					numCalls++;  					break;  				case "System.Reflection.Emit.OpCode System.Reflection.Emit.OpCodes::Callvirt":  					numCallvirts++;  					break;  				case "System.Reflection.Emit.OpCode System.Reflection.Emit.OpCodes::Newobj":  					numNewobjs++;  					break;  				}
Missing Default,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,find,The following switch statement is missing a default case: switch (frameworkType) {  			case FrameworkType.Desktop:  				if (!module.IsClr1x)  					findDesktopOrCompactFramework();  				else  					findDesktopOrCompactFrameworkV1();  				break;    			case FrameworkType.Silverlight:  				findSilverlight();  				break;    			case FrameworkType.CompactFramework:  				if (!module.IsClr1x) {  					if (findDesktopOrCompactFramework())  						break;  				}  				findDesktopOrCompactFrameworkV1();  				break;  			}
Missing Default,de4dot.code.deobfuscators.CryptoObfuscator,ResourceDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\ResourceDecrypter.cs,updateFlags,The following switch statement is missing a default case: switch (frameworkType) {  			case FrameworkType.Desktop:  				if (!module.IsClr1x) {  					if (constants.Count == 2) {  						desEncryptedFlag = (byte)constants[0];  						deflatedFlag = (byte)constants[1];  						return true;  					}  				}  				else {  					if (constants.Count == 1) {  						desEncryptedFlag = (byte)constants[0];  						return true;  					}  				}  				break;    			case FrameworkType.Silverlight:  				if (constants.Count == 1) {  					bitwiseNotEncryptedFlag = (byte)constants[0];  					return true;  				}  				break;    			case FrameworkType.CompactFramework:  				if (constants.Count == 1) {  					desEncryptedFlag = (byte)constants[0];  					return true;  				}  				break;  			}
Missing Default,de4dot.code.deobfuscators.CryptoObfuscator,TamperDetection,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\CryptoObfuscator\TamperDetection.cs,find,The following switch statement is missing a default case: switch (frameworkType) {  				case FrameworkType.Desktop:  					result = findDesktop(method);  					break;  				case FrameworkType.Silverlight:  					result = findSilverlight(method);  					break;  				case FrameworkType.CompactFramework:  					result = findCompactFramework(method);  					break;  				}
Missing Default,de4dot.code.deobfuscators.DeepSea,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\Deobfuscator.cs,detectVersion,The following switch statement is missing a default case: switch (stringDecrypter.Version) {  			case StringDecrypter.DecrypterVersion.V1_3:  				if (detectMethodProxyObfuscation())  					return DeobfuscatorInfo.THE_NAME + " 3.5";  				return DeobfuscatorInfo.THE_NAME + " 1.x-3.x";  			case StringDecrypter.DecrypterVersion.V4_0:  				return DeobfuscatorInfo.THE_NAME + " 4.0";  			case StringDecrypter.DecrypterVersion.V4_1:  				return DeobfuscatorInfo.THE_NAME + " 4.1";  			}
Missing Default,de4dot.code.deobfuscators.DeepSea,StringDecrypter,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\DeepSea\StringDecrypter.cs,checkFields,The following switch statement is missing a default case: switch (field.FieldSig.GetFieldType().GetFullName()) {  				case "System.Char[]":  					foundCharAry = true;  					break;  				case "System.String[]":  					foundStringAry = true;  					break;  				}
Missing Default,de4dot.code.deobfuscators.Eazfuscator_NET,EfUtils,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\EfUtils.cs,getNextStore,The following switch statement is missing a default case: switch (instr.OpCode.Code) {  				case Code.Starg:  				case Code.Starg_S:  				case Code.Stelem:  				case Code.Stelem_I:  				case Code.Stelem_I1:  				case Code.Stelem_I2:  				case Code.Stelem_I4:  				case Code.Stelem_I8:  				case Code.Stelem_R4:  				case Code.Stelem_R8:  				case Code.Stelem_Ref:  				case Code.Stfld:  				case Code.Stind_I:  				case Code.Stind_I1:  				case Code.Stind_I2:  				case Code.Stind_I4:  				case Code.Stind_I8:  				case Code.Stind_R4:  				case Code.Stind_R8:  				case Code.Stind_Ref:  				case Code.Stloc:  				case Code.Stloc_0:  				case Code.Stloc_1:  				case Code.Stloc_2:  				case Code.Stloc_3:  				case Code.Stloc_S:  				case Code.Stobj:  				case Code.Stsfld:  					return instr;  				}
Missing Default,de4dot.code.deobfuscators.Eazfuscator_NET,VersionDetector,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Eazfuscator_NET\VersionDetector.cs,createLocalsArray,The following switch statement is missing a default case: switch (frameworkType) {  			case FrameworkType.CompactFramework:  				removeLocals = removeLocals_cf;  				break;  			}
Missing Default,de4dot.code.deobfuscators.dotNET_Reactor.v3,DecrypterType,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v3\DecrypterType.cs,updateModuleRefs,The following switch statement is missing a default case: switch (method.ImplMap.Name.String) {  					case "nr_nli":  					case "nr_startup":  						moduleRefs.Add(method.ImplMap.Module);  						break;  					}
Missing Default,de4dot.code.deobfuscators.dotNET_Reactor.v4,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\dotNET_Reactor\v4\Deobfuscator.cs,OnWriterEvent,The following switch statement is missing a default case: switch (evt) {  			case ModuleWriterEvent.Begin:  				// The decrypter assumes RVAs are unique so don't share any method bodies  				writer.TheOptions.ShareMethodBodies = false;  				break;    			case ModuleWriterEvent.MDBeginAddResources:  				methodsDecrypter.prepareEncryptNativeMethods(writer);  				break;    			case ModuleWriterEvent.BeginWriteChunks:  				methodsDecrypter.encryptNativeMethods(writer);  				break;  			}
Missing Default,de4dot.code.deobfuscators.MPRESS,Lzmat,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\MPRESS\Lzmat.cs,decompress,The following switch statement is missing a default case: switch(r_cnt&3)  					{  					case 0:  						dist=(dist&LZMAT_DIST_MSK0)+1;  						break;  					case 1:  						inPos+=cur_nib;  						dist = (dist&LZMAT_DIST_MSK1)+0x41;  						cur_nib^=1;  						break;  					case 2:  						inPos++;  						dist += 0x441;  						break;  					case 3:  						if((inPos+2+cur_nib)>cbIn)  							return LzmatStatus.INTEGRITY_FAILURE+1;  						inPos++;  						dist = (dist +   							((uint)LZMAT_GET_U4(pbIn'ref inPos'ref cur_nib)<<14))  							+0x4441;  						break;  					}
Missing Default,de4dot.code.deobfuscators.Spices_Net,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Spices_Net\Deobfuscator.cs,findSpicesAttributes,The following switch statement is missing a default case: switch (type.FullName) {  				case "NineRays.Decompiler.NotDecompile":  				case "NineRays.Obfuscator.Evaluation":  				case "NineRays.Obfuscator.SoftwareWatermarkAttribute":  					addAttributeToBeRemoved(type' "Obfuscator attribute");  					foundSpicesAttribute = true;  					break;  				}
Missing Default,de4dot.code.deobfuscators.Xenocode,Deobfuscator,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\deobfuscators\Xenocode\Deobfuscator.cs,findXenocodeAttribute,The following switch statement is missing a default case: switch (type.FullName) {  				case "Xenocode.Client.Attributes.AssemblyAttributes.ProcessedByXenocode":  				case "Xenocode.Client.Attributes.AssemblyAttributes.SuppressDisassembly":  				case "Xenocode.User.Attributes.AssemblyAttributes.ProcessedByXenoCode":  				case "Xenocode.User.Attributes.AssemblyAttributes.SuppressDisassembly":  					addAttributeToBeRemoved(type' "Obfuscator attribute");  					foundXenocodeAttribute = true;  					break;  				}
Missing Default,de4dot.code.renamer.asmmodules,MemberRefFinder,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\asmmodules\MemberRefFinder.cs,add,The following switch statement is missing a default case: switch (instr.OpCode.OperandType) {  				case OperandType.InlineTok:  				case OperandType.InlineType:  				case OperandType.InlineMethod:  				case OperandType.InlineField:  					push(instr.Operand);  					break;    				case OperandType.InlineSig:  					add(instr.Operand as CallingConventionSig);  					break;    				case OperandType.InlineVar:  				case OperandType.ShortInlineVar:  					var local = instr.Operand as Local;  					if (local != null) {  						add(local);  						break;  					}  					var arg = instr.Operand as Parameter;  					if (arg != null) {  						add(arg);  						break;  					}  					break;  				}
Missing Default,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,createEvent,The following switch statement is missing a default case: switch (methodType) {  			case EventMethodType.Adder:  				createEventAdder(newEventName' methodDef);  				break;  			case EventMethodType.Remover:  				createEventRemover(newEventName' methodDef);  				break;  			}
Missing Default,de4dot.code.renamer,Renamer,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\Renamer.cs,prepareRenameVirtualMethods,The following switch statement is missing a default case: switch (group.Methods[0].MethodDef.Name.String) {  				case "Invoke":  				case "BeginInvoke":  				case "EndInvoke":  					return;  				}
Missing Default,de4dot.code.renamer,TypeInfo,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\renamer\TypeInfo.cs,canRenameMethod,The following switch statement is missing a default case: switch (methodInfo.oldName) {  					case "BeginInvoke":  					case "EndInvoke":  					case "Invoke":  						return false;  					}
Missing Default,ICSharpCode.SharpZipLib.Zip.Compression,InflaterDynHeader,D:\research\architectureSmells\repos\UbbeLoL_ConfuserDeobfuscator\ConfuserDeobfuscator\de4dot\de4dot.code\SharpZipLib\Zip\Compression\InflaterDynHeader.cs,Decode,The following switch statement is missing a default case: switch (mode) {  						case LNUM:  							lnum = input.PeekBits(5);  							if (lnum < 0) {  								return false;  							}  							lnum += 257;  							input.DropBits(5);  							//  	    System.err.println("LNUM: "+lnum);  							mode = DNUM;  							goto case DNUM; // fall through  						case DNUM:  							dnum = input.PeekBits(5);  							if (dnum < 0) {  								return false;  							}  							dnum++;  							input.DropBits(5);  							//  	    System.err.println("DNUM: "+dnum);  							num = lnum+dnum;  							litdistLens = new byte[num];  							mode = BLNUM;  							goto case BLNUM; // fall through  						case BLNUM:  							blnum = input.PeekBits(4);  							if (blnum < 0) {  								return false;  							}  							blnum += 4;  							input.DropBits(4);  							blLens = new byte[19];  							ptr = 0;  							//  	    System.err.println("BLNUM: "+blnum);  							mode = BLLENS;  							goto case BLLENS; // fall through  						case BLLENS:  							while (ptr < blnum) {  								int len = input.PeekBits(3);  								if (len < 0) {  									return false;  								}  								input.DropBits(3);  								//  		System.err.println("blLens["+BL_ORDER[ptr]+"]: "+len);  								blLens[BL_ORDER[ptr]] = (byte) len;  								ptr++;  							}  							blTree = new InflaterHuffmanTree(blLens);  							blLens = null;  							ptr = 0;  							mode = LENS;  							goto case LENS; // fall through  						case LENS:   						{  							int symbol;  							while (((symbol = blTree.GetSymbol(input)) & ~15) == 0) {  								/* Normal case: symbol in [0..15] */  							  								//  		  System.err.println("litdistLens["+ptr+"]: "+symbol);  								litdistLens[ptr++] = lastLen = (byte)symbol;  							  								if (ptr == num) {  									/* Finished */  									return true;  								}  							}  						  							/* need more input ? */  							if (symbol < 0) {  								return false;  							}  						  							/* otherwise repeat code */  							if (symbol >= 17) {  								/* repeat zero */  								//  		  System.err.println("repeating zero");  								lastLen = 0;  							} else {  								if (ptr == 0) {  									throw new SharpZipBaseException();  								}  							}  							repSymbol = symbol-16;  						}  							mode = REPS;  							goto case REPS; // fall through  						case REPS:  						{  							int bits = repBits[repSymbol];  							int count = input.PeekBits(bits);  							if (count < 0) {  								return false;  							}  							input.DropBits(bits);  							count += repMin[repSymbol];  							//  	      System.err.println("litdistLens repeated: "+count);  							  							if (ptr + count > num) {  								throw new SharpZipBaseException();  							}  							while (count-- > 0) {  								litdistLens[ptr++] = lastLen;  							}  							  							if (ptr == num) {  								/* Finished */  								return true;  							}  						}  						mode = LENS;  						goto decode_loop;  					}
