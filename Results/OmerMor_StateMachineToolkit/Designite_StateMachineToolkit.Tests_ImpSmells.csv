Implementation smell,Namespace,Class,File,Method,Description
Magic Number,StateMachineToolkit.Tests.Passive,TestPassiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestPassiveStateMachine.cs,TransitionActions_ThrowsExceptionTwice,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,StateMachineToolkit.Tests.Passive,TestPassiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestPassiveStateMachine.cs,BeginDispatch,The following statement contains a magic number: m.BeginDispatch += (sender' e) =>  			                         	{                                              Assert.AreEqual(State.S1' m.CurrentStateID);  			                         		Assert.AreEqual(Event.S1_to_S2' e.EventID);  			                         		Assert.AreEqual(State.S1' e.SourceStateID);  			                         		Assert.AreEqual(123' e.EventArgs);  			                         	};
Magic Number,StateMachineToolkit.Tests.Passive,TestPassiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestPassiveStateMachine.cs,BeginDispatch,The following statement contains a magic number: m.Send(Event.S1_to_S2' 123);
Magic Number,StateMachineToolkit.Tests.Passive,EventTester,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestPassiveStateMachine.cs,wasCalled,The following statement contains a magic number: var timeout = Debugger.IsAttached  			                   	? TimeSpan.FromMinutes(1)  			                   	: TimeSpan.FromMilliseconds(50);
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,SendSynchronously_should_not_hang_when_raising_BeginDispach_event,The following statement contains a magic number: var finished = finishedEvent.WaitOne(TimeSpan.FromSeconds(10));
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,Test_machine_with_String_state_and_Int32_event_types,The following statement contains a magic number: machine.AddTransition("S1"' 12' "S2");
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,Test_machine_with_String_state_and_Int32_event_types,The following statement contains a magic number: machine.Send(12);
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,TransitionActions_ThrowsExceptionTwice,The following statement contains a magic number: Assert.AreEqual(2' count);
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,BeginDispatch,The following statement contains a magic number: machine.BeginDispatch += (sender' e) =>                  {                      Assert.AreEqual(State.S1' machine.CurrentStateID);                      Assert.AreEqual(Event.S1_to_S2' e.EventID);                      Assert.AreEqual(State.S1' e.SourceStateID);                      Assert.AreEqual(123' e.EventArgs);                  };
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,BeginDispatch,The following statement contains a magic number: machine.Send(Event.S1_to_S2' 123);
Magic Number,StateMachineToolkit.Tests.Active,TestActiveStateMachine,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TestActiveStateMachine.cs,BeginDispach_event_should_raise_in_right_context,The following statement contains a magic number: var loadedEvent = new EventTester(TimeSpan.FromSeconds(1000));
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var state = new Label {Location = new Point {X = 20' Y = 20}};
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var state = new Label {Location = new Point {X = 20' Y = 20}};
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var start = new Button {Text = "Start"' Location = new Point {X = 20' Y = 60}};
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var start = new Button {Text = "Start"' Location = new Point {X = 20' Y = 60}};
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var stop = new Button {Text = "Stop"' Location = new Point {X = 20' Y = 100}};
Magic Number,StateMachineToolkit.Tests.Active,TrafficLightApp,C:\research\architectureSmells\repos\OmerMor_StateMachineToolkit\tests\StateMachineToolkit.Tests\TrafficLightDemo.cs,Main,The following statement contains a magic number: var stop = new Button {Text = "Stop"' Location = new Point {X = 20' Y = 100}};
