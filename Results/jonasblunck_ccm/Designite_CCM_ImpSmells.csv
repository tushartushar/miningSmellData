Implementation smell,Namespace,Class,File,Method,Description
Complex Method,CCM,Driver,D:\newReposJune17\jonasblunck_ccm\source\CCM\Driver.cs,HandleDirectory,Cyclomatic complexity of the method is 7
Complex Method,CCM,Program,D:\newReposJune17\jonasblunck_ccm\source\CCM\Program.cs,CreateConfigurationFromArgs,Cyclomatic complexity of the method is 8
Long Statement,CCM,ConsoleOutputter,D:\newReposJune17\jonasblunck_ccm\source\CCM\ConsoleOutputter.cs,Output,The length of the statement  "		Console.WriteLine ("{0} : {1} - {2} ({3}@line {4})"' metric.Unit' metric.CCM' metric.Classification' metric.Filename' metric.StartLineNumber); " is 142.
Long Statement,CCM,CSVOutputter,D:\newReposJune17\jonasblunck_ccm\source\CCM\CSVOutputter.cs,Output,The length of the statement  "			Console.WriteLine ("\"{0}\"'{1}'{2}'{3}'{4}'{5}'{6}"' m.Unit' m.CCM' m.Classification' m.Filename' m.StartLineNumber' m.EndLineNumber' (m.EndLineNumber - m.StartLineNumber)); " is 174.
Long Statement,CCM,TabbedOutputter,D:\newReposJune17\jonasblunck_ccm\source\CCM\TabbedOutputter.cs,Output,The length of the statement  "			Console.WriteLine ("{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}"' m.Unit' m.CCM' m.Classification' m.Filename' m.StartLineNumber' m.EndLineNumber' (m.EndLineNumber - m.StartLineNumber)); " is 176.
Long Statement,CCM,Driver,D:\newReposJune17\jonasblunck_ccm\source\CCM\Driver.cs,Init,The length of the statement  "	this.listener = new SortedListener (this.configFile.NumMetrics' this.configFile.ExcludeFunctions' this.configFile.Threshold); " is 125.
Long Statement,CCM,Driver,D:\newReposJune17\jonasblunck_ccm\source\CCM\Driver.cs,AnalyzeFilestream,The length of the statement  "		FileAnalyzer analyzer = new FileAnalyzer (parameters.stream' this.listener' null' this.configFile.SuppressMethodSignatures' parameters.filename' this.configFile.SwitchStatementBehavior); " is 186.
Long Statement,CCM,Program,D:\newReposJune17\jonasblunck_ccm\source\CCM\Program.cs,PrintUsage,The length of the statement  "	string usage = "\r\nccm will analyze you code base and provide cyclomatic complexity metrics. \r\n" + "Supported languages are c/c++ (.c' .cpp' .h' .hpp)' c# (.cs) and javascript (.js)\r\n" + "\r\n\r\nUsage:\r\n" + "  ccm [config-file] \r\n" + "  ccm [path-to-analyze] [/xml] [/v] [/ignorecases] [/threshold=5] [/nummetrics=10] \r\n\r\n" + "    config-file        Path to configuration file (see below for structure of file).\r\n" + "                       Using a configuration file provides more control' such as analyzing multiple folders'\r\n" + "                       excluding folders and files and controlling number of metrics outputted.\r\n" + "    path-to-analyze    Provide a path to source code for analysis.\r\n" + "                       This will be analyzed recursively and 30 worst metrics outputted.\r\n" + "    xml                Add /xml if you want output in xml.\r\n" + "    v                  Add /v if you want ccm-version to be printed to console.\r\n" + "    ignorecases        Don't count each case in a switch as additional branch.\r\n" + "    threshold          Don't report metrics less than the threshold.\r\n" + "    nummetrics         Report only top <X> metrics (see numMetrics element in config file).\r\n" + " \r\n" + "  When ccm operates on a configuration file' all other parameters are ignored. \r\n" + "  Structure of configuration file should be:\r\n\r\n" + "  <ccm> \r\n " + "    <exclude>\r\n" + "      <file>myfile.cpp</file>\r\n" + "      <folder>myfolder</folder>\r\n " + "    </exclude>\r\n " + "    <analyze>\r\n " + "      <folder>..\\..\\code</folder>\r\n" + "    </analyze>\r\n" + "    <recursive>yes</recursive>\r\n" + "    <outputter>XML|Tabbed|Text|CSV</outputter>\r\n" + "    <numMetrics>30</numMetrics>\r\n" + "    <threshold>5</threshold>\r\n" + "    <switchStatementBehavior>TraditionalInclude|IgnoreCases</switchStatementBehavior>\r\n" + "    <fileExtensions>\r\n" + "      <fileExtension>.cxx</fileExtension>\r\n" + "    </fileExtensions>\r\n" + "  </ccm>\r\n" + " \r\n" + " \r\n"; " is 2042.
