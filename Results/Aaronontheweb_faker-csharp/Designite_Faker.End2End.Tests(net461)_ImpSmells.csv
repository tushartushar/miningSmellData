Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Faker.End2End.Tests,SealedClassesSpec,D:\research\architectureSmells\repos\Aaronontheweb_faker-csharp\tests\Faker.End2End.Tests\SealedClassesSpec.cs,Faker_should_populate_class_via_constructor_and_properties,The length of the statement  "            var fake = Fake.Create<MyPoorlyDesignedClass>().SetType(() => 1.0D).SetProperty(x => x.MyOtherDouble' () => -0.1d).Generate(); " is 126.
Long Statement,Faker.End2End.Tests,SealedClassesSpec,D:\research\architectureSmells\repos\Aaronontheweb_faker-csharp\tests\Faker.End2End.Tests\SealedClassesSpec.cs,Faker_should_populate_class_via_constructor_and_properties,The length of the statement  "            Assert.Equal(-0.1d' fake.MyOtherDouble); // error - property setting is more specific than an individual type. That should override. " is 132.
Magic Number,Faker.End2End.Tests,SealedClassesSpec,D:\research\architectureSmells\repos\Aaronontheweb_faker-csharp\tests\Faker.End2End.Tests\SealedClassesSpec.cs,Faker_should_populate_class_via_constructor_and_properties,The following statement contains a magic number: var fake = Fake.Create<MyPoorlyDesignedClass>().SetType(() => 1.0D).SetProperty(x => x.MyOtherDouble' () => -0.1d).Generate();
Magic Number,Faker.End2End.Tests,SealedClassesSpec,D:\research\architectureSmells\repos\Aaronontheweb_faker-csharp\tests\Faker.End2End.Tests\SealedClassesSpec.cs,Faker_should_populate_class_via_constructor_and_properties,The following statement contains a magic number: Assert.Equal(-0.1d' fake.MyOtherDouble);
