Implementation smell,Namespace,Class,File,Method,Description
Long Method,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The method has 113 lines of code.
Long Method,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The method has 236 lines of code.
Long Parameter List,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,RunAdoJobStoreTest,The method has 5 parameters. Parameters: dbProvider' connectionStringId' serializerType' extraProperties' clustered
Long Identifier,Quartz.Tests.Integration.Core,MissSchedulingChangeSignalTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\MissSchedulingChangeSignalTest.cs,SimpleScheduleAlwaysFiredUnder20S,The length of the parameter durationBetweenFireTimesInMillis is 32.
Long Statement,Quartz.Tests.Integration,AdoSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\AdoSchedulerTest.cs,CreateScheduler,The length of the statement  "            DBConnectionManager.Instance.AddConnectionProvider("default"' new DbProvider(TestConstants.DefaultSqlServerProvider' TestConstants.SqlServerConnectionString)); " is 159.
Long Statement,Quartz.Tests.Integration,JobDataMapStorageTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\JobDataMapStorageTest.cs,CreateScheduler,The length of the statement  "            DBConnectionManager.Instance.AddConnectionProvider("default"' new DbProvider(TestConstants.DefaultSqlServerProvider' TestConstants.SqlServerConnectionString)); " is 159.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(await sched.CheckExists(new JobKey("j1"))' "Expected existence of job named 'j1' but checkExists return false."); " is 125.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(await sched.CheckExists(new TriggerKey("t1"))' "Expected existence of trigger named 't1' but checkExists return false."); " is 133.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(await sched.UnscheduleJob(new TriggerKey("foasldfksajdflk"))' Is.False' "Scheduler should have returned 'false' from attempt to unschedule non-existing trigger. "); " is 176.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(await sched.UnscheduleJob(new TriggerKey("t3"' "g1"))' "Scheduler should have returned 'true' from attempt to unschedule existing trigger. "); " is 154.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(jobKeys.Count' Is.EqualTo(2)' "Number of jobs expected in 'g1' group was 1 "); // job should have been deleted also' because it is non-durable " is 154.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(await sched.UnscheduleJob(new TriggerKey("t1"))' "Scheduler should have returned 'true' from attempt to unschedule existing trigger. "); " is 148.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The length of the statement  "            Assert.That(jobKeys.Count' Is.EqualTo(1)' "Number of jobs expected in default group was 1 "); // job should have been left in place' because it is non-durable " is 158.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBefore,The length of the statement  "            Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time."); " is 131.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob,The length of the statement  "            Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time."); // This is dangerously subjective!  but what else to do? " is 188.
Long Statement,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedAfter,The length of the statement  "            Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time."); // This is dangerously subjective!  but what else to do? " is 188.
Long Statement,Quartz.Tests.Integration.Core,MissSchedulingChangeSignalTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\MissSchedulingChangeSignalTest.cs,SimpleScheduleAlwaysFiredUnder20S,The length of the statement  "                Assert.True(durationInMillis.TotalMilliseconds < 20000' "Missed an execution with one duration being between two fires: " + durationInMillis + " (all: " " is 152.
Long Statement,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The length of the statement  "            DBConnectionManager.Instance.AddConnectionProvider(DsName' new DbProvider(TestConstants.DefaultSqlServerProvider' TestConstants.SqlServerConnectionString)); " is 156.
Long Statement,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The length of the statement  "                    command.CommandText = $"SELECT TRIGGER_STATE from QRTZ_TRIGGERS WHERE SCHED_NAME = '{scheduler.SchedulerName}' AND TRIGGER_NAME='test'"; " is 136.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,FixtureSetUp,The length of the statement  "            oldProvider = (ILogProvider) typeof(LogProvider).GetField("s_currentLogProvider"' BindingFlags.NonPublic | BindingFlags.Static).GetValue(null); " is 143.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServer,The length of the statement  "                ["quartz.jobStore.driverDelegateType"] = typeof(Quartz.Impl.AdoJobStore.SqlServerDelegate).AssemblyQualifiedNameWithoutVersion() " is 128.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServerMemoryOptimizedTables,The length of the statement  "                ["quartz.jobStore.driverDelegateType"] = typeof(Quartz.Impl.AdoJobStore.SqlServerDelegate).AssemblyQualifiedNameWithoutVersion()' " is 129.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServerMemoryOptimizedTables,The length of the statement  "                ["quartz.jobStore.lockHandler.type"] = typeof(Quartz.Impl.AdoJobStore.UpdateLockRowSemaphoreMOT).AssemblyQualifiedNameWithoutVersion() " is 134.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServerStress,The length of the statement  "                        ITrigger trigger = new SimpleTriggerImpl("calendarsTrigger"' "test"' SimpleTriggerImpl.RepeatIndefinitely' TimeSpan.FromSeconds(1)); " is 132.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,JobTypeNotFoundShouldNotBlock,The length of the statement  "            properties.Add(StdSchedulerFactory.PropertySchedulerTypeLoadHelperType' typeof(SpecialClassLoadHelper).AssemblyQualifiedName); " is 126.
Long Statement,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,StressTest,The length of the statement  "                    IOperableTrigger trigger = new SimpleTriggerImpl("stressing_simple"' SimpleTriggerImpl.RepeatIndefinitely' TimeSpan.FromSeconds(1)); " is 132.
Long Statement,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The length of the statement  "                    IOperableTrigger calendarsTrigger = new SimpleTriggerImpl("calendarsTrigger"' "test"' 20' TimeSpan.FromMilliseconds(5)); " is 120.
Long Statement,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The length of the statement  "                    await scheduler.AddCalendar("dailyCalendar"' new DailyCalendar(DateTime.Now.Date' DateTime.Now.AddMinutes(1))' false' true); " is 124.
Long Statement,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The length of the statement  "                    DailyTimeIntervalTriggerImpl nt = new DailyTimeIntervalTriggerImpl("nth_trig_" + count' schedId' new TimeOfDay(1' 1' 1)' new TimeOfDay(23' 30' 0)' IntervalUnit.Hour' 1); " is 169.
Long Statement,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The length of the statement  "            ITrigger trigger = TriggerBuilder.Create().WithIdentity("trig1"' "aaabbbccc").WithSchedule(schedule).ForJob(job).Build(); " is 121.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,SetUp,The length of the statement  "            A.CallTo(() => mockScheduler.GetJobDetail(A<JobKey>._' A<CancellationToken>._)).Returns(Task.FromResult<IJobDetail>(null)); " is 123.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,SetUp,The length of the statement  "            A.CallTo(() => mockScheduler.GetTrigger(A<TriggerKey>._' A<CancellationToken>._)).Returns(Task.FromResult<ITrigger>(null)); " is 123.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestScheduling_RichConfiguration,The length of the statement  "            A.CallTo(() => mockScheduler.ScheduleJob(A<ITrigger>.That.Not.IsNull()' A<CancellationToken>._)).MustHaveHappened(Repeated.Exactly.Times(7)); " is 141.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestScheduling_QuartzNet250,The length of the statement  "            A.CallTo(() => mockScheduler.AddJob(A<IJobDetail>.That.Not.IsNull()' A<bool>.Ignored' A<bool>.That.IsEqualTo(true)' A<CancellationToken>._)).MustHaveHappened(Repeated.Exactly.Twice); " is 182.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestScheduling_QuartzNet250,The length of the statement  "            A.CallTo(() => mockScheduler.ScheduleJob(A<ITrigger>.That.Not.IsNull()' A<CancellationToken>._)).MustHaveHappened(Repeated.Exactly.Twice); " is 138.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The length of the statement  "            SimpleTriggerImpl existing = new SimpleTriggerImpl("triggerToReplace"' "groupToReplace"' startTime' null' SimpleTriggerImpl.RepeatIndefinitely' TimeSpan.FromHours(1)); " is 167.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestOverwriteFlag,The length of the statement  "                ITrigger trigger = TriggerBuilder.Create().WithIdentity("job1").WithSchedule(SimpleScheduleBuilder.RepeatHourlyForever()).Build(); " is 130.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TesDirectivesNoOverwriteWithIgnoreDups,The length of the statement  "                using (StreamReader reader = new StreamReader(ReadJobXmlFromEmbeddedResource("directives_overwrite_no-ignoredups.xml"))) " is 120.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TesDirectivesNoOverwriteWithIgnoreDups,The length of the statement  "                trigger = TriggerBuilder.Create().WithIdentity("job2").WithSchedule(SimpleScheduleBuilder.RepeatHourlyForever()).Build(); " is 121.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,MultipleScheduleElementsShouldBeSupported,The length of the statement  "            A.CallTo(() => mockScheduler.ScheduleJob(A<IJobDetail>.That.Matches(p => p.Key.Name == "sched2_job")' A<ITrigger>.Ignored' A<CancellationToken>._)); " is 148.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,MultipleScheduleElementsShouldBeSupported,The length of the statement  "            A.CallTo(() => mockScheduler.ScheduleJob(A<ITrigger>.That.Matches(p => p.Key.Name == "sched2_trig")' A<CancellationToken>._)).MustHaveHappened(); " is 145.
Long Statement,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestDirectivesOverwriteWithNoIgnoreDups,The length of the statement  "                ITrigger trigger = TriggerBuilder.Create().WithIdentity(job1).WithSchedule(SimpleScheduleBuilder.RepeatHourlyForever()).Build(); " is 128.
Empty Catch Block,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestOverwriteFlag,The method has an empty catch block.
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testBasicStorageFunctions"' 2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: ITrigger trigger = TriggerBuilder.Create()                  .WithIdentity("t1")                  .ForJob(job)                  .StartNow()                  .WithSimpleSchedule(x => x                      .RepeatForever()                      .WithIntervalInSeconds(5))                  .Build();
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: trigger = TriggerBuilder.Create()                  .WithIdentity("t2"' "g1")                  .ForJob(job)                  .StartNow()                  .WithSimpleSchedule(x => x                      .RepeatForever()                      .WithIntervalInSeconds(5))                  .Build();
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: trigger = TriggerBuilder.Create()                  .WithIdentity("t3"' "g1")                  .ForJob(job)                  .StartNow()                  .WithSimpleSchedule(x => x                      .RepeatForever()                      .WithIntervalInSeconds(5))                  .Build();
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(jobGroups.Count' Is.EqualTo(2)' "Job group list size expected to be = 2 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(triggerGroups.Count' Is.EqualTo(2)' "Trigger group list size expected to be = 2 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(jobKeys.Count' Is.EqualTo(2)' "Number of jobs expected in 'g1' group was 2 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(triggerKeys.Count' Is.EqualTo(2)' "Number of triggers expected in 'g1' group was 2 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: trigger = TriggerBuilder.Create()                  .WithIdentity("t4"' "g1")                  .ForJob(job)                  .StartNow()                  .WithSimpleSchedule(x => x.RepeatForever().WithIntervalInSeconds(5))                  .Build();
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(jobKeys.Count' Is.EqualTo(2)' "Number of jobs expected in 'g1' group was 1 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestBasicStorageFunctions,The following statement contains a magic number: Assert.That(triggerKeys.Count' Is.EqualTo(2)' "Number of triggers expected in 'g1' group was 1 ");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBefore,The following statement contains a magic number: Barrier barrier = new Barrier(2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBefore,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testAbilityToFireImmediatelyWhenStartedBefore"' 5);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBefore,The following statement contains a magic number: Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time.");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob,The following statement contains a magic number: Barrier barrier = new Barrier(2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob"' 5);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedBeforeWithTriggerJob,The following statement contains a magic number: Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time.");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedAfter,The following statement contains a magic number: Barrier barrier = new Barrier(2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedAfter,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testAbilityToFireImmediatelyWhenStartedAfter"' 5);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestAbilityToFireImmediatelyWhenStartedAfter,The following statement contains a magic number: Assert.That(fTime - sTime < TimeSpan.FromMilliseconds(7000)' "Immediate trigger did not fire within a reasonable amount of time.");
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestScheduleMultipleTriggersForAJob,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testScheduleMultipleTriggersForAJob"' 5);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestScheduleMultipleTriggersForAJob,The following statement contains a magic number: Assert.That(triggersOfJob.Count' Is.EqualTo(2));
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestDurableStorageFunctions,The following statement contains a magic number: IScheduler sched = await CreateScheduler("testDurableStorageFunctions"' 2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithoutWaitIsUnclean,The following statement contains a magic number: Barrier barrier = new Barrier(2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithoutWaitIsUnclean,The following statement contains a magic number: IScheduler scheduler = await CreateScheduler("testShutdownWithoutWaitIsUnclean"' 8);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithoutWaitIsUnclean,The following statement contains a magic number: await Task.Delay(50);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithWaitIsClean,The following statement contains a magic number: Barrier barrier = new Barrier(2);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithWaitIsClean,The following statement contains a magic number: IScheduler scheduler = await CreateScheduler("testShutdownWithoutWaitIsUnclean"' 8);
Magic Number,Quartz.Tests.Integration,AbstractSchedulerTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\RAMJobStoreTest.cs,TestShutdownWithWaitIsClean,The following statement contains a magic number: await Task.Delay(50);
Magic Number,Quartz.Tests.Integration.Core,MissSchedulingChangeSignalTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\MissSchedulingChangeSignalTest.cs,SimpleScheduleAlwaysFiredUnder20S,The following statement contains a magic number: await Task.Delay(50000);
Magic Number,Quartz.Tests.Integration.Core,MissSchedulingChangeSignalTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\MissSchedulingChangeSignalTest.cs,SimpleScheduleAlwaysFiredUnder20S,The following statement contains a magic number: Assert.True(durationInMillis.TotalMilliseconds < 20000' "Missed an execution with one duration being between two fires: " + durationInMillis + " (all: "                                                                          + durationBetweenFireTimesInMillis + ")");
Magic Number,Quartz.Tests.Integration.Core,SlowRAMJobStore,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\MissSchedulingChangeSignalTest.cs,AcquireNextTriggers,The following statement contains a magic number: await Task.Delay(10' cancellationToken);
Magic Number,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(2));
Magic Number,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(4));
Magic Number,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(2));
Magic Number,Quartz.Tests.Integration.Core,RecoverJobsTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,TestRecoveringRepeatJobWhichIsFiredAndMisfiredAtTheSameTime,The following statement contains a magic number: Assert.True(isJobRecovered.Wait(TimeSpan.FromSeconds(10)));
Magic Number,Quartz.Tests.Integration.Core,RecoverJobsTestJob,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Core\RecoverJobsTest.cs,Execute,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionJobUnscheduleFiringTrigger,The following statement contains a magic number: await Task.Delay(7*1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionJobUnscheduleFiringTrigger,The following statement contains a magic number: await Task.Delay(7*1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionJobUnscheduleFiringTrigger,The following statement contains a magic number: await Task.Delay(7*1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionJobUnscheduleFiringTrigger,The following statement contains a magic number: await Task.Delay(7*1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionJobUnscheduleFiringTrigger,The following statement contains a magic number: Assert.AreEqual(2' ExceptionJob.LaunchCount'                  "The job shouldn't have been refired(UnscheduleFiringTrigger)");
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyRestartImmediately,The following statement contains a magic number: int i = 10;
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyRestartImmediately,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyRestartImmediately,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyRestartImmediately,The following statement contains a magic number: await Task.Delay(1000);
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyNoRestartImmediately,The following statement contains a magic number: int i = 10;
Magic Number,Quartz.Tests.Integration.ExceptionPolicy,ExceptionHandlingTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\ExceptionPolicy\ExceptionJobTest.cs,ExceptionPolicyNoRestartImmediately,The following statement contains a magic number: await Task.Delay(200);
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,RunAdoJobStoreTest,The following statement contains a magic number: var builder = SchedulerBuilder.Create("instance_one"' "TestScheduler")                  .WithDefaultThreadPool(x => x.WithThreadCount(10))                  .WithMisfireThreshold(TimeSpan.FromSeconds(60))                  .UsePersistentStore(store =>                  {                      var x = store                          .UseProperties(false)                          .Clustered(clustered' options => options.WithCheckinInterval(TimeSpan.FromMilliseconds(1000)))                          .UseGenericDatabase(dbProvider' db => db.WithConnectionString(dbConnectionStrings[connectionStringId]));                        x = serializerType == "json"                          ? x.WithJsonSerializer()                          : x.WithBinarySerializer();                  });
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,RunAdoJobStoreTest,The following statement contains a magic number: var builder = SchedulerBuilder.Create("instance_one"' "TestScheduler")                  .WithDefaultThreadPool(x => x.WithThreadCount(10))                  .WithMisfireThreshold(TimeSpan.FromSeconds(60))                  .UsePersistentStore(store =>                  {                      var x = store                          .UseProperties(false)                          .Clustered(clustered' options => options.WithCheckinInterval(TimeSpan.FromMilliseconds(1000)))                          .UseGenericDatabase(dbProvider' db => db.WithConnectionString(dbConnectionStrings[connectionStringId]));                        x = serializerType == "json"                          ? x.WithJsonSerializer()                          : x.WithBinarySerializer();                  });
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,RunAdoJobStoreTest,The following statement contains a magic number: var builder = SchedulerBuilder.Create("instance_one"' "TestScheduler")                  .WithDefaultThreadPool(x => x.WithThreadCount(10))                  .WithMisfireThreshold(TimeSpan.FromSeconds(60))                  .UsePersistentStore(store =>                  {                      var x = store                          .UseProperties(false)                          .Clustered(clustered' options => options.WithCheckinInterval(TimeSpan.FromMilliseconds(1000)))                          .UseGenericDatabase(dbProvider' db => db.WithConnectionString(dbConnectionStrings[connectionStringId]));                        x = serializerType == "json"                          ? x.WithJsonSerializer()                          : x.WithBinarySerializer();                  });
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,ShouldBeAbleToUseMixedProperties,The following statement contains a magic number: IOperableTrigger triggerWithData = new SimpleTriggerImpl("datatrigger"' "triggergroup"' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,ShouldBeAbleToUseMixedProperties,The following statement contains a magic number: IOperableTrigger triggerWithData = new SimpleTriggerImpl("datatrigger"' "triggergroup"' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,ShouldBeAbleToUseMixedProperties,The following statement contains a magic number: triggerWithData.EndTimeUtc = DateTime.UtcNow.AddYears(10);
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,ShouldBeAbleToUseMixedProperties,The following statement contains a magic number: triggerWithData.StartTimeUtc = DateTime.Now.AddMilliseconds(1000L);
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServerStress,The following statement contains a magic number: i < 100000
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,TestSqlServerStress,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(30));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,JobTypeNotFoundShouldNotBlock,The following statement contains a magic number: manualResetEvent.Wait(TimeSpan.FromSeconds(20));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,StressTest,The following statement contains a magic number: i < 100000
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,StressTest,The following statement contains a magic number: i < 100000
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,AdoJobStoreSmokeTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,StressTest,The following statement contains a magic number: await Task.Delay(TimeSpan.FromMinutes(3));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,GoodJob,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,Execute,The following statement contains a magic number: ((ManualResetEventSlim) context.Scheduler.Context.Get(KeyResetEvent)).Wait(TimeSpan.FromSeconds(20));
Magic Number,Quartz.Tests.Integration.Impl.AdoJobStore,SimpleRecoveryJob,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\AdoJobStore\AdoJobStoreSmokeTest.cs,Execute,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(10));
Magic Number,Quartz.Tests.Integration.Impl.Calendar,AnnualCalendarTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\Calendar\AnnualCalendarTest.cs,TestTriggerFireExclusion,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(20));
Magic Number,Quartz.Tests.Integration.Impl.Calendar,AnnualCalendarTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\Calendar\AnnualCalendarTest.cs,TestTriggerFireExclusion,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(20));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: cal.SetDayExcluded(new DateTime(2018' 7' 4)' true);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: cal.SetDayExcluded(new DateTime(2018' 7' 4)' true);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: cal.SetDayExcluded(new DateTime(2018' 7' 4)' true);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: IOperableTrigger calendarsTrigger = new SimpleTriggerImpl("calendarsTrigger"' "test"' 20' TimeSpan.FromMilliseconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: IOperableTrigger calendarsTrigger = new SimpleTriggerImpl("calendarsTrigger"' "test"' 20' TimeSpan.FromMilliseconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: IOperableTrigger trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: IOperableTrigger trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger.EndTimeUtc = DateTime.UtcNow.AddYears(10);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger.StartTimeUtc = DateTime.Now.AddMilliseconds(1000L);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(5));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger.StartTimeUtc = DateTime.Now.AddMilliseconds(2000L);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger.StartTimeUtc = DateTime.Now.AddMilliseconds(1000L);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(4));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromSeconds(4));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger.StartTimeUtc = DateTime.Now.AddMilliseconds(1000L);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromMilliseconds(4500));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: trigger = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromMilliseconds(4500));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: ct.StartTimeUtc = DateTime.Now.AddMilliseconds(1000);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: DailyTimeIntervalTriggerImpl nt = new DailyTimeIntervalTriggerImpl("nth_trig_" + count' schedId' new TimeOfDay(1' 1' 1)' new TimeOfDay(23' 30' 0)' IntervalUnit.Hour' 1);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: DailyTimeIntervalTriggerImpl nt = new DailyTimeIntervalTriggerImpl("nth_trig_" + count' schedId' new TimeOfDay(1' 1' 1)' new TimeOfDay(23' 30' 0)' IntervalUnit.Hour' 1);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt.StartTimeUtc = DateTime.Now.Date.AddMilliseconds(1000);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.StartTimeUtc = DateTime.Now.Date.AddMilliseconds(1000);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.StartTimeOfDay = new TimeOfDay(1' 2' 3);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.StartTimeOfDay = new TimeOfDay(1' 2' 3);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.EndTimeOfDay = new TimeOfDay(2' 3' 4);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.EndTimeOfDay = new TimeOfDay(2' 3' 4);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: nt2.EndTimeOfDay = new TimeOfDay(2' 3' 4);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(triggerFromDb.StartTimeOfDay.Minute' Is.EqualTo(2));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(triggerFromDb.StartTimeOfDay.Second' Is.EqualTo(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(triggerFromDb.EndTimeOfDay.Hour' Is.EqualTo(2));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(triggerFromDb.EndTimeOfDay.Minute' Is.EqualTo(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(triggerFromDb.EndTimeOfDay.Second' Is.EqualTo(4));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: CalendarIntervalTriggerImpl intervalTrigger = new CalendarIntervalTriggerImpl(                          "calint_trig_" + count'                          schedId'                          DateTime.UtcNow.AddMilliseconds(300)'                          DateTime.UtcNow.AddMinutes(1)'                          IntervalUnit.Second'                          8);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: CalendarIntervalTriggerImpl intervalTrigger = new CalendarIntervalTriggerImpl(                          "calint_trig_" + count'                          schedId'                          DateTime.UtcNow.AddMilliseconds(300)'                          DateTime.UtcNow.AddMinutes(1)'                          IntervalUnit.Second'                          8);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: var webTimezone = TimeZoneInfo.CreateCustomTimeZone(                          CustomTimeZoneId'                          TimeSpan.FromMinutes(22)'                          null'                          null);
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: Assert.That(loadedCustomTimeZoneTrigger.TimeZone.BaseUtcOffset' Is.EqualTo(TimeSpan.FromMinutes(22)));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: ITrigger simple = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromMilliseconds(4500));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: ITrigger simple = new SimpleTriggerImpl("trig_" + count' schedId' 20' TimeSpan.FromMilliseconds(4500));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: await Task.Delay(TimeSpan.FromSeconds(3));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,Test,The following statement contains a magic number: GenericJobType.WaitForTrigger(TimeSpan.FromSeconds(20));
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(jkeys.Count' Is.EqualTo(3)' "Wrong number of jobs found by anything matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(jkeys.Count' Is.EqualTo(2)' "Wrong number of jobs found by equals matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(jkeys.Count' Is.EqualTo(2)' "Wrong number of jobs found by starts with matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(jkeys.Count' Is.EqualTo(2)' "Wrong number of jobs found by ends with matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(jkeys.Count' Is.EqualTo(2)' "Wrong number of jobs found by contains with matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(tkeys.Count' Is.EqualTo(3)' "Wrong number of triggers found by anything matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(tkeys.Count' Is.EqualTo(2)' "Wrong number of triggers found by equals matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(tkeys.Count' Is.EqualTo(2)' "Wrong number of triggers found by starts with matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(tkeys.Count' Is.EqualTo(2)' "Wrong number of triggers found by ends with matcher");
Magic Number,Quartz.Tests.Integration.Impl,SmokeTestPerformer,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Impl\SmokeTestPerformer.cs,TestMatchers,The following statement contains a magic number: Assert.That(tkeys.Count' Is.EqualTo(2)' "Wrong number of triggers found by contains with matcher");
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestScheduling_RichConfiguration,The following statement contains a magic number: A.CallTo(() => mockScheduler.ScheduleJob(A<ITrigger>.That.Not.IsNull()' A<CancellationToken>._)).MustHaveHappened(Repeated.Exactly.Times(7));
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset startTime = new DateTimeOffset(2012' 12' 30' 1' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset startTime = new DateTimeOffset(2012' 12' 30' 1' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset startTime = new DateTimeOffset(2012' 12' 30' 1' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset previousFireTime = new DateTimeOffset(2013' 2' 15' 15' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset previousFireTime = new DateTimeOffset(2013' 2' 15' 15' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset previousFireTime = new DateTimeOffset(2013' 2' 15' 15' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: DateTimeOffset previousFireTime = new DateTimeOffset(2013' 2' 15' 15' 0' 0' TimeSpan.Zero);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestSchedulingWhenUpdatingScheduleBasedOnExistingTrigger,The following statement contains a magic number: A.CallTo(() => mockScheduler.RescheduleJob(null' null' A<CancellationToken>._)).WhenArgumentsMatch(args =>              {                  ITrigger argumentTrigger = (ITrigger) args[1];                    // replacement trigger should have same start time and next fire relative to old trigger's last fire time                  Assert.That(argumentTrigger' Is.Not.Null);                  Assert.That(argumentTrigger.StartTimeUtc' Is.EqualTo(startTime));                  Assert.That(argumentTrigger.GetNextFireTimeUtc()' Is.EqualTo(previousFireTime.AddSeconds(10)));                  return true;              }).MustHaveHappened();
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TesDirectivesNoOverwriteWithIgnoreDups,The following statement contains a magic number: Assert.AreEqual(2' jobKeys.Count);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TesDirectivesNoOverwriteWithIgnoreDups,The following statement contains a magic number: Assert.AreEqual(2' triggerKeys.Count);
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestDirectivesOverwriteWithNoIgnoreDups,The following statement contains a magic number: Assert.That(jobKeys.Count' Is.EqualTo(2));
Magic Number,Quartz.Tests.Integration.Xml,XMLSchedulingDataProcessorTest,C:\research\architectureSmells\repos\quartznet_quartznet\src\Quartz.Tests.Integration\Xml\XMLSchedulingDataProcessorTest.cs,TestDirectivesOverwriteWithNoIgnoreDups,The following statement contains a magic number: Assert.That(triggerKeys.Count' Is.EqualTo(2));
