Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyArrayFromContent,Cyclomatic complexity of the method is 10
Complex Method,Mocument.Transcoders,Utility,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\Utility.cs,IsMimeTypeTextEquivalent,Cyclomatic complexity of the method is 9
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,Import,The length of the statement  "	session.Timers.ServerConnected = session.Timers.FiddlerBeginRequest = now.AddMilliseconds (((entry.timings.blocked + session.Timers.DNSTime) + session.Timers.TCPConnectTime) + session.Timers.HTTPSHandshakeTime); " is 211.
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,Export,The length of the statement  "	if (!string.IsNullOrEmpty (session ["ui-comments"]) // <-- not sure if this is correct' maybe a typo or missing assignation in BasicFormats? " is 140.
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The length of the statement  "	if (((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))) { " is 338.
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The length of the statement  "	content.comment = "Body length exceeded Mocument.Transcoders.HttpArchiveTranscoder.MaxBinaryBodyLength ' so body was omitted."; " is 127.
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetStringFromParams,The length of the statement  "		builder.AppendFormat ("{0}={1}"' HttpUtility.UrlEncode (hashtable.name' Encoding.UTF8)' HttpUtility.UrlEncode (hashtable.value' Encoding.UTF8)); " is 144.
Long Statement,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetResponseFromEntry,The length of the statement  "	string s = string.Format ("{0} {1} {2}\r\n{3}\r\n"' string.IsNullOrEmpty (response.httpVersion) ? "HTTP/0.0" : response.httpVersion' response.status' response.statusText' sHeaders); " is 181.
Complex Conditional,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The conditional expression  "((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))"  is complex.
Empty Catch Block,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,Export,The method has an empty catch block.
Empty Catch Block,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetDecompressedSize,The method has an empty catch block.
Empty Catch Block,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetQueryString,The method has an empty catch block.
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetResponse,The following statement contains a magic number: response.headersSize = session.oResponse.headers.ByteCount () + 2;  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetRequest,The following statement contains a magic number: request.headersSize = oS.oRequest.headers.ByteCount () + 2;  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The following statement contains a magic number: if (((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))) {  	isMimeTypeTextEquivalent = false;  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The following statement contains a magic number: if (((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))) {  	isMimeTypeTextEquivalent = false;  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The following statement contains a magic number: if (((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))) {  	isMimeTypeTextEquivalent = false;  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyInfo,The following statement contains a magic number: if (((isMimeTypeTextEquivalent && ("text/plain" == mImeType)) && (oS.responseBodyBytes.Length > 3)) && ((((oS.responseBodyBytes [0] == 0x43) && (oS.responseBodyBytes [1] == 0x57)) && (oS.responseBodyBytes [2] == 0x53)) || (((oS.responseBodyBytes [0] == 70) && (oS.responseBodyBytes [1] == 0x4c)) && (oS.responseBodyBytes [2] == 0x56)))) {  	isMimeTypeTextEquivalent = false;  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyArrayFromContent,The following statement contains a magic number: if (content != null) {  	if (content.text == null) {  		return writeData;  	}  	if (content.encoding != null && ("base64" == content.encoding)) {  		// ReSharper disable AssignNullToNotNullAttribute  		return Convert.FromBase64String (content.text);  		// ReSharper restore AssignNullToNotNullAttribute  	}  	Encoding encoding = Encoding.UTF8;  	if (content.mimeType != null && (content.mimeType.IndexOf ("charset"' StringComparison.Ordinal) > -1)) {  		Match match = new Regex ("charset\\s?=\\s?[\"]?(?<TokenValue>[^\";]*)").Match (content.mimeType);  		if (match.Success && (match.Groups ["TokenValue"] != null)) {  			try {  				encoding = Encoding.GetEncoding (match.Groups ["TokenValue"].Value);  			} // ReSharper disable RedundantCatchClause  			catch {  				throw;  			}  			// ReSharper restore RedundantCatchClause  		}  	}  	// ReSharper disable AssignNullToNotNullAttribute  	writeData = encoding.GetBytes (content.text);  	// ReSharper restore AssignNullToNotNullAttribute  	if (headers.Contains ("Content-Encoding") && headers.Contains ("gzip")) {  		writeData = Utilities.GzipCompress (writeData);  	}  	if (headers.Contains ("Content-Encoding") && headers.Contains ("deflate")) {  		writeData = Utilities.DeflaterCompress (writeData);  	}  	if (headers.Contains ("Transfer-Encoding") && headers.Contains ("chunked")) {  		writeData = Utilities.doChunk (writeData' 2);  	}  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyArrayFromContent,The following statement contains a magic number: if (headers.Contains ("Transfer-Encoding") && headers.Contains ("chunked")) {  	writeData = Utilities.doChunk (writeData' 2);  }  
Magic Number,Mocument.Transcoders,HttpArchiveTranscoder,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\mocument\Mocument.Transcoders\HttpArchiveTranscoder.cs,GetBodyArrayFromContent,The following statement contains a magic number: writeData = Utilities.doChunk (writeData' 2);  
