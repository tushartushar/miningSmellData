Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Salient.ReliableHttpClient.Exceptions,ReliableHttpException,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\Exceptions\ReliableHttpException.cs,PopulateFrom,Cyclomatic complexity of the method is 8
Long Statement,Salient.ReliableHttpClient,DesignerLibrary,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\DesignerLibrary.cs,GetCurrentPlatform,The length of the statement  "	var dm = Type.GetType ("System.ComponentModel.DesignerProperties' System.Windows' Version=2.0.5.0' Culture=neutral' PublicKeyToken=7cec85d7bea7798e"); " is 150.
Long Statement,Salient.ReliableHttpClient,DesignerLibrary,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\DesignerLibrary.cs,GetCurrentPlatform,The length of the statement  "	var cmdm = Type.GetType ("System.ComponentModel.DesignerProperties' PresentationFramework' Version=3.0.0.0' Culture=neutral' PublicKeyToken=31bf3856ad364e35"); " is 159.
Long Statement,Salient.ReliableHttpClient,HttpClient,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\HttpClient.cs,ThrowUIThreadExceptionIfSilverlight,The length of the statement  "		throw new InvalidOperationException ("You cannot call this method from the UI thread.  Either use the asynchronous method: .Begin{name}' or call this from a background thread"); " is 177.
Long Statement,Salient.ReliableHttpClient.Exceptions,ReliableHttpException,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\Exceptions\ReliableHttpException.cs,Create,The length of the statement  "	ex = exception.Message.Contains ("The request was aborted") ? new TimeoutException (message' exception) : new ReliableHttpException (message' exception); " is 153.
Missing Default,Salient.ReliableHttpClient,HttpClient,F:\newReposMay17\cityindex-attic_CIAPI.CS\src\portable\Salient.ReliableHttpClient.Portable\HttpClient.cs,ThrowUIThreadExceptionIfSilverlight,The following switch statement is missing a default case: switch (platform) {  case DesignerPlatformLibrary.Silverlight:  	throw new InvalidOperationException ("You cannot call this method from the UI thread.  Either use the asynchronous method: .Begin{name}' or call this from a background thread");  case DesignerPlatformLibrary.Net:  case DesignerPlatformLibrary.WinRT:  case DesignerPlatformLibrary.Unknown:  	break;  }  
