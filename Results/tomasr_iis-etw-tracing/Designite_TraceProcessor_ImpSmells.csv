Implementation smell,Namespace,Class,File,Method,Description
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,ToBinHex,The following statement contains a magic number: StringBuilder sb = new StringBuilder(data.Length*2+2);
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,ToBinHex,The following statement contains a magic number: StringBuilder sb = new StringBuilder(data.Length*2+2);
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: byte[] bytes = new byte[(data.Length - 2) / 2];
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: byte[] bytes = new byte[(data.Length - 2) / 2];
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for ( int i = 2; i < data.Length; i += 2 ) {          bytes[i] = Convert.ToByte(data.Substring(i' 2)' 16);        }
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for ( int i = 2; i < data.Length; i += 2 ) {          bytes[i] = Convert.ToByte(data.Substring(i' 2)' 16);        }
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for ( int i = 2; i < data.Length; i += 2 ) {          bytes[i] = Convert.ToByte(data.Substring(i' 2)' 16);        }
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for ( int i = 2; i < data.Length; i += 2 ) {          bytes[i] = Convert.ToByte(data.Substring(i' 2)' 16);        }
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,EventHubEventProcessor,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\EventHubEventProcessor.cs,EventHubEventProcessor,The following statement contains a magic number: this.MaxBatchSize = 1024 * settings.GetInt32("MaxBatchSizeKB"' 192);
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,EventHubEventProcessor,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\EventHubEventProcessor.cs,EventHubEventProcessor,The following statement contains a magic number: this.MaxBatchSize = 1024 * settings.GetInt32("MaxBatchSizeKB"' 192);
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,TraceSourceProcessor,C:\repos\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\TraceSourceProcessor.cs,OnEventProcessingComplete,The following statement contains a magic number: if ( task.IsFaulted ) {          // TODO: figure out proper error handling here :)          Console.WriteLine(task.Exception);        } else {          long count = Interlocked.Increment(ref this.eventCount);          if ( count % 100 == 0 ) {            Trace.WriteLine(String.Format("Processed {0} events"' count));          }        }
