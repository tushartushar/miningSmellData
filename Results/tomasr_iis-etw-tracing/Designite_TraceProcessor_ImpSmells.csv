Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Winterdom.Diagnostics.TraceProcessor.Impl,EventHubEventProcessor,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\EventHubEventProcessor.cs,EventHubEventProcessor,The method has 4 parameters.
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for (int i = 2; i < data.Length; i += 2) {  	bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  }  
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for (int i = 2; i < data.Length; i += 2) {  	bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  }  
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for (int i = 2; i < data.Length; i += 2) {  	bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  }  
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: for (int i = 2; i < data.Length; i += 2) {  	bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  }  
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: i += 2
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  
Magic Number,Winterdom.Diagnostics.TraceProcessor,BinHexConverter,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\BinHexConverter.cs,FromBinHex,The following statement contains a magic number: bytes [i] = Convert.ToByte (data.Substring (i' 2)' 16);  
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,EventHubEventProcessor,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\EventHubEventProcessor.cs,EventHubEventProcessor,The following statement contains a magic number: this.MaxBatchSize = 1024 * settings.GetInt32 ("MaxBatchSizeKB"' 192);  
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,EventHubEventProcessor,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\EventHubEventProcessor.cs,EventHubEventProcessor,The following statement contains a magic number: this.MaxBatchSize = 1024 * settings.GetInt32 ("MaxBatchSizeKB"' 192);  
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,TraceSourceProcessor,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\TraceSourceProcessor.cs,OnEventProcessingComplete,The following statement contains a magic number: if (task.IsFaulted) {  	// TODO: figure out proper error handling here :)  	Console.WriteLine (task.Exception);  } else {  	long count = Interlocked.Increment (ref this.eventCount);  	if (count % 100 == 0) {  		Trace.WriteLine (String.Format ("Processed {0} events"' count));  	}  }  
Magic Number,Winterdom.Diagnostics.TraceProcessor.Impl,TraceSourceProcessor,D:\newReposJune17\tomasr_iis-etw-tracing\Collector\TraceProcessor\Impl\TraceSourceProcessor.cs,OnEventProcessingComplete,The following statement contains a magic number: if (count % 100 == 0) {  	Trace.WriteLine (String.Format ("Processed {0} events"' count));  }  
