Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The method has 122 lines of code.
Long Method,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The method has 114 lines of code.
Long Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The method has 167 lines of code.
Long Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,OnNavigateKeyPressEvent,The method has 135 lines of code.
Long Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The method has 103 lines of code.
Complex Method,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,GetTextWithoutCommentsAndStrings,Cyclomatic complexity of the method is 25
Complex Method,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,Cyclomatic complexity of the method is 29
Complex Method,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,UpdatePreferences,Cyclomatic complexity of the method is 75
Complex Method,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,SetWordFindStrategy,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,Cyclomatic complexity of the method is 39
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateTasks,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SetCompletionText,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,HandleParseInformationUpdaterWorkerThreadDoWork,Cyclomatic complexity of the method is 35
Complex Method,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,EnsureCorrectEolMarker,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,SetSearchPatternToSelection,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.SourceEditor,ErrorMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ErrorMarker,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,OnNavigateKeyPressEvent,Cyclomatic complexity of the method is 57
Complex Method,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,ResolveExpression,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,Cyclomatic complexity of the method is 34
Complex Method,MonoDevelop.SourceEditor,DynamicAbbrevHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DynamicAbbrevHandler.cs,Run,Cyclomatic complexity of the method is 28
Complex Method,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnDrawPage,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SetupMode,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,Cyclomatic complexity of the method is 28
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,Cyclomatic complexity of the method is 11
Long Parameter List,MonoDevelop.SourceEditor,LanguageItemWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\LanguageItemWindow.cs,LanguageItemWindow,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SetCompletionText,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,Split,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The method has 6 parameters.
Long Parameter List,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,DebugValueWindow,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,ShowTooltipWindow,The method has 6 parameters.
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,MessageBubbleTextMarker,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawRectangle,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawMarginBackground,The method has 9 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The method has 5 parameters.
Long Parameter List,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The method has 5 parameters.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The length of the statement  "		if (span.Color.StartsWith ("String"' StringComparison.Ordinal) || span.Color.StartsWith ("Comment"' StringComparison.Ordinal)) { " is 128.
Long Statement,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The length of the statement  "	bool returnBetweenBraces = key == Gdk.Key.Return && (state & (Gdk.ModifierType.ControlMask | Gdk.ModifierType.ShiftMask)) == Gdk.ModifierType.None && Caret.Offset > 0 && Caret.Offset < Document.TextLength && Document.GetCharAt (Caret.Offset - 1) == '{' && Document.GetCharAt (Caret.Offset) == '}' && !inStringOrComment; " is 319.
Long Statement,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,UpdatePreferences,The length of the statement  "				LoggingService.LogWarning ("tried to set indent style to " + args.NewValue + " which isn't from type IndentStyle instead it is from:" + args.NewValue.GetType ()); " is 162.
Long Statement,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,LoadAllPrefs,The length of the statement  "	var defaultControlMode = (ControlLeftRightMode)Enum.Parse (typeof(ControlLeftRightMode)' DesktopService.DefaultControlLeftRightBehavior); " is 137.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTextReplaced,The length of the statement  "		if (marker.LineSegment.Contains (args.Offset) || marker.LineSegment.Contains (args.Offset + args.InsertionLength) || args.Offset < marker.LineSegment.Offset && marker.LineSegment.Offset < args.Offset + args.InsertionLength) { " is 225.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTaskServiceJumpedToTask,The length of the statement  "					messageBubbleHighlightPopupWindow.Destroy ();*//*	messageBubbleHighlightPopupWindow = new MessageBubbleHighlightPopupWindow (this' marker);" is 139.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateTasks,The length of the statement  "				MessageBubbleTextMarker errorTextMarker = new MessageBubbleTextMarker (messageBubbleCache' task' lineSegment' task.Severity == TaskSeverity.Error' task.Description); " is 165.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The length of the statement  "			string question = GettextCatalog.GetString ("This file {0} has been changed outside of {1}. Are you sure you want to overwrite the file?"' fileName' BrandingService.ApplicationName); " is 182.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The length of the statement  "					var result = MessageService.AskQuestion (GettextCatalog.GetString ("Can't save file")' GettextCatalog.GetString ("The file was marked as read only. Should the file be overwritten?")' AlertButton.Yes' AlertButton.No); " is 216.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Save,The length of the statement  "			var result = MessageService.AskQuestion (GettextCatalog.GetString ("Can't save file with current codepage.")' GettextCatalog.GetString ("Some unicode characters in this file could not be saved with the current encoding.\nDo you want to resave this file as Unicode ?\nYou can choose another encoding in the 'save as' dialog.")' 1' AlertButton.Cancel' new AlertButton (GettextCatalog.GetString ("Save as Unicode"))); " is 414.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Dispose,The length of the statement  "				messageBubbleHighlightPopupWindow.Destroy ();*/IdeApp.Preferences.DefaultHideMessageBubblesChanged -= HandleIdeAppPreferencesDefaultHideMessageBubblesChanged; " is 158.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,UpdateExecutionLocation,The length of the statement  "		var frame = CheckFrameIsInFile (DebuggingService.CurrentFrame) ?? CheckFrameIsInFile (DebuggingService.GetCurrentVisibleFrame ()); " is 130.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CheckFrameIsInFile,The length of the statement  "	if (!string.IsNullOrEmpty (ContentName) && frame != null && !string.IsNullOrEmpty (frame.SourceLocation.FileName) && ((FilePath)frame.SourceLocation.FileName).FullPath == ((FilePath)ContentName).FullPath) " is 204.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnIconButtonPress,The length of the statement  "		IdeApp.CommandService.ShowContextMenu (TextEditor' args.RawEvent as Gdk.EventButton' WorkbenchWindow.ExtensionContext ?? AddinManager.AddinEngine' "/MonoDevelop/SourceEditor2/IconContextMenu/Editor"); " is 200.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,Undo,The length of the statement  "				var question = GettextCatalog.GetString ("You are about to undo past the last point this file was saved. Do you want to do this?");" is 131.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SetCompletionText,The length of the statement  "			data.MainSelection = data.MainSelection.WithRange (new DocumentLocation (data.Caret.Line == minLine ? maxLine : minLine' minColumn)' data.Caret.Location); " is 154.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CorrectIndenting,The length of the statement  "			editorData.SetSelection (version.MoveOffsetTo (editorData.Document.Version' anchor)' version.MoveOffsetTo (editorData.Document.Version' lead)); " is 143.
Long Statement,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnToggleBlockSelectionMode,The length of the statement  "	TextEditor.SelectionMode = TextEditor.SelectionMode == Mono.TextEditor.SelectionMode.Normal ? Mono.TextEditor.SelectionMode.Block : Mono.TextEditor.SelectionMode.Normal; " is 169.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,AddMarker,The length of the statement  "	if (document == null || region.BeginLine <= 0 || region.EndLine <= 0 || region.BeginLine > document.LineCount || region.EndLine > document.LineCount) " is 149.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowFileChangedWarning,The length of the statement  "		messageBar.SetMessageLabel (GettextCatalog.GetString ("<b>The file \"{0}\" has been changed outside of {1}.</b>\n" + "Do you want to keep your changes' or reload the file from disk?"' EllipsizeMiddle (Document.FileName' 50)' BrandingService.ApplicationName)); " is 259.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The length of the statement  "	var label = new Label (string.Format ("This file has line endings ({0}) which differ from the policy settings ({1})."' GetEolString (DetectedEolMarker)' GetEolString (textEditor.Options.DefaultEolMarker))); " is 206.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The length of the statement  "		return okButton.SizeRequest ().Width + combo.SizeRequest ().Width + image.SizeRequest ().Width + w + hbox.Spacing * 4 + containerPadding * 2; " is 141.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowAutoSaveWarning,The length of the statement  "		messageBar.SetMessageLabel (BrandingService.BrandApplicationName (GettextCatalog.GetString ("<b>An autosave file has been found for this file.</b>\n" + "This could mean that another instance of MonoDevelop is editing this " + "file' or that MonoDevelop crashed with unsaved changes.\n\n" + "Do you want to use the original file' or load from the autosave file?"))); " is 365.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CaretPositionChanged,The length of the statement  "		marker = (MonoDevelop.SourceEditor.MessageBubbleTextMarker)curLine.Markers.First (m => m is MonoDevelop.SourceEditor.MessageBubbleTextMarker); " is 142.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "		//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor)); " is 160.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "		searchAndReplaceWidgetFrame.SetFillColor (CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal))); " is 123.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "		searchAndReplaceWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (TextEditor' searchAndReplaceWidgetFrame); " is 130.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The length of the statement  "		this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height); " is 218.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor)); " is 160.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		gotoLineNumberWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal))); " is 144.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		gotoLineNumberWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (textEditor' gotoLineNumberWidgetFrame); " is 122.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height); " is 240.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,FormatPatternToSelectionOption,The length of the statement  "	return MonoDevelop.Ide.FindInFiles.FindInFilesDialog.FormatPatternToSelectionOption (pattern' SearchAndReplaceWidget.SearchEngine == SearchAndReplaceWidget.RegexSearchEngine); " is 175.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,MonodocResolverUpdate,The length of the statement  "	if (res == null || !IdeApp.HelpOperations.CanShowHelp (res) && !(res is UnknownIdentifierResolveResult || res is UnknownMemberResolveResult)) " is 141.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,OnUpdateToggleComment,The length of the statement  "		if (mode.Properties.TryGetValue ("BlockCommentStart"' out blockStarts) && mode.Properties.TryGetValue ("BlockCommentEnd"' out blockEnds)) { " is 139.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,OnToggleErrorTextMarker,The length of the statement  "		MonoDevelop.Ide.Gui.Pads.ErrorListPad pad = IdeApp.Workbench.GetPad<MonoDevelop.Ide.Gui.Pads.ErrorListPad> ().Content as MonoDevelop.Ide.Gui.Pads.ErrorListPad; " is 159.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,The length of the statement  "	int startLineNr = TextEditor.IsSomethingSelected ? Document.OffsetToLineNumber (TextEditor.SelectionRange.Offset) : TextEditor.Caret.Line; " is 138.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,The length of the statement  "	int endLineNr = TextEditor.IsSomethingSelected ? Document.OffsetToLineNumber (TextEditor.SelectionRange.EndOffset) : TextEditor.Caret.Line; " is 139.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,The length of the statement  "	DocumentLine anchorLine = TextEditor.IsSomethingSelected ? TextEditor.Document.GetLineByOffset (TextEditor.SelectionAnchor) : null; " is 131.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,The length of the statement  "					TextEditor.SelectionAnchor = System.Math.Min (anchorLine.Offset + anchorLine.Length' System.Math.Max (anchorLine.Offset' TextEditor.SelectionAnchor + commentTag.Length)); " is 170.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,CommentSelectedLines,The length of the statement  "					TextEditor.SelectionAnchor = System.Math.Min (anchorLine.Offset + anchorLine.Length' System.Math.Max (anchorLine.Offset' anchorLine.Offset + anchorColumn + commentTag.Length)); " is 176.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,The length of the statement  "	int startLineNr = TextEditor.IsSomethingSelected ? Document.OffsetToLineNumber (TextEditor.SelectionRange.Offset) : TextEditor.Caret.Line; " is 138.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,The length of the statement  "	int endLineNr = TextEditor.IsSomethingSelected ? Document.OffsetToLineNumber (TextEditor.SelectionRange.EndOffset) : TextEditor.Caret.Line; " is 139.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,The length of the statement  "	DocumentLine anchorLine = TextEditor.IsSomethingSelected ? TextEditor.Document.GetLineByOffset (TextEditor.SelectionAnchor) : null; " is 131.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,The length of the statement  "				TextEditor.SelectionAnchor = System.Math.Min (anchorLine.Offset + anchorLine.Length' System.Math.Max (anchorLine.Offset' TextEditor.SelectionAnchor - first)); " is 158.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UncommentSelectedLines,The length of the statement  "				TextEditor.SelectionAnchor = System.Math.Min (anchorLine.Offset + anchorLine.Length' System.Math.Max (anchorLine.Offset' anchorLine.Offset + anchorColumn - last)); " is 163.
Long Statement,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UpdateQuickTasks,The length of the statement  "		var newTask = new QuickTask (error.Message' error.Region.Begin' error.ErrorType == ErrorType.Error ? Severity.Error : Severity.Warning); " is 136.
Long Statement,MonoDevelop.SourceEditor,ErrorMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,Draw,The length of the statement  "	Color = Info.ErrorType == ErrorType.Warning ? editor.ColorStyle.UnderlineWarning.Color : editor.ColorStyle.UnderlineError.Color; " is 128.
Long Statement,MonoDevelop.SourceEditor,MarkerOperationsHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MarkerOperationsHandler.cs,Update,The length of the statement  "						ainfo.Add (urlMarker.UrlType == UrlType.Email ? GettextCatalog.GetString ("_Write an e-mail to...") : GettextCatalog.GetString ("_Open URL...")' urlMarker); " is 156.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,OnFocusChildSet,The length of the statement  "	textEditor.TextViewMargin.HideSelection = widget == table && !mainResult.IsInvalid && textEditor.IsSomethingSelected && textEditor.SelectionRange.Offset == mainResult.Offset && textEditor.SelectionRange.EndOffset == mainResult.EndOffset; " is 237.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,StoreHistory,The length of the statement  "	PropertyService.Set (propertyKey' history != null ? String.Join (historySeparator.ToString ()' history.ToArray ()) : null); " is 123.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "		//resultInformLabel.Markup = "<span foreground=\"#000000\" background=\"" + MonoDevelop.Components.PangoCairoHelper.GetColorString (GotoLineNumberWidget.errorColor) + "\">" + GettextCatalog.GetString ("Not found") + "</span>"; " is 226.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "			resultInformLabel.Text = String.Format (GettextCatalog.GetString ("{0} of {1}")' foundIndex' textEditor.TextViewMargin.SearchResultMatchCount); " is 143.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,UpdateResultInformLabel,The length of the statement  "			resultInformLabel.Text = String.Format (GettextCatalog.GetPluralString ("{0} match"' "{0} matches"' textEditor.TextViewMargin.SearchResultMatchCount)' textEditor.TextViewMargin.SearchResultMatchCount); " is 201.
Long Statement,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,ReplaceAll,The length of the statement  "		IdeApp.Workbench.StatusBar.ShowMessage (GettextCatalog.GetPluralString ("Found and replaced one occurrence"' "Found and replaced {0} occurrences"' number' number)); " is 164.
Long Statement,MonoDevelop.SourceEditor,CompileErrorTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\CompileErrorTooltipProvider.cs,CreateTooltipWindow,The length of the statement  "	LanguageItemWindow result = new LanguageItemWindow ((ExtensibleTextEditor)editor' modifierState' null' (string)item.Item' null); " is 128.
Long Statement,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnSizeAllocated,The length of the statement  "		// fails on linux see: Bug 8481 - Debug value tooltips very often appear at the top-left corner of the screen instead of near the element to inspect  " is 148.
Long Statement,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,ResolveExpression,The length of the statement  "	if (result is NamespaceResolveResult || result is ConversionResolveResult || result is ConstantResolveResult || result is ForEachResolveResult || result is TypeIsResolveResult || result is TypeOfResolveResult || result is ErrorResolveResult) " is 241.
Long Statement,MonoDevelop.SourceEditor,AutoSave,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\AutoSave.cs,GetAutoSaveFileName,The length of the statement  "	string newFileName = Path.Combine (Path.GetDirectoryName (fileName)' Path.GetFileNameWithoutExtension (fileName) + Path.GetExtension (fileName) + "~"); " is 151.
Long Statement,MonoDevelop.SourceEditor,AutoSave,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\AutoSave.cs,GetAutoSaveFileName,The length of the statement  "	newFileName = Path.Combine (autoSavePath' newFileName.Replace ('''' '_').Replace (" "' "").Replace (":"' "").Replace (Path.DirectorySeparatorChar' '_').Replace (Path.AltDirectorySeparatorChar' '_')); " is 199.
Long Statement,MonoDevelop.SourceEditor,DynamicAbbrevHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DynamicAbbrevHandler.cs,Run,The length of the statement  "		int index = foundWords.IndexOf (view.TextEditor.Document.GetTextAt (lastInsertPos' view.TextEditor.Caret.Offset - lastInsertPos)); " is 130.
Long Statement,MonoDevelop.SourceEditor,DynamicAbbrevHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DynamicAbbrevHandler.cs,SearchEndPos,The length of the statement  "	while (offset < view.TextEditor.Document.TextLength && IsIdentifierPart (view.TextEditor.Document.GetCharAt (offset))) { " is 120.
Long Statement,MonoDevelop.SourceEditor,DynamicAbbrevHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DynamicAbbrevHandler.cs,IsMatchAt,The length of the statement  "	if (offset + abbrevWord.Length < view.TextEditor.Document.TextLength && !IsIdentifierPart (view.TextEditor.Document.GetCharAt (offset + abbrevWord.Length))) " is 156.
Long Statement,MonoDevelop.SourceEditor,PinnedWatchWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\PinnedWatchWidget.cs,HandleValueTreeButtonPressEvent,The length of the statement  "		//				Gdk.Pointer.Grab (this.GdkWindow' true' Gdk.EventMask.ButtonPressMask | Gdk.EventMask.ButtonReleaseMask | Gdk.EventMask.PointerMotionMask | Gdk.EventMask.EnterNotifyMask | Gdk.EventMask.LeaveNotifyMask' null' null' Gtk.Global.CurrentEventTime); " is 250.
Long Statement,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnBeginPrint,The length of the statement  "	double contentHeight = pageHeight - (headerLines > 0 ? settings.HeaderPadding : 0) - (footerLines > 0 ? settings.FooterPadding : 0); " is 132.
Long Statement,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,OnDrawPage,The length of the statement  "				atts.Insert (new Pango.AttrForeground ((ushort)(chunkStyle.Foreground.R * ushort.MaxValue)' (ushort)(chunkStyle.Foreground.G * ushort.MaxValue)' (ushort)(chunkStyle.Foreground.B * ushort.MaxValue))); " is 199.
Long Statement,MonoDevelop.SourceEditor,HideIssuesHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCommands.cs,Update,The length of the statement  "	info.Text = IdeApp.Preferences.DefaultHideMessageBubbles ? GettextCatalog.GetString ("_Show Message Bubbles") : GettextCatalog.GetString ("_Hide Message Bubbles"); " is 163.
Long Statement,MonoDevelop.SourceEditor,ToggleIssuesHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCommands.cs,Update,The length of the statement  "	info.Checked = MonoDevelop.Ide.IdeApp.Preferences.ShowMessageBubbles == MonoDevelop.Ide.ShowMessageBubbles.ForErrorsAndWarnings; " is 128.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,BlendSelection,The length of the statement  "	return new Cairo.Color ((color.R * bubbleAlpha + selectionColor.R * (1 - bubbleAlpha))' (color.G * bubbleAlpha + selectionColor.G * (1 - bubbleAlpha))' (color.B * bubbleAlpha + selectionColor.B * (1 - bubbleAlpha))); " is 216.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,Highlight,The length of the statement  "	return new Cairo.Color ((color.R * bubbleAlpha + selectionColor.R * (1 - bubbleAlpha))' (color.G * bubbleAlpha + selectionColor.G * (1 - bubbleAlpha))' (color.B * bubbleAlpha + selectionColor.B * (1 - bubbleAlpha))); " is 216.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The length of the statement  "		g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3); " is 132.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The length of the statement  "		using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) { " is 125.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The length of the statement  "		cr.SetSourceRGBA (ed.ColorStyle.IndicatorMargin.Color.R' ed.ColorStyle.IndicatorMargin.Color.G' ed.ColorStyle.IndicatorMargin.Color.B' 0.5); " is 140.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The length of the statement  "	cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2); " is 150.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "		return DrawMarginBackground (editor' metrics.Margin' cr' metrics.Area' lineSegment' metrics.LineNumber' metrics.X' metrics.Y' metrics.Height); " is 142.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "	double x2 = System.Math.Max (right - LayoutWidth - border - (ShowIconsInBubble ? cache.errorPixbuf.Width : 0) - errorCounterWidth' editor.TextViewMargin.XOffset + editor.LineHeight / 2); " is 186.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The length of the statement  "	bool isEolSelected = editor.IsSomethingSelected && editor.SelectionMode != Mono.TextEditor.SelectionMode.Block ? editor.SelectionRange.Contains (lineSegment.Offset + lineSegment.Length) : false; " is 194.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The length of the statement  "		g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3); " is 145.
Long Statement,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The length of the statement  "		popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top); " is 176.
Long Statement,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,Resize,The length of the statement  "	textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8); " is 135.
Long Statement,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The length of the statement  "		DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0); " is 129.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ShowStyles,The length of the statement  "	TreeIter selectedIter = styleStore.AppendValues (GetMarkup (GettextCatalog.GetString ("Default")' GettextCatalog.GetString ("The default color scheme."))' LoadStyle ("Default")); " is 178.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ApplyChanges,The length of the statement  "	if (DefaultSourceEditorOptions.Instance.EnableSemanticHighlighting != this.enableSemanticHighlightingCheckbutton.Active) { " is 122.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "	this.checkbuttonSpaces.Active = DefaultSourceEditorOptions.Instance.IncludeWhitespaces.HasFlag (IncludeWhitespaces.Space); " is 122.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,MarkerPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\MarkerPanel.cs,CreatePanelWidget,The length of the statement  "	this.checkbuttonLineEndings.Active = DefaultSourceEditorOptions.Instance.IncludeWhitespaces.HasFlag (IncludeWhitespaces.LineEndings); " is 133.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,ColorShemeEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\ColorShemeEditor.cs,GetColorFromButton,The length of the statement  "	return new Cairo.Color (button.Color.Red / (double)ushort.MaxValue' button.Color.Green / (double)ushort.MaxValue' button.Color.Blue / (double)ushort.MaxValue' button.Alpha / (double)ushort.MaxValue); " is 199.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionOptionsPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionOptionsPanel.cs,AutomaticCompletionToggled,The length of the statement  "	includeKeywordsCheckbutton.Sensitive = includeCodeSnippetsCheckbutton.Sensitive = !autoCodeCompletionCheckbutton.Active; " is 120.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionAppearancePanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionAppearancePanel.cs,FilterToggled,The length of the statement  "	label4.Sensitive = label5.Sensitive = normalOnlyRadiobutton.Sensitive = includeAdvancedRadiobutton.Sensitive = filterByBrowsableCheckbutton.Active; " is 147.
Long Statement,MonoDevelop.SourceEditor.OptionPanels,CompletionCharactersPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionCharactersPanel.cs,ApplyChanges,The length of the statement  "		chars [i] = new CompletionCharacters (store.GetValue (i' language)' store.GetValue (i' completeOnSpace)' store.GetValue (i' completeOnChars)); " is 142.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchNextTask,The length of the statement  "		if (mode == HoverMode.NextMessage || mode == HoverMode.NextWarning && task.Severity == Severity.Warning || mode == HoverMode.NextError && task.Severity == Severity.Error) { " is 172.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchPrevTask,The length of the statement  "		if (mode == HoverMode.NextMessage || mode == HoverMode.NextWarning && task.Severity == Severity.Warning || mode == HoverMode.NextError && task.Severity == Severity.Error) { " is 172.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The length of the statement  "			this.TooltipText = string.Format (GettextCatalog.GetPluralString ("{0} match"' "{0} matches"' TextEditor.TextViewMargin.SearchResultMatchCount)' TextEditor.TextViewMargin.SearchResultMatchCount); " is 195.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,MouseMove,The length of the statement  "	double position = ((y - IndicatorHeight) / (Allocation.Height - IndicatorHeight)) * vadjustment.Upper - vadjustment.PageSize / 2; " is 129.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnButtonPressEvent,The length of the statement  "			var loc = new DocumentLocation (Math.Max (DocumentLocation.MinLine' hoverTask.Location.Line)' Math.Max (DocumentLocation.MinColumn' hoverTask.Location.Column)); " is 160.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The length of the statement  "		using (var pattern = new Cairo.RadialGradient (x1' y1' Allocation.Width / 2' x1 - Allocation.Width' y1 - Allocation.Width' Allocation.Width)) { " is 143.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,YToLine,The length of the statement  "	var line = 0.5 + (y - IndicatorHeight) / (Allocation.Height - IndicatorHeight) * (double)(TextEditor.GetTextEditorData ().VisibleLineCount); " is 140.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The length of the statement  "	var color = (HslColor)((TextEditor.ColorStyle != null) ? TextEditor.ColorStyle.PlainText.Foreground : new Cairo.Color (0' 0' 0)); " is 129.
Long Statement,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The length of the statement  "		cr.SetSourceColor (isMainSelection ? TextEditor.ColorStyle.SearchResultMain.Color : TextEditor.ColorStyle.SearchResult.Color); " is 126.
Complex Conditional,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,GetTextWithoutCommentsAndStrings,The conditional expression  "!(isInString || isInChar || isInLineComment || isInBlockComment)"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The conditional expression  "!inStringOrComment && charBefore == '"' || inStringOrComment && spanColor == "String" && charBefore == '\\'"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,OnIMProcessedKeyPressEvent,The conditional expression  "skipChar == null && Options.AutoInsertMatchingBracket && braceIndex >= 0 && !IsSomethingSelected"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTextReplaced,The conditional expression  "marker.LineSegment.Contains (args.Offset) || marker.LineSegment.Contains (args.Offset + args.InsertionLength) || args.Offset < marker.LineSegment.Offset && marker.LineSegment.Offset < args.Offset + args.InsertionLength"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,HandleTaskServiceJumpedToTask,The conditional expression  "task == null || doc == null || task.FileName != doc.FileName || this.TextEditor == null"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CheckFrameIsInFile,The conditional expression  "!string.IsNullOrEmpty (ContentName) && frame != null && !string.IsNullOrEmpty (frame.SourceLocation.FileName) && ((FilePath)frame.SourceLocation.FileName).FullPath == ((FilePath)ContentName).FullPath"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,GetText,The conditional expression  "startPosition < 0 || endPosition < 0 || startPosition > endPosition || startPosition >= doc.TextLength"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,AddMarker,The conditional expression  "document == null || region.BeginLine <= 0 || region.EndLine <= 0 || region.BeginLine > document.LineCount || region.EndLine > document.LineCount"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,MonodocResolverUpdate,The conditional expression  "res == null || !IdeApp.HelpOperations.CanShowHelp (res) && !(res is UnknownIdentifierResolveResult || res is UnknownMemberResolveResult)"  is complex.
Complex Conditional,MonoDevelop.SourceEditor,DebugValueTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueTooltipProvider.cs,ResolveExpression,The conditional expression  "result is NamespaceResolveResult || result is ConversionResolveResult || result is ConstantResolveResult || result is ForEachResolveResult || result is TypeIsResolveResult || result is TypeOfResolveResult || result is ErrorResolveResult"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchNextTask,The conditional expression  "mode == HoverMode.NextMessage || mode == HoverMode.NextWarning && task.Severity == Severity.Warning || mode == HoverMode.NextError && task.Severity == Severity.Error"  is complex.
Complex Conditional,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,SearchPrevTask,The conditional expression  "mode == HoverMode.NextMessage || mode == HoverMode.NextWarning && task.Severity == Severity.Warning || mode == HoverMode.NextError && task.Severity == Severity.Error"  is complex.
Empty Catch Block,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,GotoResult,The method has an empty catch block.
Empty Catch Block,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLine,The method has an empty catch block.
Empty Catch Block,MonoDevelop.SourceEditor.OptionPanels,HighlightingPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\HighlightingPanel.cs,ShowStyles,The method has an empty catch block.
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((res != null)) {  	return res;  }  else {  	int sz;  	int sy;  	global::Gtk.Icon.SizeLookup (size' out sz' out sy);  	try {  		return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  	}  	catch (System.Exception) {  		if ((name != "gtk-missing-image")) {  			return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  		}  		else {  			Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  			Gdk.GC gc = new Gdk.GC (pmap);  			gc.RgbFgColor = new Gdk.Color (255' 255' 255);  			pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  			gc.RgbFgColor = new Gdk.Color (0' 0' 0);  			pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  			gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  			gc.RgbFgColor = new Gdk.Color (255' 0' 0);  			pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  			pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  			return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  		}  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: try {  	return Gtk.IconTheme.Default.LoadIcon (name' sz' 0);  }  catch (System.Exception) {  	if ((name != "gtk-missing-image")) {  		return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  	}  	else {  		Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  		Gdk.GC gc = new Gdk.GC (pmap);  		gc.RgbFgColor = new Gdk.Color (255' 255' 255);  		pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  		gc.RgbFgColor = new Gdk.Color (0' 0' 0);  		pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  		gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  		gc.RgbFgColor = new Gdk.Color (255' 0' 0);  		pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  		pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  		return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  	}  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: if ((name != "gtk-missing-image")) {  	return Stetic.IconLoader.LoadIcon (widget' "gtk-missing-image"' size);  }  else {  	Gdk.Pixmap pmap = new Gdk.Pixmap (Gdk.Screen.Default.RootWindow' sz' sz);  	Gdk.GC gc = new Gdk.GC (pmap);  	gc.RgbFgColor = new Gdk.Color (255' 255' 255);  	pmap.DrawRectangle (gc' true' 0' 0' sz' sz);  	gc.RgbFgColor = new Gdk.Color (0' 0' 0);  	pmap.DrawRectangle (gc' false' 0' 0' (sz - 1)' (sz - 1));  	gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  	gc.RgbFgColor = new Gdk.Color (255' 0' 0);  	pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  	pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  	return Gdk.Pixbuf.FromDrawable (pmap' pmap.Colormap' 0' 0' 0' 0' sz' sz);  }  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 255' 255);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.SetLineAttributes (3' Gdk.LineStyle.Solid' Gdk.CapStyle.Round' Gdk.JoinStyle.Round);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: gc.RgbFgColor = new Gdk.Color (255' 0' 0);  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4))' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,Stetic,IconLoader,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\gtk-gui\generated.cs,LoadIcon,The following statement contains a magic number: pmap.DrawLine (gc' ((sz - 1) - (sz / 4))' (sz / 4)' (sz / 4)' ((sz - 1) - (sz / 4)));  
Magic Number,MonoDevelop.SourceEditor,ExtensibleTextEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\ExtensibleTextEditor.cs,HandleMenuHidden,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	menu.Destroy ();  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,LanguageItemWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\LanguageItemWindow.cs,LanguageItemWindow,The following statement contains a magic number: this.BorderWidth = 3;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,InformAutoSave,The following statement contains a magic number: autoSaveTimer = GLib.Timeout.Add (500' delegate {  	AutoSave.InformAutoSaveThread (Document);  	autoSaveTimer = 0;  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,ResetRemoveMarker,The following statement contains a magic number: removeMarkerTimeout = GLib.Timeout.Add (2000' delegate {  	while (markersToRemove.Count > 0) {  		var _m = markersToRemove.Dequeue ();  		currentErrorMarkers.Remove (_m);  		widget.TextEditor.Document.RemoveMarker (_m);  	}  	removeMarkerTimeout = 0;  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: x = (int)widget.TextEditor.TextViewMargin.XOffset + lw + 4;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.HorizontalAlignment) {  case HorizontalAlignment.LineLeft:  	x = (int)widget.TextEditor.TextViewMargin.XOffset;  	break;  case HorizontalAlignment.LineRight:  	x = lineStart + lw + 4;  	break;  case HorizontalAlignment.LineCenter:  	x = lineStart + (lw - size.Width) / 2;  	if (x < lineStart)  		x = lineStart;  	break;  case HorizontalAlignment.Left:  	x = 0;  	break;  case HorizontalAlignment.Right:  	break;  case HorizontalAlignment.Center:  	break;  case HorizontalAlignment.ViewLeft:  	break;  case HorizontalAlignment.ViewRight:  	break;  case HorizontalAlignment.ViewCenter:  	break;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.HorizontalAlignment) {  case HorizontalAlignment.LineLeft:  	x = (int)widget.TextEditor.TextViewMargin.XOffset;  	break;  case HorizontalAlignment.LineRight:  	x = lineStart + lw + 4;  	break;  case HorizontalAlignment.LineCenter:  	x = lineStart + (lw - size.Width) / 2;  	if (x < lineStart)  		x = lineStart;  	break;  case HorizontalAlignment.Left:  	x = 0;  	break;  case HorizontalAlignment.Right:  	break;  case HorizontalAlignment.Center:  	break;  case HorizontalAlignment.ViewLeft:  	break;  case HorizontalAlignment.ViewRight:  	break;  case HorizontalAlignment.ViewCenter:  	break;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: x = lineStart + lw + 4;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: x = lineStart + (lw - size.Width) / 2;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: switch (widgetExtension.VerticalAlignment) {  case VerticalAlignment.LineTop:  	break;  // the default  case VerticalAlignment.LineBottom:  	y += lh - size.Height;  	break;  case VerticalAlignment.LineCenter:  	y = y + (lh - size.Height) / 2;  	break;  case VerticalAlignment.AboveLine:  	y -= size.Height;  	break;  case VerticalAlignment.BelowLine:  	y += lh;  	break;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following statement contains a magic number: y = y + (lh - size.Height) / 2;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddWatch,The following statement contains a magic number: if (w.OffsetX < 0) {  	w.OffsetY = (int)widget.TextEditor.LineToY (w.Line);  	int lw' lh;  	var wrapper = widget.TextEditor.TextViewMargin.GetLayout (line);  	wrapper.Layout.GetPixelSize (out lw' out lh);  	if (wrapper.IsUncached)  		wrapper.Dispose ();  	w.OffsetX = (int)widget.TextEditor.TextViewMargin.XOffset + lw + 4;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,AddWatch,The following statement contains a magic number: w.OffsetX = (int)widget.TextEditor.TextViewMargin.XOffset + lw + 4;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointAdded,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	if (!isDisposed)  		UpdateBreakpoints ();  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointRemoved,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	if (!isDisposed)  		UpdateBreakpoints ();  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,OnBreakpointStatusChanged,The following statement contains a magic number: GLib.Timeout.Add (10' delegate {  	if (!isDisposed)  		UpdateBreakpoints (true);  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: ClipboardActions.CopyOperation.Copy += delegate (string text) {  	if (String.IsNullOrEmpty (text))  		return;  	foreach (TextToolboxNode node in clipboardRing) {  		if (node.Text == text) {  			clipboardRing.Remove (node);  			break;  		}  	}  	TextToolboxNode item = new TextToolboxNode (text);  	string[] lines = text.Split ('\n');  	for (int i = 0; i < 3 && i < lines.Length; i++) {  		if (i > 0)  			item.Description += Environment.NewLine;  		string line = lines [i];  		if (line.Length > 16)  			line = line.Substring (0' 16) + "...";  		item.Description += line;  	}  	item.Category = GettextCatalog.GetString ("Clipboard ring");  	item.Icon = DesktopService.GetPixbufForFile ("a.txt"' Gtk.IconSize.Menu);  	item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  	item.Name = item.Name.Replace ("\t"' "\\t");  	item.Name = item.Name.Replace ("\n"' "\\n");  	clipboardRing.Add (item);  	while (clipboardRing.Count > 12) {  		clipboardRing.RemoveAt (0);  	}  	if (ClipbardRingUpdated != null)  		ClipbardRingUpdated (null' EventArgs.Empty);  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: for (int i = 0; i < 3 && i < lines.Length; i++) {  	if (i > 0)  		item.Description += Environment.NewLine;  	string line = lines [i];  	if (line.Length > 16)  		line = line.Substring (0' 16) + "...";  	item.Description += line;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: for (int i = 0; i < 3 && i < lines.Length; i++) {  	if (i > 0)  		item.Description += Environment.NewLine;  	string line = lines [i];  	if (line.Length > 16)  		line = line.Substring (0' 16) + "...";  	item.Description += line;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: for (int i = 0; i < 3 && i < lines.Length; i++) {  	if (i > 0)  		item.Description += Environment.NewLine;  	string line = lines [i];  	if (line.Length > 16)  		line = line.Substring (0' 16) + "...";  	item.Description += line;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: if (line.Length > 16)  	line = line.Substring (0' 16) + "...";  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: if (line.Length > 16)  	line = line.Substring (0' 16) + "...";  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: line = line.Substring (0' 16) + "...";  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: item.Name = text.Length > 16 ? text.Substring (0' 16) + "..." : text;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,SourceEditorView,The following statement contains a magic number: while (clipboardRing.Count > 12) {  	clipboardRing.RemoveAt (0);  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,SourceEditorWidget,The following statement contains a magic number: vbox.SetSizeRequest (32' 32);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,SourceEditorWidget,The following statement contains a magic number: vbox.SetSizeRequest (32' 32);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,WaitForParseInformationUpdaterWorkerThread,The following statement contains a magic number: while (count++ < 5 && parseInformationUpdaterWorkerThread.IsBusy)  	Thread.Sleep (20);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,WaitForParseInformationUpdaterWorkerThread,The following statement contains a magic number: while (count++ < 5 && parseInformationUpdaterWorkerThread.IsBusy)  	Thread.Sleep (20);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,WaitForParseInformationUpdaterWorkerThread,The following statement contains a magic number: Thread.Sleep (20);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,UpdateErrorUndelines,The following statement contains a magic number: Application.Invoke (delegate {  	if (!quickTaskProvider.Contains (this))  		AddQuickTaskProvider (this);  	RemoveErrorUndelinesResetTimerId ();  	const uint timeout = 500;  	resetTimerId = GLib.Timeout.Add (timeout' delegate {  		if (!this.isDisposed) {  			Document doc = this.TextEditor != null ? this.TextEditor.Document : null;  			if (doc != null) {  				RemoveErrorUnderlines (doc);  				// Else we underline the error  				if (parsedDocument.Errors != null) {  					foreach (var error in parsedDocument.Errors)  						UnderLineError (doc' error);  				}  			}  		}  		resetTimerId = 0;  		return false;  	});  	UpdateQuickTasks (parsedDocument);  });  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,Split,The following statement contains a magic number: splitContainer.Position = (vSplit ? vbox.Allocation.Height : vbox.Allocation.Width) / 2 - 1;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowFileChangedWarning,The following statement contains a magic number: if (messageBar == null) {  	messageBar = new MonoDevelop.Components.InfoBar (MessageType.Warning);  	messageBar.SetMessageLabel (GettextCatalog.GetString ("<b>The file \"{0}\" has been changed outside of {1}.</b>\n" + "Do you want to keep your changes' or reload the file from disk?"' EllipsizeMiddle (Document.FileName' 50)' BrandingService.ApplicationName));  	var b1 = new Button (GettextCatalog.GetString ("_Reload from disk"));  	b1.Image = ImageService.GetImage (Gtk.Stock.Refresh' IconSize.Button);  	b1.Clicked += delegate {  		Reload ();  		view.TextEditor.GrabFocus ();  	};  	messageBar.ActionArea.Add (b1);  	var b2 = new Button (GettextCatalog.GetString ("_Keep changes"));  	b2.Image = ImageService.GetImage (Gtk.Stock.Cancel' IconSize.Button);  	b2.Clicked += delegate {  		RemoveMessageBar ();  		view.LastSaveTimeUtc = System.IO.File.GetLastWriteTimeUtc (view.ContentName);  		view.WorkbenchWindow.ShowNotification = false;  	};  	messageBar.ActionArea.Add (b2);  	if (multiple) {  		var b3 = new Button (GettextCatalog.GetString ("_Reload all"));  		b3.Image = ImageService.GetImage (Gtk.Stock.Cancel' IconSize.Button);  		b3.Clicked += delegate {  			FileRegistry.ReloadAllChangedFiles ();  		};  		messageBar.ActionArea.Add (b3);  		var b4 = new Button (GettextCatalog.GetString ("_Ignore all"));  		b4.Image = ImageService.GetImage (Gtk.Stock.Cancel' IconSize.Button);  		b4.Clicked += delegate {  			FileRegistry.IgnoreAllChangedFiles ();  		};  		messageBar.ActionArea.Add (b4);  	}  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowFileChangedWarning,The following statement contains a magic number: messageBar.SetMessageLabel (GettextCatalog.GetString ("<b>The file \"{0}\" has been changed outside of {1}.</b>\n" + "Do you want to keep your changes' or reload the file from disk?"' EllipsizeMiddle (Document.FileName' 50)' BrandingService.ApplicationName));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: hbox.Spacing = 8;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: okButton.WidthRequest = 60;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: messageOverlayWindow.SizeFunc = () =>  {  	return okButton.SizeRequest ().Width + combo.SizeRequest ().Width + image.SizeRequest ().Width + w + hbox.Spacing * 4 + containerPadding * 2;  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: messageOverlayWindow.SizeFunc = () =>  {  	return okButton.SizeRequest ().Width + combo.SizeRequest ().Width + image.SizeRequest ().Width + w + hbox.Spacing * 4 + containerPadding * 2;  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: return okButton.SizeRequest ().Width + combo.SizeRequest ().Width + image.SizeRequest ().Width + w + hbox.Spacing * 4 + containerPadding * 2;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: return okButton.SizeRequest ().Width + combo.SizeRequest ().Width + image.SizeRequest ().Width + w + hbox.Spacing * 4 + containerPadding * 2;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: okButton.Clicked += delegate {  	if (multiple) {  		switch (combo.Active) {  		case 0:  			ConvertLineEndings ();  			view.WorkbenchWindow.ShowNotification = false;  			view.Save (fileName' view.SourceEncoding);  			break;  		case 1:  			FileRegistry.ConvertLineEndingsInAllFiles ();  			break;  		case 2:  			UseIncorrectMarkers = true;  			view.WorkbenchWindow.ShowNotification = false;  			break;  		case 3:  			FileRegistry.IgnoreLineEndingsInAllFiles ();  			break;  		}  	}  	else {  		switch (combo.Active) {  		case 0:  			ConvertLineEndings ();  			view.WorkbenchWindow.ShowNotification = false;  			view.Save (fileName' view.SourceEncoding);  			break;  		case 1:  			UseIncorrectMarkers = true;  			view.WorkbenchWindow.ShowNotification = false;  			break;  		}  	}  	RemoveMessageBar ();  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: okButton.Clicked += delegate {  	if (multiple) {  		switch (combo.Active) {  		case 0:  			ConvertLineEndings ();  			view.WorkbenchWindow.ShowNotification = false;  			view.Save (fileName' view.SourceEncoding);  			break;  		case 1:  			FileRegistry.ConvertLineEndingsInAllFiles ();  			break;  		case 2:  			UseIncorrectMarkers = true;  			view.WorkbenchWindow.ShowNotification = false;  			break;  		case 3:  			FileRegistry.IgnoreLineEndingsInAllFiles ();  			break;  		}  	}  	else {  		switch (combo.Active) {  		case 0:  			ConvertLineEndings ();  			view.WorkbenchWindow.ShowNotification = false;  			view.Save (fileName' view.SourceEncoding);  			break;  		case 1:  			UseIncorrectMarkers = true;  			view.WorkbenchWindow.ShowNotification = false;  			break;  		}  	}  	RemoveMessageBar ();  };  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: if (multiple) {  	switch (combo.Active) {  	case 0:  		ConvertLineEndings ();  		view.WorkbenchWindow.ShowNotification = false;  		view.Save (fileName' view.SourceEncoding);  		break;  	case 1:  		FileRegistry.ConvertLineEndingsInAllFiles ();  		break;  	case 2:  		UseIncorrectMarkers = true;  		view.WorkbenchWindow.ShowNotification = false;  		break;  	case 3:  		FileRegistry.IgnoreLineEndingsInAllFiles ();  		break;  	}  }  else {  	switch (combo.Active) {  	case 0:  		ConvertLineEndings ();  		view.WorkbenchWindow.ShowNotification = false;  		view.Save (fileName' view.SourceEncoding);  		break;  	case 1:  		UseIncorrectMarkers = true;  		view.WorkbenchWindow.ShowNotification = false;  		break;  	}  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: if (multiple) {  	switch (combo.Active) {  	case 0:  		ConvertLineEndings ();  		view.WorkbenchWindow.ShowNotification = false;  		view.Save (fileName' view.SourceEncoding);  		break;  	case 1:  		FileRegistry.ConvertLineEndingsInAllFiles ();  		break;  	case 2:  		UseIncorrectMarkers = true;  		view.WorkbenchWindow.ShowNotification = false;  		break;  	case 3:  		FileRegistry.IgnoreLineEndingsInAllFiles ();  		break;  	}  }  else {  	switch (combo.Active) {  	case 0:  		ConvertLineEndings ();  		view.WorkbenchWindow.ShowNotification = false;  		view.Save (fileName' view.SourceEncoding);  		break;  	case 1:  		UseIncorrectMarkers = true;  		view.WorkbenchWindow.ShowNotification = false;  		break;  	}  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: switch (combo.Active) {  case 0:  	ConvertLineEndings ();  	view.WorkbenchWindow.ShowNotification = false;  	view.Save (fileName' view.SourceEncoding);  	break;  case 1:  	FileRegistry.ConvertLineEndingsInAllFiles ();  	break;  case 2:  	UseIncorrectMarkers = true;  	view.WorkbenchWindow.ShowNotification = false;  	break;  case 3:  	FileRegistry.IgnoreLineEndingsInAllFiles ();  	break;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following statement contains a magic number: switch (combo.Active) {  case 0:  	ConvertLineEndings ();  	view.WorkbenchWindow.ShowNotification = false;  	view.Save (fileName' view.SourceEncoding);  	break;  case 1:  	FileRegistry.ConvertLineEndingsInAllFiles ();  	break;  case 2:  	UseIncorrectMarkers = true;  	view.WorkbenchWindow.ShowNotification = false;  	break;  case 3:  	FileRegistry.IgnoreLineEndingsInAllFiles ();  	break;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The following statement contains a magic number: if (searchAndReplaceWidget == null) {  	KillWidgets ();  	searchAndReplaceWidgetFrame = new RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	searchAndReplaceWidgetFrame.SetFillColor (CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));  	searchAndReplaceWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (TextEditor' searchAndReplaceWidgetFrame);  	searchAndReplaceWidget.Destroyed += (sender' e) => RemoveSearchWidget ();  	searchAndReplaceWidgetFrame.ShowAll ();  	this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  	//				this.PackEnd (searchAndReplaceWidget);  	//				this.SetChildPacking (searchAndReplaceWidget' false' false' CHILD_PADDING' PackType.End);  	//		searchAndReplaceWidget.ShowAll ();  	if (this.splittedTextEditor != null) {  		this.splittedTextEditor.HighlightSearchPattern = true;  		this.splittedTextEditor.TextViewMargin.RefreshSearchMarker ();  	}  	ResetFocusChain ();  }  else {  	if (TextEditor.IsSomethingSelected) {  		searchAndReplaceWidget.SetSearchPattern ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The following statement contains a magic number: if (searchAndReplaceWidget == null) {  	KillWidgets ();  	searchAndReplaceWidgetFrame = new RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	searchAndReplaceWidgetFrame.SetFillColor (CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));  	searchAndReplaceWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (TextEditor' searchAndReplaceWidgetFrame);  	searchAndReplaceWidget.Destroyed += (sender' e) => RemoveSearchWidget ();  	searchAndReplaceWidgetFrame.ShowAll ();  	this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  	//				this.PackEnd (searchAndReplaceWidget);  	//				this.SetChildPacking (searchAndReplaceWidget' false' false' CHILD_PADDING' PackType.End);  	//		searchAndReplaceWidget.ShowAll ();  	if (this.splittedTextEditor != null) {  		this.splittedTextEditor.HighlightSearchPattern = true;  		this.splittedTextEditor.TextViewMargin.RefreshSearchMarker ();  	}  	ResetFocusChain ();  }  else {  	if (TextEditor.IsSomethingSelected) {  		searchAndReplaceWidget.SetSearchPattern ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The following statement contains a magic number: this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowSearchReplaceWidget,The following statement contains a magic number: this.TextEditor.AddAnimatedWidget (searchAndReplaceWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' TextEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: if (gotoLineNumberWidget == null) {  	KillWidgets ();  	gotoLineNumberWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	gotoLineNumberWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));  	gotoLineNumberWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (textEditor' gotoLineNumberWidgetFrame);  	gotoLineNumberWidget.Destroyed += (sender' e) => RemoveSearchWidget ();  	gotoLineNumberWidgetFrame.ShowAll ();  	TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  	ResetFocusChain ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: if (gotoLineNumberWidget == null) {  	KillWidgets ();  	gotoLineNumberWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	gotoLineNumberWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (vbox.Style.Background (StateType.Normal)));  	gotoLineNumberWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (textEditor' gotoLineNumberWidgetFrame);  	gotoLineNumberWidget.Destroyed += (sender' e) => RemoveSearchWidget ();  	gotoLineNumberWidgetFrame.ShowAll ();  	TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  	ResetFocusChain ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: TextEditor.AddAnimatedWidget (gotoLineNumberWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Mono.TextEditor.Theatrics.Blocking.Downstage' this.TextEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: if (newX != containerChild.X) {  	searchEntry.WidthRequest = textEditor.Allocation.Width / 3;  	containerChild.X = newX;  	textEditor.QueueResize ();  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: searchEntry.WidthRequest = textEditor.Allocation.Width / 3;  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: searchEntry.WidthRequest = textEditor.Allocation.Width / 3;  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: if (Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox2'  		eventbox3'  		eventbox4'  		eventbox5'  		eventbox6  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  	}  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: if (Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox2'  		eventbox3'  		eventbox4'  		eventbox5'  		eventbox6  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  	}  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: if (Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox2'  		eventbox3'  		eventbox4'  		eventbox5'  		eventbox6  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  	}  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox2'  	eventbox3'  	eventbox4'  	eventbox5'  	eventbox6  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox2'  	eventbox3'  	eventbox4'  	eventbox5'  	eventbox6  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox2'  	eventbox3'  	eventbox4'  	eventbox5'  	eventbox6  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  }  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (245' 245' 245));  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: resultInformLabelEventBox.BorderWidth = 2;  
Magic Number,MonoDevelop.SourceEditor,SearchAndReplaceWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SearchAndReplaceWidget.cs,SearchAndReplaceWidget,The following statement contains a magic number: resultInformLabel.Xpad = 2;  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: if (newX != containerChild.X) {  	this.entryLineNumber.WidthRequest = textEditor.Allocation.Width / 4;  	containerChild.X = newX;  	textEditor.QueueResize ();  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,HandleViewTextEditorhandleSizeAllocated,The following statement contains a magic number: this.entryLineNumber.WidthRequest = textEditor.Allocation.Width / 4;  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: if (MonoDevelop.Core.Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox1'  		eventbox2  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  	}  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: if (MonoDevelop.Core.Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox1'  		eventbox2  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  	}  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: if (MonoDevelop.Core.Platform.IsMac) {  	foreach (var eb in new[] {  		eventbox1'  		eventbox2  	}) {  		eb.VisibleWindow = true;  		eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  	}  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox1'  	eventbox2  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox1'  	eventbox2  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: foreach (var eb in new[] {  	eventbox1'  	eventbox2  }) {  	eb.VisibleWindow = true;  	eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  }  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  
Magic Number,MonoDevelop.SourceEditor,GotoLineNumberWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\GotoLineNumberWidget.cs,GotoLineNumberWidget,The following statement contains a magic number: eb.ModifyBg (StateType.Normal' new Gdk.Color (230' 230' 230));  
Magic Number,MonoDevelop.SourceEditor,CompileErrorTooltipProvider,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\CompileErrorTooltipProvider.cs,GetRequiredPosition,The following statement contains a magic number: xalign = 0.5;  
Magic Number,MonoDevelop.SourceEditor,BaseWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,BaseWindow,The following statement contains a magic number: this.BorderWidth = 2;  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,DebugValueWindow,The following statement contains a magic number: Theme.CornerRadius = 3;  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnTreeSizeChanged,The following statement contains a magic number: if (dy > 0 && sw.VscrollbarPolicy == PolicyType.Never) {  	sw.VscrollbarPolicy = PolicyType.Always;  	sw.HeightRequest = h - dy - 10;  }  else if (sw.VscrollbarPolicy == PolicyType.Always && sw.Vadjustment.Upper == sw.Vadjustment.PageSize) {  	sw.VscrollbarPolicy = PolicyType.Never;  	sw.HeightRequest = -1;  }  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnTreeSizeChanged,The following statement contains a magic number: sw.HeightRequest = h - dy - 10;  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnTreeSizeChanged,The following statement contains a magic number: if (dx > 0 && sw.HscrollbarPolicy == PolicyType.Never) {  	sw.HscrollbarPolicy = PolicyType.Always;  	sw.WidthRequest = w - dx - 10;  }  else if (sw.HscrollbarPolicy == PolicyType.Always && sw.Hadjustment.Upper == sw.Hadjustment.PageSize) {  	sw.HscrollbarPolicy = PolicyType.Never;  	sw.WidthRequest = -1;  }  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnTreeSizeChanged,The following statement contains a magic number: sw.WidthRequest = w - dx - 10;  
Magic Number,MonoDevelop.SourceEditor,DebugValueWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DebugValueWindow.cs,OnSizeAllocated,The following statement contains a magic number: if (MonoDevelop.Core.Platform.IsMac || MonoDevelop.Core.Platform.IsWindows) {  	// fails on linux see: Bug 8481 - Debug value tooltips very often appear at the top-left corner of the screen instead of near the element to inspect   	const int edgeGap = 2;  	int oldY' x' y;  	this.GetPosition (out x' out y);  	oldY = y;  	Gdk.Rectangle geometry = DesktopService.GetUsableMonitorGeometry (Screen' Screen.GetMonitorAtPoint (x' y));  	if (allocation.Height <= geometry.Height && y + allocation.Height >= geometry.Y + geometry.Height - edgeGap)  		y = geometry.Top + (geometry.Height - allocation.Height - edgeGap);  	if (y < geometry.Top + edgeGap)  		y = geometry.Top + edgeGap;  	if (y != oldY) {  		Move (x' y);  		// If the window is moved' hide the arrow since it will be pointing to the wrong place  		ShowArrow = false;  	}  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (':' != command [0] || 2 > command.Length)  	return base.RunExCommand (command);  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [1]) {  case 'w':  	if (2 < command.Length) {  		switch (command [2]) {  		case 'q':  			// :wq  			var workbenchWindow = editor.View.WorkbenchWindow;  			workbenchWindow.Document.Save ();  			Gtk.Application.Invoke (delegate {  				workbenchWindow.CloseWindow (false/*' true' -1*/);  			});  			return "Saved and closed file.";  		case '!':  			// :w!  			editor.View.Save ();  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	else  		editor.View.WorkbenchWindow.Document.Save ();  	return "Saved file.";  case 'q':  	bool force = false;  	if (2 < command.Length) {  		switch (command [2]) {  		case '!':  			// :q!  			force = true;  			break;  		default:  			return base.RunExCommand (command);  		}  	}  	if (!force && editor.View.IsDirty)  		return "Document has not been saved!";  	var window = editor.View.WorkbenchWindow;  	Gtk.Application.Invoke (delegate {  		window.CloseWindow (force);  	});  	return force ? "Closed file without saving." : "Closed file.";  case 'm':  	if (!Regex.IsMatch (command' "^:mak[e!]"' RegexOptions.Compiled))  		break;  	MonoDevelop.Projects.Project proj = editor.View.Project;  	if (proj != null) {  		IdeApp.ProjectOperations.Build (proj);  		return string.Format ("Building project {0}"' proj.Name);  	}  	return "File is not part of a project";  case 'c':  	// Error manipulation  	if (3 == command.Length) {  		switch (command [2]) {  		case 'n':  			// :cn - jump to next error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  			return string.Empty;  		case 'N':  		case 'p':  			// :c[pN] - jump to previous error  			IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  			return string.Empty;  		}  	}  	break;  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (2 < command.Length) {  	switch (command [2]) {  	case 'q':  		// :wq  		var workbenchWindow = editor.View.WorkbenchWindow;  		workbenchWindow.Document.Save ();  		Gtk.Application.Invoke (delegate {  			workbenchWindow.CloseWindow (false/*' true' -1*/);  		});  		return "Saved and closed file.";  	case '!':  		// :w!  		editor.View.Save ();  		break;  	default:  		return base.RunExCommand (command);  	}  }  else  	editor.View.WorkbenchWindow.Document.Save ();  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (2 < command.Length) {  	switch (command [2]) {  	case 'q':  		// :wq  		var workbenchWindow = editor.View.WorkbenchWindow;  		workbenchWindow.Document.Save ();  		Gtk.Application.Invoke (delegate {  			workbenchWindow.CloseWindow (false/*' true' -1*/);  		});  		return "Saved and closed file.";  	case '!':  		// :w!  		editor.View.Save ();  		break;  	default:  		return base.RunExCommand (command);  	}  }  else  	editor.View.WorkbenchWindow.Document.Save ();  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [2]) {  case 'q':  	// :wq  	var workbenchWindow = editor.View.WorkbenchWindow;  	workbenchWindow.Document.Save ();  	Gtk.Application.Invoke (delegate {  		workbenchWindow.CloseWindow (false/*' true' -1*/);  	});  	return "Saved and closed file.";  case '!':  	// :w!  	editor.View.Save ();  	break;  default:  	return base.RunExCommand (command);  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (2 < command.Length) {  	switch (command [2]) {  	case '!':  		// :q!  		force = true;  		break;  	default:  		return base.RunExCommand (command);  	}  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (2 < command.Length) {  	switch (command [2]) {  	case '!':  		// :q!  		force = true;  		break;  	default:  		return base.RunExCommand (command);  	}  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [2]) {  case '!':  	// :q!  	force = true;  	break;  default:  	return base.RunExCommand (command);  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (3 == command.Length) {  	switch (command [2]) {  	case 'n':  		// :cn - jump to next error  		IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  		return string.Empty;  	case 'N':  	case 'p':  		// :c[pN] - jump to previous error  		IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  		return string.Empty;  	}  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: if (3 == command.Length) {  	switch (command [2]) {  	case 'n':  		// :cn - jump to next error  		IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  		return string.Empty;  	case 'N':  	case 'p':  		// :c[pN] - jump to previous error  		IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  		return string.Empty;  	}  }  
Magic Number,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following statement contains a magic number: switch (command [2]) {  case 'n':  	// :cn - jump to next error  	IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  	return string.Empty;  case 'N':  case 'p':  	// :c[pN] - jump to previous error  	IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  	return string.Empty;  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo ((pageWidth - w) / 2' yPos);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: if (settings.HeaderSeparatorWeight > 0) {  	cr.LineWidth = settings.HeaderSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: if (settings.HeaderSeparatorWeight > 0) {  	cr.LineWidth = settings.HeaderSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: if (settings.HeaderSeparatorWeight > 0) {  	cr.LineWidth = settings.HeaderSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: if (settings.HeaderSeparatorWeight > 0) {  	cr.LineWidth = settings.HeaderSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: if (settings.HeaderSeparatorWeight > 0) {  	cr.LineWidth = settings.HeaderSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.HeaderPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintHeader,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.HeaderPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,Subst,The following statement contains a magic number: sb.Replace ("%F"' SourceEditorWidget.EllipsizeMiddle (filename' 60));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: if (settings.FooterSeparatorWeight > 0) {  	cr.LineWidth = settings.FooterSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: if (settings.FooterSeparatorWeight > 0) {  	cr.LineWidth = settings.FooterSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: if (settings.FooterSeparatorWeight > 0) {  	cr.LineWidth = settings.FooterSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: if (settings.FooterSeparatorWeight > 0) {  	cr.LineWidth = settings.FooterSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: if (settings.FooterSeparatorWeight > 0) {  	cr.LineWidth = settings.FooterSeparatorWeight;  	cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo (pageWidth / 3' yPos + (settings.FooterPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.LineTo (2 * pageWidth / 3' yPos + (settings.FooterPadding / 2));  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintOperation,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,PrintFooter,The following statement contains a magic number: cr.MoveTo ((pageWidth - w) / 2' yPos);  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintSettings,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,SourceEditorPrintSettings,The following statement contains a magic number: HeaderSeparatorWeight = FooterSeparatorWeight = 0.5;  
Magic Number,MonoDevelop.SourceEditor,SourceEditorPrintSettings,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorPrintOperation.cs,SourceEditorPrintSettings,The following statement contains a magic number: HeaderPadding = FooterPadding = 6;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: if (errors.Count > 1 && errorCountLayout != null || editor.Allocation.Width < lineTextPx + layouts [0].Width) {  	int ew = 0' eh = 0;  	if (errorCountLayout != null) {  		errorCountLayout.GetPixelSize (out ew' out eh);  	}  	else {  		ew = 10;  	}  	return Tuple.Create (ew + 10' eh);  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: if (errors.Count > 1 && errorCountLayout != null || editor.Allocation.Width < lineTextPx + layouts [0].Width) {  	int ew = 0' eh = 0;  	if (errorCountLayout != null) {  		errorCountLayout.GetPixelSize (out ew' out eh);  	}  	else {  		ew = 10;  	}  	return Tuple.Create (ew + 10' eh);  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: if (errorCountLayout != null) {  	errorCountLayout.GetPixelSize (out ew' out eh);  }  else {  	ew = 10;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: ew = 10;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,GetErrorCountBounds,The following statement contains a magic number: return Tuple.Create (ew + 10' eh);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (errorCountLayout != null) {  	errorCountLayout.GetPixelSize (out errorCounterWidth' out eh);  	errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (errorCountLayout != null) {  	errorCountLayout.GetPixelSize (out errorCounterWidth' out eh);  	errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (errorCountLayout != null) {  	errorCountLayout.GetPixelSize (out errorCounterWidth' out eh);  	errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (errorCountLayout != null) {  	errorCountLayout.GetPixelSize (out errorCounterWidth' out eh);  	errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: errorCounterWidth = Math.Max (15' Math.Max (errorCounterWidth + 3' (int)(editor.LineHeight * 3 / 4)));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (customLayout) {  	width = editor.Allocation.Width - sx;  	string text = layouts [0].Layout.Text;  	drawLayout = new Pango.Layout (editor.PangoContext);  	drawLayout.FontDescription = cache.fontDescription;  	var paintWidth = (width - errorCounterWidth - editor.LineHeight + 4);  	var minWidth = Math.Max (25' errorCounterWidth) * editor.Options.Zoom;  	if (paintWidth < minWidth) {  		hideText = true;  		showErrorCount = false;  		//					drawLayout.SetMarkup ("<span weight='heavy'>···</span>");  		width = minWidth;  		roundingRadius = 10 * editor.Options.Zoom;  		sx = Math.Min (sx' editor.Allocation.Width - width);  	}  	else {  		drawLayout.Ellipsize = Pango.EllipsizeMode.End;  		drawLayout.Width = (int)(paintWidth * Pango.Scale.PangoScale);  		drawLayout.SetText (text);  		int w2' h2;  		drawLayout.GetPixelSize (out w2' out h2);  		width = w2 + errorCounterWidth + editor.LineHeight;  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (customLayout) {  	width = editor.Allocation.Width - sx;  	string text = layouts [0].Layout.Text;  	drawLayout = new Pango.Layout (editor.PangoContext);  	drawLayout.FontDescription = cache.fontDescription;  	var paintWidth = (width - errorCounterWidth - editor.LineHeight + 4);  	var minWidth = Math.Max (25' errorCounterWidth) * editor.Options.Zoom;  	if (paintWidth < minWidth) {  		hideText = true;  		showErrorCount = false;  		//					drawLayout.SetMarkup ("<span weight='heavy'>···</span>");  		width = minWidth;  		roundingRadius = 10 * editor.Options.Zoom;  		sx = Math.Min (sx' editor.Allocation.Width - width);  	}  	else {  		drawLayout.Ellipsize = Pango.EllipsizeMode.End;  		drawLayout.Width = (int)(paintWidth * Pango.Scale.PangoScale);  		drawLayout.SetText (text);  		int w2' h2;  		drawLayout.GetPixelSize (out w2' out h2);  		width = w2 + errorCounterWidth + editor.LineHeight;  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (customLayout) {  	width = editor.Allocation.Width - sx;  	string text = layouts [0].Layout.Text;  	drawLayout = new Pango.Layout (editor.PangoContext);  	drawLayout.FontDescription = cache.fontDescription;  	var paintWidth = (width - errorCounterWidth - editor.LineHeight + 4);  	var minWidth = Math.Max (25' errorCounterWidth) * editor.Options.Zoom;  	if (paintWidth < minWidth) {  		hideText = true;  		showErrorCount = false;  		//					drawLayout.SetMarkup ("<span weight='heavy'>···</span>");  		width = minWidth;  		roundingRadius = 10 * editor.Options.Zoom;  		sx = Math.Min (sx' editor.Allocation.Width - width);  	}  	else {  		drawLayout.Ellipsize = Pango.EllipsizeMode.End;  		drawLayout.Width = (int)(paintWidth * Pango.Scale.PangoScale);  		drawLayout.SetText (text);  		int w2' h2;  		drawLayout.GetPixelSize (out w2' out h2);  		width = w2 + errorCounterWidth + editor.LineHeight;  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (paintWidth < minWidth) {  	hideText = true;  	showErrorCount = false;  	//					drawLayout.SetMarkup ("<span weight='heavy'>···</span>");  	width = minWidth;  	roundingRadius = 10 * editor.Options.Zoom;  	sx = Math.Min (sx' editor.Allocation.Width - width);  }  else {  	drawLayout.Ellipsize = Pango.EllipsizeMode.End;  	drawLayout.Width = (int)(paintWidth * Pango.Scale.PangoScale);  	drawLayout.SetText (text);  	int w2' h2;  	drawLayout.GetPixelSize (out w2' out h2);  	width = w2 + errorCounterWidth + editor.LineHeight;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: roundingRadius = 10 * editor.Options.Zoom;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (showErrorCount) {  	var errorCounterHeight = bubbleHeight - 2;  	var errorCounterX = sx + width - errorCounterWidth - 3;  	var errorCounterY = y + 1 + (bubbleHeight - errorCounterHeight) / 2;  	g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  	g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  	g.Fill ();  	g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  	using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  		lg.AddColorStop (0' CounterColor.Color);  		lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  		g.SetSource (lg);  		g.Fill ();  	}  	g.Save ();  	int ew;  	errorCountLayout.GetPixelSize (out ew' out eh);  	g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  	g.SetSourceColor (CounterColor.SecondColor);  	g.ShowLayout (errorCountLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX - 1' errorCounterY - 1' errorCounterWidth + 2' errorCounterHeight + 2' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.SetSourceColor (new Cairo.Color (0' 0' 0' 0.081));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.RoundedRectangle (errorCounterX' errorCounterY' errorCounterWidth' errorCounterHeight' editor.LineHeight / 2 - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (errorCounterX' errorCounterY' errorCounterX' errorCounterY + errorCounterHeight)) {  	lg.AddColorStop (0' CounterColor.Color);  	lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  	g.SetSource (lg);  	g.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: lg.AddColorStop (1' CounterColor.Color.AddLight (-0.1));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Translate (errorCounterX + (2 + errorCounterWidth - ew) / 2' errorCounterY + (-1 + errorCounterHeight - eh) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: if (hideText) {  	// Draw dots  	double radius = 2 * editor.Options.Zoom;  	double spacing = 1 * editor.Options.Zoom;  	double shadowOffset = 1 * editor.Options.Zoom;  	sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  	for (int i = 0; i < 3; i++) {  		g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  		g.SetSourceColor (MessageBubbleCache.ShadowColor);  		g.Fill ();  		g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  		g.SetSourceColor (TagColor.SecondColor);  		g.Fill ();  		sx += radius * 2 + spacing;  	}  }  else {  	// Draw label text  	g.Save ();  	g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  	// draw shadow  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.ShowLayout (drawLayout);  	g.Translate (0' -1);  	g.SetSourceColor (TagColor.SecondColor);  	g.ShowLayout (drawLayout);  	g.Restore ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += 1 * editor.Options.Zoom + Math.Ceiling ((bubbleWidth - 3 * (radius * 2) - 2 * spacing) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  	g.SetSourceColor (MessageBubbleCache.ShadowColor);  	g.Fill ();  	g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  	g.SetSourceColor (TagColor.SecondColor);  	g.Fill ();  	sx += radius * 2 + spacing;  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + 1 + bubbleHeight / 2 + shadowOffset' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Arc (sx' y + 1 + bubbleHeight / 2' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: sx += radius * 2 + spacing;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawAfterEol,The following statement contains a magic number: g.Translate (sx + editor.LineHeight / 2' y + (editor.LineHeight - layouts [0].Height) / 2 + 1);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.MoveTo (metrics.Right - 0.5' metrics.Y);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.LineTo (metrics.Right - 0.5' metrics.Bottom);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: if (cache.CurrentSelectedTextMarker != null && cache.CurrentSelectedTextMarker != this) {  	cr.Rectangle (metrics.X' metrics.Y' metrics.Width' metrics.Height);  	cr.SetSourceRGBA (ed.ColorStyle.IndicatorMargin.Color.R' ed.ColorStyle.IndicatorMargin.Color.G' ed.ColorStyle.IndicatorMargin.Color.B' 0.5);  	cr.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawIconMarginBackground,The following statement contains a magic number: cr.SetSourceRGBA (ed.ColorStyle.IndicatorMargin.Color.R' ed.ColorStyle.IndicatorMargin.Color.G' ed.ColorStyle.IndicatorMargin.Color.B' 0.5);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawForeground,The following statement contains a magic number: cr.Translate (metrics.X + 0.5 + (metrics.Width - 2 - cache.errorPixbuf.Width) / 2' metrics.Y + 0.5 + (metrics.Height - cache.errorPixbuf.Height) / 2);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (!markerShouldDrawnAsHidden) {  	DrawRectangle (g' x' y' right' editor.LineHeight);  	g.SetSourceColor (LineColor.Color);  	g.Fill ();  	if (metrics.Layout.StartSet || metrics.SelectionStart == metrics.TextEndOffset) {  		double startX;  		double endX;  		if (metrics.SelectionStart != metrics.TextEndOffset) {  			var start = metrics.Layout.Layout.IndexToPos ((int)metrics.Layout.SelectionStartIndex);  			startX = (int)(start.X / Pango.Scale.PangoScale);  			var end = metrics.Layout.Layout.IndexToPos ((int)metrics.Layout.SelectionEndIndex);  			endX = (int)(end.X / Pango.Scale.PangoScale);  		}  		else {  			startX = x2;  			endX = startX;  		}  		if (editor.MainSelection.SelectionMode == Mono.TextEditor.SelectionMode.Block && startX == endX)  			endX = startX + 2;  		startX += metrics.TextRenderStartPosition;  		endX += metrics.TextRenderStartPosition;  		startX = Math.Max (editor.TextViewMargin.XOffset' startX);  		// clip region to textviewmargin start  		if (isEolSelected)  			endX = editor.Allocation.Width + (int)editor.HAdjustment.Value;  		if (startX < endX) {  			DrawRectangle (g' startX' y' endX - startX' editor.LineHeight);  			g.SetSourceColor (GetLineColor (highlighted' true));  			g.Fill ();  		}  	}  	DrawErrorMarkers (editor' g' metrics' y);  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (metrics.Layout.StartSet || metrics.SelectionStart == metrics.TextEndOffset) {  	double startX;  	double endX;  	if (metrics.SelectionStart != metrics.TextEndOffset) {  		var start = metrics.Layout.Layout.IndexToPos ((int)metrics.Layout.SelectionStartIndex);  		startX = (int)(start.X / Pango.Scale.PangoScale);  		var end = metrics.Layout.Layout.IndexToPos ((int)metrics.Layout.SelectionEndIndex);  		endX = (int)(end.X / Pango.Scale.PangoScale);  	}  	else {  		startX = x2;  		endX = startX;  	}  	if (editor.MainSelection.SelectionMode == Mono.TextEditor.SelectionMode.Block && startX == endX)  		endX = startX + 2;  	startX += metrics.TextRenderStartPosition;  	endX += metrics.TextRenderStartPosition;  	startX = Math.Max (editor.TextViewMargin.XOffset' startX);  	// clip region to textviewmargin start  	if (isEolSelected)  		endX = editor.Allocation.Width + (int)editor.HAdjustment.Value;  	if (startX < endX) {  		DrawRectangle (g' startX' y' endX - startX' editor.LineHeight);  		g.SetSourceColor (GetLineColor (highlighted' true));  		g.Fill ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (editor.MainSelection.SelectionMode == Mono.TextEditor.SelectionMode.Block && startX == endX)  	endX = startX + 2;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: endX = startX + 2;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (editor.Options.ShowRuler) {  	double divider = Math.Max (editor.TextViewMargin.XOffset' x + editor.TextViewMargin.RulerX);  	if (divider >= x2) {  		g.MoveTo (new Cairo.PointD (divider + 0.5' y2));  		g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));  		g.SetSourceColor (GetLineColorBorder (highlighted' selected));  		g.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (editor.Options.ShowRuler) {  	double divider = Math.Max (editor.TextViewMargin.XOffset' x + editor.TextViewMargin.RulerX);  	if (divider >= x2) {  		g.MoveTo (new Cairo.PointD (divider + 0.5' y2));  		g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));  		g.SetSourceColor (GetLineColorBorder (highlighted' selected));  		g.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (divider >= x2) {  	g.MoveTo (new Cairo.PointD (divider + 0.5' y2));  	g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));  	g.SetSourceColor (GetLineColorBorder (highlighted' selected));  	g.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: if (divider >= x2) {  	g.MoveTo (new Cairo.PointD (divider + 0.5' y2));  	g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));  	g.SetSourceColor (GetLineColorBorder (highlighted' selected));  	g.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: g.MoveTo (new Cairo.PointD (divider + 0.5' y2));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawBackground,The following statement contains a magic number: g.LineTo (new Cairo.PointD (divider + 0.5' y2Bottom));  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: foreach (var task in errors.Select (t => t.Task)) {  	var column = (uint)(Math.Min (Math.Max (0' task.Column - 1)' metrics.Layout.LineChars.Length));  	int index = (int)metrics.Layout.TranslateToUTF8Index (column' ref curIndex' ref byteIndex);  	var pos = metrics.Layout.Layout.IndexToPos (index);  	var co = o + task.Column - 1;  	g.SetSourceColor (GetMarkerColor (false' metrics.SelectionStart <= co && co < metrics.SelectionEnd));  	g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3);  	g.RelLineTo (3' 3);  	g.RelLineTo (-6' 0);  	g.ClosePath ();  	g.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: foreach (var task in errors.Select (t => t.Task)) {  	var column = (uint)(Math.Min (Math.Max (0' task.Column - 1)' metrics.Layout.LineChars.Length));  	int index = (int)metrics.Layout.TranslateToUTF8Index (column' ref curIndex' ref byteIndex);  	var pos = metrics.Layout.Layout.IndexToPos (index);  	var co = o + task.Column - 1;  	g.SetSourceColor (GetMarkerColor (false' metrics.SelectionStart <= co && co < metrics.SelectionEnd));  	g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3);  	g.RelLineTo (3' 3);  	g.RelLineTo (-6' 0);  	g.ClosePath ();  	g.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: foreach (var task in errors.Select (t => t.Task)) {  	var column = (uint)(Math.Min (Math.Max (0' task.Column - 1)' metrics.Layout.LineChars.Length));  	int index = (int)metrics.Layout.TranslateToUTF8Index (column' ref curIndex' ref byteIndex);  	var pos = metrics.Layout.Layout.IndexToPos (index);  	var co = o + task.Column - 1;  	g.SetSourceColor (GetMarkerColor (false' metrics.SelectionStart <= co && co < metrics.SelectionEnd));  	g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3);  	g.RelLineTo (3' 3);  	g.RelLineTo (-6' 0);  	g.ClosePath ();  	g.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: foreach (var task in errors.Select (t => t.Task)) {  	var column = (uint)(Math.Min (Math.Max (0' task.Column - 1)' metrics.Layout.LineChars.Length));  	int index = (int)metrics.Layout.TranslateToUTF8Index (column' ref curIndex' ref byteIndex);  	var pos = metrics.Layout.Layout.IndexToPos (index);  	var co = o + task.Column - 1;  	g.SetSourceColor (GetMarkerColor (false' metrics.SelectionStart <= co && co < metrics.SelectionEnd));  	g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3);  	g.RelLineTo (3' 3);  	g.RelLineTo (-6' 0);  	g.ClosePath ();  	g.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.MoveTo (metrics.TextRenderStartPosition + editor.TextViewMargin.TextStartPosition + pos.X / Pango.Scale.PangoScale' y + editor.LineHeight - 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (3' 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (3' 3);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleTextMarker,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleTextMarker.cs,DrawErrorMarkers,The following statement contains a magic number: g.RelLineTo (-6' 0);  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The following statement contains a magic number: hoverTimeout = GLib.Timeout.Add (200' delegate {  	CurrentSelectedTextMarker = marker;  	editor.QueueDraw ();  	DestroyPopoverWindow ();  	if (marker.Layouts == null || marker.Layouts.Count < 2 && !isReduced)  		return false;  	popoverWindow = new MessageBubblePopoverWindow (this' marker);  	popoverWindow.ShowWindowShadow = true;  	popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top);  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The following statement contains a magic number: hoverTimeout = GLib.Timeout.Add (200' delegate {  	CurrentSelectedTextMarker = marker;  	editor.QueueDraw ();  	DestroyPopoverWindow ();  	if (marker.Layouts == null || marker.Layouts.Count < 2 && !isReduced)  		return false;  	popoverWindow = new MessageBubblePopoverWindow (this' marker);  	popoverWindow.ShowWindowShadow = true;  	popoverWindow.ShowPopup (editor' new Gdk.Rectangle ((int)(bubbleX + editor.TextViewMargin.XOffset)' (int)bubbleY' (int)bubbleWidth' (int)editor.LineHeight)' PopupPosition.Top);  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,StartHover,The following statement contains a magic number: if (marker.Layouts == null || marker.Layouts.Count < 2 && !isReduced)  	return false;  
Magic Number,MonoDevelop.SourceEditor,MessageBubbleCache,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\MessageBubbleCache.cs,HandleLeaveNotifyEvent,The following statement contains a magic number: leaveDestroyTimeout = GLib.Timeout.Add (100' delegate {  	DestroyPopoverWindow ();  	leaveDestroyTimeout = 0;  	return false;  });  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (SizeFunc != null) {  	var req = Math.Min (SizeFunc ()' textEditor.Allocation.Width - border * 2);  	if (req != wRequest) {  		wRequest = req;  		QueueResize ();  	}  }  else {  	if (Allocation.Width > textEditor.Allocation.Width - border * 2) {  		if (textEditor.Allocation.Width - border * 2 > 0) {  			QueueResize ();  		}  	}  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (SizeFunc != null) {  	var req = Math.Min (SizeFunc ()' textEditor.Allocation.Width - border * 2);  	if (req != wRequest) {  		wRequest = req;  		QueueResize ();  	}  }  else {  	if (Allocation.Width > textEditor.Allocation.Width - border * 2) {  		if (textEditor.Allocation.Width - border * 2 > 0) {  			QueueResize ();  		}  	}  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (SizeFunc != null) {  	var req = Math.Min (SizeFunc ()' textEditor.Allocation.Width - border * 2);  	if (req != wRequest) {  		wRequest = req;  		QueueResize ();  	}  }  else {  	if (Allocation.Width > textEditor.Allocation.Width - border * 2) {  		if (textEditor.Allocation.Width - border * 2 > 0) {  			QueueResize ();  		}  	}  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (Allocation.Width > textEditor.Allocation.Width - border * 2) {  	if (textEditor.Allocation.Width - border * 2 > 0) {  		QueueResize ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (Allocation.Width > textEditor.Allocation.Width - border * 2) {  	if (textEditor.Allocation.Width - border * 2 > 0) {  		QueueResize ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,HandleSizeAllocated,The following statement contains a magic number: if (textEditor.Allocation.Width - border * 2 > 0) {  	QueueResize ();  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,Resize,The following statement contains a magic number: textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8);  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,Resize,The following statement contains a magic number: textEditor.MoveTopLevelWidget (this' (textEditor.Allocation.Width - alloc.Width) / 2' textEditor.Allocation.Height - alloc.Height - 8);  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	cr.LineWidth = 1;  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	cr.SetSourceColor (textEditor.ColorStyle.NotificationText.Background);  	cr.Fill ();  	cr.RoundedRectangle (0' 0' Allocation.Width' Allocation.Height' 3);  	cr.SetSourceColor (textEditor.ColorStyle.NotificationText.Background);  	cr.FillPreserve ();  	cr.SetSourceColor (textEditor.ColorStyle.NotificationBorder.Color);  	cr.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,OverlayMessageWindow,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\OverlayMessageWindow.cs,OnExposeEvent,The following statement contains a magic number: cr.RoundedRectangle (0' 0' Allocation.Width' Allocation.Height' 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = requisition.Height = 16;  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: using (var cr = CairoHelper.Create (evnt.Window)) {  	DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,OnExposeEvent,The following statement contains a magic number: DrawCloseButton (cr' new Gdk.Point (Allocation.X + Allocation.Width / 2' Allocation.Y + Allocation.Height / 2)' hovered' 1.0' 0);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (hovered) {  	double radius = 6;  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (.6' .6' .6' opacity);  	context.Fill ();  	context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  	context.LineWidth = 2;  	context.MoveTo (center.X - 3' center.Y - 3);  	context.LineTo (center.X + 3' center.Y + 3);  	context.MoveTo (center.X - 3' center.Y + 3);  	context.LineTo (center.X + 3' center.Y - 3);  	context.Stroke ();  }  else {  	double lineColor = .63 - .1 * animationProgress;  	double fillColor = .74;  	double heightMod = Math.Max (0' 1.0 - animationProgress * 2);  	context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  	context.LineTo (center.X + 3' center.Y + 3 * heightMod);  	context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  	context.LineTo (center.X + 3' center.Y - 3 * heightMod);  	context.LineWidth = 2;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	if (animationProgress > 0.5) {  		double partialProg = (animationProgress - 0.5) * 2;  		context.MoveTo (center.X - 3' center.Y);  		context.LineTo (center.X + 3' center.Y);  		context.LineWidth = 2 - partialProg;  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  		double radius = partialProg * 3.5;  		// Background  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  		context.Fill ();  		// Inset shadow  		using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  			context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  			lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  			lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  			context.Pattern = lg;  			context.Stroke ();  		}  		// Outline  		context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  		context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  		context.Stroke ();  	}  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (.6' .6' .6' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.SetSourceRGBA (0.95' 0.95' 0.95' opacity);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2;  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y + 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y - 3 * heightMod);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2;  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: if (animationProgress > 0.5) {  	double partialProg = (animationProgress - 0.5) * 2;  	context.MoveTo (center.X - 3' center.Y);  	context.LineTo (center.X + 3' center.Y);  	context.LineWidth = 2 - partialProg;  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  	double radius = partialProg * 3.5;  	// Background  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (fillColor' fillColor' fillColor' opacity);  	context.Fill ();  	// Inset shadow  	using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  		context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  		lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  		lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  		context.Pattern = lg;  		context.Stroke ();  	}  	// Outline  	context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  	context.SetSourceRGBA (lineColor' lineColor' lineColor' opacity);  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.MoveTo (center.X - 3' center.Y);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineTo (center.X + 3' center.Y);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.LineWidth = 2 - partialProg;  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.Pattern = lg;  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.Pattern = lg;  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: using (var lg = new Cairo.LinearGradient (0' center.Y - 5' 0' center.Y)) {  	context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  	lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  	lg.AddColorStop (1' new Cairo.Color (0' 0' 0' 0));  	context.Pattern = lg;  	context.Stroke ();  }  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y + 1' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: lg.AddColorStop (0' new Cairo.Color (0' 0' 0' 0.2 * opacity));  
Magic Number,MonoDevelop.SourceEditor,HoverCloseButton,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\HoverCloseButton.cs,DrawCloseButton,The following statement contains a magic number: context.Arc (center.X' center.Y' radius' 0' Math.PI * 2);  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,BehaviorPanel,The following statement contains a magic number: indentationCombobox.InsertText (2' GettextCatalog.GetString ("Smart"));  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,BehaviorPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\BehaviorPanel.cs,BehaviorPanel,The following statement contains a magic number: controlLeftRightCombobox.InsertText (2' GettextCatalog.GetString ("SharpDevelop"));  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,ColorShemeEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\ColorShemeEditor.cs,ApplyStyle,The following statement contains a magic number: if (colorStore.GetIterFirst (out iter)) {  	do {  		var data = (ColorScheme.PropertyDecsription)colorStore.GetValue (iter' 1);  		var style = colorStore.GetValue (iter' 2);  		data.Info.SetValue (sheme' style' null);  	}  	while (colorStore.IterNext (ref iter));  }  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,ColorShemeEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\ColorShemeEditor.cs,ApplyStyle,The following statement contains a magic number: do {  	var data = (ColorScheme.PropertyDecsription)colorStore.GetValue (iter' 1);  	var style = colorStore.GetValue (iter' 2);  	data.Info.SetValue (sheme' style' null);  }  while (colorStore.IterNext (ref iter));  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,ColorShemeEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\ColorShemeEditor.cs,SetAmbientColor,The following statement contains a magic number: colorStore.SetValue (iter' 2' newStyle);  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,ColorShemeEditor,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\ColorShemeEditor.cs,SetChunkStyle,The following statement contains a magic number: colorStore.SetValue (iter' 2' newStyle);  
Magic Number,MonoDevelop.SourceEditor.OptionPanels,CompletionCharactersPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.OptionPanels\CompletionCharactersPanel.cs,Initialize,The following statement contains a magic number: this.HeightRequest = 400;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,OnButtonPressEvent,The following statement contains a magic number: if (evnt.Button == 3) {  	IdeApp.CommandService.ShowContextMenu (this' evnt' "/MonoDevelop/SourceEditor2/ContextMenu/Scrollbar");  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskStrip,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskStrip.cs,GotoBottom,The following statement contains a magic number: VAdjustment.Value = Math.Max (VAdjustment.Lower' VAdjustment.Upper - VAdjustment.PageSize / 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (TextEditor.HighlightSearchPattern) {  	hoverOverIndicator = false;  	if (evnt.Y < h)  		this.TooltipText = string.Format (GettextCatalog.GetPluralString ("{0} match"' "{0} matches"' TextEditor.TextViewMargin.SearchResultMatchCount)' TextEditor.TextViewMargin.SearchResultMatchCount);  }  else {  	hoverOverIndicator = evnt.Y < h;  	if (hoverOverIndicator) {  		int errors = 0' warnings = 0' hints = 0' suggestions = 0;  		foreach (var task in AllTasks) {  			switch (task.Severity) {  			case Severity.Error:  				errors++;  				break;  			case Severity.Warning:  				warnings++;  				break;  			case Severity.Hint:  				hints++;  				break;  			case Severity.Suggestion:  				suggestions++;  				break;  			}  		}  		string text = null;  		if (errors == 0 && warnings == 0) {  			text = GettextCatalog.GetString ("No errors or warnings");  		}  		else if (errors == 0) {  			text = string.Format (GettextCatalog.GetPluralString ("{0} warning"' "{0} warnings"' warnings)' warnings);  		}  		else if (warnings == 0) {  			text = string.Format (GettextCatalog.GetPluralString ("{0} error"' "{0} errors"' errors)' errors);  		}  		else {  			text = string.Format (GettextCatalog.GetString ("{0} errors and {1} warnings")' errors' warnings);  		}  		if (errors > 0) {  			text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next error");  			currentHoverMode = QuickTaskStrip.HoverMode.NextError;  		}  		else if (warnings > 0) {  			text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next warning");  			currentHoverMode = QuickTaskStrip.HoverMode.NextWarning;  		}  		else if (warnings + hints > 0) {  			text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next message");  			currentHoverMode = QuickTaskStrip.HoverMode.NextMessage;  		}  		TooltipText = text;  	}  	else {  		//					TextEditorData editorData = TextEditor.GetTextEditorData ();  		foreach (var task in AllTasks) {  			double y = GetYPosition (task.Location.Line);  			if (Math.Abs (y - evnt.Y) < 3) {  				hoverTask = task;  			}  		}  		base.TooltipText = hoverTask != null ? hoverTask.Description : null;  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (hoverOverIndicator) {  	int errors = 0' warnings = 0' hints = 0' suggestions = 0;  	foreach (var task in AllTasks) {  		switch (task.Severity) {  		case Severity.Error:  			errors++;  			break;  		case Severity.Warning:  			warnings++;  			break;  		case Severity.Hint:  			hints++;  			break;  		case Severity.Suggestion:  			suggestions++;  			break;  		}  	}  	string text = null;  	if (errors == 0 && warnings == 0) {  		text = GettextCatalog.GetString ("No errors or warnings");  	}  	else if (errors == 0) {  		text = string.Format (GettextCatalog.GetPluralString ("{0} warning"' "{0} warnings"' warnings)' warnings);  	}  	else if (warnings == 0) {  		text = string.Format (GettextCatalog.GetPluralString ("{0} error"' "{0} errors"' errors)' errors);  	}  	else {  		text = string.Format (GettextCatalog.GetString ("{0} errors and {1} warnings")' errors' warnings);  	}  	if (errors > 0) {  		text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next error");  		currentHoverMode = QuickTaskStrip.HoverMode.NextError;  	}  	else if (warnings > 0) {  		text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next warning");  		currentHoverMode = QuickTaskStrip.HoverMode.NextWarning;  	}  	else if (warnings + hints > 0) {  		text += Environment.NewLine + GettextCatalog.GetString ("Click to navigate to the next message");  		currentHoverMode = QuickTaskStrip.HoverMode.NextMessage;  	}  	TooltipText = text;  }  else {  	//					TextEditorData editorData = TextEditor.GetTextEditorData ();  	foreach (var task in AllTasks) {  		double y = GetYPosition (task.Location.Line);  		if (Math.Abs (y - evnt.Y) < 3) {  			hoverTask = task;  		}  	}  	base.TooltipText = hoverTask != null ? hoverTask.Description : null;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: foreach (var task in AllTasks) {  	double y = GetYPosition (task.Location.Line);  	if (Math.Abs (y - evnt.Y) < 3) {  		hoverTask = task;  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (Math.Abs (y - evnt.Y) < 3) {  	hoverTask = task;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (button == 0 && evnt.State.HasFlag (ModifierType.ShiftMask)) {  	int line = YToLine (evnt.Y);  	line = Math.Max (1' line - 2);  	int lastLine = Math.Min (TextEditor.LineCount' line + 5);  	var start = TextEditor.GetLine (line);  	var end = TextEditor.GetLine (lastLine);  	if (start == null || end == null) {  		return base.OnMotionNotifyEvent (evnt);  	}  	var showSegment = new TextSegment (start.Offset' end.Offset + end.Length - start.Offset);  	if (previewWindow != null) {  		previewWindow.SetSegment (showSegment' false);  		PositionPreviewWindow ((int)evnt.Y);  	}  	else {  		var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  		previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  	}  }  else {  	RemovePreviewPopupTimeout ();  	DestroyPreviewWindow ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (button == 0 && evnt.State.HasFlag (ModifierType.ShiftMask)) {  	int line = YToLine (evnt.Y);  	line = Math.Max (1' line - 2);  	int lastLine = Math.Min (TextEditor.LineCount' line + 5);  	var start = TextEditor.GetLine (line);  	var end = TextEditor.GetLine (lastLine);  	if (start == null || end == null) {  		return base.OnMotionNotifyEvent (evnt);  	}  	var showSegment = new TextSegment (start.Offset' end.Offset + end.Length - start.Offset);  	if (previewWindow != null) {  		previewWindow.SetSegment (showSegment' false);  		PositionPreviewWindow ((int)evnt.Y);  	}  	else {  		var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  		previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  	}  }  else {  	RemovePreviewPopupTimeout ();  	DestroyPreviewWindow ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (button == 0 && evnt.State.HasFlag (ModifierType.ShiftMask)) {  	int line = YToLine (evnt.Y);  	line = Math.Max (1' line - 2);  	int lastLine = Math.Min (TextEditor.LineCount' line + 5);  	var start = TextEditor.GetLine (line);  	var end = TextEditor.GetLine (lastLine);  	if (start == null || end == null) {  		return base.OnMotionNotifyEvent (evnt);  	}  	var showSegment = new TextSegment (start.Offset' end.Offset + end.Length - start.Offset);  	if (previewWindow != null) {  		previewWindow.SetSegment (showSegment' false);  		PositionPreviewWindow ((int)evnt.Y);  	}  	else {  		var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  		previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  	}  }  else {  	RemovePreviewPopupTimeout ();  	DestroyPreviewWindow ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (button == 0 && evnt.State.HasFlag (ModifierType.ShiftMask)) {  	int line = YToLine (evnt.Y);  	line = Math.Max (1' line - 2);  	int lastLine = Math.Min (TextEditor.LineCount' line + 5);  	var start = TextEditor.GetLine (line);  	var end = TextEditor.GetLine (lastLine);  	if (start == null || end == null) {  		return base.OnMotionNotifyEvent (evnt);  	}  	var showSegment = new TextSegment (start.Offset' end.Offset + end.Length - start.Offset);  	if (previewWindow != null) {  		previewWindow.SetSegment (showSegment' false);  		PositionPreviewWindow ((int)evnt.Y);  	}  	else {  		var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  		previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  	}  }  else {  	RemovePreviewPopupTimeout ();  	DestroyPreviewWindow ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (button == 0 && evnt.State.HasFlag (ModifierType.ShiftMask)) {  	int line = YToLine (evnt.Y);  	line = Math.Max (1' line - 2);  	int lastLine = Math.Min (TextEditor.LineCount' line + 5);  	var start = TextEditor.GetLine (line);  	var end = TextEditor.GetLine (lastLine);  	if (start == null || end == null) {  		return base.OnMotionNotifyEvent (evnt);  	}  	var showSegment = new TextSegment (start.Offset' end.Offset + end.Length - start.Offset);  	if (previewWindow != null) {  		previewWindow.SetSegment (showSegment' false);  		PositionPreviewWindow ((int)evnt.Y);  	}  	else {  		var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  		previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  	}  }  else {  	RemovePreviewPopupTimeout ();  	DestroyPreviewWindow ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: line = Math.Max (1' line - 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (previewWindow != null) {  	previewWindow.SetSegment (showSegment' false);  	PositionPreviewWindow ((int)evnt.Y);  }  else {  	var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  	previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (previewWindow != null) {  	previewWindow.SetSegment (showSegment' false);  	PositionPreviewWindow ((int)evnt.Y);  }  else {  	var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  	previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: if (previewWindow != null) {  	previewWindow.SetSegment (showSegment' false);  	PositionPreviewWindow ((int)evnt.Y);  }  else {  	var popup = new PreviewPopup (this' showSegment' TextEditor.Allocation.Width * 4 / 7' (int)evnt.Y);  	previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following statement contains a magic number: previewPopupTimeout = GLib.Timeout.Add (450' new GLib.TimeoutHandler (popup.Run));  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,PositionPreviewWindow,The following statement contains a magic number: if (x < geometry.Left)  	x = ox + parentStrip.Allocation.Width + 4;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,PositionPreviewWindow,The following statement contains a magic number: x = ox + parentStrip.Allocation.Width + 4;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawIndicator,The following statement contains a magic number: cr.Translate (1 + (Allocation.Width - pixbuf.Width) / 2' 1);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: if (diameter % 2 == 0) {  	x1 += 0.5;  	y1 += 0.5;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: if (diameter % 2 == 0) {  	x1 += 0.5;  	y1 += 0.5;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: if (diameter % 2 == 0) {  	x1 += 0.5;  	y1 += 0.5;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: x1 += 0.5;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: y1 += 0.5;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: cr.Arc (x1' y1' diameter / 2d' 0' 2 * Math.PI);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: darkColor.L *= 0.5;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: if (flatStyle) {  	using (var pattern = new Cairo.SolidPattern (TextEditor.ColorStyle.SearchResultMain.Color)) {  		cr.SetSource (pattern);  		cr.FillPreserve ();  	}  }  else {  	using (var pattern = new Cairo.RadialGradient (x1' y1' Allocation.Width / 2' x1 - Allocation.Width' y1 - Allocation.Width' Allocation.Width)) {  		pattern.AddColorStop (0' darkColor);  		pattern.AddColorStop (1' TextEditor.ColorStyle.SearchResultMain.Color);  		cr.SetSource (pattern);  		cr.FillPreserve ();  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchIndicator,The following statement contains a magic number: using (var pattern = new Cairo.RadialGradient (x1' y1' Allocation.Width / 2' x1 - Allocation.Width' y1 - Allocation.Width' Allocation.Width)) {  	pattern.AddColorStop (0' darkColor);  	pattern.AddColorStop (1' TextEditor.ColorStyle.SearchResultMain.Color);  	cr.SetSource (pattern);  	cr.FillPreserve ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnSizeRequested,The following statement contains a magic number: requisition.Width = 17;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawCaret,The following statement contains a magic number: cr.MoveTo (0' y - 4);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawCaret,The following statement contains a magic number: cr.LineTo (7' y);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawCaret,The following statement contains a magic number: cr.LineTo (0' y + 4);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: foreach (var task in AllTasks) {  	double y = GetYPosition (task.Location.Line);  	cr.SetSourceColor (GetBarColor (task.Severity));  	cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  	cr.Fill ();  	switch (task.Severity) {  	case Severity.Error:  		severity = Severity.Error;  		break;  	case Severity.Warning:  		if (severity == Severity.None)  			severity = Severity.Warning;  		break;  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: foreach (var task in AllTasks) {  	double y = GetYPosition (task.Location.Line);  	cr.SetSourceColor (GetBarColor (task.Severity));  	cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  	cr.Fill ();  	switch (task.Severity) {  	case Severity.Error:  		severity = Severity.Error;  		break;  	case Severity.Warning:  		if (severity == Severity.None)  			severity = Severity.Warning;  		break;  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following statement contains a magic number: cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: cr.MoveTo (0.5' 0);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: cr.LineTo (0.5' Allocation.Height);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: if (TextEditor.ColorStyle != null) {  	var col = (HslColor)TextEditor.ColorStyle.PlainText.Background;  	if (!flatStyle) {  		col.L *= 0.88;  	}  	cr.SetSourceColor (col);  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: if (!flatStyle) {  	col.L *= 0.88;  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawLeftBorder,The following statement contains a magic number: col.L *= 0.88;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: if (flatStyle) {  	cr.Rectangle (barPadding' barY' barWidth' barH);  }  else {  	MonoDevelop.Components.CairoExtensions.RoundedRectangle (cr' barPadding' barY' barWidth' barH' barWidth / 2);  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: MonoDevelop.Components.CairoExtensions.RoundedRectangle (cr' barPadding' barY' barWidth' barH' barWidth / 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: color.L = flatStyle ? 0.7 : 0.5;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: color.L = flatStyle ? 0.7 : 0.5;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawBar,The following statement contains a magic number: c.A = 0.6;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: foreach (var region in TextEditor.TextViewMargin.SearchResults) {  	int line = TextEditor.OffsetToLineNumber (region.Offset);  	double y = GetYPosition (line);  	bool isMainSelection = false;  	if (!TextEditor.TextViewMargin.MainSearchResult.IsInvalid)  		isMainSelection = region.Offset == TextEditor.TextViewMargin.MainSearchResult.Offset;  	cr.SetSourceColor (isMainSelection ? TextEditor.ColorStyle.SearchResultMain.Color : TextEditor.ColorStyle.SearchResult.Color);  	cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: foreach (var region in TextEditor.TextViewMargin.SearchResults) {  	int line = TextEditor.OffsetToLineNumber (region.Offset);  	double y = GetYPosition (line);  	bool isMainSelection = false;  	if (!TextEditor.TextViewMargin.MainSearchResult.IsInvalid)  		isMainSelection = region.Offset == TextEditor.TextViewMargin.MainSearchResult.Offset;  	cr.SetSourceColor (isMainSelection ? TextEditor.ColorStyle.SearchResultMain.Color : TextEditor.ColorStyle.SearchResult.Color);  	cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  	cr.Fill ();  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawSearchResults,The following statement contains a magic number: cr.Rectangle (barPadding' Math.Round (y) - 1' Allocation.Width - barPadding * 2' 2);  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	cr.LineWidth = 1;  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	if (TextEditor.ColorStyle != null) {  		var col = (HslColor)TextEditor.ColorStyle.PlainText.Background;  		col.L *= 0.95;  		if (flatStyle) {  			using (var pattern = new Cairo.SolidPattern (col)) {  				cr.SetSource (pattern);  			}  		}  		else {  			using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  				grad.AddColorStop (0' col);  				grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  				grad.AddColorStop (1' col);  				cr.SetSource (grad);  			}  		}  	}  	cr.Fill ();  	/* 				cr.Color = (HslColor)Style.Dark (State); 				cr.MoveTo (-0.5' 0.5); 				cr.LineTo (Allocation.Width' 0.5);  				cr.MoveTo (-0.5' Allocation.Height - 0.5); 				cr.LineTo (Allocation.Width' Allocation.Height - 0.5); 				cr.Stroke ();*/if (TextEditor == null)  		return true;  	if (TextEditor.HighlightSearchPattern) {  		DrawSearchResults (cr);  		DrawSearchIndicator (cr);  	}  	else {  		if (!Debugger.DebuggingService.IsDebugging) {  			var severity = DrawQuickTasks (cr);  			DrawIndicator (cr' severity);  		}  	}  	DrawCaret (cr);  	DrawBar (cr);  	DrawLeftBorder (cr);  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: using (Cairo.Context cr = Gdk.CairoHelper.Create (e.Window)) {  	cr.LineWidth = 1;  	cr.Rectangle (0' 0' Allocation.Width' Allocation.Height);  	if (TextEditor.ColorStyle != null) {  		var col = (HslColor)TextEditor.ColorStyle.PlainText.Background;  		col.L *= 0.95;  		if (flatStyle) {  			using (var pattern = new Cairo.SolidPattern (col)) {  				cr.SetSource (pattern);  			}  		}  		else {  			using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  				grad.AddColorStop (0' col);  				grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  				grad.AddColorStop (1' col);  				cr.SetSource (grad);  			}  		}  	}  	cr.Fill ();  	/* 				cr.Color = (HslColor)Style.Dark (State); 				cr.MoveTo (-0.5' 0.5); 				cr.LineTo (Allocation.Width' 0.5);  				cr.MoveTo (-0.5' Allocation.Height - 0.5); 				cr.LineTo (Allocation.Width' Allocation.Height - 0.5); 				cr.Stroke ();*/if (TextEditor == null)  		return true;  	if (TextEditor.HighlightSearchPattern) {  		DrawSearchResults (cr);  		DrawSearchIndicator (cr);  	}  	else {  		if (!Debugger.DebuggingService.IsDebugging) {  			var severity = DrawQuickTasks (cr);  			DrawIndicator (cr' severity);  		}  	}  	DrawCaret (cr);  	DrawBar (cr);  	DrawLeftBorder (cr);  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: if (TextEditor.ColorStyle != null) {  	var col = (HslColor)TextEditor.ColorStyle.PlainText.Background;  	col.L *= 0.95;  	if (flatStyle) {  		using (var pattern = new Cairo.SolidPattern (col)) {  			cr.SetSource (pattern);  		}  	}  	else {  		using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  			grad.AddColorStop (0' col);  			grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  			grad.AddColorStop (1' col);  			cr.SetSource (grad);  		}  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: if (TextEditor.ColorStyle != null) {  	var col = (HslColor)TextEditor.ColorStyle.PlainText.Background;  	col.L *= 0.95;  	if (flatStyle) {  		using (var pattern = new Cairo.SolidPattern (col)) {  			cr.SetSource (pattern);  		}  	}  	else {  		using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  			grad.AddColorStop (0' col);  			grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  			grad.AddColorStop (1' col);  			cr.SetSource (grad);  		}  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: col.L *= 0.95;  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: if (flatStyle) {  	using (var pattern = new Cairo.SolidPattern (col)) {  		cr.SetSource (pattern);  	}  }  else {  	using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  		grad.AddColorStop (0' col);  		grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  		grad.AddColorStop (1' col);  		cr.SetSource (grad);  	}  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: using (var grad = new Cairo.LinearGradient (0' 0' Allocation.Width' 0)) {  	grad.AddColorStop (0' col);  	grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  	grad.AddColorStop (1' col);  	cr.SetSource (grad);  }  
Magic Number,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnExposeEvent,The following statement contains a magic number: grad.AddColorStop (0.7' TextEditor.ColorStyle.PlainText.Background);  
Missing Default,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,UpdatePreferences,The following switch statement is missing a default case: switch (args.Key) {  case "TabIsReindent":  	this.TabIsReindent = (bool)args.NewValue;  	break;  case "EnableSemanticHighlighting":  	this.EnableSemanticHighlighting = (bool)args.NewValue;  	break;  case "AutoInsertMatchingBracket":  	this.AutoInsertMatchingBracket = (bool)args.NewValue;  	break;  case "UnderlineErrors":  	this.UnderlineErrors = (bool)args.NewValue;  	break;  case "IndentStyle":  	if (args.NewValue == null) {  		LoggingService.LogWarning ("tried to set indent style == null");  	}  	else if (!(args.NewValue is IndentStyle)) {  		LoggingService.LogWarning ("tried to set indent style to " + args.NewValue + " which isn't from type IndentStyle instead it is from:" + args.NewValue.GetType ());  		this.IndentStyle = (IndentStyle)Enum.Parse (typeof(IndentStyle)' args.NewValue.ToString ());  	}  	else  		this.IndentStyle = (IndentStyle)args.NewValue;  	break;  case "ShowLineNumberMargin":  	base.ShowLineNumberMargin = (bool)args.NewValue;  	break;  case "ShowFoldMargin":  	base.ShowFoldMargin = (bool)args.NewValue;  	break;  case "HighlightCaretLine":  	base.HighlightCaretLine = (bool)args.NewValue;  	break;  case "EnableSyntaxHighlighting":  	base.EnableSyntaxHighlighting = (bool)args.NewValue;  	break;  case "HighlightMatchingBracket":  	base.HighlightMatchingBracket = (bool)args.NewValue;  	break;  case "ShowRuler":  	base.ShowRuler = (bool)args.NewValue;  	break;  case "FontName":  	base.FontName = (string)args.NewValue;  	break;  case "GutterFontName":  	base.GutterFontName = (string)args.NewValue;  	break;  case "ColorScheme":  	base.ColorScheme = (string)args.NewValue;  	break;  case "DefaultRegionsFolding":  	this.DefaultRegionsFolding = (bool)args.NewValue;  	break;  case "DefaultCommentFolding":  	this.DefaultCommentFolding = (bool)args.NewValue;  	break;  case "UseViModes":  	this.UseViModes = (bool)args.NewValue;  	break;  case "OnTheFlyFormatting":  	this.OnTheFlyFormatting = (bool)args.NewValue;  	break;  case "ControlLeftRightMode":  	this.ControlLeftRightMode = (ControlLeftRightMode)args.NewValue;  	break;  case "EnableAnimations":  	base.EnableAnimations = (bool)args.NewValue;  	break;  case "UseAntiAliasing":  	base.UseAntiAliasing = (bool)args.NewValue;  	break;  case "DrawIndentationMarkers":  	base.DrawIndentationMarkers = (bool)args.NewValue;  	break;  case "EnableQuickDiff":  	base.EnableQuickDiff = (bool)args.NewValue;  	break;  case "GenerateFormattingUndoStep":  	base.GenerateFormattingUndoStep = (bool)args.NewValue;  	break;  }  
Missing Default,MonoDevelop.SourceEditor,DefaultSourceEditorOptions,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorOptions.cs,SetWordFindStrategy,The following switch statement is missing a default case: switch (ControlLeftRightMode) {  case ControlLeftRightMode.MonoDevelop:  	this.wordFindStrategy = new EmacsWordFindStrategy (true);  	break;  case ControlLeftRightMode.Emacs:  	this.wordFindStrategy = new EmacsWordFindStrategy (false);  	break;  case ControlLeftRightMode.SharpDevelop:  	this.wordFindStrategy = new SharpDevelopWordFindStrategy ();  	break;  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following switch statement is missing a default case: switch (widgetExtension.HorizontalAlignment) {  case HorizontalAlignment.LineLeft:  	x = (int)widget.TextEditor.TextViewMargin.XOffset;  	break;  case HorizontalAlignment.LineRight:  	x = lineStart + lw + 4;  	break;  case HorizontalAlignment.LineCenter:  	x = lineStart + (lw - size.Width) / 2;  	if (x < lineStart)  		x = lineStart;  	break;  case HorizontalAlignment.Left:  	x = 0;  	break;  case HorizontalAlignment.Right:  	break;  case HorizontalAlignment.Center:  	break;  case HorizontalAlignment.ViewLeft:  	break;  case HorizontalAlignment.ViewRight:  	break;  case HorizontalAlignment.ViewCenter:  	break;  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorView,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorView.cs,CalcWidgetPosition,The following switch statement is missing a default case: switch (widgetExtension.VerticalAlignment) {  case VerticalAlignment.LineTop:  	break;  // the default  case VerticalAlignment.LineBottom:  	y += lh - size.Height;  	break;  case VerticalAlignment.LineCenter:  	y = y + (lh - size.Height) / 2;  	break;  case VerticalAlignment.AboveLine:  	y -= size.Height;  	break;  case VerticalAlignment.BelowLine:  	y += lh;  	break;  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,HandleParseInformationUpdaterWorkerThreadDoWork,The following switch statement is missing a default case: switch (region.Type) {  case FoldType.Member:  	type = FoldingType.TypeMember;  	break;  case FoldType.Type:  	type = FoldingType.TypeDefinition;  	break;  case FoldType.UserRegion:  	type = FoldingType.Region;  	setFolded = options.DefaultRegionsFolding;  	folded = true;  	break;  case FoldType.Comment:  	type = FoldingType.Comment;  	setFolded = options.DefaultCommentFolding;  	folded = true;  	break;  case FoldType.CommentInsideMember:  	type = FoldingType.Comment;  	setFolded = options.DefaultCommentFolding;  	folded = false;  	break;  case FoldType.Undefined:  	setFolded = true;  	folded = region.IsFoldedByDefault;  	break;  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,GetEolString,The following switch statement is missing a default case: switch (detectedEol) {  case "\n":  	return "UNIX";  case "\r\n":  	return "Windows";  case "\r":  	return "Mac";  case "?":  	return "mixed";  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following switch statement is missing a default case: switch (combo.Active) {  case 0:  	ConvertLineEndings ();  	view.WorkbenchWindow.ShowNotification = false;  	view.Save (fileName' view.SourceEncoding);  	break;  case 1:  	FileRegistry.ConvertLineEndingsInAllFiles ();  	break;  case 2:  	UseIncorrectMarkers = true;  	view.WorkbenchWindow.ShowNotification = false;  	break;  case 3:  	FileRegistry.IgnoreLineEndingsInAllFiles ();  	break;  }  
Missing Default,MonoDevelop.SourceEditor,SourceEditorWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SourceEditorWidget.cs,ShowIncorretEolMarkers,The following switch statement is missing a default case: switch (combo.Active) {  case 0:  	ConvertLineEndings ();  	view.WorkbenchWindow.ShowNotification = false;  	view.Save (fileName' view.SourceEncoding);  	break;  case 1:  	UseIncorrectMarkers = true;  	view.WorkbenchWindow.ShowNotification = false;  	break;  }  
Missing Default,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,GetInsertAction,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.BackSpace:  	return EditActions.AdvancedBackspace;  case Gdk.Key.Tab:  	return tabAction.Action;  }  
Missing Default,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,RunExCommand,The following switch statement is missing a default case: switch (command [2]) {  case 'n':  	// :cn - jump to next error  	IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowNext);  	return string.Empty;  case 'N':  case 'p':  	// :c[pN] - jump to previous error  	IdeApp.CommandService.DispatchCommand (MonoDevelop.Ide.Commands.ViewCommands.ShowPrevious);  	return string.Empty;  }  
Missing Default,MonoDevelop.SourceEditor,IdeViMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\IdeViMode.cs,HandleKeypress,The following switch statement is missing a default case: switch (key) {  case Gdk.Key.bracketright:  	// ctrl-] => Go to declaration	  	// HACK: since the SourceEditor can't link the Refactoring addin the command is provided as string.  	IdeApp.CommandService.DispatchCommand ("MonoDevelop.Refactoring.RefactoryCommands.GotoDeclaration");  	return;  }  
Missing Default,MonoDevelop.SourceEditor,SyntaxModeService,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\SyntaxModeService.cs,SyntaxModeService,The following switch statement is missing a default case: switch (args.Change) {  case ExtensionChange.Add:  	//					Console.WriteLine ("INstall:" + syntaxModeCodon.MimeTypes);  	Mono.TextEditor.Highlighting.SyntaxModeService.InstallSyntaxMode (syntaxModeCodon.MimeTypes' new SyntaxModeProvider (d =>  {  		var result = syntaxModeCodon.SyntaxMode;  		result.Document = d;  		return result;  	}));  	break;  }  
Missing Default,MonoDevelop.SourceEditor,DynamicAbbrevHandler,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor\DynamicAbbrevHandler.cs,Run,The following switch statement is missing a default case: switch (curState) {  case AbbrevState.SearchBackward:  	while (offset > 0) {  		if (IsMatchAt (view' offset' abbrevWord)) {  			int endOffset = SearchEndPos (offset' view);  			string curWord = view.TextEditor.Document.GetTextBetween (offset' endOffset);  			if (foundWords.Contains (curWord)) {  				offset--;  				continue;  			}  			foundWords.Add (curWord);  			ReplaceWord (view' curWord);  			lastStartOffset = offset - 1;  			return;  		}  		offset--;  	}  	offset = view.TextEditor.Caret.Offset;  	curState = AbbrevState.SearchForward;  	goto case AbbrevState.SearchForward;  case AbbrevState.SearchForward:  	while (offset < view.TextEditor.Document.TextLength) {  		if (IsMatchAt (view' offset' abbrevWord)) {  			int endOffset = SearchEndPos (offset' view);  			string curWord = view.TextEditor.Document.GetTextBetween (offset' endOffset);  			if (foundWords.Contains (curWord)) {  				offset++;  				continue;  			}  			foundWords.Add (curWord);  			ReplaceWord (view' curWord);  			lastStartOffset = offset + 1;  			return;  		}  		offset++;  	}  	curState = AbbrevState.SearchOtherBuffers;  	goto case AbbrevState.SearchOtherBuffers;  case AbbrevState.SearchOtherBuffers:  	foreach (Document curDoc in IdeApp.Workbench.Documents) {  		SourceEditorView otherView = curDoc.GetContent<SourceEditorView> ();  		if (curDoc == doc || otherView == null || otherView.Document == null)  			continue;  		for (int i = 0; i < otherView.Document.TextLength; i++) {  			if (IsMatchAt (otherView' i' abbrevWord)) {  				int endOffset = SearchEndPos (i' otherView);  				string curWord = otherView.TextEditor.Document.GetTextBetween (i' endOffset);  				if (foundWords.Contains (curWord))  					continue;  				foundWords.Add (curWord);  			}  		}  	}  	curState = AbbrevState.CycleThroughFoundWords;  	goto case AbbrevState.CycleThroughFoundWords;  case AbbrevState.CycleThroughFoundWords:  	int index = foundWords.IndexOf (view.TextEditor.Document.GetTextAt (lastInsertPos' view.TextEditor.Caret.Offset - lastInsertPos));  	if (index < 0)  		break;  	startOffset = offset;  	offset = startOffset + foundWords [index].Length;  	index = (index + foundWords.Count + 1) % foundWords.Count;  	ReplaceWord (view' foundWords [index]);  	break;  }  
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,OnMotionNotifyEvent,The following switch statement is missing a default case: switch (task.Severity) {  case Severity.Error:  	errors++;  	break;  case Severity.Warning:  	warnings++;  	break;  case Severity.Hint:  	hints++;  	break;  case Severity.Suggestion:  	suggestions++;  	break;  }  
Missing Default,MonoDevelop.SourceEditor.QuickTasks,QuickTaskOverviewMode,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.SourceEditor2\MonoDevelop.SourceEditor.QuickTasks\QuickTaskOverviewMode.cs,DrawQuickTasks,The following switch statement is missing a default case: switch (task.Severity) {  case Severity.Error:  	severity = Severity.Error;  	break;  case Severity.Warning:  	if (severity == Severity.None)  		severity = Severity.Warning;  	break;  }  
