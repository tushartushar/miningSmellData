Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetDataType,The method has 106 lines of code.
Long Method,MonoDevelop.Database.Sql.MySql,MySqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDialect.cs,IsReservedWord,The method has 229 lines of code.
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetDatabases,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,Cyclomatic complexity of the method is 21
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViews,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableConstraints,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetUsers,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetDataType,Cyclomatic complexity of the method is 92
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableCreateStatement,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetConstraintString,Cyclomatic complexity of the method is 26
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTriggerCreateStatement,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Database.Sql.MySql,MySqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDialect.cs,IsReservedWord,Cyclomatic complexity of the method is 222
Long Parameter List,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,Generate,The method has 16 parameters.
Long Parameter List,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,Generate,The method has 14 parameters.
Long Statement,MonoDevelop.Database.Sql.MySql,MySqlConnectionProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlConnectionProvider.cs,CreateConnection,The length of the statement  "				connStr = String.Format ("Server={0};Port={1};Database={2};Uid={3};Pwd={4};"' settings.Server' settings.Port' settings.Database' settings.Username' settings.Password); " is 167.
Long Statement,MonoDevelop.Database.Sql.MySql,MySqlConnectionProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlConnectionProvider.cs,CreateConnection,The length of the statement  "				connStr = String.Format ("Server={0};Database={2};Uid={3};Pwd={3};"' settings.Server' settings.Database' settings.Username' settings.Password); " is 143.
Long Statement,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,The length of the statement  "		using (IDbCommand command = conn.CreateCommand (string.Concat ("SELECT param_list FROM mysql.proc where name = '"' procedure.Name' "'"))) { " is 139.
Long Statement,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,Generate,The length of the statement  "	return SqlMetalServices.Generate (Provider' connection' outputType' outputFile' language' style' defaultNamespace' entityBase' entityAttr' membersAttr' generateTypes' culture' generateSchema' generateTimestamp' overrideEqualAndHash' extractProcedures' pluralize); " is 263.
Long Statement,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,Generate,The length of the statement  "	return SqlMetalServices.Generate (Provider' connection' outputType' outputFile' defaultNamespace' entityBase' entityAttr' membersAttr' generateTypes' culture' generateSchema' generateTimestamp' overrideEqualAndHash' extractProcedures' pluralize); " is 246.
Virtual Method Call from Constructor,MonoDevelop.Database.Sql.MySql,MySqlCreateDatabaseDialog,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\Dialogs\MySqlCreateDatabaseDialog.cs,MySqlCreateDatabaseDialog,The constructor "MySqlCreateDatabaseDialog" calls a virtual method "ValidateFields".
Empty Catch Block,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableConstraints,The method has an empty catch block.
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,MySqlSchemaProvider,The following statement contains a magic number: if (connectionPool.HasVersion && connectionPool.DatabaseVersion.Major > 4) {  	AddSupportedSchemaActions (SchemaType.Procedure' SchemaActions.All);  	AddSupportedSchemaActions (SchemaType.ProcedureParameter' SchemaActions.Schema);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	// Second Connection - MySql Connector doesn't allow more than 1 datareader by connection.  	IPooledDbConnection conn2 = connectionPool.Request ();  	using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  		try {  			if (GetMainVersion (command) >= 5) {  				//in mysql 5.x we can use an sql query to provide the comment  				command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = r.GetString (1);  						table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  			else {  				//use the default command for mysql 4.x and 3.23  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = command.Connection.Database;  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  			conn2.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	// Second Connection - MySql Connector doesn't allow more than 1 datareader by connection.  	IPooledDbConnection conn2 = connectionPool.Request ();  	using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  		try {  			if (GetMainVersion (command) >= 5) {  				//in mysql 5.x we can use an sql query to provide the comment  				command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = r.GetString (1);  						table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  			else {  				//use the default command for mysql 4.x and 3.23  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = command.Connection.Database;  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  			conn2.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	// Second Connection - MySql Connector doesn't allow more than 1 datareader by connection.  	IPooledDbConnection conn2 = connectionPool.Request ();  	using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  		try {  			if (GetMainVersion (command) >= 5) {  				//in mysql 5.x we can use an sql query to provide the comment  				command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = r.GetString (1);  						table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  			else {  				//use the default command for mysql 4.x and 3.23  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						TableSchema table = new TableSchema (this);  						table.Name = r.GetString (0);  						table.SchemaName = command.Connection.Database;  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								table.Definition = r2.GetString (1);  							}  						}  						tables.Add (table);  					}  					r.Close ();  				}  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  			conn2.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  	try {  		if (GetMainVersion (command) >= 5) {  			//in mysql 5.x we can use an sql query to provide the comment  			command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = r.GetString (1);  					table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  		else {  			//use the default command for mysql 4.x and 3.23  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = command.Connection.Database;  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  	try {  		if (GetMainVersion (command) >= 5) {  			//in mysql 5.x we can use an sql query to provide the comment  			command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = r.GetString (1);  					table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  		else {  			//use the default command for mysql 4.x and 3.23  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = command.Connection.Database;  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand ("SHOW TABLES;")) {  	try {  		if (GetMainVersion (command) >= 5) {  			//in mysql 5.x we can use an sql query to provide the comment  			command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = r.GetString (1);  					table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  		else {  			//use the default command for mysql 4.x and 3.23  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					TableSchema table = new TableSchema (this);  					table.Name = r.GetString (0);  					table.SchemaName = command.Connection.Database;  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							table.Definition = r2.GetString (1);  						}  					}  					tables.Add (table);  				}  				r.Close ();  			}  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: try {  	if (GetMainVersion (command) >= 5) {  		//in mysql 5.x we can use an sql query to provide the comment  		command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = r.GetString (1);  				table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  	else {  		//use the default command for mysql 4.x and 3.23  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = command.Connection.Database;  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: try {  	if (GetMainVersion (command) >= 5) {  		//in mysql 5.x we can use an sql query to provide the comment  		command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = r.GetString (1);  				table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  	else {  		//use the default command for mysql 4.x and 3.23  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = command.Connection.Database;  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: try {  	if (GetMainVersion (command) >= 5) {  		//in mysql 5.x we can use an sql query to provide the comment  		command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = r.GetString (1);  				table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  	else {  		//use the default command for mysql 4.x and 3.23  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				TableSchema table = new TableSchema (this);  				table.Name = r.GetString (0);  				table.SchemaName = command.Connection.Database;  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						table.Definition = r2.GetString (1);  					}  				}  				tables.Add (table);  			}  			r.Close ();  		}  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	//in mysql 5.x we can use an sql query to provide the comment  	command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = r.GetString (1);  			table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  else {  	//use the default command for mysql 4.x and 3.23  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = command.Connection.Database;  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	//in mysql 5.x we can use an sql query to provide the comment  	command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = r.GetString (1);  			table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  else {  	//use the default command for mysql 4.x and 3.23  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = command.Connection.Database;  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	//in mysql 5.x we can use an sql query to provide the comment  	command.CommandText = string.Format (@"SELECT   														TABLE_NAME'   														TABLE_SCHEMA'   														TABLE_TYPE'   														TABLE_COMMENT   													FROM `information_schema`.`TABLES`  													WHERE   														TABLE_TYPE='BASE TABLE'   														AND TABLE_SCHEMA='{0}'   													ORDER BY TABLE_NAME;"' command.Connection.Database);  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = r.GetString (1);  			table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  else {  	//use the default command for mysql 4.x and 3.23  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			TableSchema table = new TableSchema (this);  			table.Name = r.GetString (0);  			table.SchemaName = command.Connection.Database;  			using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  				using (IDataReader r2 = command2.ExecuteReader ()) {  					r2.Read ();  					table.Definition = r2.GetString (1);  				}  			}  			tables.Add (table);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		TableSchema table = new TableSchema (this);  		table.Name = r.GetString (0);  		table.SchemaName = r.GetString (1);  		table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  		using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  			using (IDataReader r2 = command2.ExecuteReader ()) {  				r2.Read ();  				table.Definition = r2.GetString (1);  			}  		}  		tables.Add (table);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		TableSchema table = new TableSchema (this);  		table.Name = r.GetString (0);  		table.SchemaName = r.GetString (1);  		table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  		using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  			using (IDataReader r2 = command2.ExecuteReader ()) {  				r2.Read ();  				table.Definition = r2.GetString (1);  			}  		}  		tables.Add (table);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: while (r.Read ()) {  	TableSchema table = new TableSchema (this);  	table.Name = r.GetString (0);  	table.SchemaName = r.GetString (1);  	table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  	using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  		using (IDataReader r2 = command2.ExecuteReader ()) {  			r2.Read ();  			table.Definition = r2.GetString (1);  		}  	}  	tables.Add (table);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: while (r.Read ()) {  	TableSchema table = new TableSchema (this);  	table.Name = r.GetString (0);  	table.SchemaName = r.GetString (1);  	table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  	using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' table.Name' "`;"))) {  		using (IDataReader r2 = command2.ExecuteReader ()) {  			r2.Read ();  			table.Definition = r2.GetString (1);  		}  	}  	tables.Add (table);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTables,The following statement contains a magic number: table.Comment = r.IsDBNull (3) ? null : r.GetString (3);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' table);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  					column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  					//TODO: if r.GetString (5) constains "auto_increment" ?  					column.OwnerName = table.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			// Don't raise error' if the table doesn't exists return an empty collection  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' table);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  					column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  					//TODO: if r.GetString (5) constains "auto_increment" ?  					column.OwnerName = table.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			// Don't raise error' if the table doesn't exists return an empty collection  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' table);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  					column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  					//TODO: if r.GetString (5) constains "auto_increment" ?  					column.OwnerName = table.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			// Don't raise error' if the table doesn't exists return an empty collection  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' table);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  				column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  				//TODO: if r.GetString (5) constains "auto_increment" ?  				column.OwnerName = table.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		// Don't raise error' if the table doesn't exists return an empty collection  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' table);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  				column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  				//TODO: if r.GetString (5) constains "auto_increment" ?  				column.OwnerName = table.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		// Don't raise error' if the table doesn't exists return an empty collection  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' table);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  				column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  				//TODO: if r.GetString (5) constains "auto_increment" ?  				column.OwnerName = table.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		// Don't raise error' if the table doesn't exists return an empty collection  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' table);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  			column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  			//TODO: if r.GetString (5) constains "auto_increment" ?  			column.OwnerName = table.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	// Don't raise error' if the table doesn't exists return an empty collection  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' table);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  			column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  			//TODO: if r.GetString (5) constains "auto_increment" ?  			column.OwnerName = table.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	// Don't raise error' if the table doesn't exists return an empty collection  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' table);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  			column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  			//TODO: if r.GetString (5) constains "auto_increment" ?  			column.OwnerName = table.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	// Don't raise error' if the table doesn't exists return an empty collection  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' table);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  		column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  		//TODO: if r.GetString (5) constains "auto_increment" ?  		column.OwnerName = table.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' table);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  		column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  		//TODO: if r.GetString (5) constains "auto_increment" ?  		column.OwnerName = table.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' table);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  		column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  		//TODO: if r.GetString (5) constains "auto_increment" ?  		column.OwnerName = table.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' table);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  	column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  	//TODO: if r.GetString (5) constains "auto_increment" ?  	column.OwnerName = table.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' table);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  	column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  	//TODO: if r.GetString (5) constains "auto_increment" ?  	column.OwnerName = table.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' table);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  	column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  	//TODO: if r.GetString (5) constains "auto_increment" ?  	column.OwnerName = table.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: column.IsNullable = String.Compare (r.GetString (2)' "YES"' true) == 0;  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetTableColumns,The following statement contains a magic number: column.DefaultValue = r.IsDBNull (4) ? null : r.GetString (4);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViews,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (string.Format (@"SELECT   				                                                        TABLE_NAME'   				                                                        TABLE_SCHEMA   				                                                    FROM information_schema.VIEWS   				                                                    where TABLE_SCHEMA = '{0}'   				                                                    ORDER BY TABLE_NAME"' ConnectionPool.ConnectionContext.ConnectionSettings.Database))) {  		try {  			// Views are supported in mysql since version 5.  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						ViewSchema view = new ViewSchema (this);  						view.Name = r.GetString (0);  						view.OwnerName = r.GetString (1);  						using (IPooledDbConnection conn2 = connectionPool.Request ()) {  							using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' view.Name' "`;"))) {  								using (IDataReader r2 = command2.ExecuteReader ()) {  									r2.Read ();  									view.Definition = r2.GetString (1);  								}  							}  							conn2.Release ();  						}  						views.Add (view);  					}  					r.Close ();  				}  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViews,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (string.Format (@"SELECT   				                                                        TABLE_NAME'   				                                                        TABLE_SCHEMA   				                                                    FROM information_schema.VIEWS   				                                                    where TABLE_SCHEMA = '{0}'   				                                                    ORDER BY TABLE_NAME"' ConnectionPool.ConnectionContext.ConnectionSettings.Database))) {  	try {  		// Views are supported in mysql since version 5.  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ViewSchema view = new ViewSchema (this);  					view.Name = r.GetString (0);  					view.OwnerName = r.GetString (1);  					using (IPooledDbConnection conn2 = connectionPool.Request ()) {  						using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' view.Name' "`;"))) {  							using (IDataReader r2 = command2.ExecuteReader ()) {  								r2.Read ();  								view.Definition = r2.GetString (1);  							}  						}  						conn2.Release ();  					}  					views.Add (view);  				}  				r.Close ();  			}  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViews,The following statement contains a magic number: try {  	// Views are supported in mysql since version 5.  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ViewSchema view = new ViewSchema (this);  				view.Name = r.GetString (0);  				view.OwnerName = r.GetString (1);  				using (IPooledDbConnection conn2 = connectionPool.Request ()) {  					using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' view.Name' "`;"))) {  						using (IDataReader r2 = command2.ExecuteReader ()) {  							r2.Read ();  							view.Definition = r2.GetString (1);  						}  					}  					conn2.Release ();  				}  				views.Add (view);  			}  			r.Close ();  		}  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViews,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ViewSchema view = new ViewSchema (this);  			view.Name = r.GetString (0);  			view.OwnerName = r.GetString (1);  			using (IPooledDbConnection conn2 = connectionPool.Request ()) {  				using (IDbCommand command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE TABLE `"' view.Name' "`;"))) {  					using (IDataReader r2 = command2.ExecuteReader ()) {  						r2.Read ();  						view.Definition = r2.GetString (1);  					}  				}  				conn2.Release ();  			}  			views.Add (view);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' view);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = r.IsDBNull (2);  					column.DefaultValue = r.GetString (4);  					column.Comment = r.GetString (5);  					column.OwnerName = view.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' view);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = r.IsDBNull (2);  					column.DefaultValue = r.GetString (4);  					column.Comment = r.GetString (5);  					column.OwnerName = view.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ColumnSchema column = new ColumnSchema (this' view);  					column.Name = r.GetString (0);  					column.DataTypeName = r.GetString (1);  					column.IsNullable = r.IsDBNull (2);  					column.DefaultValue = r.GetString (4);  					column.Comment = r.GetString (5);  					column.OwnerName = view.Name;  					columns.Add (column);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' view);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = r.IsDBNull (2);  				column.DefaultValue = r.GetString (4);  				column.Comment = r.GetString (5);  				column.OwnerName = view.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' view);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = r.IsDBNull (2);  				column.DefaultValue = r.GetString (4);  				column.Comment = r.GetString (5);  				column.OwnerName = view.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' view.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ColumnSchema column = new ColumnSchema (this' view);  				column.Name = r.GetString (0);  				column.DataTypeName = r.GetString (1);  				column.IsNullable = r.IsDBNull (2);  				column.DefaultValue = r.GetString (4);  				column.Comment = r.GetString (5);  				column.OwnerName = view.Name;  				columns.Add (column);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' view);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = r.IsDBNull (2);  			column.DefaultValue = r.GetString (4);  			column.Comment = r.GetString (5);  			column.OwnerName = view.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' view);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = r.IsDBNull (2);  			column.DefaultValue = r.GetString (4);  			column.Comment = r.GetString (5);  			column.OwnerName = view.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ColumnSchema column = new ColumnSchema (this' view);  			column.Name = r.GetString (0);  			column.DataTypeName = r.GetString (1);  			column.IsNullable = r.IsDBNull (2);  			column.DefaultValue = r.GetString (4);  			column.Comment = r.GetString (5);  			column.OwnerName = view.Name;  			columns.Add (column);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' view);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = r.IsDBNull (2);  		column.DefaultValue = r.GetString (4);  		column.Comment = r.GetString (5);  		column.OwnerName = view.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' view);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = r.IsDBNull (2);  		column.DefaultValue = r.GetString (4);  		column.Comment = r.GetString (5);  		column.OwnerName = view.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ColumnSchema column = new ColumnSchema (this' view);  		column.Name = r.GetString (0);  		column.DataTypeName = r.GetString (1);  		column.IsNullable = r.IsDBNull (2);  		column.DefaultValue = r.GetString (4);  		column.Comment = r.GetString (5);  		column.OwnerName = view.Name;  		columns.Add (column);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' view);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = r.IsDBNull (2);  	column.DefaultValue = r.GetString (4);  	column.Comment = r.GetString (5);  	column.OwnerName = view.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' view);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = r.IsDBNull (2);  	column.DefaultValue = r.GetString (4);  	column.Comment = r.GetString (5);  	column.OwnerName = view.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: while (r.Read ()) {  	ColumnSchema column = new ColumnSchema (this' view);  	column.Name = r.GetString (0);  	column.DataTypeName = r.GetString (1);  	column.IsNullable = r.IsDBNull (2);  	column.DefaultValue = r.GetString (4);  	column.Comment = r.GetString (5);  	column.OwnerName = view.Name;  	columns.Add (column);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: column.IsNullable = r.IsDBNull (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: column.DefaultValue = r.GetString (4);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetViewColumns,The following statement contains a magic number: column.Comment = r.GetString (5);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	IPooledDbConnection conn2 = connectionPool.Request ();  	IDbCommand command = conn.CreateCommand (string.Concat (@"SELECT   																			ROUTINE_NAME'   																			ROUTINE_SCHEMA'   																			ROUTINE_TYPE   																		FROM information_schema.ROUTINES   																		WHERE ROUTINE_SCHEMA ='"' ConnectionPool.ConnectionContext.ConnectionSettings.Database' "' ORDER BY ROUTINE_NAME"));  	try {  		using (command) {  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						ProcedureSchema procedure = new ProcedureSchema (this);  						procedure.Name = r.GetString (0);  						procedure.OwnerName = r.GetString (1);  						procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  						procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  						IDbCommand command2;  						if (!procedure.IsFunction)  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  						else  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  						using (IDataReader r2 = command2.ExecuteReader ())  							if (r2.Read ())  								procedure.Definition = r2.GetString (2);  						procedures.Add (procedure);  					}  					r.Close ();  				}  			}  			//else: do nothing' since procedures are only supported since mysql 5.x  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		if (conn2 != null)  			conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	IPooledDbConnection conn2 = connectionPool.Request ();  	IDbCommand command = conn.CreateCommand (string.Concat (@"SELECT   																			ROUTINE_NAME'   																			ROUTINE_SCHEMA'   																			ROUTINE_TYPE   																		FROM information_schema.ROUTINES   																		WHERE ROUTINE_SCHEMA ='"' ConnectionPool.ConnectionContext.ConnectionSettings.Database' "' ORDER BY ROUTINE_NAME"));  	try {  		using (command) {  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						ProcedureSchema procedure = new ProcedureSchema (this);  						procedure.Name = r.GetString (0);  						procedure.OwnerName = r.GetString (1);  						procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  						procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  						IDbCommand command2;  						if (!procedure.IsFunction)  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  						else  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  						using (IDataReader r2 = command2.ExecuteReader ())  							if (r2.Read ())  								procedure.Definition = r2.GetString (2);  						procedures.Add (procedure);  					}  					r.Close ();  				}  			}  			//else: do nothing' since procedures are only supported since mysql 5.x  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		if (conn2 != null)  			conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	IPooledDbConnection conn2 = connectionPool.Request ();  	IDbCommand command = conn.CreateCommand (string.Concat (@"SELECT   																			ROUTINE_NAME'   																			ROUTINE_SCHEMA'   																			ROUTINE_TYPE   																		FROM information_schema.ROUTINES   																		WHERE ROUTINE_SCHEMA ='"' ConnectionPool.ConnectionContext.ConnectionSettings.Database' "' ORDER BY ROUTINE_NAME"));  	try {  		using (command) {  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						ProcedureSchema procedure = new ProcedureSchema (this);  						procedure.Name = r.GetString (0);  						procedure.OwnerName = r.GetString (1);  						procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  						procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  						IDbCommand command2;  						if (!procedure.IsFunction)  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  						else  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  						using (IDataReader r2 = command2.ExecuteReader ())  							if (r2.Read ())  								procedure.Definition = r2.GetString (2);  						procedures.Add (procedure);  					}  					r.Close ();  				}  			}  			//else: do nothing' since procedures are only supported since mysql 5.x  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		if (conn2 != null)  			conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	IPooledDbConnection conn2 = connectionPool.Request ();  	IDbCommand command = conn.CreateCommand (string.Concat (@"SELECT   																			ROUTINE_NAME'   																			ROUTINE_SCHEMA'   																			ROUTINE_TYPE   																		FROM information_schema.ROUTINES   																		WHERE ROUTINE_SCHEMA ='"' ConnectionPool.ConnectionContext.ConnectionSettings.Database' "' ORDER BY ROUTINE_NAME"));  	try {  		using (command) {  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						ProcedureSchema procedure = new ProcedureSchema (this);  						procedure.Name = r.GetString (0);  						procedure.OwnerName = r.GetString (1);  						procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  						procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  						IDbCommand command2;  						if (!procedure.IsFunction)  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  						else  							command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  						using (IDataReader r2 = command2.ExecuteReader ())  							if (r2.Read ())  								procedure.Definition = r2.GetString (2);  						procedures.Add (procedure);  					}  					r.Close ();  				}  			}  			//else: do nothing' since procedures are only supported since mysql 5.x  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  		if (conn2 != null)  			conn2.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: try {  	using (command) {  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ProcedureSchema procedure = new ProcedureSchema (this);  					procedure.Name = r.GetString (0);  					procedure.OwnerName = r.GetString (1);  					procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  					procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  					IDbCommand command2;  					if (!procedure.IsFunction)  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  					else  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  					using (IDataReader r2 = command2.ExecuteReader ())  						if (r2.Read ())  							procedure.Definition = r2.GetString (2);  					procedures.Add (procedure);  				}  				r.Close ();  			}  		}  		//else: do nothing' since procedures are only supported since mysql 5.x  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	if (conn2 != null)  		conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: try {  	using (command) {  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ProcedureSchema procedure = new ProcedureSchema (this);  					procedure.Name = r.GetString (0);  					procedure.OwnerName = r.GetString (1);  					procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  					procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  					IDbCommand command2;  					if (!procedure.IsFunction)  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  					else  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  					using (IDataReader r2 = command2.ExecuteReader ())  						if (r2.Read ())  							procedure.Definition = r2.GetString (2);  					procedures.Add (procedure);  				}  				r.Close ();  			}  		}  		//else: do nothing' since procedures are only supported since mysql 5.x  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	if (conn2 != null)  		conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: try {  	using (command) {  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ProcedureSchema procedure = new ProcedureSchema (this);  					procedure.Name = r.GetString (0);  					procedure.OwnerName = r.GetString (1);  					procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  					procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  					IDbCommand command2;  					if (!procedure.IsFunction)  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  					else  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  					using (IDataReader r2 = command2.ExecuteReader ())  						if (r2.Read ())  							procedure.Definition = r2.GetString (2);  					procedures.Add (procedure);  				}  				r.Close ();  			}  		}  		//else: do nothing' since procedures are only supported since mysql 5.x  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	if (conn2 != null)  		conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: try {  	using (command) {  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					ProcedureSchema procedure = new ProcedureSchema (this);  					procedure.Name = r.GetString (0);  					procedure.OwnerName = r.GetString (1);  					procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  					procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  					IDbCommand command2;  					if (!procedure.IsFunction)  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  					else  						command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  					using (IDataReader r2 = command2.ExecuteReader ())  						if (r2.Read ())  							procedure.Definition = r2.GetString (2);  					procedures.Add (procedure);  				}  				r.Close ();  			}  		}  		//else: do nothing' since procedures are only supported since mysql 5.x  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  	if (conn2 != null)  		conn2.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (command) {  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ProcedureSchema procedure = new ProcedureSchema (this);  				procedure.Name = r.GetString (0);  				procedure.OwnerName = r.GetString (1);  				procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  				procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  				IDbCommand command2;  				if (!procedure.IsFunction)  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  				else  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  				using (IDataReader r2 = command2.ExecuteReader ())  					if (r2.Read ())  						procedure.Definition = r2.GetString (2);  				procedures.Add (procedure);  			}  			r.Close ();  		}  	}  	//else: do nothing' since procedures are only supported since mysql 5.x  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (command) {  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ProcedureSchema procedure = new ProcedureSchema (this);  				procedure.Name = r.GetString (0);  				procedure.OwnerName = r.GetString (1);  				procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  				procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  				IDbCommand command2;  				if (!procedure.IsFunction)  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  				else  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  				using (IDataReader r2 = command2.ExecuteReader ())  					if (r2.Read ())  						procedure.Definition = r2.GetString (2);  				procedures.Add (procedure);  			}  			r.Close ();  		}  	}  	//else: do nothing' since procedures are only supported since mysql 5.x  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (command) {  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ProcedureSchema procedure = new ProcedureSchema (this);  				procedure.Name = r.GetString (0);  				procedure.OwnerName = r.GetString (1);  				procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  				procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  				IDbCommand command2;  				if (!procedure.IsFunction)  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  				else  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  				using (IDataReader r2 = command2.ExecuteReader ())  					if (r2.Read ())  						procedure.Definition = r2.GetString (2);  				procedures.Add (procedure);  			}  			r.Close ();  		}  	}  	//else: do nothing' since procedures are only supported since mysql 5.x  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (command) {  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				ProcedureSchema procedure = new ProcedureSchema (this);  				procedure.Name = r.GetString (0);  				procedure.OwnerName = r.GetString (1);  				procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  				procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  				IDbCommand command2;  				if (!procedure.IsFunction)  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  				else  					command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  				using (IDataReader r2 = command2.ExecuteReader ())  					if (r2.Read ())  						procedure.Definition = r2.GetString (2);  				procedures.Add (procedure);  			}  			r.Close ();  		}  	}  	//else: do nothing' since procedures are only supported since mysql 5.x  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ProcedureSchema procedure = new ProcedureSchema (this);  			procedure.Name = r.GetString (0);  			procedure.OwnerName = r.GetString (1);  			procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  			procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  			IDbCommand command2;  			if (!procedure.IsFunction)  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  			else  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  			using (IDataReader r2 = command2.ExecuteReader ())  				if (r2.Read ())  					procedure.Definition = r2.GetString (2);  			procedures.Add (procedure);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ProcedureSchema procedure = new ProcedureSchema (this);  			procedure.Name = r.GetString (0);  			procedure.OwnerName = r.GetString (1);  			procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  			procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  			IDbCommand command2;  			if (!procedure.IsFunction)  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  			else  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  			using (IDataReader r2 = command2.ExecuteReader ())  				if (r2.Read ())  					procedure.Definition = r2.GetString (2);  			procedures.Add (procedure);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ProcedureSchema procedure = new ProcedureSchema (this);  			procedure.Name = r.GetString (0);  			procedure.OwnerName = r.GetString (1);  			procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  			procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  			IDbCommand command2;  			if (!procedure.IsFunction)  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  			else  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  			using (IDataReader r2 = command2.ExecuteReader ())  				if (r2.Read ())  					procedure.Definition = r2.GetString (2);  			procedures.Add (procedure);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			ProcedureSchema procedure = new ProcedureSchema (this);  			procedure.Name = r.GetString (0);  			procedure.OwnerName = r.GetString (1);  			procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  			procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  			IDbCommand command2;  			if (!procedure.IsFunction)  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  			else  				command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  			using (IDataReader r2 = command2.ExecuteReader ())  				if (r2.Read ())  					procedure.Definition = r2.GetString (2);  			procedures.Add (procedure);  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ProcedureSchema procedure = new ProcedureSchema (this);  		procedure.Name = r.GetString (0);  		procedure.OwnerName = r.GetString (1);  		procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  		procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  		IDbCommand command2;  		if (!procedure.IsFunction)  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  		else  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  		using (IDataReader r2 = command2.ExecuteReader ())  			if (r2.Read ())  				procedure.Definition = r2.GetString (2);  		procedures.Add (procedure);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ProcedureSchema procedure = new ProcedureSchema (this);  		procedure.Name = r.GetString (0);  		procedure.OwnerName = r.GetString (1);  		procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  		procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  		IDbCommand command2;  		if (!procedure.IsFunction)  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  		else  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  		using (IDataReader r2 = command2.ExecuteReader ())  			if (r2.Read ())  				procedure.Definition = r2.GetString (2);  		procedures.Add (procedure);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		ProcedureSchema procedure = new ProcedureSchema (this);  		procedure.Name = r.GetString (0);  		procedure.OwnerName = r.GetString (1);  		procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  		procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  		IDbCommand command2;  		if (!procedure.IsFunction)  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  		else  			command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  		using (IDataReader r2 = command2.ExecuteReader ())  			if (r2.Read ())  				procedure.Definition = r2.GetString (2);  		procedures.Add (procedure);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: while (r.Read ()) {  	ProcedureSchema procedure = new ProcedureSchema (this);  	procedure.Name = r.GetString (0);  	procedure.OwnerName = r.GetString (1);  	procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  	procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  	IDbCommand command2;  	if (!procedure.IsFunction)  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  	else  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  	using (IDataReader r2 = command2.ExecuteReader ())  		if (r2.Read ())  			procedure.Definition = r2.GetString (2);  	procedures.Add (procedure);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: while (r.Read ()) {  	ProcedureSchema procedure = new ProcedureSchema (this);  	procedure.Name = r.GetString (0);  	procedure.OwnerName = r.GetString (1);  	procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  	procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  	IDbCommand command2;  	if (!procedure.IsFunction)  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  	else  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  	using (IDataReader r2 = command2.ExecuteReader ())  		if (r2.Read ())  			procedure.Definition = r2.GetString (2);  	procedures.Add (procedure);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: while (r.Read ()) {  	ProcedureSchema procedure = new ProcedureSchema (this);  	procedure.Name = r.GetString (0);  	procedure.OwnerName = r.GetString (1);  	procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  	procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  	IDbCommand command2;  	if (!procedure.IsFunction)  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE PROCEDURE `"' procedure.Name' "`;"));  	else  		command2 = conn2.CreateCommand (string.Concat ("SHOW CREATE FUNCTION `"' procedure.Name' "`;"));  	using (IDataReader r2 = command2.ExecuteReader ())  		if (r2.Read ())  			procedure.Definition = r2.GetString (2);  	procedures.Add (procedure);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: procedure.IsSystemProcedure = (r.GetString (2).IndexOf ("system"' StringComparison.OrdinalIgnoreCase) > -1);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: procedure.IsFunction = (r.GetString (2).IndexOf ("function"' StringComparison.OrdinalIgnoreCase) > -1);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: using (IDataReader r2 = command2.ExecuteReader ())  	if (r2.Read ())  		procedure.Definition = r2.GetString (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: if (r2.Read ())  	procedure.Definition = r2.GetString (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedures,The following statement contains a magic number: procedure.Definition = r2.GetString (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (string.Concat ("SELECT param_list FROM mysql.proc where name = '"' procedure.Name' "'"))) {  		try {  			if (GetMainVersion (command) >= 5) {  				using (IDataReader r = command.ExecuteReader ()) {  					while (r.Read ()) {  						if (r.IsDBNull (0))  							continue;  						string[] field = Encoding.ASCII.GetString ((byte[])r.GetValue (0)).Split (new char[] {  							'''  						}' StringSplitOptions.RemoveEmptyEntries);  						foreach (string chunk in field) {  							ParameterSchema param = new ParameterSchema (this);  							param.Definition = chunk;  							string[] tmp = chunk.TrimStart (new char[] {  								' '  							}).Split (new char[] {  								' '  							});  							int nameIndex = 0;  							if (String.Compare (tmp [0]' "OUT"' true) == 0) {  								nameIndex = 1;  								param.ParameterType = ParameterType.Out;  							}  							else if (String.Compare (tmp [0]' "INOUT"' true) == 0) {  								nameIndex = 1;  								param.ParameterType = ParameterType.InOut;  							}  							else {  								param.ParameterType = ParameterType.In;  							}  							param.Name = tmp [nameIndex];  							param.OwnerName = procedure.Name;  							param.DataTypeName = tmp [nameIndex + 1];  							parameters.Add (param);  						}  					}  					r.Close ();  				}  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (string.Concat ("SELECT param_list FROM mysql.proc where name = '"' procedure.Name' "'"))) {  	try {  		if (GetMainVersion (command) >= 5) {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					if (r.IsDBNull (0))  						continue;  					string[] field = Encoding.ASCII.GetString ((byte[])r.GetValue (0)).Split (new char[] {  						'''  					}' StringSplitOptions.RemoveEmptyEntries);  					foreach (string chunk in field) {  						ParameterSchema param = new ParameterSchema (this);  						param.Definition = chunk;  						string[] tmp = chunk.TrimStart (new char[] {  							' '  						}).Split (new char[] {  							' '  						});  						int nameIndex = 0;  						if (String.Compare (tmp [0]' "OUT"' true) == 0) {  							nameIndex = 1;  							param.ParameterType = ParameterType.Out;  						}  						else if (String.Compare (tmp [0]' "INOUT"' true) == 0) {  							nameIndex = 1;  							param.ParameterType = ParameterType.InOut;  						}  						else {  							param.ParameterType = ParameterType.In;  						}  						param.Name = tmp [nameIndex];  						param.OwnerName = procedure.Name;  						param.DataTypeName = tmp [nameIndex + 1];  						parameters.Add (param);  					}  				}  				r.Close ();  			}  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,The following statement contains a magic number: try {  	if (GetMainVersion (command) >= 5) {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				if (r.IsDBNull (0))  					continue;  				string[] field = Encoding.ASCII.GetString ((byte[])r.GetValue (0)).Split (new char[] {  					'''  				}' StringSplitOptions.RemoveEmptyEntries);  				foreach (string chunk in field) {  					ParameterSchema param = new ParameterSchema (this);  					param.Definition = chunk;  					string[] tmp = chunk.TrimStart (new char[] {  						' '  					}).Split (new char[] {  						' '  					});  					int nameIndex = 0;  					if (String.Compare (tmp [0]' "OUT"' true) == 0) {  						nameIndex = 1;  						param.ParameterType = ParameterType.Out;  					}  					else if (String.Compare (tmp [0]' "INOUT"' true) == 0) {  						nameIndex = 1;  						param.ParameterType = ParameterType.InOut;  					}  					else {  						param.ParameterType = ParameterType.In;  					}  					param.Name = tmp [nameIndex];  					param.OwnerName = procedure.Name;  					param.DataTypeName = tmp [nameIndex + 1];  					parameters.Add (param);  				}  			}  			r.Close ();  		}  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetProcedureParameters,The following statement contains a magic number: if (GetMainVersion (command) >= 5) {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			if (r.IsDBNull (0))  				continue;  			string[] field = Encoding.ASCII.GetString ((byte[])r.GetValue (0)).Split (new char[] {  				'''  			}' StringSplitOptions.RemoveEmptyEntries);  			foreach (string chunk in field) {  				ParameterSchema param = new ParameterSchema (this);  				param.Definition = chunk;  				string[] tmp = chunk.TrimStart (new char[] {  					' '  				}).Split (new char[] {  					' '  				});  				int nameIndex = 0;  				if (String.Compare (tmp [0]' "OUT"' true) == 0) {  					nameIndex = 1;  					param.ParameterType = ParameterType.Out;  				}  				else if (String.Compare (tmp [0]' "INOUT"' true) == 0) {  					nameIndex = 1;  					param.ParameterType = ParameterType.InOut;  				}  				else {  					param.ParameterType = ParameterType.In;  				}  				param.Name = tmp [nameIndex];  				param.OwnerName = procedure.Name;  				param.DataTypeName = tmp [nameIndex + 1];  				parameters.Add (param);  			}  		}  		r.Close ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  						continue;  					string key = r.GetString (3).ToUpper ();  					ConstraintSchema constraint = null;  					if (key.Contains ("PRI"))  						constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  					else if (key.Contains ("UNI"))  						constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  					else  						continue;  					constraint.IsColumnConstraint = true;  					constraint.OwnerName = r.GetString (0);  					constraints.Add (constraint);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  						continue;  					string key = r.GetString (3).ToUpper ();  					ConstraintSchema constraint = null;  					if (key.Contains ("PRI"))  						constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  					else if (key.Contains ("UNI"))  						constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  					else  						continue;  					constraint.IsColumnConstraint = true;  					constraint.OwnerName = r.GetString (0);  					constraints.Add (constraint);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  					continue;  				string key = r.GetString (3).ToUpper ();  				ConstraintSchema constraint = null;  				if (key.Contains ("PRI"))  					constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  				else if (key.Contains ("UNI"))  					constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  				else  					continue;  				constraint.IsColumnConstraint = true;  				constraint.OwnerName = r.GetString (0);  				constraints.Add (constraint);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("DESCRIBE {0}"' table.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  					continue;  				string key = r.GetString (3).ToUpper ();  				ConstraintSchema constraint = null;  				if (key.Contains ("PRI"))  					constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  				else if (key.Contains ("UNI"))  					constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  				else  					continue;  				constraint.IsColumnConstraint = true;  				constraint.OwnerName = r.GetString (0);  				constraints.Add (constraint);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  				continue;  			string key = r.GetString (3).ToUpper ();  			ConstraintSchema constraint = null;  			if (key.Contains ("PRI"))  				constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  			else if (key.Contains ("UNI"))  				constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  			else  				continue;  			constraint.IsColumnConstraint = true;  			constraint.OwnerName = r.GetString (0);  			constraints.Add (constraint);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  				continue;  			string key = r.GetString (3).ToUpper ();  			ConstraintSchema constraint = null;  			if (key.Contains ("PRI"))  				constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  			else if (key.Contains ("UNI"))  				constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  			else  				continue;  			constraint.IsColumnConstraint = true;  			constraint.OwnerName = r.GetString (0);  			constraints.Add (constraint);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  			continue;  		string key = r.GetString (3).ToUpper ();  		ConstraintSchema constraint = null;  		if (key.Contains ("PRI"))  			constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  		else if (key.Contains ("UNI"))  			constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  		else  			continue;  		constraint.IsColumnConstraint = true;  		constraint.OwnerName = r.GetString (0);  		constraints.Add (constraint);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  			continue;  		string key = r.GetString (3).ToUpper ();  		ConstraintSchema constraint = null;  		if (key.Contains ("PRI"))  			constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  		else if (key.Contains ("UNI"))  			constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  		else  			continue;  		constraint.IsColumnConstraint = true;  		constraint.OwnerName = r.GetString (0);  		constraints.Add (constraint);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: while (r.Read ()) {  	if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  		continue;  	string key = r.GetString (3).ToUpper ();  	ConstraintSchema constraint = null;  	if (key.Contains ("PRI"))  		constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  	else if (key.Contains ("UNI"))  		constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  	else  		continue;  	constraint.IsColumnConstraint = true;  	constraint.OwnerName = r.GetString (0);  	constraints.Add (constraint);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: while (r.Read ()) {  	if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  		continue;  	string key = r.GetString (3).ToUpper ();  	ConstraintSchema constraint = null;  	if (key.Contains ("PRI"))  		constraint = CreatePrimaryKeyConstraintSchema ("pk_" + column.Name);  	else if (key.Contains ("UNI"))  		constraint = CreateUniqueConstraintSchema ("uni_" + column.Name);  	else  		continue;  	constraint.IsColumnConstraint = true;  	constraint.OwnerName = r.GetString (0);  	constraints.Add (constraint);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetColumnConstraints,The following statement contains a magic number: if (r.IsDBNull (3) || String.Compare (r.GetString (0)' column.Name' true) != 0)  	continue;  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand ("SHOW CHARACTER SET;")) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  					charset.Name = r.GetString (0);  					charset.Comment = r.GetString (1);  					charset.DefaultCollactionName = r.GetString (2);  					charset.MaxLength = r.GetInt32 (3);  					characterSets.Add (charset);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand ("SHOW CHARACTER SET;")) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  					charset.Name = r.GetString (0);  					charset.Comment = r.GetString (1);  					charset.DefaultCollactionName = r.GetString (2);  					charset.MaxLength = r.GetInt32 (3);  					characterSets.Add (charset);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand ("SHOW CHARACTER SET;")) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  				charset.Name = r.GetString (0);  				charset.Comment = r.GetString (1);  				charset.DefaultCollactionName = r.GetString (2);  				charset.MaxLength = r.GetInt32 (3);  				characterSets.Add (charset);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand ("SHOW CHARACTER SET;")) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  				charset.Name = r.GetString (0);  				charset.Comment = r.GetString (1);  				charset.DefaultCollactionName = r.GetString (2);  				charset.MaxLength = r.GetInt32 (3);  				characterSets.Add (charset);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  			charset.Name = r.GetString (0);  			charset.Comment = r.GetString (1);  			charset.DefaultCollactionName = r.GetString (2);  			charset.MaxLength = r.GetInt32 (3);  			characterSets.Add (charset);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  			charset.Name = r.GetString (0);  			charset.Comment = r.GetString (1);  			charset.DefaultCollactionName = r.GetString (2);  			charset.MaxLength = r.GetInt32 (3);  			characterSets.Add (charset);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  		charset.Name = r.GetString (0);  		charset.Comment = r.GetString (1);  		charset.DefaultCollactionName = r.GetString (2);  		charset.MaxLength = r.GetInt32 (3);  		characterSets.Add (charset);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  		charset.Name = r.GetString (0);  		charset.Comment = r.GetString (1);  		charset.DefaultCollactionName = r.GetString (2);  		charset.MaxLength = r.GetInt32 (3);  		characterSets.Add (charset);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: while (r.Read ()) {  	MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  	charset.Name = r.GetString (0);  	charset.Comment = r.GetString (1);  	charset.DefaultCollactionName = r.GetString (2);  	charset.MaxLength = r.GetInt32 (3);  	characterSets.Add (charset);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: while (r.Read ()) {  	MySqlCharacterSetSchema charset = new MySqlCharacterSetSchema (this);  	charset.Name = r.GetString (0);  	charset.Comment = r.GetString (1);  	charset.DefaultCollactionName = r.GetString (2);  	charset.MaxLength = r.GetInt32 (3);  	characterSets.Add (charset);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: charset.DefaultCollactionName = r.GetString (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCharacterSets,The following statement contains a magic number: charset.MaxLength = r.GetInt32 (3);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCollationSchema collation = new MySqlCollationSchema (this);  					collation.Name = r.GetString (0);  					collation.CharacterSetName = r.GetString (1);  					collation.Id = r.GetInt32 (2);  					collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  					collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  					collation.SortLength = r.GetInt32 (5);  					collations.Add (collation);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCollationSchema collation = new MySqlCollationSchema (this);  					collation.Name = r.GetString (0);  					collation.CharacterSetName = r.GetString (1);  					collation.Id = r.GetInt32 (2);  					collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  					collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  					collation.SortLength = r.GetInt32 (5);  					collations.Add (collation);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCollationSchema collation = new MySqlCollationSchema (this);  					collation.Name = r.GetString (0);  					collation.CharacterSetName = r.GetString (1);  					collation.Id = r.GetInt32 (2);  					collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  					collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  					collation.SortLength = r.GetInt32 (5);  					collations.Add (collation);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IPooledDbConnection conn = connectionPool.Request ()) {  	using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  		try {  			using (IDataReader r = command.ExecuteReader ()) {  				while (r.Read ()) {  					MySqlCollationSchema collation = new MySqlCollationSchema (this);  					collation.Name = r.GetString (0);  					collation.CharacterSetName = r.GetString (1);  					collation.Id = r.GetInt32 (2);  					collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  					collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  					collation.SortLength = r.GetInt32 (5);  					collations.Add (collation);  				}  				r.Close ();  			}  		}  		catch (Exception e) {  			QueryService.RaiseException (e);  		}  		finally {  			conn.Release ();  		}  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCollationSchema collation = new MySqlCollationSchema (this);  				collation.Name = r.GetString (0);  				collation.CharacterSetName = r.GetString (1);  				collation.Id = r.GetInt32 (2);  				collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  				collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  				collation.SortLength = r.GetInt32 (5);  				collations.Add (collation);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCollationSchema collation = new MySqlCollationSchema (this);  				collation.Name = r.GetString (0);  				collation.CharacterSetName = r.GetString (1);  				collation.Id = r.GetInt32 (2);  				collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  				collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  				collation.SortLength = r.GetInt32 (5);  				collations.Add (collation);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCollationSchema collation = new MySqlCollationSchema (this);  				collation.Name = r.GetString (0);  				collation.CharacterSetName = r.GetString (1);  				collation.Id = r.GetInt32 (2);  				collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  				collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  				collation.SortLength = r.GetInt32 (5);  				collations.Add (collation);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDbCommand command = conn.CreateCommand (String.Format ("SHOW COLLATION LIKE '{0}%';"' characterSet.Name))) {  	try {  		using (IDataReader r = command.ExecuteReader ()) {  			while (r.Read ()) {  				MySqlCollationSchema collation = new MySqlCollationSchema (this);  				collation.Name = r.GetString (0);  				collation.CharacterSetName = r.GetString (1);  				collation.Id = r.GetInt32 (2);  				collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  				collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  				collation.SortLength = r.GetInt32 (5);  				collations.Add (collation);  			}  			r.Close ();  		}  	}  	catch (Exception e) {  		QueryService.RaiseException (e);  	}  	finally {  		conn.Release ();  	}  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCollationSchema collation = new MySqlCollationSchema (this);  			collation.Name = r.GetString (0);  			collation.CharacterSetName = r.GetString (1);  			collation.Id = r.GetInt32 (2);  			collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  			collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  			collation.SortLength = r.GetInt32 (5);  			collations.Add (collation);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCollationSchema collation = new MySqlCollationSchema (this);  			collation.Name = r.GetString (0);  			collation.CharacterSetName = r.GetString (1);  			collation.Id = r.GetInt32 (2);  			collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  			collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  			collation.SortLength = r.GetInt32 (5);  			collations.Add (collation);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCollationSchema collation = new MySqlCollationSchema (this);  			collation.Name = r.GetString (0);  			collation.CharacterSetName = r.GetString (1);  			collation.Id = r.GetInt32 (2);  			collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  			collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  			collation.SortLength = r.GetInt32 (5);  			collations.Add (collation);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: try {  	using (IDataReader r = command.ExecuteReader ()) {  		while (r.Read ()) {  			MySqlCollationSchema collation = new MySqlCollationSchema (this);  			collation.Name = r.GetString (0);  			collation.CharacterSetName = r.GetString (1);  			collation.Id = r.GetInt32 (2);  			collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  			collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  			collation.SortLength = r.GetInt32 (5);  			collations.Add (collation);  		}  		r.Close ();  	}  }  catch (Exception e) {  	QueryService.RaiseException (e);  }  finally {  	conn.Release ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCollationSchema collation = new MySqlCollationSchema (this);  		collation.Name = r.GetString (0);  		collation.CharacterSetName = r.GetString (1);  		collation.Id = r.GetInt32 (2);  		collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  		collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  		collation.SortLength = r.GetInt32 (5);  		collations.Add (collation);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCollationSchema collation = new MySqlCollationSchema (this);  		collation.Name = r.GetString (0);  		collation.CharacterSetName = r.GetString (1);  		collation.Id = r.GetInt32 (2);  		collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  		collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  		collation.SortLength = r.GetInt32 (5);  		collations.Add (collation);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCollationSchema collation = new MySqlCollationSchema (this);  		collation.Name = r.GetString (0);  		collation.CharacterSetName = r.GetString (1);  		collation.Id = r.GetInt32 (2);  		collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  		collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  		collation.SortLength = r.GetInt32 (5);  		collations.Add (collation);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: using (IDataReader r = command.ExecuteReader ()) {  	while (r.Read ()) {  		MySqlCollationSchema collation = new MySqlCollationSchema (this);  		collation.Name = r.GetString (0);  		collation.CharacterSetName = r.GetString (1);  		collation.Id = r.GetInt32 (2);  		collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  		collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  		collation.SortLength = r.GetInt32 (5);  		collations.Add (collation);  	}  	r.Close ();  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: while (r.Read ()) {  	MySqlCollationSchema collation = new MySqlCollationSchema (this);  	collation.Name = r.GetString (0);  	collation.CharacterSetName = r.GetString (1);  	collation.Id = r.GetInt32 (2);  	collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  	collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  	collation.SortLength = r.GetInt32 (5);  	collations.Add (collation);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: while (r.Read ()) {  	MySqlCollationSchema collation = new MySqlCollationSchema (this);  	collation.Name = r.GetString (0);  	collation.CharacterSetName = r.GetString (1);  	collation.Id = r.GetInt32 (2);  	collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  	collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  	collation.SortLength = r.GetInt32 (5);  	collations.Add (collation);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: while (r.Read ()) {  	MySqlCollationSchema collation = new MySqlCollationSchema (this);  	collation.Name = r.GetString (0);  	collation.CharacterSetName = r.GetString (1);  	collation.Id = r.GetInt32 (2);  	collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  	collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  	collation.SortLength = r.GetInt32 (5);  	collations.Add (collation);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: while (r.Read ()) {  	MySqlCollationSchema collation = new MySqlCollationSchema (this);  	collation.Name = r.GetString (0);  	collation.CharacterSetName = r.GetString (1);  	collation.Id = r.GetInt32 (2);  	collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  	collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  	collation.SortLength = r.GetInt32 (5);  	collations.Add (collation);  }  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: collation.Id = r.GetInt32 (2);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: collation.IsDefaultCollation = r.GetString (3) == "Yes" ? true : false;  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: collation.IsCompiled = r.GetString (4) == "Yes" ? true : false;  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlSchemaProvider.cs,GetCollations,The following statement contains a magic number: collation.SortLength = r.GetInt32 (5);  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,GetDefaultConnectionSettings,The following statement contains a magic number: settings.Port = 3306;  
Magic Number,MonoDevelop.Database.Sql.MySql,MySqlDbFactory,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql.MySql\MySqlDbFactory.cs,GetDefaultConnectionSettings,The following statement contains a magic number: settings.MaxPoolSize = 5;  
