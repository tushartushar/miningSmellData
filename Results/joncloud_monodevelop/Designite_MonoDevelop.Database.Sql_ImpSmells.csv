Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetConstraintActionString,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Database.Sql,AbstractSqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\AbstractSqlDialect.cs,GetStatementSql,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql,AbstractSqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\AbstractSqlDialect.cs,GetStatementSql,Cyclomatic complexity of the method is 15
Complex Method,MonoDevelop.Database.Sql,AbstractSqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\AbstractSqlDialect.cs,GetOperatorSql,Cyclomatic complexity of the method is 17
Complex Method,MonoDevelop.Database.Sql,ConnectionContextService,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\ConnectionContextService.cs,Initialize,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,Cyclomatic complexity of the method is 16
Long Parameter List,MonoDevelop.Database.Sql,PooledDataReader,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\ConnectionPool\PooledDataReader.cs,GetBytes,The method has 5 parameters.
Long Parameter List,MonoDevelop.Database.Sql,PooledDataReader,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\ConnectionPool\PooledDataReader.cs,GetChars,The method has 5 parameters.
Long Parameter List,MonoDevelop.Database.Sql,IDbLinq,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\IDbLinq.cs,Generate,The method has 16 parameters.
Long Parameter List,MonoDevelop.Database.Sql,IDbLinq,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\IDbLinq.cs,Generate,The method has 14 parameters.
Long Parameter List,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,The method has 17 parameters.
Long Parameter List,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,The method has 15 parameters.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTables,The length of the statement  "		DataTable dt = conn.GetSchema (tablesCollectionString' null' connectionPool.ConnectionContext.ConnectionSettings.Database); " is 123.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetViews,The length of the statement  "		DataTable dt = conn.GetSchema (viewsCollectionString' null' connectionPool.ConnectionContext.ConnectionSettings.Database); " is 122.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetProcedures,The length of the statement  "		DataTable dt = conn.GetSchema (proceduresCollectionString' null' connectionPool.ConnectionContext.ConnectionSettings.Database); " is 127.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetProcedureParameter,The length of the statement  "	schema.ParameterType = String.Compare (paramType' "IN"' true) == 0 ? ParameterType.In : (String.Compare (paramType' "OUT"' true) == 0 ? ParameterType.Out : ParameterType.InOut); " is 177.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableConstraints,The length of the statement  "		DataTable dt = conn.GetSchema (foreignKeysCollectionString' null' connectionPool.ConnectionContext.ConnectionSettings.Database); " is 128.
Long Statement,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetInsertQuery,The length of the statement  "		if (col.DataType.FullName.IndexOf ("varchar"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("char"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("nvarchar"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("varbinary"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("nchar"' StringComparison.OrdinalIgnoreCase) > -1) " is 429.
Long Statement,MonoDevelop.Database.Sql,AbstractConnectionProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractConnectionProvider.cs,SetConnectionStringParameter,The length of the statement  "	Regex regex = new Regex (parameter + "[ \t]*=[ \t]*" + quoteChar + "([a-zA-Z0-9_.]+)" + quoteChar' RegexOptions.IgnoreCase); " is 124.
Long Statement,MonoDevelop.Database.Sql,AbstractConnectionProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractConnectionProvider.cs,SetConnectionStringParameter,The length of the statement  "		return String.Concat (connectionString' connectionString.EndsWith (";") ? "" : ";"' parameter' "="' quoteChar' value' quoteChar' ";"); " is 134.
Long Statement,MonoDevelop.Database.Sql,QueryService,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\QueryService.cs,EnsureConnection,The length of the statement  "	//bool requiresPassword = fac.GetCapabilities ("ConnectionSettings"' SchemaActions.Schema) == (int)ConnectionSettingsCapabilities.Password; " is 139.
Long Statement,MonoDevelop.Database.Sql,QueryService,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\QueryService.cs,EnsureConnection,The length of the statement  "	if (!context.ConnectionSettings.SavePassword && String.IsNullOrEmpty (context.ConnectionSettings.Password) && requiresPassword) { " is 129.
Long Statement,MonoDevelop.Database.Sql,QueryService,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\QueryService.cs,EnsureConnection,The length of the statement  "		string password = MessageService.GetPassword (AddinCatalog.GetString ("Please enter the password for connection '{0}'"' context.ConnectionSettings.Name)' AddinCatalog.GetString ("Enter Password")); " is 197.
Long Statement,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,The length of the statement  "	if (outputType.Equals (AddinCatalog.GetString ("code")' StringComparison.InvariantCultureIgnoreCase) || outputType.Equals (AddinCatalog.GetString ("Code & DBML")' StringComparison.InvariantCultureIgnoreCase)) { " is 210.
Long Statement,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,The length of the statement  "	if (outputType.Equals (AddinCatalog.GetString ("DBML")' StringComparison.InvariantCultureIgnoreCase) || outputType.Equals (AddinCatalog.GetString ("Code & DBML")' StringComparison.InvariantCultureIgnoreCase)) { " is 210.
Long Statement,MonoDevelop.Database.Sql,SqlMetalServices,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\SqlMetalServices.cs,Generate,The length of the statement  "	return Generate (provider' connection' outputType' outputFile' ""' ""' defaultNamespace' entityBase' entityAttr' membersAttr' generateTypes' culture' generateSchema' generateTimestamp' overrideEqualAndHash' extractProcedures' pluralize); " is 237.
Complex Conditional,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetInsertQuery,The conditional expression  "col.DataType.FullName.IndexOf ("varchar"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("char"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("nvarchar"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("varbinary"' StringComparison.OrdinalIgnoreCase) > -1 || col.DataType.FullName.IndexOf ("nchar"' StringComparison.OrdinalIgnoreCase) > -1"  is complex.
Virtual Method Call from Constructor,MonoDevelop.Database.Sql,AbstractAlterSchema,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\AlterSchema\AbstractAlterSchema.cs,AbstractAlterSchema,The constructor "AbstractAlterSchema" calls a virtual method "DetermineDifferences".
Empty Catch Block,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTables,The method has an empty catch block.
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTable,The following statement contains a magic number: schema.Comment = GetRowString (row' tableItemStrings [2]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.HasDefaultValue = GetRowBool (row' tableColumnItemStrings [2]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.IsNullable = GetRowBool (row' tableColumnItemStrings [3]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.Position = GetRowInt (row' tableColumnItemStrings [4]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.DataTypeName = GetRowString (row' tableColumnItemStrings [7]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.DataType.ScaleRange.Default = GetRowInt (row' tableColumnItemStrings [6]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetTableColumn,The following statement contains a magic number: schema.DataType.PrecisionRange.Default = GetRowInt (row' tableColumnItemStrings [5]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetView,The following statement contains a magic number: schema.Comment = GetRowString (row' viewItemStrings [2]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetProcedureParameter,The following statement contains a magic number: schema.Position = GetRowInt (row' procedureParameterItemStrings [2]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.CreateFormat = GetRowString (row' dataTypeItemStrings [2]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.CreateParameters = GetRowString (row' dataTypeItemStrings [3]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.DotNetType = Type.GetType (GetRowString (row' dataTypeItemStrings [4])' false' false);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.IsAutoincrementable = GetRowBool (row' dataTypeItemStrings [5]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.IsFixedLength = GetRowBool (row' dataTypeItemStrings [6]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.IsNullable = GetRowBool (row' dataTypeItemStrings [7]);  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.ScaleRange = new Range (GetRowInt (row' dataTypeItemStrings [9])' GetRowInt (row' dataTypeItemStrings [8]));  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetDataType,The following statement contains a magic number: schema.ScaleRange = new Range (GetRowInt (row' dataTypeItemStrings [9])' GetRowInt (row' dataTypeItemStrings [8]));  
Magic Number,MonoDevelop.Database.Sql,AbstractSchemaProvider,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Providers\AbstractSchemaProvider.cs,GetInsertQuery,The following statement contains a magic number: sb.AppendFormat ("{0}VALUES ("' Convert.ToString (Convert.ToChar (9)));  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,HexLiteral,The following statement contains a magic number: if (value.Length % 2 != 0)  	throw new ArgumentException ("Invalid hexadecimal value' the length must be a factor of 2.");  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = hexDigits [b >> 4];  	chars [i * 2 + 1] = hexDigits [b & 0xF];  }  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = hexDigits [b >> 4];  	chars [i * 2 + 1] = hexDigits [b & 0xF];  }  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++) {  	int b = bytes [i];  	chars [i * 2] = hexDigits [b >> 4];  	chars [i * 2 + 1] = hexDigits [b & 0xF];  }  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: chars [i * 2] = hexDigits [b >> 4];  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: chars [i * 2] = hexDigits [b >> 4];  
Magic Number,MonoDevelop.Database.Sql,HexLiteral,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\Literals\HexLiteral.cs,ToHexString,The following statement contains a magic number: chars [i * 2 + 1] = hexDigits [b & 0xF];  
Magic Number,MonoDevelop.Database.Sql,SortedCollectionBase,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Collections\SortedCollectionBase.cs,BinarySearchIndex,The following statement contains a magic number: while (min <= max) {  	int mid = (min + max) / 2;  	cmp = comparer.Compare (this [mid]' value);  	if (cmp == 0)  		return mid;  	else if (cmp > 0)  		max = mid - 1;  	else  		min = mid + 1;  	// compensate for the rounding down  }  
Missing Default,MonoDevelop.Database.Sql,AbstractSqlDialect,C:\repos\joncloud_monodevelop\extras\MonoDevelop.Database\MonoDevelop.Database.Sql\Dialect\AbstractSqlDialect.cs,GetStatementSql,The following switch statement is missing a default case: switch (statement.DropType) {  case DropStatementType.Database:  	sb.Append ("DATABASE ");  	break;  case DropStatementType.Table:  	sb.Append ("TABLE ");  	break;  case DropStatementType.Index:  	sb.Append ("INDEX ");  	break;  case DropStatementType.Procedure:  	sb.Append ("PROCEDURE ");  	break;  case DropStatementType.View:  	sb.Append ("VIEW ");  	break;  }  
