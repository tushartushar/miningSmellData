Implementation smell,Namespace,Class,File,Method,Description
Complex Method,PyBinding.Compiler,Python25Compiler,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Compiler\Python25Compiler.cs,Compile,Cyclomatic complexity of the method is 9
Complex Method,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,HandleCodeCompletion,Cyclomatic complexity of the method is 9
Complex Method,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,Cyclomatic complexity of the method is 12
Complex Method,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,UpdatePath,Cyclomatic complexity of the method is 11
Complex Method,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,Cyclomatic complexity of the method is 14
Complex Method,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,GetXml,Cyclomatic complexity of the method is 8
Complex Method,PyBinding.Parser,PythonResolver,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonResolver.cs,Resolve,Cyclomatic complexity of the method is 11
Complex Method,PyBinding.Parser,PythonExpressionFinder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonExpressionFinder.cs,GetWordAtOffset,Cyclomatic complexity of the method is 37
Complex Method,PyBinding.Parser.Dom,PythonParsedDocument,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser.Dom\PythonParsedDocument.cs,BuildFromXmlElement,Cyclomatic complexity of the method is 20
Complex Method,PyBinding.Parser.Dom,PythonParsedDocument,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser.Dom\PythonParsedDocument.cs,BuildClass,Cyclomatic complexity of the method is 13
Complex Method,PyBinding.Parser.Dom,PythonParsedDocument,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser.Dom\PythonParsedDocument.cs,GenerateFolds,Cyclomatic complexity of the method is 11
Complex Method,PyBinding.Gui.Navigation,PackageNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\PackageNodeBuilder.cs,BuildChildNodes,Cyclomatic complexity of the method is 8
Long Parameter List,PyBinding.Gui.Navigation,PackagesNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\PackagesNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,PyBinding.Gui.Navigation,PackageNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\PackageNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,PyBinding.Gui.Navigation,ClassNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\ClassNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,PyBinding.Gui.Navigation,AttributeNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\AttributeNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,PyBinding.Gui.Navigation,FunctionNodeBuilder,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui.Navigation\FunctionNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Statement,PyBinding,DataProvider,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\DataProvider.cs,Reset,The length of the statement  "	memberList.Sort ((x' y) => String.Compare (GetString (amb' x)' GetString (amb' y)' StringComparison.OrdinalIgnoreCase)); " is 120.
Long Statement,PyBinding,DataProvider,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\DataProvider.cs,GetString,The length of the statement  "		return amb.GetString (x' OutputFlags.IncludeGenerics | OutputFlags.IncludeParameters | OutputFlags.UseFullInnerTypeName | OutputFlags.ReformatDelegates); " is 153.
Long Statement,PyBinding,DataProvider,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\DataProvider.cs,ActivateItem,The length of the statement  "	MonoDevelop.Ide.Gui.Content.IExtensibleTextEditor extEditor = Document.GetContent<MonoDevelop.Ide.Gui.Content.IExtensibleTextEditor> (); " is 136.
Long Statement,PyBinding,CompilationUnitDataProvider,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\CompilationUnitDataProvider.cs,ActivateItem,The length of the statement  "	MonoDevelop.Ide.Gui.Content.IExtensibleTextEditor extEditor = Document.GetContent<MonoDevelop.Ide.Gui.Content.IExtensibleTextEditor> (); " is 136.
Long Statement,PyBinding,CPythonExecutionHandler,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonExecutionHandler.cs,Execute,The length of the statement  "	NativeExecutionCommand ncmd = new NativeExecutionCommand (cmd.Configuration.Runtime.Path' string.Join (" "' args)' dir' cmd.Configuration.EnvironmentVariables); " is 160.
Long Statement,PyBinding,PythonSiteImpl,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonSite.cs,AddPath,The length of the statement  "		var progress = IdeApp.Workbench.ProgressMonitors.GetBackgroundProgressMonitor ("Indexing python modules"' Gtk.Stock.Execute); " is 125.
Long Statement,PyBinding.Gui,PythonOptionsWidget,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonOptionsWidget.cs,AddPath_Clicked,The length of the statement  "	var dialog = new FileChooserDialog ("Add Path"' IdeApp.Workbench.RootWindow' FileChooserAction.SelectFolder' Gtk.Stock.Cancel' Gtk.ResponseType.Cancel' Gtk.Stock.Open' Gtk.ResponseType.Ok); " is 189.
Long Statement,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The length of the statement  "		if (!triggerWord.Contains ('.') && !triggerLine.StartsWith ("class") && !triggerLine.StartsWith ("def") && !triggerLine.StartsWith ("from") && !triggerLine.StartsWith ("import")) " is 178.
Long Statement,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,UpdatePath,The length of the statement  "			entry = new PathEntry (ImageService.GetPixbuf (((IMember)node).StockIcon' Gtk.IconSize.Menu)' amb.GetString ((IMember)node' OutputFlags.IncludeGenerics | OutputFlags.IncludeParameters | OutputFlags.ReformatDelegates)); " is 218.
Long Statement,PyBinding.Parser,ParserDatabase,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\ParserDatabase.cs,CopyDatabase,The length of the statement  "	var progress = IdeApp.Workbench.ProgressMonitors.GetBackgroundProgressMonitor ("Python Completion Database"' Gtk.Stock.Execute); " is 128.
Long Statement,PyBinding.Parser,ParserItem,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\ParserItem.cs,GetInsertCommand,The length of the statement  "		command.CommandText = "INSERT OR REPLACE into Items (" + "FullName' Depth' FileName' LineNumber' ItemType' Pydoc' Extra) " + "VALUES (@FullName' @Depth' @FileName' @LineNumber' @ItemType' @Pydoc' @Extra)"; " is 205.
Complex Conditional,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The conditional expression  "!triggerWord.Contains ('.') && !triggerLine.StartsWith ("class") && !triggerLine.StartsWith ("def") && !triggerLine.StartsWith ("from") && !triggerLine.StartsWith ("import")"  is complex.
Complex Conditional,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The conditional expression  "inFrom && parts.Length == 2 && parts [parts.Length - 1].Trim ().Length > 0 && completionChar == ' '"  is complex.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferedRuntime,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferedRuntime,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferedRuntime,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferedRuntime,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferredPython,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferredPython,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferredPython,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferredPython,The method has an empty catch block.
Empty Catch Block,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,FindPreferredPython,The method has an empty catch block.
Magic Number,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,ModuleFromFilename,The following statement contains a magic number: if (!m_ModuleCache.ContainsKey (fileName)) {  	string[] parts = fileName.Split (Path.DirectorySeparatorChar);  	string module = parts [parts.Length - 1];  	module = module.Substring (0' module.Length - 3);  	string dirname = Path.GetDirectoryName (fileName);  	if (!String.IsNullOrEmpty (dirname)) {  		DirectoryInfo dirInfo = new DirectoryInfo (Path.GetDirectoryName (fileName));  		m_ModuleCache [fileName] = RecursiveModuleFromFile (dirInfo' module);  	}  	else {  		m_ModuleCache [fileName] = module;  	}  }  
Magic Number,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,ModuleFromFilename,The following statement contains a magic number: module = module.Substring (0' module.Length - 3);  
Magic Number,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,PackageFromFilename,The following statement contains a magic number: if (modName.EndsWith (".__init__"))  	return modName.Substring (0' modName.Length - 9);  
Magic Number,PyBinding,PythonHelper,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonHelper.cs,PackageFromFilename,The following statement contains a magic number: return modName.Substring (0' modName.Length - 9);  
Magic Number,PyBinding,PythonSiteImpl,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonSite.cs,AddPath,The following statement contains a magic number: if (m_saveHandle == 0)  	m_saveHandle = GLib.Timeout.Add (5000' OnSave);  
Magic Number,PyBinding,PythonSiteImpl,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding\PythonSite.cs,AddPath,The following statement contains a magic number: m_saveHandle = GLib.Timeout.Add (5000' OnSave);  
Magic Number,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The following statement contains a magic number: if (inFrom && parts.Length == 2 && parts [parts.Length - 1].Trim ().Length > 0 && completionChar == ' ') {  	return new CompletionDataList (new CompletionData[] {  		new CompletionData ("import")  	});  }  // "from blah import "  else if (inFrom && parts.Length > 2) {  	triggerWord = parts [1] + ".";  	return new CompletionDataList (from ParserItem item in m_site.Database.Find (triggerWord)  	where !item.FullName.Substring (triggerWord.Length).Contains ('.')  	select CreateCompletionData (item' triggerWord));  }  
Magic Number,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The following statement contains a magic number: if (inFrom && parts.Length == 2 && parts [parts.Length - 1].Trim ().Length > 0 && completionChar == ' ') {  	return new CompletionDataList (new CompletionData[] {  		new CompletionData ("import")  	});  }  // "from blah import "  else if (inFrom && parts.Length > 2) {  	triggerWord = parts [1] + ".";  	return new CompletionDataList (from ParserItem item in m_site.Database.Find (triggerWord)  	where !item.FullName.Substring (triggerWord.Length).Contains ('.')  	select CreateCompletionData (item' triggerWord));  }  
Magic Number,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The following statement contains a magic number: if (inFrom && parts.Length > 2) {  	triggerWord = parts [1] + ".";  	return new CompletionDataList (from ParserItem item in m_site.Database.Find (triggerWord)  	where !item.FullName.Substring (triggerWord.Length).Contains ('.')  	select CreateCompletionData (item' triggerWord));  }  
Magic Number,PyBinding.Gui,PythonEditorCompletion,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorCompletion.cs,GenerateCompletionData,The following statement contains a magic number: if (inClass && parts.Length < 2)  	return null;  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (key == Gdk.Key.Return) {  	string lastLine = Editor.GetLineText (Editor.Caret.Line);  	string trimmed = lastLine.Trim ();  	bool indent = false;  	if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  		Editor.Insert (Editor.Caret.Offset' "\n");  		string endTrim = lastLine.TrimEnd ();  		if (!String.IsNullOrEmpty (endTrim)) {  			int i = 0;  			while (Char.IsWhiteSpace (endTrim [i]))  				i++;  			if (i > 4)  				i -= 4;  			for (int j = 0; j < i; j++)  				Editor.Insert (Editor.Caret.Offset' " ");  			return false;  		}  		else if (lastLine.Length > 4) {  			// get the last line' remove 4 chars from it if we can  			Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  			return false;  		}  	}  	if (trimmed.EndsWith (":")) {  		indent = true;  	}  	else if (trimmed.StartsWith ("if ") || trimmed.StartsWith ("def ")) {  		int openCount = lastLine.Split ('(').Length;  		int closeCount = lastLine.Split (')').Length;  		if (openCount > closeCount)  			indent = true;  	}  	if (indent) {  		base.KeyPress (key' keyChar' modifier);  		Editor.Insert (Editor.Caret.Offset' "    ");  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (key == Gdk.Key.Return) {  	string lastLine = Editor.GetLineText (Editor.Caret.Line);  	string trimmed = lastLine.Trim ();  	bool indent = false;  	if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  		Editor.Insert (Editor.Caret.Offset' "\n");  		string endTrim = lastLine.TrimEnd ();  		if (!String.IsNullOrEmpty (endTrim)) {  			int i = 0;  			while (Char.IsWhiteSpace (endTrim [i]))  				i++;  			if (i > 4)  				i -= 4;  			for (int j = 0; j < i; j++)  				Editor.Insert (Editor.Caret.Offset' " ");  			return false;  		}  		else if (lastLine.Length > 4) {  			// get the last line' remove 4 chars from it if we can  			Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  			return false;  		}  	}  	if (trimmed.EndsWith (":")) {  		indent = true;  	}  	else if (trimmed.StartsWith ("if ") || trimmed.StartsWith ("def ")) {  		int openCount = lastLine.Split ('(').Length;  		int closeCount = lastLine.Split (')').Length;  		if (openCount > closeCount)  			indent = true;  	}  	if (indent) {  		base.KeyPress (key' keyChar' modifier);  		Editor.Insert (Editor.Caret.Offset' "    ");  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (key == Gdk.Key.Return) {  	string lastLine = Editor.GetLineText (Editor.Caret.Line);  	string trimmed = lastLine.Trim ();  	bool indent = false;  	if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  		Editor.Insert (Editor.Caret.Offset' "\n");  		string endTrim = lastLine.TrimEnd ();  		if (!String.IsNullOrEmpty (endTrim)) {  			int i = 0;  			while (Char.IsWhiteSpace (endTrim [i]))  				i++;  			if (i > 4)  				i -= 4;  			for (int j = 0; j < i; j++)  				Editor.Insert (Editor.Caret.Offset' " ");  			return false;  		}  		else if (lastLine.Length > 4) {  			// get the last line' remove 4 chars from it if we can  			Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  			return false;  		}  	}  	if (trimmed.EndsWith (":")) {  		indent = true;  	}  	else if (trimmed.StartsWith ("if ") || trimmed.StartsWith ("def ")) {  		int openCount = lastLine.Split ('(').Length;  		int closeCount = lastLine.Split (')').Length;  		if (openCount > closeCount)  			indent = true;  	}  	if (indent) {  		base.KeyPress (key' keyChar' modifier);  		Editor.Insert (Editor.Caret.Offset' "    ");  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (key == Gdk.Key.Return) {  	string lastLine = Editor.GetLineText (Editor.Caret.Line);  	string trimmed = lastLine.Trim ();  	bool indent = false;  	if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  		Editor.Insert (Editor.Caret.Offset' "\n");  		string endTrim = lastLine.TrimEnd ();  		if (!String.IsNullOrEmpty (endTrim)) {  			int i = 0;  			while (Char.IsWhiteSpace (endTrim [i]))  				i++;  			if (i > 4)  				i -= 4;  			for (int j = 0; j < i; j++)  				Editor.Insert (Editor.Caret.Offset' " ");  			return false;  		}  		else if (lastLine.Length > 4) {  			// get the last line' remove 4 chars from it if we can  			Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  			return false;  		}  	}  	if (trimmed.EndsWith (":")) {  		indent = true;  	}  	else if (trimmed.StartsWith ("if ") || trimmed.StartsWith ("def ")) {  		int openCount = lastLine.Split ('(').Length;  		int closeCount = lastLine.Split (')').Length;  		if (openCount > closeCount)  			indent = true;  	}  	if (indent) {  		base.KeyPress (key' keyChar' modifier);  		Editor.Insert (Editor.Caret.Offset' "    ");  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  	Editor.Insert (Editor.Caret.Offset' "\n");  	string endTrim = lastLine.TrimEnd ();  	if (!String.IsNullOrEmpty (endTrim)) {  		int i = 0;  		while (Char.IsWhiteSpace (endTrim [i]))  			i++;  		if (i > 4)  			i -= 4;  		for (int j = 0; j < i; j++)  			Editor.Insert (Editor.Caret.Offset' " ");  		return false;  	}  	else if (lastLine.Length > 4) {  		// get the last line' remove 4 chars from it if we can  		Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  	Editor.Insert (Editor.Caret.Offset' "\n");  	string endTrim = lastLine.TrimEnd ();  	if (!String.IsNullOrEmpty (endTrim)) {  		int i = 0;  		while (Char.IsWhiteSpace (endTrim [i]))  			i++;  		if (i > 4)  			i -= 4;  		for (int j = 0; j < i; j++)  			Editor.Insert (Editor.Caret.Offset' " ");  		return false;  	}  	else if (lastLine.Length > 4) {  		// get the last line' remove 4 chars from it if we can  		Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  	Editor.Insert (Editor.Caret.Offset' "\n");  	string endTrim = lastLine.TrimEnd ();  	if (!String.IsNullOrEmpty (endTrim)) {  		int i = 0;  		while (Char.IsWhiteSpace (endTrim [i]))  			i++;  		if (i > 4)  			i -= 4;  		for (int j = 0; j < i; j++)  			Editor.Insert (Editor.Caret.Offset' " ");  		return false;  	}  	else if (lastLine.Length > 4) {  		// get the last line' remove 4 chars from it if we can  		Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if ((modifier & Gdk.ModifierType.ControlMask) != 0) {  	Editor.Insert (Editor.Caret.Offset' "\n");  	string endTrim = lastLine.TrimEnd ();  	if (!String.IsNullOrEmpty (endTrim)) {  		int i = 0;  		while (Char.IsWhiteSpace (endTrim [i]))  			i++;  		if (i > 4)  			i -= 4;  		for (int j = 0; j < i; j++)  			Editor.Insert (Editor.Caret.Offset' " ");  		return false;  	}  	else if (lastLine.Length > 4) {  		// get the last line' remove 4 chars from it if we can  		Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  		return false;  	}  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (!String.IsNullOrEmpty (endTrim)) {  	int i = 0;  	while (Char.IsWhiteSpace (endTrim [i]))  		i++;  	if (i > 4)  		i -= 4;  	for (int j = 0; j < i; j++)  		Editor.Insert (Editor.Caret.Offset' " ");  	return false;  }  else if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (!String.IsNullOrEmpty (endTrim)) {  	int i = 0;  	while (Char.IsWhiteSpace (endTrim [i]))  		i++;  	if (i > 4)  		i -= 4;  	for (int j = 0; j < i; j++)  		Editor.Insert (Editor.Caret.Offset' " ");  	return false;  }  else if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (!String.IsNullOrEmpty (endTrim)) {  	int i = 0;  	while (Char.IsWhiteSpace (endTrim [i]))  		i++;  	if (i > 4)  		i -= 4;  	for (int j = 0; j < i; j++)  		Editor.Insert (Editor.Caret.Offset' " ");  	return false;  }  else if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (!String.IsNullOrEmpty (endTrim)) {  	int i = 0;  	while (Char.IsWhiteSpace (endTrim [i]))  		i++;  	if (i > 4)  		i -= 4;  	for (int j = 0; j < i; j++)  		Editor.Insert (Editor.Caret.Offset' " ");  	return false;  }  else if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (i > 4)  	i -= 4;  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (i > 4)  	i -= 4;  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: i -= 4;  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: if (lastLine.Length > 4) {  	// get the last line' remove 4 chars from it if we can  	Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  	return false;  }  
Magic Number,PyBinding.Gui,PythonEditorIndentation,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Gui\PythonEditorIndentation.cs,KeyPress,The following statement contains a magic number: Editor.Insert (Editor.Caret.Offset' lastLine.Substring (0' lastLine.Length - 4));  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,GetXml,The following statement contains a magic number: if (Interlocked.Increment (ref m_sinceCycle) == 100)  	CycleProcess ();  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,GetXml,The following statement contains a magic number: using (var rs = r.GetResponse ()) {  	Stream rss = rs.GetResponseStream ();  	int read = 0;  	byte[] buffer = new byte[1024];  	while (0 < (read = rss.Read (buffer' 0' buffer.Length)))  		ms.Write (buffer' 0' read);  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: process.OutputDataReceived += delegate (object o' DataReceivedEventArgs e) {  	if (!started) {  		if (e.Data.Trim ().StartsWith ("Listening on port ")) {  			Monitor.Enter (m_syncRoot);  			m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  			started = true;  			m_ProcessSuccess = true;  			Monitor.Pulse (m_syncRoot);  			Monitor.Exit (m_syncRoot);  			Process oldProcess = null;  			// Cycle to the new process  			do {  				oldProcess = m_Process;  			}  			while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  			Interlocked.Exchange (ref m_sinceCycle' 0);  			// kill old process after 5 seconds  			if (oldProcess != null) {  				GLib.Timeout.Add (5000' delegate {  					oldProcess.Kill ();  					return false;  				});  			}  		}  	}  };  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: process.OutputDataReceived += delegate (object o' DataReceivedEventArgs e) {  	if (!started) {  		if (e.Data.Trim ().StartsWith ("Listening on port ")) {  			Monitor.Enter (m_syncRoot);  			m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  			started = true;  			m_ProcessSuccess = true;  			Monitor.Pulse (m_syncRoot);  			Monitor.Exit (m_syncRoot);  			Process oldProcess = null;  			// Cycle to the new process  			do {  				oldProcess = m_Process;  			}  			while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  			Interlocked.Exchange (ref m_sinceCycle' 0);  			// kill old process after 5 seconds  			if (oldProcess != null) {  				GLib.Timeout.Add (5000' delegate {  					oldProcess.Kill ();  					return false;  				});  			}  		}  	}  };  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: if (!started) {  	if (e.Data.Trim ().StartsWith ("Listening on port ")) {  		Monitor.Enter (m_syncRoot);  		m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  		started = true;  		m_ProcessSuccess = true;  		Monitor.Pulse (m_syncRoot);  		Monitor.Exit (m_syncRoot);  		Process oldProcess = null;  		// Cycle to the new process  		do {  			oldProcess = m_Process;  		}  		while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  		Interlocked.Exchange (ref m_sinceCycle' 0);  		// kill old process after 5 seconds  		if (oldProcess != null) {  			GLib.Timeout.Add (5000' delegate {  				oldProcess.Kill ();  				return false;  			});  		}  	}  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: if (!started) {  	if (e.Data.Trim ().StartsWith ("Listening on port ")) {  		Monitor.Enter (m_syncRoot);  		m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  		started = true;  		m_ProcessSuccess = true;  		Monitor.Pulse (m_syncRoot);  		Monitor.Exit (m_syncRoot);  		Process oldProcess = null;  		// Cycle to the new process  		do {  			oldProcess = m_Process;  		}  		while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  		Interlocked.Exchange (ref m_sinceCycle' 0);  		// kill old process after 5 seconds  		if (oldProcess != null) {  			GLib.Timeout.Add (5000' delegate {  				oldProcess.Kill ();  				return false;  			});  		}  	}  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: if (e.Data.Trim ().StartsWith ("Listening on port ")) {  	Monitor.Enter (m_syncRoot);  	m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  	started = true;  	m_ProcessSuccess = true;  	Monitor.Pulse (m_syncRoot);  	Monitor.Exit (m_syncRoot);  	Process oldProcess = null;  	// Cycle to the new process  	do {  		oldProcess = m_Process;  	}  	while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  	Interlocked.Exchange (ref m_sinceCycle' 0);  	// kill old process after 5 seconds  	if (oldProcess != null) {  		GLib.Timeout.Add (5000' delegate {  			oldProcess.Kill ();  			return false;  		});  	}  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: if (e.Data.Trim ().StartsWith ("Listening on port ")) {  	Monitor.Enter (m_syncRoot);  	m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  	started = true;  	m_ProcessSuccess = true;  	Monitor.Pulse (m_syncRoot);  	Monitor.Exit (m_syncRoot);  	Process oldProcess = null;  	// Cycle to the new process  	do {  		oldProcess = m_Process;  	}  	while (Interlocked.CompareExchange<Process> (ref m_Process' process' oldProcess) != oldProcess);  	Interlocked.Exchange (ref m_sinceCycle' 0);  	// kill old process after 5 seconds  	if (oldProcess != null) {  		GLib.Timeout.Add (5000' delegate {  			oldProcess.Kill ();  			return false;  		});  	}  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: m_Port = Int32.Parse (e.Data.Substring (18).Trim ());  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: if (oldProcess != null) {  	GLib.Timeout.Add (5000' delegate {  		oldProcess.Kill ();  		return false;  	});  }  
Magic Number,PyBinding.Parser,PythonParserInternal,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\PythonParserInternal.cs,BuildProcess,The following statement contains a magic number: GLib.Timeout.Add (5000' delegate {  	oldProcess.Kill ();  	return false;  });  
Magic Number,PyBinding.Parser,ParserItem,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\ParserItem.cs,Deserialize,The following statement contains a magic number: this.LineNumber = reader.GetInt32 (2);  
Magic Number,PyBinding.Parser,ParserItem,C:\repos\joncloud_monodevelop\extras\PyBinding\PyBinding\PyBinding.Parser\ParserItem.cs,Deserialize,The following statement contains a magic number: this.ItemType = (ParserItemType)reader.GetInt32 (3);  
