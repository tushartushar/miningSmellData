Implementation smell,Namespace,Class,File,Method,Description
Long Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,AssemblyBrowserWidget,The method has 133 lines of code.
Long Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchDoWork,The method has 123 lines of code.
Long Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,OutputNode,The method has 101 lines of code.
Long Method,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocPathRecursive,The method has 156 lines of code.
Long Method,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocParameterPathRecursive,The method has 159 lines of code.
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,GetIdString,Cyclomatic complexity of the method is 47
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,Cyclomatic complexity of the method is 37
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,StartSearch,Cyclomatic complexity of the method is 14
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchDoWork,Cyclomatic complexity of the method is 32
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,FormatText,Cyclomatic complexity of the method is 19
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,OutputNode,Cyclomatic complexity of the method is 42
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,TransformDocumentation,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,FillInspectLabel,Cyclomatic complexity of the method is 20
Complex Method,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,OnDestroyed,Cyclomatic complexity of the method is 13
Complex Method,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocExplicitIfaceImplPath,Cyclomatic complexity of the method is 9
Complex Method,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocPathRecursive,Cyclomatic complexity of the method is 35
Complex Method,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocParameterPathRecursive,Cyclomatic complexity of the method is 29
Long Parameter List,MonoDevelop.AssemblyBrowser,DomEventNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomEventNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,DomFieldNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomFieldNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,Decompile,The method has 6 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,DomPropertyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomPropertyNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,DomTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomTypeNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,AssemblyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,BaseTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\BaseTypeFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,BaseTypeFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\BaseTypeFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,NamespaceBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\NamespaceBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,ResourceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\ResourceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,ErrorNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\ErrorNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,ModuleReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\ModuleReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,AssemblyReferenceNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyReferenceNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,AssemblyReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyReferenceFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,AssemblyResourceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyResourceFolderNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Parameter List,MonoDevelop.AssemblyBrowser,ProjectNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\ProjectNodeBuilder.cs,BuildNode,The method has 5 parameters.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserDisplayBinding,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DisplayBinding.cs,CanHandle,The length of the statement  "	return mimeType == "application/x-ms-dos-executable" || mimeType == "application/x-executable" || mimeType == "application/x-msdownload"; " is 137.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchTreeviewhandleRowActivated,The length of the statement  "		var member = (IUnresolvedEntity)(searchMode != SearchMode.Type ? memberListStore.GetValue (selectedIter' 4) : typeListStore.GetValue (selectedIter' 4)); " is 152.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,InspectEditorhandleLinkRequest,The length of the statement  "	if (args.Button == 2 || (args.Button == 1 && (args.ModifierState & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask)) { " is 128.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The length of the statement  "		col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchDoWork,The length of the statement  "						memberListStore.AppendValues (ImageService.GetPixbuf (member.GetStockIcon ()' Gtk.IconSize.Menu)' member.Name' member.DeclaringTypeDefinition.FullName' kv.Key.Assembly.FullName' member); " is 186.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchDoWork,The length of the statement  "						typeListStore.AppendValues (ImageService.GetPixbuf (type.GetStockIcon ()' Gtk.IconSize.Menu)' type.Name' type.Namespace' kv.Key.Assembly.FullName' type); " is 153.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SetReferencedSegments,The length of the statement  "		// FIXME: ILSpy sometimes gives reference segments for punctuation. See http://bugzilla.xamarin.com/show_bug.cgi?id=2918 " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SetReferencedSegments,The length of the statement  "		var marker = new UnderlineMarker (new Cairo.Color (0' 0' 1.0)' 1 + seg.Offset - line.Offset' 1 + seg.EndOffset - line.Offset); " is 126.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,OpenFromAssemblyNames,The length of the statement  "			LoggingService.LogWarning ("Assembly browser: Can't find assembly: " + definition.UnresolvedAssembly.FullAssemblyName + "."); " is 125.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,AddReferenceByAssemblyName,The length of the statement  "	string assemblyFile = Runtime.SystemAssemblyService.DefaultAssemblyContext.GetAssemblyLocation (assemblyFullName' null); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The length of the statement  "		//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor)); " is 160.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The length of the statement  "		popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal))); " is 130.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The length of the statement  "		inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height); " is 208.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor)); " is 160.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal))); " is 130.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The length of the statement  "		inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height); " is 206.
Long Statement,MonoDevelop.AssemblyBrowser,DocumentationPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DocumentationPanel.cs,OnExposeEvent,The length of the statement  "	win.DrawRectangle (Style.BaseGC (string.IsNullOrEmpty (Markup) ? StateType.Insensitive : StateType.Normal)' true' evnt.Area); " is 125.
Long Statement,MonoDevelop.AssemblyBrowser,DomEventNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomEventNodeBuilder.cs,BuildNode,The length of the statement  "		label = Ambience.GetString (resolved' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup | OutputFlags.CompletionListFomat); " is 133.
Long Statement,MonoDevelop.AssemblyBrowser,DomEventNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomEventNodeBuilder.cs,Decompile,The length of the statement  "	return DomMethodNodeBuilder.Decompile (data' DomMethodNodeBuilder.GetModule (navigator)' evt.DeclaringType' b => b.AddEvent (evt)); " is 131.
Long Statement,MonoDevelop.AssemblyBrowser,DomEventNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomEventNodeBuilder.cs,GetDocumentationMarkup,The length of the statement  "	result.Append (AmbienceService.GetDocumentationMarkup (resolved' AmbienceService.GetDocumentation (resolved)' options)); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,DomFieldNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomFieldNodeBuilder.cs,BuildNode,The length of the statement  "		label = Ambience.GetString (resolved' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup | OutputFlags.CompletionListFomat); " is 133.
Long Statement,MonoDevelop.AssemblyBrowser,DomFieldNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomFieldNodeBuilder.cs,Decompile,The length of the statement  "	return DomMethodNodeBuilder.Decompile (data' DomMethodNodeBuilder.GetModule (navigator)' field.DeclaringType' b => b.AddField (field)); " is 135.
Long Statement,MonoDevelop.AssemblyBrowser,DomFieldNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomFieldNodeBuilder.cs,GetDocumentationMarkup,The length of the statement  "	result.Append (AmbienceService.GetDocumentationMarkup (resolved' AmbienceService.GetDocumentation (resolved)' options)); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,BuildNode,The length of the statement  "		label = Ambience.GetString (resolved' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup | OutputFlags.CompletionListFomat); " is 133.
Long Statement,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,Decompile,The length of the statement  "	var codePolicy = MonoDevelop.Projects.Policies.PolicyService.GetDefaultPolicy<MonoDevelop.CSharp.Formatting.CSharpFormattingPolicy> (types); " is 140.
Long Statement,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,Decompile,The length of the statement  "	return DomMethodNodeBuilder.Decompile (data' DomMethodNodeBuilder.GetModule (navigator)' cecilMethod.DeclaringType' b => b.AddMethod (cecilMethod)); " is 148.
Long Statement,MonoDevelop.AssemblyBrowser,DomMethodNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomMethodNodeBuilder.cs,GetDocumentationMarkup,The length of the statement  "	result.Append (AmbienceService.GetDocumentationMarkup (resolved' AmbienceService.GetDocumentation (resolved)' options)); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,DomPropertyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomPropertyNodeBuilder.cs,BuildNode,The length of the statement  "		label = Ambience.GetString (resolved' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup | OutputFlags.CompletionListFomat); " is 133.
Long Statement,MonoDevelop.AssemblyBrowser,DomPropertyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomPropertyNodeBuilder.cs,Decompile,The length of the statement  "	return DomMethodNodeBuilder.Decompile (data' DomMethodNodeBuilder.GetModule (navigator)' property.DeclaringType' b => b.AddProperty (property)); " is 144.
Long Statement,MonoDevelop.AssemblyBrowser,DomPropertyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomPropertyNodeBuilder.cs,GetDocumentationMarkup,The length of the statement  "	result.Append (AmbienceService.GetDocumentationMarkup (resolved' AmbienceService.GetDocumentation (resolved)' options)); " is 120.
Long Statement,MonoDevelop.AssemblyBrowser,DomTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomTypeNodeBuilder.cs,BuildNode,The length of the statement  "		label = Ambience.GetString (resolved' OutputFlags.ClassBrowserEntries | OutputFlags.IncludeMarkup | OutputFlags.UseNETTypeNames); " is 129.
Long Statement,MonoDevelop.AssemblyBrowser,DomTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomTypeNodeBuilder.cs,PrintAssembly,The length of the statement  "	result.Append (String.Format (GettextCatalog.GetString ("<b>Assembly:</b>\t{0}' Version={1}")' assemblyDefinition.Name.Name' assemblyDefinition.Name.Version)); " is 159.
Long Statement,MonoDevelop.AssemblyBrowser,DomTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomTypeNodeBuilder.cs,Decompile,The length of the statement  "	var codePolicy = MonoDevelop.Projects.Policies.PolicyService.GetDefaultPolicy<MonoDevelop.CSharp.Formatting.CSharpFormattingPolicy> (types); " is 140.
Long Statement,MonoDevelop.AssemblyBrowser,DomTypeNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\DomTypeNodeBuilder.cs,GetDocumentationMarkup,The length of the statement  "	result.Append (AmbienceService.GetDocumentationMarkup (resolved.GetDefinition ()' AmbienceService.GetDocumentation (resolved.GetDefinition ())' options)); " is 154.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyNodeBuilder.cs,PrintAssemblyHeader,The length of the statement  "	result.Append (Ambience.SingleLineComment (String.Format (GettextCatalog.GetString ("Assembly <b>{0}</b>' Version {1}")' assemblyDefinition.Name.Name' assemblyDefinition.Name.Version))); " is 186.
Long Statement,MonoDevelop.AssemblyBrowser,AssemblyReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyReferenceFolderNodeBuilder.cs,BuildChildNodes,The length of the statement  "			//	ctx.AddChild (new Error (MonoDevelop.Core.GettextCatalog.GetString ("Error while loading:") + assemblyNameReference.FullName + "/" + e.Message)); " is 148.
Long Statement,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocParameterPathRecursive,The length of the statement  "		CurrPath.Append (tpType.Namespace + ((CanAppendSpecialExplicitChar () && ExplicitMode) ? "#" : ".") + StripGenericName (tpType.Name)); " is 134.
Long Statement,XmlDocIdLib,XmlDocIdGenerator,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\XmlDocIdLib\XmlDocIdGenerator.cs,GetXmlDocParameterPathRecursive,The length of the statement  "		CurrPath.Append (strNamespace + ((CanAppendSpecialExplicitChar () && ExplicitMode) ? tpType.Name.Replace ("."' "#") : tpType.Name)); " is 132.
Complex Conditional,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SetReferencedSegments,The conditional expression  "text != null && text.Length == 1 && !(char.IsLetter (text [0]) || text [0] == '…')"  is complex.
Empty Catch Block,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchMember,The method has an empty catch block.
Empty Catch Block,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateOutput,The method has an empty catch block.
Empty Catch Block,MonoDevelop.AssemblyBrowser,AssemblyReferenceFolderNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyReferenceFolderNodeBuilder.cs,BuildChildNodes,The method has an empty catch block.
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,AssemblyBrowserWidget,The following statement contains a magic number: searchentry1.WidthRequest = 200;  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,AssemblyBrowserWidget,The following statement contains a magic number: languageCombobox.Active = PropertyService.Get ("AssemblyBrowser.InspectLanguage"' 2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,AssemblyBrowserWidget,The following statement contains a magic number: hpaned1.Position = 271;  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,HandleInspectEditorButtonPressEvent,The following statement contains a magic number: if (args.Event.Button != 3)  	return;  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchTreeviewhandleRowActivated,The following statement contains a magic number: if (searchTreeview.Selection.GetSelected (out selectedIter)) {  	var member = (IUnresolvedEntity)(searchMode != SearchMode.Type ? memberListStore.GetValue (selectedIter' 4) : typeListStore.GetValue (selectedIter' 4));  	var nav = SearchMember (member);  	if (nav != null) {  		notebook1.Page = 0;  	}  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchTreeviewhandleRowActivated,The following statement contains a magic number: if (searchTreeview.Selection.GetSelected (out selectedIter)) {  	var member = (IUnresolvedEntity)(searchMode != SearchMode.Type ? memberListStore.GetValue (selectedIter' 4) : typeListStore.GetValue (selectedIter' 4));  	var nav = SearchMember (member);  	if (nav != null) {  		notebook1.Page = 0;  	}  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,InspectEditorhandleLinkRequest,The following statement contains a magic number: if (args.Button == 2 || (args.Button == 1 && (args.ModifierState & Gdk.ModifierType.ShiftMask) == Gdk.ModifierType.ShiftMask)) {  	AssemblyBrowserViewContent assemblyBrowserView = new AssemblyBrowserViewContent ();  	foreach (var cu in definitions) {  		assemblyBrowserView.Load (cu.UnresolvedAssembly.AssemblyName);  	}  	IdeApp.Workbench.OpenDocument (assemblyBrowserView' true);  	((AssemblyBrowserWidget)assemblyBrowserView.Control).Open (args.Link);  }  else {  	this.Open (args.Link' loader);  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SkipChildren,The following statement contains a magic number: if (strippedUrl.Length > 2 && strippedUrl [1] == ':')  	strippedUrl = strippedUrl.Substring (2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SkipChildren,The following statement contains a magic number: if (strippedUrl.Length > 2 && strippedUrl [1] == ':')  	strippedUrl = strippedUrl.Substring (2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SkipChildren,The following statement contains a magic number: strippedUrl = strippedUrl.Substring (2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: switch (searchMode) {  case SearchMode.Member:  case SearchMode.Disassembler:  case SearchMode.Decompiler:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Member");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = memberListStore;  	break;  case SearchMode.Type:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Type");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = typeListStore;  	break;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: switch (searchMode) {  case SearchMode.Member:  case SearchMode.Disassembler:  case SearchMode.Decompiler:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Member");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = memberListStore;  	break;  case SearchMode.Type:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Type");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = typeListStore;  	break;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: switch (searchMode) {  case SearchMode.Member:  case SearchMode.Disassembler:  case SearchMode.Decompiler:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Member");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = memberListStore;  	break;  case SearchMode.Type:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Type");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = typeListStore;  	break;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: switch (searchMode) {  case SearchMode.Member:  case SearchMode.Disassembler:  case SearchMode.Decompiler:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Member");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = memberListStore;  	break;  case SearchMode.Type:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Type");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = typeListStore;  	break;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following statement contains a magic number: col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,FillInspectLabel,The following statement contains a magic number: switch (this.languageCombobox.Active) {  case 0:  	inspectEditor.Options.ShowFoldMargin = false;  	this.inspectEditor.Document.MimeType = "text/x-csharp";  	this.documentationPanel.Markup = builder.GetDocumentationMarkup (nav);  	break;  case 1:  	inspectEditor.Options.ShowFoldMargin = true;  	this.inspectEditor.Document.MimeType = "text/x-ilasm";  	SetReferencedSegments (builder.Disassemble (inspectEditor.GetTextEditorData ()' nav));  	break;  case 2:  	inspectEditor.Options.ShowFoldMargin = true;  	this.inspectEditor.Document.MimeType = "text/x-csharp";  	SetReferencedSegments (builder.Decompile (inspectEditor.GetTextEditorData ()' nav' PublicApiOnly));  	break;  default:  	inspectEditor.Options.ShowFoldMargin = false;  	this.inspectEditor.Document.Text = "Invalid combobox value: " + this.languageCombobox.Active;  	break;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,HPaneExpose,The following statement contains a magic number: this.hpaned1.Position = Math.Min (350' this.Allocation.Width * 2 / 3);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,HPaneExpose,The following statement contains a magic number: this.hpaned1.Position = Math.Min (350' this.Allocation.Width * 2 / 3);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,HPaneExpose,The following statement contains a magic number: this.hpaned1.Position = Math.Min (350' this.Allocation.Width * 2 / 3);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The following statement contains a magic number: if (searchAndReplaceWidget == null) {  	popupWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal)));  	popupWidgetFrame.Show ();  	popupWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (inspectEditor' popupWidgetFrame);  	searchAndReplaceWidget.Destroyed += (sender' e) =>  {  		DestroyFrames ();  		if (inspectEditor.IsRealized)  			inspectEditor.GrabFocus ();  	};  	searchAndReplaceWidget.UpdateSearchPattern ();  	inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  	searchAndReplaceWidget.IsReplaceMode = false;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The following statement contains a magic number: if (searchAndReplaceWidget == null) {  	popupWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal)));  	popupWidgetFrame.Show ();  	popupWidgetFrame.Child = searchAndReplaceWidget = new SearchAndReplaceWidget (inspectEditor' popupWidgetFrame);  	searchAndReplaceWidget.Destroyed += (sender' e) =>  {  		DestroyFrames ();  		if (inspectEditor.IsRealized)  			inspectEditor.GrabFocus ();  	};  	searchAndReplaceWidget.UpdateSearchPattern ();  	inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  	searchAndReplaceWidget.IsReplaceMode = false;  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The following statement contains a magic number: inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowSearchWidget,The following statement contains a magic number: inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -searchAndReplaceWidget.Allocation.Height);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: if (gotoLineNumberWidget == null) {  	DestroyFrames ();  	popupWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal)));  	popupWidgetFrame.Show ();  	popupWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (inspectEditor' popupWidgetFrame);  	gotoLineNumberWidget.Destroyed += (sender' e) =>  {  		DestroyFrames ();  		if (inspectEditor.IsRealized)  			inspectEditor.GrabFocus ();  	};  	inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: if (gotoLineNumberWidget == null) {  	DestroyFrames ();  	popupWidgetFrame = new MonoDevelop.Components.RoundedFrame ();  	//searchAndReplaceWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (widget.TextEditor.ColorStyle.Default.BackgroundColor));  	popupWidgetFrame.SetFillColor (MonoDevelop.Components.CairoExtensions.GdkColorToCairoColor (Style.Background (StateType.Normal)));  	popupWidgetFrame.Show ();  	popupWidgetFrame.Child = gotoLineNumberWidget = new GotoLineNumberWidget (inspectEditor' popupWidgetFrame);  	gotoLineNumberWidget.Destroyed += (sender' e) =>  {  		DestroyFrames ();  		if (inspectEditor.IsRealized)  			inspectEditor.GrabFocus ();  	};  	inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  }  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  
Magic Number,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,ShowGotoLineNumberWidget,The following statement contains a magic number: inspectEditor.AddAnimatedWidget (popupWidgetFrame' 300' Mono.TextEditor.Theatrics.Easing.ExponentialInOut' Blocking.Downstage' inspectEditor.Allocation.Width - 400' -gotoLineNumberWidget.Allocation.Height);  
Magic Number,MonoDevelop.AssemblyBrowser,DocumentationPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DocumentationPanel.cs,OnExposeEvent,The following statement contains a magic number: if (string.IsNullOrEmpty (Markup)) {  	layout.SetMarkup (GettextCatalog.GetString ("No documentation available."));  	int width' height;  	layout.GetPixelSize (out width' out height);  	x = (Allocation.Width - width) / 2;  	y = (Allocation.Height - height) / 2;  }  else {  	layout.SetMarkup (Markup);  }  
Magic Number,MonoDevelop.AssemblyBrowser,DocumentationPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DocumentationPanel.cs,OnExposeEvent,The following statement contains a magic number: if (string.IsNullOrEmpty (Markup)) {  	layout.SetMarkup (GettextCatalog.GetString ("No documentation available."));  	int width' height;  	layout.GetPixelSize (out width' out height);  	x = (Allocation.Width - width) / 2;  	y = (Allocation.Height - height) / 2;  }  else {  	layout.SetMarkup (Markup);  }  
Magic Number,MonoDevelop.AssemblyBrowser,DocumentationPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DocumentationPanel.cs,OnExposeEvent,The following statement contains a magic number: x = (Allocation.Width - width) / 2;  
Magic Number,MonoDevelop.AssemblyBrowser,DocumentationPanel,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\DocumentationPanel.cs,OnExposeEvent,The following statement contains a magic number: y = (Allocation.Height - height) / 2;  
Missing Default,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,GetIdString,The following switch statement is missing a default case: switch (member.SymbolKind) {  case SymbolKind.TypeDefinition:  	var type = member as IUnresolvedTypeDefinition;  	if (type.TypeParameters.Count == 0)  		return "T:" + type.FullName;  	return "T:" + type.FullName + "`" + type.TypeParameters.Count;  case SymbolKind.Method:  	var method = (IUnresolvedMethod)member;  	sb = new StringBuilder ();  	sb.Append ("M:");  	sb.Append (method.DeclaringTypeDefinition.ReflectionName);  	sb.Append (".");  	sb.Append (method.Name);  	if (method.TypeParameters.Count > 0) {  		sb.Append ("`");  		sb.Append (method.TypeParameters.Count);  	}  	AppendHelpParameterList (sb' method.Parameters);  	return sb.ToString ();  case SymbolKind.Constructor:  	var constructor = (IUnresolvedMethod)member;  	sb = new StringBuilder ();  	sb.Append ("M:");  	sb.Append (constructor.DeclaringTypeDefinition.FullName);  	sb.Append (".#ctor");  	AppendHelpParameterList (sb' constructor.Parameters);  	return sb.ToString ();  case SymbolKind.Destructor:  	// todo  	return "todo";  case SymbolKind.Property:  	sb = new StringBuilder ();  	sb.Append ("P:");  	sb.Append (member.DeclaringTypeDefinition.ReflectionName);  	sb.Append (".");  	sb.Append (member.Name);  	return sb.ToString ();  case SymbolKind.Indexer:  	var indexer = (IUnresolvedProperty)member;  	sb = new StringBuilder ();  	sb.Append ("P:");  	sb.Append (indexer.DeclaringTypeDefinition.ReflectionName);  	sb.Append (".Item");  	AppendHelpParameterList (sb' indexer.Parameters);  	return sb.ToString ();  case SymbolKind.Field:  	sb = new StringBuilder ();  	sb.Append ("F:");  	sb.Append (member.DeclaringTypeDefinition.ReflectionName);  	sb.Append (".");  	sb.Append (member.Name);  	return sb.ToString ();  case SymbolKind.Event:  	sb = new StringBuilder ();  	sb.Append ("E:");  	sb.Append (member.DeclaringTypeDefinition.ReflectionName);  	sb.Append (".");  	sb.Append (member.Name);  	return sb.ToString ();  case SymbolKind.Operator:  	// todo  	return "todo";  }  
Missing Default,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,CreateColumns,The following switch statement is missing a default case: switch (searchMode) {  case SearchMode.Member:  case SearchMode.Disassembler:  case SearchMode.Decompiler:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Member");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Declaring Type")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = memberListStore;  	break;  case SearchMode.Type:  	col = new TreeViewColumn ();  	col.Title = GettextCatalog.GetString ("Type");  	crp = new Gtk.CellRendererPixbuf ();  	crt = new Gtk.CellRendererText ();  	col.PackStart (crp' false);  	col.PackStart (crt' true);  	col.AddAttribute (crp' "pixbuf"' 0);  	col.AddAttribute (crt' "text"' 1);  	searchTreeview.AppendColumn (col);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Namespace")' new Gtk.CellRendererText ()' "text"' 2);  	col.Resizable = true;  	col = searchTreeview.AppendColumn (GettextCatalog.GetString ("Assembly")' new Gtk.CellRendererText ()' "text"' 3);  	col.Resizable = true;  	searchTreeview.Model = typeListStore;  	break;  }  
Missing Default,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,StartSearch,The following switch statement is missing a default case: switch (searchMode) {  case SearchMode.Member:  	IdeApp.Workbench.StatusBar.BeginProgress (GettextCatalog.GetString ("Searching member..."));  	break;  case SearchMode.Disassembler:  	IdeApp.Workbench.StatusBar.BeginProgress (GettextCatalog.GetString ("Searching string in disassembled code..."));  	break;  case SearchMode.Decompiler:  	IdeApp.Workbench.StatusBar.BeginProgress (GettextCatalog.GetString ("Searching string in decompiled code..."));  	break;  case SearchMode.Type:  	IdeApp.Workbench.StatusBar.BeginProgress (GettextCatalog.GetString ("Searching type..."));  	break;  }  
Missing Default,MonoDevelop.AssemblyBrowser,AssemblyBrowserWidget,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\AssemblyBrowserWidget.cs,SearchDoWork,The following switch statement is missing a default case: switch (searchMode) {  case SearchMode.Member:  	foreach (var unit in this.definitions) {  		var members = new List<IUnresolvedMember> ();  		foreach (var type in unit.UnresolvedAssembly.TopLevelTypeDefinitions) {  			if (worker.CancellationPending)  				return;  			curType++;  			foreach (var member in type.Members) {  				if (worker.CancellationPending)  					return;  				if (member.Name.ToUpper ().Contains (pattern)) {  					members.Add (member);  				}  			}  		}  		memberDict [unit] = members;  	}  	Gtk.Application.Invoke (delegate {  		IdeApp.Workbench.StatusBar.SetProgressFraction ((double)curType / types);  		foreach (var kv in memberDict) {  			foreach (var member in kv.Value) {  				if (worker.CancellationPending)  					return;  				memberListStore.AppendValues (ImageService.GetPixbuf (member.GetStockIcon ()' Gtk.IconSize.Menu)' member.Name' member.DeclaringTypeDefinition.FullName' kv.Key.Assembly.FullName' member);  			}  		}  	});  	break;  case SearchMode.Disassembler:  	Gtk.Application.Invoke (delegate {  		IdeApp.Workbench.StatusBar.BeginProgress (GettextCatalog.GetString ("Searching string in disassembled code..."));  	});  	foreach (var unit in this.definitions) {  		foreach (var type in unit.UnresolvedAssembly.TopLevelTypeDefinitions) {  			if (worker.CancellationPending)  				return;  			curType++;  			foreach (var method in type.Methods) {  				if (worker.CancellationPending)  					return;  				//								if (DomMethodNodeBuilder.Disassemble (rd => rd.DisassembleMethod (method)).ToUpper ().Contains (pattern)) {  				//									members.Add (method);  				//								}  			}  		}  	}  	Gtk.Application.Invoke (delegate {  		IdeApp.Workbench.StatusBar.SetProgressFraction ((double)curType / types);  		foreach (var kv in memberDict) {  			foreach (var member in kv.Value) {  				if (worker.CancellationPending)  					return;  				memberListStore.AppendValues (""' //iImageService.GetPixbuf (member.StockIcon' Gtk.IconSize.Menu)'  				member.Name' member.DeclaringTypeDefinition.FullName' kv.Key.Assembly.FullName' member);  			}  		}  	});  	break;  case SearchMode.Decompiler:  	foreach (var unit in this.definitions) {  		foreach (var type in unit.UnresolvedAssembly.TopLevelTypeDefinitions) {  			if (worker.CancellationPending)  				return;  			curType++;  			foreach (var method in type.Methods) {  				if (worker.CancellationPending)  					return;  				/*								if (DomMethodNodeBuilder.Decompile (domMethod' false).ToUpper ().Contains (pattern)) { 									members.Add (method);*/}  		}  	}  	Gtk.Application.Invoke (delegate {  		IdeApp.Workbench.StatusBar.SetProgressFraction ((double)curType / types);  		foreach (var kv in memberDict) {  			foreach (var member in kv.Value) {  				if (worker.CancellationPending)  					return;  				memberListStore.AppendValues (""' //ImageService.GetPixbuf (member.StockIcon' Gtk.IconSize.Menu)'  				member.Name' member.DeclaringTypeDefinition.FullName' kv.Key.Assembly.FullName' member);  			}  		}  	});  	break;  case SearchMode.Type:  	var typeDict = new Dictionary<AssemblyLoader' List<IUnresolvedTypeDefinition>> ();  	foreach (var unit in this.definitions) {  		var typeList = new List<IUnresolvedTypeDefinition> ();  		foreach (var type in unit.UnresolvedAssembly.TopLevelTypeDefinitions) {  			if (worker.CancellationPending)  				return;  			if (type.FullName.ToUpper ().IndexOf (pattern) >= 0)  				typeList.Add (type);  		}  		typeDict [unit] = typeList;  	}  	Gtk.Application.Invoke (delegate {  		foreach (var kv in typeDict) {  			foreach (var type in kv.Value) {  				if (worker.CancellationPending)  					return;  				typeListStore.AppendValues (ImageService.GetPixbuf (type.GetStockIcon ()' Gtk.IconSize.Menu)' type.Name' type.Namespace' kv.Key.Assembly.FullName' type);  			}  		}  	});  	break;  }  
Missing Default,MonoDevelop.AssemblyBrowser,AssemblyNodeBuilder,C:\repos\joncloud_monodevelop\main\src\addins\MonoDevelop.AssemblyBrowser\MonoDevelop.AssemblyBrowser\TreeNodes\AssemblyNodeBuilder.cs,GetTypeString,The following switch statement is missing a default case: switch (kind) {  case ModuleKind.Console:  	return GettextCatalog.GetString ("Console application");  case ModuleKind.Dll:  	return GettextCatalog.GetString ("Library");  case ModuleKind.Windows:  	return GettextCatalog.GetString ("Application");  }  
