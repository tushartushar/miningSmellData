Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.Platform,SelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\SelectFileDialogHandler.cs,RunDialog,Cyclomatic complexity of the method is 11
Complex Method,MonoDevelop.Platform,OpenFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\OpenFileDialogHandler.cs,RunDialog,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Platform.Windows,WindowsSecureStoragePasswordProvider,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsSecureStoragePasswordProvider.cs,AddWebUserNameAndPassword,Cyclomatic complexity of the method is 9
Long Parameter List,MonoDevelop.Platform,GdkWin32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\GdkWin32.cs,CallWindowProc,The method has 5 parameters.
Long Parameter List,MonoDevelop.Platform,WindowsPlatform,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsPlatform.cs,GetUsableMonitorGeometry,The method has 6 parameters.
Long Parameter List,MonoDevelop.Platform,WindowsPlatform,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsPlatform.cs,StartConsoleProcess,The method has 6 parameters.
Long Parameter List,CustomControls.OS,Win32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Win32.cs,DeferWindowPos,The method has 8 parameters.
Long Parameter List,CustomControls.OS,Win32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Win32.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,CustomControls.OS,Win32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Win32.cs,SHGetFileInfoW,The method has 5 parameters.
Long Parameter List,MonoDevelop.Platform.Windows,WindowsProxyCredentialProvider,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,GetCredentials,The method has 5 parameters.
Long Parameter List,MonoDevelop.Platform.Windows,Native,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,CredUIPromptForCredentials,The method has 10 parameters.
Long Parameter List,MonoDevelop.Platform.Windows,Native,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,CredUIPromptForWindowsCredentials,The method has 9 parameters.
Long Parameter List,MonoDevelop.Platform.Windows,Native,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,CredUnPackAuthenticationBuffer,The method has 9 parameters.
Long Parameter List,MonoDevelop.Platform.Windows,Native,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,CredPackAuthenticationBuffer,The method has 5 parameters.
Long Statement,MonoDevelop.Platform,WindowsPlatform,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsPlatform.cs,OnGetPixbufForFile,The length of the statement  "	Win32.SHGetFileInfoW (filename' Win32.FILE_ATTRIBUTES_NORMAL' ref shinfo' (uint)Marshal.SizeOf (shinfo)' Win32.SHGFI_USEFILEATTRIBUTES | Win32.SHGFI_ICON | Win32.SHGFI_SMALLICON | Win32.SHGFI_ICONLOCATION | Win32.SHGFI_TYPENAME); " is 229.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		MessageText = GettextCatalog.GetString ("{1} needs {2} credentials to access {0}."' uri.Host' BrandingService.ApplicationName' type == CredentialType.ProxyCredentials ? "proxy" : "request")' " is 190.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		CaptionText = GettextCatalog.GetString ("{0} needs {1} credentials"' BrandingService.ApplicationName' type == CredentialType.ProxyCredentials ? "proxy" : "request")' " is 165.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "	StringBuilder username = new StringBuilder (current != null ? current.UserName : string.Empty' 100)' password = new StringBuilder (current != null ? current.Password : string.Empty' 100)' domain = new StringBuilder (100); " is 221.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "			Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' IntPtr.Zero' ref packedAuthBufferLength); " is 142.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "			Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' pinnedArray.AddrOfPinnedObject ()' ref packedAuthBufferLength); " is 164.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		var returnCode = Native.CredUIPromptForWindowsCredentials (ref credUiInfo' 0' ref authPackage' authBuffer' packedAuthBufferLength' out output' out outputSize' ref save' Native.CredentialsUiWindowsFlags.Generic); " is 211.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		if (!Native.CredUnPackAuthenticationBuffer (0' output' outputSize' username' ref maxUsername' domain' ref maxDomain' password' ref maxPassword)) " is 144.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		const Native.CredentialsUiFlags flags = Native.CredentialsUiFlags.AlwaysShowUi | Native.CredentialsUiFlags.GenericCredentials; " is 126.
Long Statement,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The length of the statement  "		var returnCode = Native.CredUIPromptForCredentials (ref credUiInfo' BrandingService.ApplicationName' IntPtr.Zero' 0' username' maxUsername' password' maxPassword' ref save' flags); " is 180.
Magic Number,MonoDevelop.Platform,SelectFileDialogHandler,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\SelectFileDialogHandler.cs,RunWinUIMethod,The following statement contains a magic number: while (!t.Join (50))  	DispatchService.RunPendingEvents ();  
Magic Number,MonoDevelop.Platform,WinFormsRoot,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\WinFormsRoot.cs,WinFormsRoot,The following statement contains a magic number: this.Location = new Point (-32000' -32000);  
Magic Number,MonoDevelop.Platform,WinFormsRoot,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\WinFormsRoot.cs,WinFormsRoot,The following statement contains a magic number: this.Location = new Point (-32000' -32000);  
Magic Number,MonoDevelop.Platform,GdkWin32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\GdkWin32.cs,SetWindowLongPtr,The following statement contains a magic number: if (IntPtr.Size == 4)  	return SetWindowLongPtr32 (hWnd' nIndex' dwNewLong);  
Magic Number,MonoDevelop.Platform,GdkWin32,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\GdkWin32.cs,GetWindowLongPtr,The following statement contains a magic number: if (IntPtr.Size == 4)  	return GetWindowLongPtr32 (hWnd' nIndex);  
Magic Number,MonoDevelop.Platform,JumpList,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\JumpList.cs,Run,The following statement contains a magic number: this.updateTimer = new Timer (1000);  
Magic Number,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The following statement contains a magic number: if (windowsVersion.Major >= 6) {  	int outputSize' authPackage = 0;  	IntPtr output;  	var pinnedArray = new GCHandle ();  	uint packedAuthBufferLength = 0;  	if (current != null) {  		// Have creds? Pack them into the buffer and predisplay them.  		const int credPackGenericCredentials = 4;  		Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' IntPtr.Zero' ref packedAuthBufferLength);  		// Now we know the size of the buffer' allocate a byte[] and pin it  		var packedAuthBufferBytes = new byte[packedAuthBufferLength];  		// Free the dummy handle from before  		if (pinnedArray.IsAllocated)  			pinnedArray.Free ();  		pinnedArray = GCHandle.Alloc (packedAuthBufferBytes' GCHandleType.Pinned);  		Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' pinnedArray.AddrOfPinnedObject ()' ref packedAuthBufferLength);  	}  	var authBuffer = current == null ? IntPtr.Zero : pinnedArray.AddrOfPinnedObject ();  	;  	var returnCode = Native.CredUIPromptForWindowsCredentials (ref credUiInfo' 0' ref authPackage' authBuffer' packedAuthBufferLength' out output' out outputSize' ref save' Native.CredentialsUiWindowsFlags.Generic);  	// Unpin the array if we held it before  	if (authBuffer != IntPtr.Zero)  		pinnedArray.Free ();  	if (returnCode != Native.WindowsCredentialPromptReturnCode.NoError)  		return DialogResult.Cancel;  	if (!Native.CredUnPackAuthenticationBuffer (0' output' outputSize' username' ref maxUsername' domain' ref maxDomain' password' ref maxPassword))  		return DialogResult.Cancel;  	Native.CoTaskMemFree (output);  	Username = username.ToString ();  	Password = password.ToString ();  	Domain = domain.ToString ();  	return DialogResult.OK;  }  else {  	const Native.CredentialsUiFlags flags = Native.CredentialsUiFlags.AlwaysShowUi | Native.CredentialsUiFlags.GenericCredentials;  	var returnCode = Native.CredUIPromptForCredentials (ref credUiInfo' BrandingService.ApplicationName' IntPtr.Zero' 0' username' maxUsername' password' maxPassword' ref save' flags);  	Username = username.ToString ();  	Password = password.ToString ();  	Domain = string.Empty;  	return returnCode == Native.CredUiReturnCodes.NoError ? DialogResult.OK : DialogResult.Cancel;  }  
Magic Number,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The following statement contains a magic number: if (windowsVersion.Major >= 6) {  	int outputSize' authPackage = 0;  	IntPtr output;  	var pinnedArray = new GCHandle ();  	uint packedAuthBufferLength = 0;  	if (current != null) {  		// Have creds? Pack them into the buffer and predisplay them.  		const int credPackGenericCredentials = 4;  		Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' IntPtr.Zero' ref packedAuthBufferLength);  		// Now we know the size of the buffer' allocate a byte[] and pin it  		var packedAuthBufferBytes = new byte[packedAuthBufferLength];  		// Free the dummy handle from before  		if (pinnedArray.IsAllocated)  			pinnedArray.Free ();  		pinnedArray = GCHandle.Alloc (packedAuthBufferBytes' GCHandleType.Pinned);  		Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' pinnedArray.AddrOfPinnedObject ()' ref packedAuthBufferLength);  	}  	var authBuffer = current == null ? IntPtr.Zero : pinnedArray.AddrOfPinnedObject ();  	;  	var returnCode = Native.CredUIPromptForWindowsCredentials (ref credUiInfo' 0' ref authPackage' authBuffer' packedAuthBufferLength' out output' out outputSize' ref save' Native.CredentialsUiWindowsFlags.Generic);  	// Unpin the array if we held it before  	if (authBuffer != IntPtr.Zero)  		pinnedArray.Free ();  	if (returnCode != Native.WindowsCredentialPromptReturnCode.NoError)  		return DialogResult.Cancel;  	if (!Native.CredUnPackAuthenticationBuffer (0' output' outputSize' username' ref maxUsername' domain' ref maxDomain' password' ref maxPassword))  		return DialogResult.Cancel;  	Native.CoTaskMemFree (output);  	Username = username.ToString ();  	Password = password.ToString ();  	Domain = domain.ToString ();  	return DialogResult.OK;  }  else {  	const Native.CredentialsUiFlags flags = Native.CredentialsUiFlags.AlwaysShowUi | Native.CredentialsUiFlags.GenericCredentials;  	var returnCode = Native.CredUIPromptForCredentials (ref credUiInfo' BrandingService.ApplicationName' IntPtr.Zero' 0' username' maxUsername' password' maxPassword' ref save' flags);  	Username = username.ToString ();  	Password = password.ToString ();  	Domain = string.Empty;  	return returnCode == Native.CredUiReturnCodes.NoError ? DialogResult.OK : DialogResult.Cancel;  }  
Magic Number,MonoDevelop.Platform.Windows,PlaceholderForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsProxyCredentialProvider.cs,ShowMagicDialog,The following statement contains a magic number: if (current != null) {  	// Have creds? Pack them into the buffer and predisplay them.  	const int credPackGenericCredentials = 4;  	Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' IntPtr.Zero' ref packedAuthBufferLength);  	// Now we know the size of the buffer' allocate a byte[] and pin it  	var packedAuthBufferBytes = new byte[packedAuthBufferLength];  	// Free the dummy handle from before  	if (pinnedArray.IsAllocated)  		pinnedArray.Free ();  	pinnedArray = GCHandle.Alloc (packedAuthBufferBytes' GCHandleType.Pinned);  	Native.CredPackAuthenticationBuffer (credPackGenericCredentials' current.UserName' current.Password' pinnedArray.AddrOfPinnedObject ()' ref packedAuthBufferLength);  }  
Magic Number,MonoDevelop.Platform.Windows,WindowsSecureStoragePasswordProvider,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsSecureStoragePasswordProvider.cs,WriteCredential,The following statement contains a magic number: if (passwordBytes.Length > 512)  	throw new ArgumentException ("The secret message has exceeded 512 bytes.");  
Magic Number,MonoDevelop.Platform.Windows,CriticalCredentialHandle,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\WindowsSecureStoragePasswordProvider.cs,GetCredential,The following statement contains a magic number: return new Credential {  	CredentialBlobSize = ncred.CredentialBlobSize'  	CredentialBlob = Marshal.PtrToStringUni (ncred.CredentialBlob' (int)ncred.CredentialBlobSize / 2)'  	UserName = Marshal.PtrToStringUni (ncred.UserName)'  	TargetName = Marshal.PtrToStringUni (ncred.TargetName)'  	TargetAlias = ncred.TargetAlias == IntPtr.Zero ? string.Empty : Marshal.PtrToStringUni (ncred.TargetAlias)'  	Type = ncred.Type'  	Flags = ncred.Flags'  	Persist = (PersistFlags)ncred.Persist  };  
Missing Default,MonoDevelop.Platform,EncodingSelectionForm,C:\repos\joncloud_monodevelop\main\src\addins\WindowsPlatform\Dialogs\EncodingSelectionForm.cs,WndProc,The following switch statement is missing a default case: switch (m.Msg) {  // No need to take into account the idle event' as  // we are handling it already from WinFormsRoot  case (int)Msg.WM_WINDOWPOSCHANGED:  	MonoDevelop.Ide.DispatchService.RunPendingEvents ();  	break;  }  
